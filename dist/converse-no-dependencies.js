/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/converse.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/backbone.nativeview/backbone.nativeview.js":
/*!*****************************************************************!*\
  !*** ./node_modules/backbone.nativeview/backbone.nativeview.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Backbone.NativeView.js 0.3.3
// ---------------

//     (c) 2015 Adam Krebs, Jimmy Yuen Ho Wong
//     Backbone.NativeView may be freely distributed under the MIT license.
//     For all details and documentation:
//     https://github.com/akre54/Backbone.NativeView

(function (factory) {
  if (true) { !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(function (Backbone) {
  // Cached regex to match an opening '<' of an HTML tag, possibly left-padded
  // with whitespace.
  var paddedLt = /^\s*</;

  // Caches a local reference to `Element.prototype` for faster access.
  var ElementProto = (typeof Element !== 'undefined' && Element.prototype) || {};

  // Cross-browser event listener shims
  var elementAddEventListener = ElementProto.addEventListener || function(eventName, listener) {
    return this.attachEvent('on' + eventName, listener);
  }
  var elementRemoveEventListener = ElementProto.removeEventListener || function(eventName, listener) {
    return this.detachEvent('on' + eventName, listener);
  }

  var indexOf = function(array, item) {
    for (var i = 0, len = array.length; i < len; i++) if (array[i] === item) return i;
    return -1;
  }

  // Find the right `Element#matches` for IE>=9 and modern browsers.
  var matchesSelector = ElementProto.matches ||
      ElementProto.webkitMatchesSelector ||
      ElementProto.mozMatchesSelector ||
      ElementProto.msMatchesSelector ||
      ElementProto.oMatchesSelector ||
      // Make our own `Element#matches` for IE8
      function(selector) {
        // Use querySelectorAll to find all elements matching the selector,
        // then check if the given element is included in that list.
        // Executing the query on the parentNode reduces the resulting nodeList,
        // (document doesn't have a parentNode).
        var nodeList = (this.parentNode || document).querySelectorAll(selector) || [];
        return ~indexOf(nodeList, this);
      };

  // Cache Backbone.View for later access in constructor
  var BBView = Backbone.View;

  // To extend an existing view to use native methods, extend the View prototype
  // with the mixin: _.extend(MyView.prototype, Backbone.NativeViewMixin);
  Backbone.NativeViewMixin = {

    _domEvents: null,

    constructor: function() {
      this._domEvents = [];
      return BBView.apply(this, arguments);
    },

    $: function(selector) {
      return this.el.querySelectorAll(selector);
    },

    _removeElement: function() {
      this.undelegateEvents();
      if (this.el.parentNode) this.el.parentNode.removeChild(this.el);
    },

    // Apply the `element` to the view. `element` can be a CSS selector,
    // a string of HTML, or an Element node.
    _setElement: function(element) {
      if (typeof element == 'string') {
        if (paddedLt.test(element)) {
          var el = document.createElement('div');
          el.innerHTML = element;
          this.el = el.firstChild;
        } else {
          this.el = document.querySelector(element);
        }
      } else {
        this.el = element;
      }
    },

    // Set a hash of attributes to the view's `el`. We use the "prop" version
    // if available, falling back to `setAttribute` for the catch-all.
    _setAttributes: function(attrs) {
      for (var attr in attrs) {
        attr in this.el ? this.el[attr] = attrs[attr] : this.el.setAttribute(attr, attrs[attr]);
      }
    },

    // Make a event delegation handler for the given `eventName` and `selector`
    // and attach it to `this.el`.
    // If selector is empty, the listener will be bound to `this.el`. If not, a
    // new handler that will recursively traverse up the event target's DOM
    // hierarchy looking for a node that matches the selector. If one is found,
    // the event's `delegateTarget` property is set to it and the return the
    // result of calling bound `listener` with the parameters given to the
    // handler.
    delegate: function(eventName, selector, listener) {
      if (typeof selector === 'function') {
        listener = selector;
        selector = null;
      }

      var root = this.el;
      var handler = selector ? function (e) {
        var node = e.target || e.srcElement;
        for (; node && node != root; node = node.parentNode) {
          if (matchesSelector.call(node, selector)) {
            e.delegateTarget = node;
            listener(e);
          }
        }
      } : listener;

      elementAddEventListener.call(this.el, eventName, handler, false);
      this._domEvents.push({eventName: eventName, handler: handler, listener: listener, selector: selector});
      return handler;
    },

    // Remove a single delegated event. Either `eventName` or `selector` must
    // be included, `selector` and `listener` are optional.
    undelegate: function(eventName, selector, listener) {
      if (typeof selector === 'function') {
        listener = selector;
        selector = null;
      }

      if (this.el) {
        var handlers = this._domEvents.slice();
        for (var i = 0, len = handlers.length; i < len; i++) {
          var item = handlers[i];

          var match = item.eventName === eventName &&
              (listener ? item.listener === listener : true) &&
              (selector ? item.selector === selector : true);

          if (!match) continue;

          elementRemoveEventListener.call(this.el, item.eventName, item.handler, false);
          this._domEvents.splice(indexOf(handlers, item), 1);
        }
      }
      return this;
    },

    // Remove all events created with `delegate` from `el`
    undelegateEvents: function() {
      if (this.el) {
        for (var i = 0, len = this._domEvents.length; i < len; i++) {
          var item = this._domEvents[i];
          elementRemoveEventListener.call(this.el, item.eventName, item.handler, false);
        };
        this._domEvents.length = 0;
      }
      return this;
    }
  };

  Backbone.NativeView = Backbone.View.extend(Backbone.NativeViewMixin);

  return Backbone.NativeView;
}));


/***/ }),

/***/ "./node_modules/backbone.overview/backbone.orderedlistview.js":
/*!********************************************************************!*\
  !*** ./node_modules/backbone.overview/backbone.orderedlistview.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*** IMPORTS FROM imports-loader ***/
var backbone = (backbone || {});
backbone.nativeview = __webpack_require__(/*! backbone.nativeview */ "./node_modules/backbone.nativeview/backbone.nativeview.js");

/*!
 * Backbone.OrderedListView
 *
 * Copyright (c) 2017, JC Brand <jc@opkode.com>
 * Licensed under the Mozilla Public License (MPL) 
 */
(function (root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ "./src/underscore-shim.js"), __webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js"), __webpack_require__(/*! backbone.overview */ "backbone.overview")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
   } else {}
}(this, function (_, Backbone) {
    "use strict";

    Backbone.OrderedListView = Backbone.Overview.extend({
        /* An OrderedListView is a special type of Overview which adds some
         * methods and conventions for rendering an ordered list of elements.
         */

        // The `listItems` attribute denotes the path (from this View) to the
        // list of items.
        listItems: 'model',
        // The `sortEvent` attribute specifies the event which should cause the
        // ordered list to be sorted.
        sortEvent: 'change',
        // The `listSelector` is the selector used to query for the DOM list
        // element which contains the ordered items.
        listSelector: '.ordered-items',
        // The `itemView` is constructor which should be called to create a
        // View for a new item.
        ItemView: undefined,
        // The `subviewIndex` is the attribute of the list element model which
        // acts as the index of the subview in the overview.
        // An overview is a "Collection" of views, and they can be retrieved
        // via an index. By default this is the 'id' attribute, but it could be
        // set to something else.
        subviewIndex: 'id',

        initialize () {
            this.sortEventually = _.debounce(
                this.sortAndPositionAllItems.bind(this), 500);

            this.items = _.get(this, this.listItems);
            this.items.on('add', this.sortAndPositionAllItems, this);
            this.items.on('remove', this.removeView, this);
            if (!_.isNil(this.sortEvent)) {
                this.items.on(this.sortEvent, this.sortEventually, this);
            }
        },

        createItemView (item) {
            let item_view = this.get(item.get(this.subviewIndex));
            if (!item_view) {
                item_view = new this.ItemView({model: item});
                this.add(item.get(this.subviewIndex), item_view);
            } else {
                item_view.model = item;
                item_view.initialize();
            }
            item_view.render();
            return item_view;
        },

        removeView (item) {
            this.remove(item.get(this.subviewIndex));
        },

        sortAndPositionAllItems () {
            if (!this.items.length) {
                return;
            }
            this.items.sort();

            const list_el = this.el.querySelector(this.listSelector);
            const div = document.createElement('div');
            list_el.parentNode.replaceChild(div, list_el);
            this.items.each((item) => {
                let view = this.get(item.get(this.subviewIndex));
                if (_.isUndefined(view)) {
                    view = this.createItemView(item)
                }
                list_el.insertAdjacentElement('beforeend', view.el);
            });
            div.parentNode.replaceChild(list_el, div);
        }
    });

    return Backbone.OrderedListView;
}));



/***/ }),

/***/ "./node_modules/backbone.vdomview/backbone.vdomview.js":
/*!*************************************************************!*\
  !*** ./node_modules/backbone.vdomview/backbone.vdomview.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*** IMPORTS FROM imports-loader ***/
var backbone = (backbone || {});
backbone.nativeview = __webpack_require__(/*! backbone.nativeview */ "./node_modules/backbone.nativeview/backbone.nativeview.js");

/*!
 * Backbone.VDOMView
 *
 * MIT Licensed. Copyright (c) 2017, JC Brand <jc@opkode.com>
 */
(function (root, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [
            __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/dist/snabbdom.js"),
            __webpack_require__(/*! snabbdom-attributes */ "./node_modules/snabbdom/dist/snabbdom-attributes.js"),
            __webpack_require__(/*! snabbdom-class */ "./node_modules/snabbdom/dist/snabbdom-class.js"),
            __webpack_require__(/*! snabbdom-dataset */ "./node_modules/snabbdom/dist/snabbdom-dataset.js"),
            __webpack_require__(/*! snabbdom-props */ "./node_modules/snabbdom/dist/snabbdom-props.js"),
            __webpack_require__(/*! snabbdom-style */ "./node_modules/snabbdom/dist/snabbdom-style.js"),
            __webpack_require__(/*! tovnode */ "./node_modules/snabbdom/dist/tovnode.js"),
            __webpack_require__(/*! underscore */ "./src/underscore-shim.js"),
            __webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js")
        ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function (
        snabbdom,
        snabbdom_attributes,
        snabbdom_class,
        snabbdom_dataset,
        snabbdom_props,
        snabbdom_style,
        tovnode,
        _,
        Backbone) {
    "use strict";

    let domParser = new DOMParser();
    const patch = snabbdom.init([
        snabbdom_attributes.default,
        snabbdom_class.default,
        snabbdom_dataset.default,
        snabbdom_props.default,
        snabbdom_style.default
    ]);

    const View = _.isUndefined(Backbone.NativeView) ? Backbone.View : Backbone.NativeView;

    function parseHTMLToDOM (html_str) {
        /* Parses a string with HTML and returns a DOM element.
         *
         * Forked from vdom_parser:
         *      https://github.com/bitinn/vdom-parser
         */
        if (typeof html_str !== 'string') {
            throw new Error('Invalid parameter type in parseHTMLToDOM');
        }
        if ( !('DOMParser' in window) ) {
            throw new Error(
                'DOMParser is not available, '+
                'so parsing string to DOM node is not possible.');
        }
        if (!html_str) {
            return document.createTextNode('');
        }
        domParser = domParser || new DOMParser();
        const doc = domParser.parseFromString(html_str, 'text/html');

        // most tags default to body
        if (doc.body.firstChild) {
            return doc.getElementsByTagName('body')[0].firstChild;

        // some tags, like script and style, default to head
        } else if (doc.head.firstChild && (doc.head.firstChild.tagName !== 'TITLE' || doc.title)) {
            return doc.head.firstChild;

        // special case for html comment, cdata, doctype
        } else if (doc.firstChild && doc.firstChild.tagName !== 'HTML') {
            return doc.firstChild;

        // other element, such as whitespace, or html/body/head tag, fallback to empty text node
        } else {
            return document.createTextNode('');
        }
    }

    Backbone.VDOMView = View.extend({

        updateEventListeners (old_vnode, new_vnode) {
            this.setElement(new_vnode.elm);
        },

        render () {
            if (_.isFunction(this.beforeRender)) {
                this.beforeRender();
            }
            const new_vnode = tovnode.toVNode(parseHTMLToDOM(this.toHTML()));
            new_vnode.data.hook = _.extend({
               create: this.updateEventListeners.bind(this),
               update: this.updateEventListeners.bind(this)
            });
            const el = this.vnode ? this.vnode.elm : this.el;
            if (el.outerHTML !== new_vnode.elm.outerHTML) {
                this.vnode = patch(this.vnode || this.el, new_vnode);
            }
            if (_.isFunction(this.afterRender)) {
                this.afterRender();
            }
            return this;
        }
    });
    return Backbone.VDOMView;
}));



/***/ }),

/***/ "./node_modules/backbone/backbone.js":
/*!*******************************************!*\
  !*** ./node_modules/backbone/backbone.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Backbone.js 1.3.3

//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(factory) {

  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
  // We use `self` instead of `window` for `WebWorker` support.
  var root = (typeof self == 'object' && self.self === self && self) ||
            (typeof global == 'object' && global.global === global && global);

  // Set up Backbone appropriately for the environment. Start with AMD.
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ "./src/underscore-shim.js"), __webpack_require__(/*! jquery */ "./src/jquery-stub.js"), exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, $, exports) {
      // Export global even in AMD case in case this script is loaded with
      // others that may still expect a global Backbone.
      root.Backbone = factory(root, exports, _, $);
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
  } else { var _, $; }

})(function(root, Backbone, _, $) {

  // Initial Setup
  // -------------

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to a common array method we'll want to use later.
  var slice = Array.prototype.slice;

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '1.3.3';

  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
  // the `$` variable.
  Backbone.$ = $;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... this will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Proxy Backbone class methods to Underscore functions, wrapping the model's
  // `attributes` object or collection's `models` array behind the scenes.
  //
  // collection.filter(function(model) { return model.get('age') > 10 });
  // collection.each(this.addView);
  //
  // `Function#apply` can be slow so we use the method's arg count, if we know it.
  var addMethod = function(length, method, attribute) {
    switch (length) {
      case 1: return function() {
        return _[method](this[attribute]);
      };
      case 2: return function(value) {
        return _[method](this[attribute], value);
      };
      case 3: return function(iteratee, context) {
        return _[method](this[attribute], cb(iteratee, this), context);
      };
      case 4: return function(iteratee, defaultVal, context) {
        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);
      };
      default: return function() {
        var args = slice.call(arguments);
        args.unshift(this[attribute]);
        return _[method].apply(_, args);
      };
    }
  };
  var addUnderscoreMethods = function(Class, methods, attribute) {
    _.each(methods, function(length, method) {
      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);
    });
  };

  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.
  var cb = function(iteratee, instance) {
    if (_.isFunction(iteratee)) return iteratee;
    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);
    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };
    return iteratee;
  };
  var modelMatcher = function(attrs) {
    var matcher = _.matches(attrs);
    return function(model) {
      return matcher(model.attributes);
    };
  };

  // Backbone.Events
  // ---------------

  // A module that can be mixed in to *any object* in order to provide it with
  // a custom event channel. You may bind a callback to an event with `on` or
  // remove with `off`; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {};

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Iterates over the standard `event, callback` (as well as the fancy multiple
  // space-separated events `"change blur", callback` and jQuery-style event
  // maps `{event: callback}`).
  var eventsApi = function(iteratee, events, name, callback, opts) {
    var i = 0, names;
    if (name && typeof name === 'object') {
      // Handle event maps.
      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;
      for (names = _.keys(name); i < names.length ; i++) {
        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);
      }
    } else if (name && eventSplitter.test(name)) {
      // Handle space-separated event names by delegating them individually.
      for (names = name.split(eventSplitter); i < names.length; i++) {
        events = iteratee(events, names[i], callback, opts);
      }
    } else {
      // Finally, standard events.
      events = iteratee(events, name, callback, opts);
    }
    return events;
  };

  // Bind an event to a `callback` function. Passing `"all"` will bind
  // the callback to all events fired.
  Events.on = function(name, callback, context) {
    return internalOn(this, name, callback, context);
  };

  // Guard the `listening` argument from the public API.
  var internalOn = function(obj, name, callback, context, listening) {
    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {
      context: context,
      ctx: obj,
      listening: listening
    });

    if (listening) {
      var listeners = obj._listeners || (obj._listeners = {});
      listeners[listening.id] = listening;
    }

    return obj;
  };

  // Inversion-of-control versions of `on`. Tell *this* object to listen to
  // an event in another object... keeping track of what it's listening to
  // for easier unbinding later.
  Events.listenTo = function(obj, name, callback) {
    if (!obj) return this;
    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
    var listeningTo = this._listeningTo || (this._listeningTo = {});
    var listening = listeningTo[id];

    // This object is not listening to any other events on `obj` yet.
    // Setup the necessary references to track the listening callbacks.
    if (!listening) {
      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));
      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};
    }

    // Bind callbacks on obj, and keep track of them on listening.
    internalOn(obj, name, callback, this, listening);
    return this;
  };

  // The reducing API that adds a callback to the `events` object.
  var onApi = function(events, name, callback, options) {
    if (callback) {
      var handlers = events[name] || (events[name] = []);
      var context = options.context, ctx = options.ctx, listening = options.listening;
      if (listening) listening.count++;

      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});
    }
    return events;
  };

  // Remove one or many callbacks. If `context` is null, removes all
  // callbacks with that function. If `callback` is null, removes all
  // callbacks for the event. If `name` is null, removes all bound
  // callbacks for all events.
  Events.off = function(name, callback, context) {
    if (!this._events) return this;
    this._events = eventsApi(offApi, this._events, name, callback, {
      context: context,
      listeners: this._listeners
    });
    return this;
  };

  // Tell this object to stop listening to either specific events ... or
  // to every object it's currently listening to.
  Events.stopListening = function(obj, name, callback) {
    var listeningTo = this._listeningTo;
    if (!listeningTo) return this;

    var ids = obj ? [obj._listenId] : _.keys(listeningTo);

    for (var i = 0; i < ids.length; i++) {
      var listening = listeningTo[ids[i]];

      // If listening doesn't exist, this object is not currently
      // listening to obj. Break out early.
      if (!listening) break;

      listening.obj.off(name, callback, this);
    }

    return this;
  };

  // The reducing API that removes a callback from the `events` object.
  var offApi = function(events, name, callback, options) {
    if (!events) return;

    var i = 0, listening;
    var context = options.context, listeners = options.listeners;

    // Delete all events listeners and "drop" events.
    if (!name && !callback && !context) {
      var ids = _.keys(listeners);
      for (; i < ids.length; i++) {
        listening = listeners[ids[i]];
        delete listeners[listening.id];
        delete listening.listeningTo[listening.objId];
      }
      return;
    }

    var names = name ? [name] : _.keys(events);
    for (; i < names.length; i++) {
      name = names[i];
      var handlers = events[name];

      // Bail out if there are no events stored.
      if (!handlers) break;

      // Replace events if there are any remaining.  Otherwise, clean up.
      var remaining = [];
      for (var j = 0; j < handlers.length; j++) {
        var handler = handlers[j];
        if (
          callback && callback !== handler.callback &&
            callback !== handler.callback._callback ||
              context && context !== handler.context
        ) {
          remaining.push(handler);
        } else {
          listening = handler.listening;
          if (listening && --listening.count === 0) {
            delete listeners[listening.id];
            delete listening.listeningTo[listening.objId];
          }
        }
      }

      // Update tail event if the list has any events.  Otherwise, clean up.
      if (remaining.length) {
        events[name] = remaining;
      } else {
        delete events[name];
      }
    }
    return events;
  };

  // Bind an event to only be triggered a single time. After the first time
  // the callback is invoked, its listener will be removed. If multiple events
  // are passed in using the space-separated syntax, the handler will fire
  // once for each event, not once for a combination of all events.
  Events.once = function(name, callback, context) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));
    if (typeof name === 'string' && context == null) callback = void 0;
    return this.on(events, callback, context);
  };

  // Inversion-of-control versions of `once`.
  Events.listenToOnce = function(obj, name, callback) {
    // Map the event into a `{event: once}` object.
    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));
    return this.listenTo(obj, events);
  };

  // Reduces the event callbacks into a map of `{event: onceWrapper}`.
  // `offer` unbinds the `onceWrapper` after it has been called.
  var onceMap = function(map, name, callback, offer) {
    if (callback) {
      var once = map[name] = _.once(function() {
        offer(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
    }
    return map;
  };

  // Trigger one or many events, firing all bound callbacks. Callbacks are
  // passed the same arguments as `trigger` is, apart from the event name
  // (unless you're listening on `"all"`, which will cause your callback to
  // receive the true name of the event as the first argument).
  Events.trigger = function(name) {
    if (!this._events) return this;

    var length = Math.max(0, arguments.length - 1);
    var args = Array(length);
    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];

    eventsApi(triggerApi, this._events, name, void 0, args);
    return this;
  };

  // Handles triggering the appropriate event callbacks.
  var triggerApi = function(objEvents, name, callback, args) {
    if (objEvents) {
      var events = objEvents[name];
      var allEvents = objEvents.all;
      if (events && allEvents) allEvents = allEvents.slice();
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, [name].concat(args));
    }
    return objEvents;
  };

  // A difficult-to-believe, but optimized internal dispatch function for
  // triggering events. Tries to keep the usual cases speedy (most internal
  // Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
    switch (args.length) {
      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
    }
  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Backbone **Models** are the basic data object in the framework --
  // frequently representing a row in a table in a database on your server.
  // A discrete chunk of data and a bunch of useful, related methods for
  // performing computations and transformations on that data.

  // Create a new model with the specified attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var attrs = attributes || {};
    options || (options = {});
    this.cid = _.uniqueId(this.cidPrefix);
    this.attributes = {};
    if (options.collection) this.collection = options.collection;
    if (options.parse) attrs = this.parse(attrs, options) || {};
    var defaults = _.result(this, 'defaults');
    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The value returned during the last failed validation.
    validationError: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // The prefix is used to create the client id which is used to identify models locally.
    // You may want to override this if you're experiencing name clashes with model ids.
    cidPrefix: 'c',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default -- but override this if you need
    // custom syncing semantics for *this* particular model.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // Special-cased proxy to underscore's `_.matches` method.
    matches: function(attrs) {
      return !!_.iteratee(attrs, this)(this.attributes);
    },

    // Set a hash of model attributes on the object, firing `"change"`. This is
    // the core primitive operation of a model, updating the data and notifying
    // anyone who needs to know about the change in state. The heart of the beast.
    set: function(key, val, options) {
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      var unset      = options.unset;
      var silent     = options.silent;
      var changes    = [];
      var changing   = this._changing;
      this._changing = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }

      var current = this.attributes;
      var changed = this.changed;
      var prev    = this._previousAttributes;

      // For each `set` attribute, update or delete the current value.
      for (var attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          changed[attr] = val;
        } else {
          delete changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Update the `id`.
      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = options;
        for (var i = 0; i < changes.length; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      // You might be wondering why there's a `while` loop here. Changes can
      // be recursively nested within `"change"` events.
      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          options = this._pending;
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
    // if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"`.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      var changed = {};
      for (var attr in diff) {
        var val = diff[attr];
        if (_.isEqual(old[attr], val)) continue;
        changed[attr] = val;
      }
      return _.size(changed) ? changed : false;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // Fetch the model from the server, merging the response with the model's
    // local attributes. Any changed attributes will trigger a "change" event.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var model = this;
      var success = options.success;
      options.success = function(resp) {
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (!model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      // Handle both `"key", value` and `{key: value}` -style arguments.
      var attrs;
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options = _.extend({validate: true, parse: true}, options);
      var wait = options.wait;

      // If we're not waiting and attributes exist, save acts as
      // `set(attr).save(null, opts)` with validation. Otherwise, check if
      // the model will be valid when the attributes, if any, are set.
      if (attrs && !wait) {
        if (!this.set(attrs, options)) return false;
      } else if (!this._validate(attrs, options)) {
        return false;
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      var model = this;
      var success = options.success;
      var attributes = this.attributes;
      options.success = function(resp) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
        if (serverAttrs && !model.set(serverAttrs, options)) return false;
        if (success) success.call(options.context, model, resp, options);
        model.trigger('sync', model, resp, options);
      };
      wrapError(this, options);

      // Set temporary attributes if `{wait: true}` to properly find new ids.
      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);

      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch' && !options.attrs) options.attrs = attrs;
      var xhr = this.sync(method, this, options);

      // Restore attributes.
      this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      var wait = options.wait;

      var destroy = function() {
        model.stopListening();
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(resp) {
        if (wait) destroy();
        if (success) success.call(options.context, model, resp, options);
        if (!model.isNew()) model.trigger('sync', model, resp, options);
      };

      var xhr = false;
      if (this.isNew()) {
        _.defer(options.success);
      } else {
        wrapError(this, options);
        xhr = this.sync('delete', this, options);
      }
      if (!wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base =
        _.result(this, 'urlRoot') ||
        _.result(this.collection, 'url') ||
        urlError();
      if (this.isNew()) return base;
      var id = this.get(this.idAttribute);
      return base.replace(/[^\/]$/, '$&/') + encodeURIComponent(id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return !this.has(this.idAttribute);
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return this._validate({}, _.extend({}, options, {validate: true}));
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
      return false;
    }

  });

  // Underscore methods that we want to implement on the Model, mapped to the
  // number of arguments they take.
  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,
      omit: 0, chain: 1, isEmpty: 1};

  // Mix in each Underscore method as a proxy to `Model#attributes`.
  addUnderscoreMethods(Model, modelMethods, 'attributes');

  // Backbone.Collection
  // -------------------

  // If models tend to represent a single row of data, a Backbone Collection is
  // more analogous to a table full of data ... or a small slice or page of that
  // table, or a collection of rows that belong together for a particular reason
  // -- all of the messages in this particular folder, all of the documents
  // belonging to this particular author, and so on. Collections maintain
  // indexes of their models, both in order, and for lookup by `id`.

  // Create a new **Collection**, perhaps to contain a specific type of `model`.
  // If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Default options for `Collection#set`.
  var setOptions = {add: true, remove: true, merge: true};
  var addOptions = {add: true, remove: false};

  // Splices `insert` into `array` at index `at`.
  var splice = function(array, insert, at) {
    at = Math.min(Math.max(at, 0), array.length);
    var tail = Array(array.length - at);
    var length = insert.length;
    var i;
    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];
    for (i = 0; i < length; i++) array[i + at] = insert[i];
    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model) { return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set. `models` may be Backbone
    // Models or raw JavaScript objects to be converted to Models, or any
    // combination of the two.
    add: function(models, options) {
      return this.set(models, _.extend({merge: false}, options, addOptions));
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      options = _.extend({}, options);
      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();
      var removed = this._removeModels(models, options);
      if (!options.silent && removed.length) {
        options.changes = {added: [], merged: [], removed: removed};
        this.trigger('update', this, options);
      }
      return singular ? removed[0] : removed;
    },

    // Update a collection by `set`-ing a new list of models, adding new ones,
    // removing models that are no longer present, and merging models that
    // already exist in the collection, as necessary. Similar to **Model#set**,
    // the core operation for updating the data contained by the collection.
    set: function(models, options) {
      if (models == null) return;

      options = _.extend({}, setOptions, options);
      if (options.parse && !this._isModel(models)) {
        models = this.parse(models, options) || [];
      }

      var singular = !_.isArray(models);
      models = singular ? [models] : models.slice();

      var at = options.at;
      if (at != null) at = +at;
      if (at > this.length) at = this.length;
      if (at < 0) at += this.length + 1;

      var set = [];
      var toAdd = [];
      var toMerge = [];
      var toRemove = [];
      var modelMap = {};

      var add = options.add;
      var merge = options.merge;
      var remove = options.remove;

      var sort = false;
      var sortable = this.comparator && at == null && options.sort !== false;
      var sortAttr = _.isString(this.comparator) ? this.comparator : null;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      var model, i;
      for (i = 0; i < models.length; i++) {
        model = models[i];

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        var existing = this.get(model);
        if (existing) {
          if (merge && model !== existing) {
            var attrs = this._isModel(model) ? model.attributes : model;
            if (options.parse) attrs = existing.parse(attrs, options);
            existing.set(attrs, options);
            toMerge.push(existing);
            if (sortable && !sort) sort = existing.hasChanged(sortAttr);
          }
          if (!modelMap[existing.cid]) {
            modelMap[existing.cid] = true;
            set.push(existing);
          }
          models[i] = existing;

        // If this is a new, valid model, push it to the `toAdd` list.
        } else if (add) {
          model = models[i] = this._prepareModel(model, options);
          if (model) {
            toAdd.push(model);
            this._addReference(model, options);
            modelMap[model.cid] = true;
            set.push(model);
          }
        }
      }

      // Remove stale models.
      if (remove) {
        for (i = 0; i < this.length; i++) {
          model = this.models[i];
          if (!modelMap[model.cid]) toRemove.push(model);
        }
        if (toRemove.length) this._removeModels(toRemove, options);
      }

      // See if sorting is needed, update `length` and splice in new models.
      var orderChanged = false;
      var replace = !sortable && add && remove;
      if (set.length && replace) {
        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {
          return m !== set[index];
        });
        this.models.length = 0;
        splice(this.models, set, 0);
        this.length = this.models.length;
      } else if (toAdd.length) {
        if (sortable) sort = true;
        splice(this.models, toAdd, at == null ? this.length : at);
        this.length = this.models.length;
      }

      // Silently sort the collection if appropriate.
      if (sort) this.sort({silent: true});

      // Unless silenced, it's time to fire all appropriate add/sort/update events.
      if (!options.silent) {
        for (i = 0; i < toAdd.length; i++) {
          if (at != null) options.index = at + i;
          model = toAdd[i];
          model.trigger('add', model, this, options);
        }
        if (sort || orderChanged) this.trigger('sort', this, options);
        if (toAdd.length || toRemove.length || toMerge.length) {
          options.changes = {
            added: toAdd,
            removed: toRemove,
            merged: toMerge
          };
          this.trigger('update', this, options);
        }
      }

      // Return the added (or merged) model (or models).
      return singular ? models[0] : models;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any granular `add` or `remove` events. Fires `reset` when finished.
    // Useful for bulk operations and optimizations.
    reset: function(models, options) {
      options = options ? _.clone(options) : {};
      for (var i = 0; i < this.models.length; i++) {
        this._removeReference(this.models[i], options);
      }
      options.previousModels = this.models;
      this._reset();
      models = this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return models;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      return this.add(model, _.extend({at: this.length}, options));
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      return this.remove(model, options);
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      return this.add(model, _.extend({at: 0}, options));
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      return this.remove(model, options);
    },

    // Slice out a sub-array of models from the collection.
    slice: function() {
      return slice.apply(this.models, arguments);
    },

    // Get a model from the set by id, cid, model object with id or cid
    // properties, or an attributes object that is transformed through modelId.
    get: function(obj) {
      if (obj == null) return void 0;
      return this._byId[obj] ||
        this._byId[this.modelId(obj.attributes || obj)] ||
        obj.cid && this._byId[obj.cid];
    },

    // Returns `true` if the model is in the collection.
    has: function(obj) {
      return this.get(obj) != null;
    },

    // Get the model at the given index.
    at: function(index) {
      if (index < 0) index += this.length;
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of
    // `filter`.
    where: function(attrs, first) {
      return this[first ? 'find' : 'filter'](attrs);
    },

    // Return the first model with matching attributes. Useful for simple cases
    // of `find`.
    findWhere: function(attrs) {
      return this.where(attrs, true);
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      var comparator = this.comparator;
      if (!comparator) throw new Error('Cannot sort a set without a comparator');
      options || (options = {});

      var length = comparator.length;
      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);

      // Run sort based on type of `comparator`.
      if (length === 1 || _.isString(comparator)) {
        this.models = this.sortBy(comparator);
      } else {
        this.models.sort(comparator);
      }
      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return this.map(attr + '');
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `reset: true` is passed, the response
    // data will be passed through the `reset` method instead of `set`.
    fetch: function(options) {
      options = _.extend({parse: true}, options);
      var success = options.success;
      var collection = this;
      options.success = function(resp) {
        var method = options.reset ? 'reset' : 'set';
        collection[method](resp, options);
        if (success) success.call(options.context, collection, resp, options);
        collection.trigger('sync', collection, resp, options);
      };
      wrapError(this, options);
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      var wait = options.wait;
      model = this._prepareModel(model, options);
      if (!model) return false;
      if (!wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(m, resp, callbackOpts) {
        if (wait) collection.add(m, callbackOpts);
        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models, {
        model: this.model,
        comparator: this.comparator
      });
    },

    // Define how to uniquely identify models in the collection.
    modelId: function(attrs) {
      return attrs[this.model.prototype.idAttribute || 'id'];
    },

    // Private method to reset all internal state. Called when the collection
    // is first initialized or reset.
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId  = {};
    },

    // Prepare a hash of attributes (or other model) to be added to this
    // collection.
    _prepareModel: function(attrs, options) {
      if (this._isModel(attrs)) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options = options ? _.clone(options) : {};
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model.validationError) return model;
      this.trigger('invalid', this, model.validationError, options);
      return false;
    },

    // Internal method called by both remove and set.
    _removeModels: function(models, options) {
      var removed = [];
      for (var i = 0; i < models.length; i++) {
        var model = this.get(models[i]);
        if (!model) continue;

        var index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;

        // Remove references before triggering 'remove' event to prevent an
        // infinite loop. #3693
        delete this._byId[model.cid];
        var id = this.modelId(model.attributes);
        if (id != null) delete this._byId[id];

        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }

        removed.push(model);
        this._removeReference(model, options);
      }
      return removed;
    },

    // Method for checking whether an object should be considered a model for
    // the purposes of adding to the collection.
    _isModel: function(model) {
      return model instanceof Model;
    },

    // Internal method to create a model's ties to a collection.
    _addReference: function(model, options) {
      this._byId[model.cid] = model;
      var id = this.modelId(model.attributes);
      if (id != null) this._byId[id] = model;
      model.on('all', this._onModelEvent, this);
    },

    // Internal method to sever a model's ties to a collection.
    _removeReference: function(model, options) {
      delete this._byId[model.cid];
      var id = this.modelId(model.attributes);
      if (id != null) delete this._byId[id];
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if (model) {
        if ((event === 'add' || event === 'remove') && collection !== this) return;
        if (event === 'destroy') this.remove(model, options);
        if (event === 'change') {
          var prevId = this.modelId(model.previousAttributes());
          var id = this.modelId(model.attributes);
          if (prevId !== id) {
            if (prevId != null) delete this._byId[prevId];
            if (id != null) this._byId[id] = model;
          }
        }
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  // 90% of the core usefulness of Backbone Collections is actually implemented
  // right here:
  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,
      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,
      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,
      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,
      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,
      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,
      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,
      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};

  // Mix in each Underscore method as a proxy to `Collection#models`.
  addUnderscoreMethods(Collection, collectionMethods, 'models');

  // Backbone.View
  // -------------

  // Backbone Views are almost more convention than they are actual code. A View
  // is simply a JavaScript object that represents a logical chunk of UI in the
  // DOM. This might be a single item, an entire list, a sidebar or panel, or
  // even the surrounding frame which wraps your whole app. Defining a chunk of
  // UI as a **View** allows you to define your DOM events declaratively, without
  // having to worry about render order ... and makes it easy for the view to
  // react to specific changes in the state of your models.

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    _.extend(this, _.pick(options, viewOptions));
    this._ensureElement();
    this.initialize.apply(this, arguments);
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be set as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be preferred to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this._removeElement();
      this.stopListening();
      return this;
    },

    // Remove this view's element from the document and all event listeners
    // attached to it. Exposed for subclasses using an alternative DOM
    // manipulation API.
    _removeElement: function() {
      this.$el.remove();
    },

    // Change the view's element (`this.el` property) and re-delegate the
    // view's events on the new element.
    setElement: function(element) {
      this.undelegateEvents();
      this._setElement(element);
      this.delegateEvents();
      return this;
    },

    // Creates the `this.el` and `this.$el` references for this view using the
    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
    // context or an element. Subclasses can override this to utilize an
    // alternative DOM manipulation API and are only required to set the
    // `this.el` property.
    _setElement: function(el) {
      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
      this.el = this.$el[0];
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save',
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    delegateEvents: function(events) {
      events || (events = _.result(this, 'events'));
      if (!events) return this;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[method];
        if (!method) continue;
        var match = key.match(delegateEventSplitter);
        this.delegate(match[1], match[2], _.bind(method, this));
      }
      return this;
    },

    // Add a single event listener to the view's element (or a child element
    // using `selector`). This only works for delegate-able events: not `focus`,
    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
    delegate: function(eventName, selector, listener) {
      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Clears all callbacks previously bound to the view by `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      if (this.$el) this.$el.off('.delegateEvents' + this.cid);
      return this;
    },

    // A finer-grained `undelegateEvents` for removing a single delegated event.
    // `selector` and `listener` are both optional.
    undelegate: function(eventName, selector, listener) {
      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);
      return this;
    },

    // Produces a DOM element to be assigned to your view. Exposed for
    // subclasses using an alternative DOM manipulation API.
    _createElement: function(tagName) {
      return document.createElement(tagName);
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        this.setElement(this._createElement(_.result(this, 'tagName')));
        this._setAttributes(attrs);
      } else {
        this.setElement(_.result(this, 'el'));
      }
    },

    // Set attributes from a hash on this view's element.  Exposed for
    // subclasses using an alternative DOM manipulation API.
    _setAttributes: function(attributes) {
      this.$el.attr(attributes);
    }

  });

  // Backbone.sync
  // -------------

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    // Pass along `textStatus` and `errorThrown` from jQuery.
    var error = options.error;
    options.error = function(xhr, textStatus, errorThrown) {
      options.textStatus = textStatus;
      options.errorThrown = errorThrown;
      if (error) error.call(options.context, xhr, textStatus, errorThrown);
    };

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch': 'PATCH',
    'delete': 'DELETE',
    'read': 'GET'
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  // Override this if you'd like to use a different library.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (_.isFunction(name)) {
        callback = name;
        name = '';
      }
      if (!callback) callback = this[name];
      var router = this;
      Backbone.history.route(route, function(fragment) {
        var args = router._extractParameters(route, fragment);
        if (router.execute(callback, args, name) !== false) {
          router.trigger.apply(router, ['route:' + name].concat(args));
          router.trigger('route', name, args);
          Backbone.history.trigger('route', router, name, args);
        }
      });
      return this;
    },

    // Execute a route handler with the provided parameters.  This is an
    // excellent place to do pre-route setup or post-route cleanup.
    execute: function(callback, args, name) {
      if (callback) callback.apply(this, args);
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      this.routes = _.result(this, 'routes');
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional) {
                     return optional ? match : '([^/?]+)';
                   })
                   .replace(splatParam, '([^?]*?)');
      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted decoded parameters. Empty or unmatched parameters will be
    // treated as `null` to normalize cross-browser behavior.
    _extractParameters: function(route, fragment) {
      var params = route.exec(fragment).slice(1);
      return _.map(params, function(param, i) {
        // Don't decode the search params.
        if (i === params.length - 1) return param || null;
        return param ? decodeURIComponent(param) : null;
      });
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on either
  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
  // and URL fragments. If the browser supports neither (old IE, natch),
  // falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    this.checkUrl = _.bind(this.checkUrl, this);

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for stripping urls of hash.
  var pathStripper = /#.*$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Are we at the app root?
    atRoot: function() {
      var path = this.location.pathname.replace(/[^\/]$/, '$&/');
      return path === this.root && !this.getSearch();
    },

    // Does the pathname match the root?
    matchRoot: function() {
      var path = this.decodeFragment(this.location.pathname);
      var rootPath = path.slice(0, this.root.length - 1) + '/';
      return rootPath === this.root;
    },

    // Unicode characters in `location.pathname` are percent encoded so they're
    // decoded for comparison. `%25` should not be decoded since it may be part
    // of an encoded parameter.
    decodeFragment: function(fragment) {
      return decodeURI(fragment.replace(/%25/g, '%2525'));
    },

    // In IE6, the hash fragment and search params are incorrect if the
    // fragment contains `?`.
    getSearch: function() {
      var match = this.location.href.replace(/#.*/, '').match(/\?.+/);
      return match ? match[0] : '';
    },

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the pathname and search params, without the root.
    getPath: function() {
      var path = this.decodeFragment(
        this.location.pathname + this.getSearch()
      ).slice(this.root.length - 1);
      return path.charAt(0) === '/' ? path.slice(1) : path;
    },

    // Get the cross-browser normalized URL fragment from the path or hash.
    getFragment: function(fragment) {
      if (fragment == null) {
        if (this._usePushState || !this._wantsHashChange) {
          fragment = this.getPath();
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error('Backbone.history has already been started');
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);
      this._useHashChange   = this._wantsHashChange && this._hasHashChange;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.history && this.history.pushState);
      this._usePushState    = this._wantsPushState && this._hasPushState;
      this.fragment         = this.getFragment();

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      // Transition from hashChange to pushState or vice versa if both are
      // requested.
      if (this._wantsHashChange && this._wantsPushState) {

        // If we've started off with a route from a `pushState`-enabled
        // browser, but we're currently in a browser that doesn't support it...
        if (!this._hasPushState && !this.atRoot()) {
          var rootPath = this.root.slice(0, -1) || '/';
          this.location.replace(rootPath + '#' + this.getPath());
          // Return immediately as browser will do redirect to new url
          return true;

        // Or if we've started out with a hash-based route, but we're currently
        // in a browser where it could be `pushState`-based instead...
        } else if (this._hasPushState && this.atRoot()) {
          this.navigate(this.getHash(), {replace: true});
        }

      }

      // Proxy an iframe to handle location events if the browser doesn't
      // support the `hashchange` event, HTML5 history, or the user wants
      // `hashChange` but not `pushState`.
      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
        this.iframe = document.createElement('iframe');
        this.iframe.src = 'javascript:0';
        this.iframe.style.display = 'none';
        this.iframe.tabIndex = -1;
        var body = document.body;
        // Using `appendChild` will throw on IE < 9 if the document is not ready.
        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;
        iWindow.document.open();
        iWindow.document.close();
        iWindow.location.hash = '#' + this.fragment;
      }

      // Add a cross-platform `addEventListener` shim for older browsers.
      var addEventListener = window.addEventListener || function(eventName, listener) {
        return attachEvent('on' + eventName, listener);
      };

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._usePushState) {
        addEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        addEventListener('hashchange', this.checkUrl, false);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      // Add a cross-platform `removeEventListener` shim for older browsers.
      var removeEventListener = window.removeEventListener || function(eventName, listener) {
        return detachEvent('on' + eventName, listener);
      };

      // Remove window listeners.
      if (this._usePushState) {
        removeEventListener('popstate', this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        removeEventListener('hashchange', this.checkUrl, false);
      }

      // Clean up the iframe if necessary.
      if (this.iframe) {
        document.body.removeChild(this.iframe);
        this.iframe = null;
      }

      // Some environments will throw when clearing an undefined interval.
      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();

      // If the user pressed the back button, the iframe's hash will have
      // changed and we should use that for comparison.
      if (current === this.fragment && this.iframe) {
        current = this.getHash(this.iframe.contentWindow);
      }

      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl();
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragment) {
      // If the root doesn't match, no routes can match either.
      if (!this.matchRoot()) return false;
      fragment = this.fragment = this.getFragment(fragment);
      return _.some(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: !!options};

      // Normalize the fragment.
      fragment = this.getFragment(fragment || '');

      // Don't include a trailing slash on the root.
      var rootPath = this.root;
      if (fragment === '' || fragment.charAt(0) === '?') {
        rootPath = rootPath.slice(0, -1) || '/';
      }
      var url = rootPath + fragment;

      // Strip the hash and decode for matching.
      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));

      if (this.fragment === fragment) return;
      this.fragment = fragment;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._usePushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {
          var iWindow = this.iframe.contentWindow;

          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if (!options.replace) {
            iWindow.document.open();
            iWindow.document.close();
          }

          this._updateHash(iWindow.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) return this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function and add the prototype properties.
    child.prototype = _.create(parent.prototype, protoProps);
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

  // Wrap an optional error callback with a fallback error event.
  var wrapError = function(model, options) {
    var error = options.error;
    options.error = function(resp) {
      if (error) error.call(options.context, model, resp, options);
      model.trigger('error', model, resp, options);
    };
  };

  return Backbone;
});

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bootstrap.native/dist/bootstrap-native-v4.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Native Javascript for Bootstrap 4 v2.0.23 | © dnp_theme | MIT-License
(function (root, factory) {
  if (true) {
    // AMD support:
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var bsn; }
}(this, function () {
  
  /* Native Javascript for Bootstrap 4 | Internal Utility Functions
  ----------------------------------------------------------------*/
  "use strict";
  
  // globals
  var globalObject = typeof global !== 'undefined' ? global : this||window,
    DOC = document, HTML = DOC.documentElement, body = 'body', // allow the library to be used in <head>
  
    // Native Javascript for Bootstrap Global Object
    BSN = globalObject.BSN = {},
    supports = BSN.supports = [],
  
    // function toggle attributes
    dataToggle    = 'data-toggle',
    dataDismiss   = 'data-dismiss',
    dataSpy       = 'data-spy',
    dataRide      = 'data-ride',
  
    // components
    stringAlert     = 'Alert',
    stringButton    = 'Button',
    stringCarousel  = 'Carousel',
    stringCollapse  = 'Collapse',
    stringDropdown  = 'Dropdown',
    stringModal     = 'Modal',
    stringPopover   = 'Popover',
    stringScrollSpy = 'ScrollSpy',
    stringTab       = 'Tab',
    stringTooltip   = 'Tooltip',
  
    // options DATA API
    databackdrop      = 'data-backdrop',
    dataKeyboard      = 'data-keyboard',
    dataTarget        = 'data-target',
    dataInterval      = 'data-interval',
    dataHeight        = 'data-height',
    dataPause         = 'data-pause',
    dataTitle         = 'data-title',
    dataOriginalTitle = 'data-original-title',
    dataOriginalText  = 'data-original-text',
    dataDismissible   = 'data-dismissible',
    dataTrigger       = 'data-trigger',
    dataAnimation     = 'data-animation',
    dataContainer     = 'data-container',
    dataPlacement     = 'data-placement',
    dataDelay         = 'data-delay',
    dataOffsetTop     = 'data-offset-top',
    dataOffsetBottom  = 'data-offset-bottom',
  
    // option keys
    backdrop = 'backdrop', keyboard = 'keyboard', delay = 'delay',
    content = 'content', target = 'target',
    interval = 'interval', pause = 'pause', animation = 'animation',
    placement = 'placement', container = 'container',
  
    // box model
    offsetTop    = 'offsetTop',      offsetBottom   = 'offsetBottom',
    offsetLeft   = 'offsetLeft',
    scrollTop    = 'scrollTop',      scrollLeft     = 'scrollLeft',
    clientWidth  = 'clientWidth',    clientHeight   = 'clientHeight',
    offsetWidth  = 'offsetWidth',    offsetHeight   = 'offsetHeight',
    innerWidth   = 'innerWidth',     innerHeight    = 'innerHeight',
    scrollHeight = 'scrollHeight',   height         = 'height',
  
    // aria
    ariaExpanded = 'aria-expanded',
    ariaHidden   = 'aria-hidden',
  
    // event names
    clickEvent    = 'click',
    hoverEvent    = 'hover',
    keydownEvent  = 'keydown',
    keyupEvent    = 'keyup',
    resizeEvent   = 'resize',
    scrollEvent   = 'scroll',
    // originalEvents
    showEvent     = 'show',
    shownEvent    = 'shown',
    hideEvent     = 'hide',
    hiddenEvent   = 'hidden',
    closeEvent    = 'close',
    closedEvent   = 'closed',
    slidEvent     = 'slid',
    slideEvent    = 'slide',
    changeEvent   = 'change',
  
    // other
    getAttribute           = 'getAttribute',
    setAttribute           = 'setAttribute',
    hasAttribute           = 'hasAttribute',
    createElement          = 'createElement',
    appendChild            = 'appendChild',
    innerHTML              = 'innerHTML',
    getElementsByTagName   = 'getElementsByTagName',
    preventDefault         = 'preventDefault',
    getBoundingClientRect  = 'getBoundingClientRect',
    querySelectorAll       = 'querySelectorAll',
    getElementsByCLASSNAME = 'getElementsByClassName',
    getComputedStyle       = 'getComputedStyle',  
  
    indexOf      = 'indexOf',
    parentNode   = 'parentNode',
    length       = 'length',
    toLowerCase  = 'toLowerCase',
    Transition   = 'Transition',
    Duration     = 'Duration',
    Webkit       = 'Webkit',
    style        = 'style',
    push         = 'push',
    tabindex     = 'tabindex',
    contains     = 'contains',
  
    active     = 'active',
    showClass  = 'show',
    collapsing = 'collapsing',
    disabled   = 'disabled',
    loading    = 'loading',
    left       = 'left',
    right      = 'right',
    top        = 'top',
    bottom     = 'bottom',
  
    // tooltip / popover
    mouseHover = ('onmouseleave' in DOC) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],
    tipPositions = /\b(top|bottom|left|right)+/,
  
    // modal
    modalOverlay = 0,
    fixedTop = 'fixed-top',
    fixedBottom = 'fixed-bottom',
  
    // transitionEnd since 2.0.4
    supportTransitions = Webkit+Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],
    transitionEndEvent = Webkit+Transition in HTML[style] ? Webkit[toLowerCase]()+Transition+'End' : Transition[toLowerCase]()+'end',
    transitionDuration = Webkit+Duration in HTML[style] ? Webkit[toLowerCase]()+Transition+Duration : Transition[toLowerCase]()+Duration,
  
    // set new focus element since 2.0.3
    setFocus = function(element){
      element.focus ? element.focus() : element.setActive();
    },
  
    // class manipulation, since 2.0.0 requires polyfill.js
    addClass = function(element,classNAME) {
      element.classList.add(classNAME);
    },
    removeClass = function(element,classNAME) {
      element.classList.remove(classNAME);
    },
    hasClass = function(element,classNAME){ // since 2.0.0
      return element.classList[contains](classNAME);
    },
  
    // selection methods
    getElementsByClassName = function(element,classNAME) { // returns Array
      return [].slice.call(element[getElementsByCLASSNAME]( classNAME ));
    },
    queryElement = function (selector, parent) {
      var lookUp = parent ? parent : DOC;
      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);
    },
    getClosest = function (element, selector) { //element is the element and selector is for the closest parent element to find
      // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/
      var firstChar = selector.charAt(0), selectorSubstring = selector.substr(1);
      if ( firstChar === '.' ) {// If selector is a class
        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match
          if ( queryElement(selector,element[parentNode]) !== null && hasClass(element,selectorSubstring) ) { return element; }
        }
      } else if ( firstChar === '#' ) { // If selector is an ID
        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match
          if ( element.id === selectorSubstring ) { return element; }
        }
      }
      return false;
    },
  
    // event attach jQuery style / trigger  since 1.2.0
    on = function (element, event, handler) {
      element.addEventListener(event, handler, false);
    },
    off = function(element, event, handler) {
      element.removeEventListener(event, handler, false);
    },
    one = function (element, event, handler) { // one since 2.0.4
      on(element, event, function handlerWrapper(e){
        handler(e);
        off(element, event, handlerWrapper);
      });
    },
    getTransitionDurationFromElement = function(element) {
      var duration = globalObject[getComputedStyle](element)[transitionDuration];
      duration = parseFloat(duration);
      duration = typeof duration === 'number' && !isNaN(duration) ? duration * 1000 : 0;
      return duration + 50; // we take a short offset to make sure we fire on the next frame after animation
    },
    emulateTransitionEnd = function(element,handler){ // emulateTransitionEnd since 2.0.4
      var called = 0, duration = getTransitionDurationFromElement(element);
      supportTransitions && one(element, transitionEndEvent, function(e){ handler(e); called = 1; });
      setTimeout(function() { !called && handler(); }, duration);
    },
    bootstrapCustomEvent = function (eventName, componentName, related) {
      var OriginalCustomEvent = new CustomEvent( eventName + '.bs.' + componentName);
      OriginalCustomEvent.relatedTarget = related;
      this.dispatchEvent(OriginalCustomEvent);
    },
  
    // tooltip / popover stuff
    getScroll = function() { // also Affix and ScrollSpy uses it
      return {
        y : globalObject.pageYOffset || HTML[scrollTop],
        x : globalObject.pageXOffset || HTML[scrollLeft]
      }
    },
    styleTip = function(link,element,position,parent) { // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)
      var elementDimensions = { w : element[offsetWidth], h: element[offsetHeight] },
          windowWidth = (HTML[clientWidth] || DOC[body][clientWidth]),
          windowHeight = (HTML[clientHeight] || DOC[body][clientHeight]),
          rect = link[getBoundingClientRect](),
          scroll = parent === DOC[body] ? getScroll() : { x: parent[offsetLeft] + parent[scrollLeft], y: parent[offsetTop] + parent[scrollTop] },
          linkDimensions = { w: rect[right] - rect[left], h: rect[bottom] - rect[top] },
          isPopover = hasClass(element,'popover'),
          topPosition, leftPosition,
  
          arrow = queryElement('.arrow',element),
          arrowTop, arrowLeft, arrowWidth, arrowHeight,
  
          halfTopExceed = rect[top] + linkDimensions.h/2 - elementDimensions.h/2 < 0,
          halfLeftExceed = rect[left] + linkDimensions.w/2 - elementDimensions.w/2 < 0,
          halfRightExceed = rect[left] + elementDimensions.w/2 + linkDimensions.w/2 >= windowWidth,
          halfBottomExceed = rect[top] + elementDimensions.h/2 + linkDimensions.h/2 >= windowHeight,
          topExceed = rect[top] - elementDimensions.h < 0,
          leftExceed = rect[left] - elementDimensions.w < 0,
          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,
          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth;
  
      // recompute position
      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom
      position = position === top && topExceed ? bottom : position;
      position = position === bottom && bottomExceed ? top : position;
      position = position === left && leftExceed ? right : position;
      position = position === right && rightExceed ? left : position;
  
      // update tooltip/popover class
      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions,position));
  
      // we check the computed width & height and update here
      arrowWidth = arrow[offsetWidth]; arrowHeight = arrow[offsetHeight];
  
      // apply styling to tooltip or popover
      if ( position === left || position === right ) { // secondary|side positions
        if ( position === left ) { // LEFT
          leftPosition = rect[left] + scroll.x - elementDimensions.w - ( isPopover ? arrowWidth : 0 );
        } else { // RIGHT
          leftPosition = rect[left] + scroll.x + linkDimensions.w;
        }
  
        // adjust top and arrow
        if (halfTopExceed) {
          topPosition = rect[top] + scroll.y;
          arrowTop = linkDimensions.h/2 - arrowWidth;
        } else if (halfBottomExceed) {
          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;
          arrowTop = elementDimensions.h - linkDimensions.h/2 - arrowWidth;
        } else {
          topPosition = rect[top] + scroll.y - elementDimensions.h/2 + linkDimensions.h/2;
          arrowTop = elementDimensions.h/2 - (isPopover ? arrowHeight*0.9 : arrowHeight/2);
        }
      } else if ( position === top || position === bottom ) { // primary|vertical positions
        if ( position === top) { // TOP
          topPosition =  rect[top] + scroll.y - elementDimensions.h - ( isPopover ? arrowHeight : 0 );
        } else { // BOTTOM
          topPosition = rect[top] + scroll.y + linkDimensions.h;
        }
        // adjust left | right and also the arrow
        if (halfLeftExceed) {
          leftPosition = 0;
          arrowLeft = rect[left] + linkDimensions.w/2 - arrowWidth;
        } else if (halfRightExceed) {
          leftPosition = windowWidth - elementDimensions.w*1.01;
          arrowLeft = elementDimensions.w - ( windowWidth - rect[left] ) + linkDimensions.w/2 - arrowWidth/2;
        } else {
          leftPosition = rect[left] + scroll.x - elementDimensions.w/2 + linkDimensions.w/2;
          arrowLeft = elementDimensions.w/2 - arrowWidth/2;
        }
      }
  
      // apply style to tooltip/popover and its arrow
      element[style][top] = topPosition + 'px';
      element[style][left] = leftPosition + 'px';
  
      arrowTop && (arrow[style][top] = arrowTop + 'px');
      arrowLeft && (arrow[style][left] = arrowLeft + 'px');
    };
  
  BSN.version = '2.0.23';
  
  /* Native Javascript for Bootstrap 4 | Alert
  -------------------------------------------*/
  
  // ALERT DEFINITION
  // ================
  var Alert = function( element ) {
    
    // initialization element
    element = queryElement(element);
  
    // bind, target alert, duration and stuff
    var self = this, component = 'alert',
      alert = getClosest(element,'.'+component),
      triggerHandler = function(){ hasClass(alert,'fade') ? emulateTransitionEnd(alert,transitionEndHandler) : transitionEndHandler(); },
      // handlers
      clickHandler = function(e){
        alert = getClosest(e[target],'.'+component);
        element = queryElement('['+dataDismiss+'="'+component+'"]',alert);
        element && alert && (element === e[target] || element[contains](e[target])) && self.close();
      },
      transitionEndHandler = function(){
        bootstrapCustomEvent.call(alert, closedEvent, component);
        off(element, clickEvent, clickHandler); // detach it's listener
        alert[parentNode].removeChild(alert);
      };
    
    // public method
    this.close = function() {
      if ( alert && element && hasClass(alert,showClass) ) {
        bootstrapCustomEvent.call(alert, closeEvent, component);
        removeClass(alert,showClass);
        alert && triggerHandler();
      }
    };
  
    // init
    if ( !(stringAlert in element ) ) { // prevent adding event handlers twice
      on(element, clickEvent, clickHandler);
    }
    element[stringAlert] = self;
  };
  
  // ALERT DATA API
  // ==============
  supports[push]([stringAlert, Alert, '['+dataDismiss+'="alert"]']);
  
  
  /* Native Javascript for Bootstrap 4 | Button
  ---------------------------------------------*/
  
  // BUTTON DEFINITION
  // ===================
  var Button = function( element ) {
  
    // initialization element
    element = queryElement(element);
  
    // constant
    var toggled = false, // toggled makes sure to prevent triggering twice the change.bs.button events
  
        // strings
        component = 'button',
        checked = 'checked',
        reset = 'reset',
        LABEL = 'LABEL',
        INPUT = 'INPUT',
  
      // private methods
      keyHandler = function(e){ 
        var key = e.which || e.keyCode;
        key === 32 && e[target] === DOC.activeElement && toggle(e);
      },
      preventScroll = function(e){ 
        var key = e.which || e.keyCode;
        key === 32 && e[preventDefault]();
      },
      toggle = function(e) {
        var label = e[target].tagName === LABEL ? e[target] : e[target][parentNode].tagName === LABEL ? e[target][parentNode] : null; // the .btn label
        
        if ( !label ) return; //react if a label or its immediate child is clicked
  
        var eventTarget = e[target], // the button itself, the target of the handler function
          labels = getElementsByClassName(eventTarget[parentNode],'btn'), // all the button group buttons
          input = label[getElementsByTagName](INPUT)[0];
  
        if ( !input ) return; //return if no input found
  
        // manage the dom manipulation
        if ( input.type === 'checkbox' ) { //checkboxes
          if ( !input[checked] ) {
            addClass(label,active);
            input[getAttribute](checked);
            input[setAttribute](checked,checked);
            input[checked] = true;
          } else {
            removeClass(label,active);
            input[getAttribute](checked);
            input.removeAttribute(checked);
            input[checked] = false;
          }
  
          if (!toggled) { // prevent triggering the event twice
            toggled = true;
            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input
            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group
          }
        }
  
        if ( input.type === 'radio' && !toggled ) { // radio buttons
          if ( !input[checked] ) { // don't trigger if already active
            addClass(label,active);
            input[setAttribute](checked,checked);
            input[checked] = true;
            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input
            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group
  
            toggled = true;
            for (var i = 0, ll = labels[length]; i<ll; i++) {
              var otherLabel = labels[i], otherInput = otherLabel[getElementsByTagName](INPUT)[0];
              if ( otherLabel !== label && hasClass(otherLabel,active) )  {
                removeClass(otherLabel,active);
                otherInput.removeAttribute(checked);
                otherInput[checked] = false;
                bootstrapCustomEvent.call(otherInput, changeEvent, component); // trigger the change
              }
            }
          }
        }
        setTimeout( function() { toggled = false; }, 50 );
      };
  
    // init
    if ( !( stringButton in element ) ) { // prevent adding event handlers twice
      on( element, clickEvent, toggle );
      queryElement('['+tabindex+']',element) && on( element, keyupEvent, keyHandler ), 
                                                on( element, keydownEvent, preventScroll );    
    }
  
    // activate items on load
    var labelsToACtivate = getElementsByClassName(element, 'btn'), lbll = labelsToACtivate[length];
    for (var i=0; i<lbll; i++) {
      !hasClass(labelsToACtivate[i],active) && queryElement('input:checked',labelsToACtivate[i]) 
                                            && addClass(labelsToACtivate[i],active);
    }
    element[stringButton] = this;
  };
  
  // BUTTON DATA API
  // =================
  supports[push]( [ stringButton, Button, '['+dataToggle+'="buttons"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | Carousel
  ----------------------------------------------*/
  
  // CAROUSEL DEFINITION
  // ===================
  var Carousel = function( element, options ) {
  
    // initialization element
    element = queryElement( element );
  
    // set options
    options = options || {};
  
    // DATA API
    var intervalAttribute = element[getAttribute](dataInterval),
        intervalOption = options[interval],
        intervalData = intervalAttribute === 'false' ? 0 : parseInt(intervalAttribute),  
        pauseData = element[getAttribute](dataPause) === hoverEvent || false,
        keyboardData = element[getAttribute](dataKeyboard) === 'true' || false,
      
        // strings
        component = 'carousel',
        paused = 'paused',
        direction = 'direction',
        carouselItem = 'carousel-item',
        dataSlideTo = 'data-slide-to'; 
  
    this[keyboard] = options[keyboard] === true || keyboardData;
    this[pause] = (options[pause] === hoverEvent || pauseData) ? hoverEvent : false; // false / hover
  
    this[interval] = typeof intervalOption === 'number' ? intervalOption
                   : intervalOption === false || intervalData === 0 || intervalData === false ? 0
                   : 5000; // bootstrap carousel default interval
  
    // bind, event targets
    var self = this, index = element.index = 0, timer = element.timer = 0, 
      isSliding = false, // isSliding prevents click event handlers when animation is running
      slides = getElementsByClassName(element,carouselItem), total = slides[length],
      slideDirection = this[direction] = left,
      leftArrow = getElementsByClassName(element,component+'-control-prev')[0], 
      rightArrow = getElementsByClassName(element,component+'-control-next')[0],
      indicator = queryElement( '.'+component+'-indicators', element ),
      indicators = indicator && indicator[getElementsByTagName]( "LI" ) || [];
  
    // handlers
    var pauseHandler = function () {
        if ( self[interval] !==false && !hasClass(element,paused) ) {
          addClass(element,paused);
          !isSliding && clearInterval( timer );
        }
      },
      resumeHandler = function() {
        if ( self[interval] !== false && hasClass(element,paused) ) {
          removeClass(element,paused);
          !isSliding && clearInterval( timer );
          !isSliding && self.cycle();
        }
      },
      indicatorHandler = function(e) {
        e[preventDefault]();
        if (isSliding) return;
  
        var eventTarget = e[target]; // event target | the current active item
  
        if ( eventTarget && !hasClass(eventTarget,active) && eventTarget[getAttribute](dataSlideTo) ) {
          index = parseInt( eventTarget[getAttribute](dataSlideTo), 10 );
        } else { return false; }
  
        self.slideTo( index ); //Do the slide
      },
      controlsHandler = function (e) {
        e[preventDefault]();
        if (isSliding) return;
  
        var eventTarget = e.currentTarget || e.srcElement;
  
        if ( eventTarget === rightArrow ) {
          index++;
        } else if ( eventTarget === leftArrow ) {
          index--;
        }
  
        self.slideTo( index ); //Do the slide
      },
      keyHandler = function (e) {
        if (isSliding) return;
        switch (e.which) {
          case 39:
            index++;
            break;
          case 37:
            index--;
            break;
          default: return;
        }
        self.slideTo( index ); //Do the slide
      },
      // private methods
      isElementInScrollRange = function () {
        var rect = element[getBoundingClientRect](),
          viewportHeight = globalObject[innerHeight] || HTML[clientHeight]
        return rect[top] <= viewportHeight && rect[bottom] >= 0; // bottom && top
      },    
      setActivePage = function( pageIndex ) { //indicators
        for ( var i = 0, icl = indicators[length]; i < icl; i++ ) {
          removeClass(indicators[i],active);
        }
        if (indicators[pageIndex]) addClass(indicators[pageIndex], active);
      };
  
  
    // public methods
    this.cycle = function() {
      timer = setInterval(function() {
        isElementInScrollRange() && (index++, self.slideTo( index ) );
      }, this[interval]);
    };
    this.slideTo = function( next ) {
      if (isSliding) return; // when controled via methods, make sure to check again      
      
      var activeItem = this.getActiveIndex(), // the current active
          orientation;
      
      // determine slideDirection first
      if  ( (activeItem < next ) || (activeItem === 0 && next === total -1 ) ) {
        slideDirection = self[direction] = left; // next
      } else if  ( (activeItem > next) || (activeItem === total - 1 && next === 0 ) ) {
        slideDirection = self[direction] = right; // prev
      }
  
      // find the right next index 
      if ( next < 0 ) { next = total - 1; } 
      else if ( next === total ){ next = 0; }
  
      // update index
      index = next;
  
      orientation = slideDirection === left ? 'next' : 'prev'; //determine type
      bootstrapCustomEvent.call(element, slideEvent, component, slides[next]); // here we go with the slide
  
      isSliding = true;
      clearInterval(timer);
      setActivePage( next );
  
      if ( supportTransitions && hasClass(element,'slide') ) {
  
        addClass(slides[next],carouselItem +'-'+ orientation);
        slides[next][offsetWidth];
        addClass(slides[next],carouselItem +'-'+ slideDirection);
        addClass(slides[activeItem],carouselItem +'-'+ slideDirection);
  
        one(slides[next], transitionEndEvent, function(e) {
          var timeout = e[target] !== slides[next] ? e.elapsedTime*1000+100 : 20;
          
          isSliding && setTimeout(function(){
            isSliding = false;
  
            addClass(slides[next],active);
            removeClass(slides[activeItem],active);
  
            removeClass(slides[next],carouselItem +'-'+ orientation);
            removeClass(slides[next],carouselItem +'-'+ slideDirection);
            removeClass(slides[activeItem],carouselItem +'-'+ slideDirection);
  
            bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);
  
            if ( !DOC.hidden && self[interval] && !hasClass(element,paused) ) {
              self.cycle();
            }
          }, timeout);
        });
  
      } else {
        addClass(slides[next],active);
        slides[next][offsetWidth];
        removeClass(slides[activeItem],active);
        setTimeout(function() {
          isSliding = false;
          if ( self[interval] && !hasClass(element,paused) ) {
            self.cycle();
          }
          bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);
        }, 100 );
      }
    };
    this.getActiveIndex = function () {
      return slides[indexOf](getElementsByClassName(element,carouselItem+' active')[0]) || 0;
    };
  
    // init
    if ( !(stringCarousel in element ) ) { // prevent adding event handlers twice
  
      if ( self[pause] && self[interval] ) {
        on( element, mouseHover[0], pauseHandler );
        on( element, mouseHover[1], resumeHandler );
        on( element, 'touchstart', pauseHandler );
        on( element, 'touchend', resumeHandler );
      }
    
      rightArrow && on( rightArrow, clickEvent, controlsHandler );
      leftArrow && on( leftArrow, clickEvent, controlsHandler );
    
      indicator && on( indicator, clickEvent, indicatorHandler );
      self[keyboard] === true && on( globalObject, keydownEvent, keyHandler );
    }
    if (self.getActiveIndex()<0) {
      slides[length] && addClass(slides[0],active);
      indicators[length] && setActivePage(0);
    }
  
    if ( self[interval] ){ self.cycle(); }
    element[stringCarousel] = self;
  };
  
  // CAROUSEL DATA API
  // =================
  supports[push]( [ stringCarousel, Carousel, '['+dataRide+'="carousel"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | Collapse
  -----------------------------------------------*/
  
  // COLLAPSE DEFINITION
  // ===================
  var Collapse = function( element, options ) {
  
    // initialization element
    element = queryElement(element);
  
    // set options
    options = options || {};
  
    // event targets and constants
    var accordion = null, collapse = null, self = this, 
      accordionData = element[getAttribute]('data-parent'),
      activeCollapse, activeElement,
  
      // component strings
      component = 'collapse',
      collapsed = 'collapsed',
      isAnimating = 'isAnimating',
  
      // private methods
      openAction = function(collapseElement,toggle) {
        bootstrapCustomEvent.call(collapseElement, showEvent, component);
        collapseElement[isAnimating] = true;
        addClass(collapseElement,collapsing);
        removeClass(collapseElement,component);
        collapseElement[style][height] = collapseElement[scrollHeight] + 'px';
        
        emulateTransitionEnd(collapseElement, function() {
          collapseElement[isAnimating] = false;
          collapseElement[setAttribute](ariaExpanded,'true');
          toggle[setAttribute](ariaExpanded,'true');
          removeClass(collapseElement,collapsing);
          addClass(collapseElement, component);
          addClass(collapseElement,showClass);
          collapseElement[style][height] = '';
          bootstrapCustomEvent.call(collapseElement, shownEvent, component);
        });
      },
      closeAction = function(collapseElement,toggle) {
        bootstrapCustomEvent.call(collapseElement, hideEvent, component);
        collapseElement[isAnimating] = true;
        collapseElement[style][height] = collapseElement[scrollHeight] + 'px'; // set height first
        removeClass(collapseElement,component);
        removeClass(collapseElement,showClass);
        addClass(collapseElement,collapsing);
        collapseElement[offsetWidth]; // force reflow to enable transition
        collapseElement[style][height] = '0px';
        
        emulateTransitionEnd(collapseElement, function() {
          collapseElement[isAnimating] = false;
          collapseElement[setAttribute](ariaExpanded,'false');
          toggle[setAttribute](ariaExpanded,'false');
          removeClass(collapseElement,collapsing);
          addClass(collapseElement,component);
          collapseElement[style][height] = '';
          bootstrapCustomEvent.call(collapseElement, hiddenEvent, component);
        });
      },
      getTarget = function() {
        var href = element.href && element[getAttribute]('href'),
          parent = element[getAttribute](dataTarget),
          id = href || ( parent && parent.charAt(0) === '#' ) && parent;
        return id && queryElement(id);
      };
    
    // public methods
    this.toggle = function(e) {
      e[preventDefault]();
      if (!hasClass(collapse,showClass)) { self.show(); } 
      else { self.hide(); }
    };
    this.hide = function() {
      if ( collapse[isAnimating] ) return;    
      closeAction(collapse,element);
      addClass(element,collapsed);
    };
    this.show = function() {
      if ( accordion ) {
        activeCollapse = queryElement('.'+component+'.'+showClass,accordion);
        activeElement = activeCollapse && (queryElement('['+dataToggle+'="'+component+'"]['+dataTarget+'="#'+activeCollapse.id+'"]',accordion)
                      || queryElement('['+dataToggle+'="'+component+'"][href="#'+activeCollapse.id+'"]',accordion) );
      }
  
      if ( !collapse[isAnimating] || activeCollapse && !activeCollapse[isAnimating] ) {
        if ( activeElement && activeCollapse !== collapse ) {
          closeAction(activeCollapse,activeElement); 
          addClass(activeElement,collapsed);
        }
        openAction(collapse,element);
        removeClass(element,collapsed);
      }
    };
  
    // init
    if ( !(stringCollapse in element ) ) { // prevent adding event handlers twice
      on(element, clickEvent, self.toggle);
    }
    collapse = getTarget();
    collapse[isAnimating] = false;  // when true it will prevent click handlers  
    accordion = queryElement(options.parent) || accordionData && getClosest(element, accordionData);
    element[stringCollapse] = self;
  };
  
  // COLLAPSE DATA API
  // =================
  supports[push]( [ stringCollapse, Collapse, '['+dataToggle+'="collapse"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | Dropdown
  ----------------------------------------------*/
  
  // DROPDOWN DEFINITION
  // ===================
  var Dropdown = function( element, option ) {
      
    // initialization element
    element = queryElement(element);
  
    // set option
    this.persist = option === true || element[getAttribute]('data-persist') === 'true' || false;
  
    // constants, event targets, strings
    var self = this, children = 'children',
      parent = element[parentNode],
      component = 'dropdown', open = 'open',
      relatedTarget = null,
      menu = queryElement('.dropdown-menu', parent),
      menuItems = (function(){
        var set = menu[children], newSet = [];
        for ( var i=0; i<set[length]; i++ ){
          set[i][children][length] && (set[i][children][0].tagName === 'A' && newSet[push](set[i][children][0]));
          set[i].tagName === 'A' && newSet[push](set[i]);
        }
        return newSet;
      })(),
  
      // preventDefault on empty anchor links
      preventEmptyAnchor = function(anchor){
        (anchor.href && anchor.href.slice(-1) === '#' || anchor[parentNode] && anchor[parentNode].href 
          && anchor[parentNode].href.slice(-1) === '#') && this[preventDefault]();    
      },
  
      // toggle dismissible events
      toggleDismiss = function(){
        var type = element[open] ? on : off;
        type(DOC, clickEvent, dismissHandler); 
        type(DOC, keydownEvent, preventScroll);
        type(DOC, keyupEvent, keyHandler);
      },
  
      // handlers
      dismissHandler = function(e) {
        var eventTarget = e[target], hasData = eventTarget && (stringDropdown in eventTarget || stringDropdown in eventTarget[parentNode]);
        if ( (eventTarget === menu || menu[contains](eventTarget)) && (self.persist || hasData) ) { return; }
        else {
          relatedTarget = eventTarget === element || element[contains](eventTarget) ? element : null;
          hide();
        }
        preventEmptyAnchor.call(e,eventTarget);
      },
      clickHandler = function(e) {
        relatedTarget = element;
        show();
        preventEmptyAnchor.call(e,e[target]);
      },
      preventScroll = function(e){
        var key = e.which || e.keyCode;
        if( key === 38 || key === 40 ) { e[preventDefault](); }
      },
      keyHandler = function(e){
        var key = e.which || e.keyCode,
          activeItem = DOC.activeElement,
          idx = menuItems[indexOf](activeItem),
          isSameElement = activeItem === element,
          isInsideMenu = menu[contains](activeItem),
          isMenuItem = activeItem[parentNode] === menu || activeItem[parentNode][parentNode] === menu;          
  
        if ( isMenuItem || isSameElement ) { // navigate up | down
          idx = isSameElement ? 0 
                              : key === 38 ? (idx>1?idx-1:0)
                              : key === 40 ? (idx<menuItems[length]-1?idx+1:idx) : idx;
          menuItems[idx] && setFocus(menuItems[idx]);
        }
        if ( (menuItems[length] && isMenuItem // menu has items
              || !menuItems[length] && (isInsideMenu || isSameElement)  // menu might be a form
              || !isInsideMenu ) // or the focused element is not in the menu at all
              && element[open] && key === 27  // menu must be open
        ) {
          self.toggle();
          relatedTarget = null;
        }
      },
  
      // private methods
      show = function() {
        bootstrapCustomEvent.call(parent, showEvent, component, relatedTarget);
        addClass(menu,showClass);
        addClass(parent,showClass);
        menu[setAttribute](ariaExpanded,true);
        bootstrapCustomEvent.call(parent, shownEvent, component, relatedTarget);
        element[open] = true;
        off(element, clickEvent, clickHandler);
        setTimeout(function(){
          setFocus( menu[getElementsByTagName]('INPUT')[0] || element ); // focus the first input item | element
          toggleDismiss();
        },1);
      },
      hide = function() {
        bootstrapCustomEvent.call(parent, hideEvent, component, relatedTarget);
        removeClass(menu,showClass);
        removeClass(parent,showClass);
        menu[setAttribute](ariaExpanded,false);
        bootstrapCustomEvent.call(parent, hiddenEvent, component, relatedTarget);
        element[open] = false;
        toggleDismiss();
        setFocus(element);
        setTimeout(function(){ on(element, clickEvent, clickHandler); },1);
      };
  
    // set initial state to closed
    element[open] = false;
  
    // public methods
    this.toggle = function() {
      if (hasClass(parent,showClass) && element[open]) { hide(); } 
      else { show(); }
    };
  
    // init
    if ( !(stringDropdown in element) ) { // prevent adding event handlers twice
      !tabindex in menu && menu[setAttribute](tabindex, '0'); // Fix onblur on Chrome | Safari
      on(element, clickEvent, clickHandler);
    }
  
    element[stringDropdown] = self;
  };
  
  // DROPDOWN DATA API
  // =================
  supports[push]( [stringDropdown, Dropdown, '['+dataToggle+'="dropdown"]'] );
  
  
  /* Native Javascript for Bootstrap 4 | Modal
  -------------------------------------------*/
  
  // MODAL DEFINITION
  // ===============
  var Modal = function(element, options) { // element can be the modal/triggering button
  
    // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)
    element = queryElement(element);
  
    // determine modal, triggering element
    var btnCheck = element[getAttribute](dataTarget)||element[getAttribute]('href'),
      checkModal = queryElement( btnCheck ),
      modal = hasClass(element,'modal') ? element : checkModal,
      overlayDelay,
  
      // strings
      component = 'modal',
      staticString = 'static',
      paddingLeft = 'paddingLeft',
      paddingRight = 'paddingRight',
      modalBackdropString = 'modal-backdrop';
  
    if ( hasClass(element,'modal') ) { element = null; } // modal is now independent of it's triggering element
  
    if ( !modal ) { return; } // invalidate
  
    // set options
    options = options || {};
  
    this[keyboard] = options[keyboard] === false || modal[getAttribute](dataKeyboard) === 'false' ? false : true;
    this[backdrop] = options[backdrop] === staticString || modal[getAttribute](databackdrop) === staticString ? staticString : true;
    this[backdrop] = options[backdrop] === false || modal[getAttribute](databackdrop) === 'false' ? false : this[backdrop];
    this[content]  = options[content]; // JavaScript only
  
    // bind, constants, event targets and other vars
    var self = this, relatedTarget = null,
      bodyIsOverflowing, modalIsOverflowing, scrollbarWidth, overlay,
  
      // also find fixed-top / fixed-bottom items
      fixedItems = getElementsByClassName(HTML,fixedTop).concat(getElementsByClassName(HTML,fixedBottom)),
  
      // private methods
      getWindowWidth = function() {
        var htmlRect = HTML[getBoundingClientRect]();
        return globalObject[innerWidth] || (htmlRect[right] - Math.abs(htmlRect[left]));
      },
      setScrollbar = function () {
        var bodyStyle = globalObject[getComputedStyle](DOC[body]),
            bodyPad = parseInt((bodyStyle[paddingRight]), 10), itemPad;
        if (bodyIsOverflowing) {
          DOC[body][style][paddingRight] = (bodyPad + scrollbarWidth) + 'px';
          if (fixedItems[length]){
            for (var i = 0; i < fixedItems[length]; i++) {
              itemPad = globalObject[getComputedStyle](fixedItems[i])[paddingRight];
              fixedItems[i][style][paddingRight] = ( parseInt(itemPad) + scrollbarWidth) + 'px';
            }
          }
        }
      },
      resetScrollbar = function () {
        DOC[body][style][paddingRight] = '';
        if (fixedItems[length]){
          for (var i = 0; i < fixedItems[length]; i++) {
            fixedItems[i][style][paddingRight] = '';
          }
        }
      },
      measureScrollbar = function () { // thx walsh
        var scrollDiv = DOC[createElement]('div'), scrollBarWidth;
        scrollDiv.className = component+'-scrollbar-measure'; // this is here to stay
        DOC[body][appendChild](scrollDiv);
        scrollBarWidth = scrollDiv[offsetWidth] - scrollDiv[clientWidth];
        DOC[body].removeChild(scrollDiv);
        return scrollBarWidth;
      },
      checkScrollbar = function () {
        bodyIsOverflowing = DOC[body][clientWidth] < getWindowWidth();
        modalIsOverflowing = modal[scrollHeight] > HTML[clientHeight];
        scrollbarWidth = measureScrollbar();
      },
      adjustDialog = function () {
        modal[style][paddingLeft] = !bodyIsOverflowing && modalIsOverflowing ? scrollbarWidth + 'px' : '';
        modal[style][paddingRight] = bodyIsOverflowing && !modalIsOverflowing ? scrollbarWidth + 'px' : '';
      },
      resetAdjustments = function () {
        modal[style][paddingLeft] = '';
        modal[style][paddingRight] = '';
      },
      createOverlay = function() {
        modalOverlay = 1;        
        
        var newOverlay = DOC[createElement]('div');
        overlay = queryElement('.'+modalBackdropString);
  
        if ( overlay === null ) {
          newOverlay[setAttribute]('class',modalBackdropString+' fade');
          overlay = newOverlay;
          DOC[body][appendChild](overlay);
        }
      },
      removeOverlay = function() {
        overlay = queryElement('.'+modalBackdropString);
        if ( overlay && overlay !== null && typeof overlay === 'object' ) {
          modalOverlay = 0;        
          DOC[body].removeChild(overlay); overlay = null;
        }
        bootstrapCustomEvent.call(modal, hiddenEvent, component);      
      },
      keydownHandlerToggle = function() {
        if (hasClass(modal,showClass)) {
          on(DOC, keydownEvent, keyHandler);
        } else {
          off(DOC, keydownEvent, keyHandler);
        }
      },
      resizeHandlerToggle = function() {
        if (hasClass(modal,showClass)) {
          on(globalObject, resizeEvent, self.update);
        } else {
          off(globalObject, resizeEvent, self.update);
        }
      },
      dismissHandlerToggle = function() {
        if (hasClass(modal,showClass)) {
          on(modal, clickEvent, dismissHandler);
        } else {
          off(modal, clickEvent, dismissHandler);
        }
      },
      // triggers
      triggerShow = function() {
        setFocus(modal);
        bootstrapCustomEvent.call(modal, shownEvent, component, relatedTarget);
      },
      triggerHide = function() {
        modal[style].display = '';
        element && (setFocus(element));
        
        (function(){
          if (!getElementsByClassName(DOC,component+' '+showClass)[0]) {
            resetAdjustments();
            resetScrollbar();
            removeClass(DOC[body],component+'-open');
            overlay && hasClass(overlay,'fade') ? (removeClass(overlay,showClass), emulateTransitionEnd(overlay,removeOverlay)) 
            : removeOverlay();
  
            resizeHandlerToggle();
            dismissHandlerToggle();
            keydownHandlerToggle();
          }
        }());
      },
      // handlers
      clickHandler = function(e) {
        var clickTarget = e[target];
        clickTarget = clickTarget[hasAttribute](dataTarget) || clickTarget[hasAttribute]('href') ? clickTarget : clickTarget[parentNode];
        if ( clickTarget === element && !hasClass(modal,showClass) ) {
          modal.modalTrigger = element;
          relatedTarget = element;
          self.show();
          e[preventDefault]();
        }
      },
      keyHandler = function(e) {
        if (self[keyboard] && e.which == 27 && hasClass(modal,showClass)) {
          self.hide();
        }
      },
      dismissHandler = function(e) {
        var clickTarget = e[target];
        if ( hasClass(modal,showClass) && (clickTarget[parentNode][getAttribute](dataDismiss) === component
            || clickTarget[getAttribute](dataDismiss) === component
            || (clickTarget === modal && self[backdrop] !== staticString) ) ) {
          self.hide(); relatedTarget = null;
          e[preventDefault]();
        }
      };
  
    // public methods
    this.toggle = function() {
      if ( hasClass(modal,showClass) ) {this.hide();} else {this.show();}
    };
    this.show = function() {
      bootstrapCustomEvent.call(modal, showEvent, component, relatedTarget);
  
      // we elegantly hide any opened modal
      var currentOpen = getElementsByClassName(DOC,component+' '+showClass)[0];
      currentOpen && currentOpen !== modal && currentOpen.modalTrigger[stringModal].hide();
  
      if ( this[backdrop] ) {
        !modalOverlay && createOverlay();
      }
  
      if ( overlay && modalOverlay && !hasClass(overlay,showClass)) {
        overlay[offsetWidth]; // force reflow to enable trasition
        overlayDelay = getTransitionDurationFromElement(overlay);              
        addClass(overlay, showClass);
      }
  
      setTimeout( function() {
        modal[style].display = 'block';
  
        checkScrollbar();
        setScrollbar();
        adjustDialog();
  
        addClass(DOC[body],component+'-open');
        addClass(modal,showClass);
        modal[setAttribute](ariaHidden, false);
        
        resizeHandlerToggle();
        dismissHandlerToggle();
        keydownHandlerToggle();
  
        hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerShow) : triggerShow();
      }, supportTransitions && overlay ? overlayDelay : 0);
    };
    this.hide = function() {
      bootstrapCustomEvent.call(modal, hideEvent, component);
      overlay = queryElement('.'+modalBackdropString);
      overlayDelay = overlay && getTransitionDurationFromElement(overlay);    
  
      removeClass(modal,showClass);
      modal[setAttribute](ariaHidden, true);
  
      setTimeout(function(){
        hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerHide) : triggerHide();
      }, supportTransitions && overlay ? overlayDelay : 0);
    };
    this.setContent = function( content ) {
      queryElement('.'+component+'-content',modal)[innerHTML] = content;
    };
    this.update = function() {
      if (hasClass(modal,showClass)) {
        checkScrollbar();
        setScrollbar();
        adjustDialog();
      }
    };
  
    // init
    // prevent adding event handlers over and over
    // modal is independent of a triggering element
    if ( !!element && !(stringModal in element) ) {
      on(element, clickEvent, clickHandler);
    }
    if ( !!self[content] ) { self.setContent( self[content] ); }
    !!element && (element[stringModal] = self);
  };
  
  // DATA API
  supports[push]( [ stringModal, Modal, '['+dataToggle+'="modal"]' ] );
  
  /* Native Javascript for Bootstrap 4 | Popover
  ----------------------------------------------*/
  
  // POPOVER DEFINITION
  // ==================
  var Popover = function( element, options ) {
  
    // initialization element
    element = queryElement(element);
  
    // set options
    options = options || {};
  
    // DATA API
    var triggerData = element[getAttribute](dataTrigger), // click / hover / focus
        animationData = element[getAttribute](dataAnimation), // true / false
        placementData = element[getAttribute](dataPlacement),
        dismissibleData = element[getAttribute](dataDismissible),
        delayData = element[getAttribute](dataDelay),
        containerData = element[getAttribute](dataContainer),
  
        // internal strings
        component = 'popover',
        template = 'template',
        trigger = 'trigger',
        classString = 'class',
        div = 'div',
        fade = 'fade',
        content = 'content',
        dataContent = 'data-content',
        dismissible = 'dismissible',
        closeBtn = '<button type="button" class="close">×</button>',
  
        // check container
        containerElement = queryElement(options[container]),
        containerDataElement = queryElement(containerData),       
        
        // maybe the element is inside a modal
        modal = getClosest(element,'.modal'),
        
        // maybe the element is inside a fixed navbar
        navbarFixedTop = getClosest(element,'.'+fixedTop),
        navbarFixedBottom = getClosest(element,'.'+fixedBottom);
  
    // set instance options
    this[template] = options[template] ? options[template] : null; // JavaScript only
    this[trigger] = options[trigger] ? options[trigger] : triggerData || hoverEvent;
    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;
    this[placement] = options[placement] ? options[placement] : placementData || top;
    this[delay] = parseInt(options[delay] || delayData) || 200;
    this[dismissible] = options[dismissible] || dismissibleData === 'true' ? true : false;
    this[container] = containerElement ? containerElement 
                    : containerDataElement ? containerDataElement 
                    : navbarFixedTop ? navbarFixedTop
                    : navbarFixedBottom ? navbarFixedBottom
                    : modal ? modal : DOC[body];
    
    // bind, content
    var self = this, 
      titleString = element[getAttribute](dataTitle) || null,
      contentString = element[getAttribute](dataContent) || null;
  
    if ( !contentString && !this[template] ) return; // invalidate
  
    // constants, vars
    var popover = null, timer = 0, placementSetting = this[placement],
      
      // handlers
      dismissibleHandler = function(e) {
        if (popover !== null && e[target] === queryElement('.close',popover)) {
          self.hide();
        }
      },
  
      // private methods
      removePopover = function() {
        self[container].removeChild(popover);
        timer = null; popover = null; 
      },
      createPopover = function() {
        titleString = element[getAttribute](dataTitle); // check content again
        contentString = element[getAttribute](dataContent);
  
        popover = DOC[createElement](div);
  
        // popover arrow
        var popoverArrow = DOC[createElement](div);
        popoverArrow[setAttribute](classString,'arrow');
        popover[appendChild](popoverArrow);
  
        if ( contentString !== null && self[template] === null ) { //create the popover from data attributes
  
          popover[setAttribute]('role','tooltip');
  
          if (titleString !== null) {
            var popoverTitle = DOC[createElement]('h3');
            popoverTitle[setAttribute](classString,component+'-header');
  
            popoverTitle[innerHTML] = self[dismissible] ? titleString + closeBtn : titleString;
            popover[appendChild](popoverTitle);
          }
  
          //set popover content
          var popoverContent = DOC[createElement](div);
          popoverContent[setAttribute](classString,component+'-body');
          popoverContent[innerHTML] = self[dismissible] && titleString === null ? contentString + closeBtn : contentString;
          popover[appendChild](popoverContent);
  
        } else {  // or create the popover from template
          var popoverTemplate = DOC[createElement](div);
          popoverTemplate[innerHTML] = self[template];
          popover[innerHTML] = popoverTemplate.firstChild[innerHTML];
        }
  
        //append to the container
        self[container][appendChild](popover);
        popover[style].display = 'block';
        popover[setAttribute](classString, component+ ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);
      },
      showPopover = function () {
        !hasClass(popover,showClass) && ( addClass(popover,showClass) );
      },
      updatePopover = function() {
        styleTip(element,popover,placementSetting,self[container]);
      },
  
      // event toggle
      dismissHandlerToggle = function(type){
        if (clickEvent == self[trigger] || 'focus' == self[trigger]) {
          !self[dismissible] && type( element, 'blur', self.hide );
        }
        self[dismissible] && type( DOC, clickEvent, dismissibleHandler );     
        type( globalObject, resizeEvent, self.hide );
      },
  
      // triggers
      showTrigger = function() {
        dismissHandlerToggle(on);
        bootstrapCustomEvent.call(element, shownEvent, component);
      },
      hideTrigger = function() {
        dismissHandlerToggle(off);
        removePopover();
        bootstrapCustomEvent.call(element, hiddenEvent, component);
      };
  
    // public methods / handlers
    this.toggle = function() {
      if (popover === null) { self.show(); } 
      else { self.hide(); }
    };
    this.show = function() {
      clearTimeout(timer);
      timer = setTimeout( function() {
        if (popover === null) {
          placementSetting = self[placement]; // we reset placement in all cases
          createPopover();
          updatePopover();
          showPopover();
          bootstrapCustomEvent.call(element, showEvent, component);
          !!self[animation] ? emulateTransitionEnd(popover, showTrigger) : showTrigger();
        }
      }, 20 );
    };
    this.hide = function() {
      clearTimeout(timer);
      timer = setTimeout( function() {
        if (popover && popover !== null && hasClass(popover,showClass)) {
          bootstrapCustomEvent.call(element, hideEvent, component);
          removeClass(popover,showClass);
          !!self[animation] ? emulateTransitionEnd(popover, hideTrigger) : hideTrigger();
        }
      }, self[delay] );
    };
  
    // init
    if ( !(stringPopover in element) ) { // prevent adding event handlers twice
      if (self[trigger] === hoverEvent) {
        on( element, mouseHover[0], self.show );
        if (!self[dismissible]) { on( element, mouseHover[1], self.hide ); }
      } else if (clickEvent == self[trigger] || 'focus' == self[trigger]) {
        on( element, self[trigger], self.toggle );
      }
    }
    element[stringPopover] = self;
  };
  
  // POPOVER DATA API
  // ================
  supports[push]( [ stringPopover, Popover, '['+dataToggle+'="popover"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | ScrollSpy
  -----------------------------------------------*/
  
  // SCROLLSPY DEFINITION
  // ====================
  var ScrollSpy = function(element, options) {
  
    // initialization element, the element we spy on
    element = queryElement(element); 
  
    // DATA API
    var targetData = queryElement(element[getAttribute](dataTarget)),
        offsetData = element[getAttribute]('data-offset');
  
    // set options
    options = options || {};
    if ( !options[target] && !targetData ) { return; } // invalidate
  
    // event targets, constants
    var self = this, spyTarget = options[target] && queryElement(options[target]) || targetData,
        links = spyTarget && spyTarget[getElementsByTagName]('A'),
        offset = parseInt(offsetData || options['offset']) || 10,      
        items = [], targetItems = [], scrollOffset,
        scrollTarget = element[offsetHeight] < element[scrollHeight] ? element : globalObject, // determine which is the real scrollTarget
        isWindow = scrollTarget === globalObject;  
  
    // populate items and targets
    for (var i=0, il=links[length]; i<il; i++) {
      var href = links[i][getAttribute]('href'), 
          targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#' && queryElement(href);
      if ( !!targetItem ) {
        items[push](links[i]);
        targetItems[push](targetItem);
      }
    }
  
    // private methods
    var updateItem = function(index) {
        var item = items[index],
          targetItem = targetItems[index], // the menu item targets this element
          dropdown = item[parentNode][parentNode],
          dropdownLink = hasClass(dropdown,'dropdown') && dropdown[getElementsByTagName]('A')[0],
          targetRect = isWindow && targetItem[getBoundingClientRect](),
  
          isActive = hasClass(item,active) || false,
  
          topEdge = (isWindow ? targetRect[top] + scrollOffset : targetItem[offsetTop]) - offset,
          bottomEdge = isWindow ? targetRect[bottom] + scrollOffset - offset : targetItems[index+1] ? targetItems[index+1][offsetTop] - offset : element[scrollHeight],
  
          inside = scrollOffset >= topEdge && bottomEdge > scrollOffset;
  
        if ( !isActive && inside ) {
          if ( !hasClass(item,active) ) {
            addClass(item,active);
            if (dropdownLink && !hasClass(dropdownLink,active) ) {
              addClass(dropdownLink,active);
            }
            bootstrapCustomEvent.call(element, 'activate', 'scrollspy', items[index]);
          }
        } else if ( !inside ) {
          if ( hasClass(item,active) ) {
            removeClass(item,active);
            if (dropdownLink && hasClass(dropdownLink,active) && !getElementsByClassName(item[parentNode],active).length  ) {
              removeClass(dropdownLink,active);
            }
          }
        } else if ( !inside && !isActive || isActive && inside ) {
          return;
        }
      },
      updateItems = function(){
        scrollOffset = isWindow ? getScroll().y : element[scrollTop];
        for (var index=0, itl=items[length]; index<itl; index++) {
          updateItem(index)
        }
      };
  
    // public method
    this.refresh = function () {
      updateItems();
    }
  
    // init
    if ( !(stringScrollSpy in element) ) { // prevent adding event handlers twice
      on( scrollTarget, scrollEvent, self.refresh );
      on( globalObject, resizeEvent, self.refresh ); 
    }
    self.refresh();
    element[stringScrollSpy] = self;
  };
  
  // SCROLLSPY DATA API
  // ==================
  supports[push]( [ stringScrollSpy, ScrollSpy, '['+dataSpy+'="scroll"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | Tab
  -----------------------------------------*/
  
  // TAB DEFINITION
  // ==============
  var Tab = function( element, options ) {
  
    // initialization element
    element = queryElement(element);
  
    // DATA API
    var heightData = element[getAttribute](dataHeight),
      
        // strings
        component = 'tab', height = 'height', float = 'float', isAnimating = 'isAnimating';
        
    // set options
    options = options || {};
    this[height] = supportTransitions ? (options[height] || heightData === 'true') : false;
  
    // bind, event targets
    var self = this, next,
      tabs = getClosest(element,'.nav'),
      tabsContentContainer = false,
      dropdown = tabs && queryElement('.dropdown-toggle',tabs),
      activeTab, activeContent, nextContent, containerHeight, equalContents, nextHeight,
      
      // trigger
      triggerEnd = function(){
        tabsContentContainer[style][height] = '';
        removeClass(tabsContentContainer,collapsing);
        tabs[isAnimating] = false;
      },
      triggerShow = function() {
        if (tabsContentContainer) { // height animation
          if ( equalContents ) {
            triggerEnd();
          } else {
            setTimeout(function(){ // enables height animation
              tabsContentContainer[style][height] = nextHeight + 'px'; // height animation
              tabsContentContainer[offsetWidth];
              emulateTransitionEnd(tabsContentContainer, triggerEnd);
            },50);
          }
        } else {
          tabs[isAnimating] = false; 
        }
        bootstrapCustomEvent.call(next, shownEvent, component, activeTab);
      },
      triggerHide = function() {
        if (tabsContentContainer) {
          activeContent[style][float] = left;
          nextContent[style][float] = left;        
          containerHeight = activeContent[scrollHeight];
        }
          
        addClass(nextContent,active);
        bootstrapCustomEvent.call(next, showEvent, component, activeTab);
  
        removeClass(activeContent,active);
        bootstrapCustomEvent.call(activeTab, hiddenEvent, component, next);
        
        if (tabsContentContainer) {
          nextHeight = nextContent[scrollHeight];
          equalContents = nextHeight === containerHeight;
          addClass(tabsContentContainer,collapsing);
          tabsContentContainer[style][height] = containerHeight + 'px'; // height animation
          tabsContentContainer[offsetHeight];
          activeContent[style][float] = '';
          nextContent[style][float] = '';
        }
  
        if ( hasClass(nextContent, 'fade') ) {
          setTimeout(function(){
            addClass(nextContent,showClass);
            emulateTransitionEnd(nextContent,triggerShow);
          },20);
        } else { triggerShow(); }        
      };
  
    if (!tabs) return; // invalidate
  
    // set default animation state
    tabs[isAnimating] = false;    
          
    // private methods
    var getActiveTab = function() {
        var activeTabs = getElementsByClassName(tabs,active), activeTab;
        if ( activeTabs[length] === 1 && !hasClass(activeTabs[0][parentNode],'dropdown') ) {
          activeTab = activeTabs[0];
        } else if ( activeTabs[length] > 1 ) {
          activeTab = activeTabs[activeTabs[length]-1];
        }
        return activeTab;
      },
      getActiveContent = function() {
        return queryElement(getActiveTab()[getAttribute]('href'));
      },
      // handler 
      clickHandler = function(e) {
        var href = e[target][getAttribute]('href');
        e[preventDefault]();
        next = e[target][getAttribute](dataToggle) === component || (href && href.charAt(0) === '#')
             ? e[target] : e[target][parentNode]; // allow for child elements like icons to use the handler
        !tabs[isAnimating] && !hasClass(next,active) && self.show();
      };
  
    // public method
    this.show = function() { // the tab we clicked is now the next tab
      next = next || element;
      nextContent = queryElement(next[getAttribute]('href')); //this is the actual object, the next tab content to activate
      activeTab = getActiveTab(); 
      activeContent = getActiveContent();
      
      tabs[isAnimating] = true;
      removeClass(activeTab,active);
      addClass(next,active);
  
      if ( dropdown ) {
        if ( !hasClass(element[parentNode],'dropdown-menu') ) {
          if (hasClass(dropdown,active)) removeClass(dropdown,active);
        } else {
          if (!hasClass(dropdown,active)) addClass(dropdown,active);
        }
      }
      
      bootstrapCustomEvent.call(activeTab, hideEvent, component, next);
  
      if (hasClass(activeContent, 'fade')) {
        removeClass(activeContent,showClass);
        emulateTransitionEnd(activeContent, triggerHide);
      } else { triggerHide(); }
    };
  
    // init
    if ( !(stringTab in element) ) { // prevent adding event handlers twice
      on(element, clickEvent, clickHandler);
    }
    if (self[height]) { tabsContentContainer = getActiveContent()[parentNode]; }
    element[stringTab] = self;
  };
  
  // TAB DATA API
  // ============
  supports[push]( [ stringTab, Tab, '['+dataToggle+'="tab"]' ] );
  
  
  /* Native Javascript for Bootstrap 4 | Tooltip
  ---------------------------------------------*/
  
  // TOOLTIP DEFINITION
  // ==================
  var Tooltip = function( element,options ) {
  
    // initialization element
    element = queryElement(element);
  
    // set options
    options = options || {};
  
    // DATA API
    var animationData = element[getAttribute](dataAnimation),
        placementData = element[getAttribute](dataPlacement),
        delayData = element[getAttribute](dataDelay),
        containerData = element[getAttribute](dataContainer),
        
        // strings
        component = 'tooltip',
        classString = 'class',
        title = 'title',
        fade = 'fade',
        div = 'div',
  
        // check container
        containerElement = queryElement(options[container]),
        containerDataElement = queryElement(containerData),      
  
        // maybe the element is inside a modal
        modal = getClosest(element,'.modal'),
        
        // maybe the element is inside a fixed navbar
        navbarFixedTop = getClosest(element,'.'+fixedTop),
        navbarFixedBottom = getClosest(element,'.'+fixedBottom);
  
    // set instance options
    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;
    this[placement] = options[placement] ? options[placement] : placementData || top;
    this[delay] = parseInt(options[delay] || delayData) || 200;
    this[container] = containerElement ? containerElement 
                    : containerDataElement ? containerDataElement
                    : navbarFixedTop ? navbarFixedTop
                    : navbarFixedBottom ? navbarFixedBottom
                    : modal ? modal : DOC[body];
  
    // bind, event targets, title and constants
    var self = this, timer = 0, placementSetting = this[placement], tooltip = null,
      titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle);
  
    if ( !titleString || titleString == "" ) return; // invalidate
  
    // private methods
    var removeToolTip = function() {
        self[container].removeChild(tooltip);
        tooltip = null; timer = null;
      },
      createToolTip = function() {
        titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle); // read the title again
        if ( !titleString || titleString == "" ) return false; // invalidate
        tooltip = DOC[createElement](div);
        tooltip[setAttribute]('role',component);
  
        // tooltip arrow
        var tooltipArrow = DOC[createElement](div);
        tooltipArrow[setAttribute](classString,'arrow');
        tooltip[appendChild](tooltipArrow);
    
        var tooltipInner = DOC[createElement](div);
        tooltipInner[setAttribute](classString,component+'-inner');
        tooltip[appendChild](tooltipInner);
        tooltipInner[innerHTML] = titleString;
  
        self[container][appendChild](tooltip);
        tooltip[setAttribute](classString, component + ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);
      },
      updateTooltip = function () {
        styleTip(element,tooltip,placementSetting,self[container]);
      },
      showTooltip = function () {
        !hasClass(tooltip,showClass) && ( addClass(tooltip,showClass) );
      },
      // triggers
      showTrigger = function() {
        on( globalObject, resizeEvent, self.hide );
        bootstrapCustomEvent.call(element, shownEvent, component);
      },
      hideTrigger = function() {
        off( globalObject, resizeEvent, self.hide );
        removeToolTip();
        bootstrapCustomEvent.call(element, hiddenEvent, component);
      };
  
    // public methods
    this.show = function() {
      clearTimeout(timer);
      timer = setTimeout( function() {
        if (tooltip === null) {
          placementSetting = self[placement]; // we reset placement in all cases
          if(createToolTip() == false) return;
          updateTooltip();
          showTooltip();
          bootstrapCustomEvent.call(element, showEvent, component);
          !!self[animation] ? emulateTransitionEnd(tooltip, showTrigger) : showTrigger();
        }
      }, 20 );
    };
    this.hide = function() {
      clearTimeout(timer);
      timer = setTimeout( function() {
        if (tooltip && hasClass(tooltip,showClass)) {
          bootstrapCustomEvent.call(element, hideEvent, component);
          removeClass(tooltip,showClass);
          !!self[animation] ? emulateTransitionEnd(tooltip, hideTrigger) : hideTrigger();
        }
      }, self[delay]);
    };
    this.toggle = function() {
      if (!tooltip) { self.show(); } 
      else { self.hide(); }
    };
  
    // init
    if ( !(stringTooltip in element) ) { // prevent adding event handlers twice
      element[setAttribute](dataOriginalTitle,titleString);
      element.removeAttribute(title);
      on(element, mouseHover[0], self.show);
      on(element, mouseHover[1], self.hide);
    }
    element[stringTooltip] = self;
  };
  
  // TOOLTIP DATA API
  // =================
  supports[push]( [ stringTooltip, Tooltip, '['+dataToggle+'="tooltip"]' ] );
  
  
  
  /* Native Javascript for Bootstrap 4 | Initialize Data API
  --------------------------------------------------------*/
  var initializeDataAPI = function( constructor, collection ){
      for (var i=0, l=collection[length]; i<l; i++) {
        new constructor(collection[i]);
      }
    },
    initCallback = BSN.initCallback = function(lookUp){
      lookUp = lookUp || DOC;
      for (var i=0, l=supports[length]; i<l; i++) {
        initializeDataAPI( supports[i][1], lookUp[querySelectorAll] (supports[i][2]) );
      }
    };
  
  // bulk initialize all components
  DOC[body] ? initCallback() : on( DOC, 'DOMContentLoaded', function(){ initCallback(); } );
  
  return {
    Alert: Alert,
    Button: Button,
    Carousel: Carousel,
    Collapse: Collapse,
    Dropdown: Dropdown,
    Modal: Modal,
    Popover: Popover,
    ScrollSpy: ScrollSpy,
    Tab: Tab,
    Tooltip: Tooltip
  };
}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/filesize/lib/filesize.js":
/*!***********************************************!*\
  !*** ./node_modules/filesize/lib/filesize.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

/**
 * filesize
 *
 * @copyright 2018 Jason Mulligan <jason.mulligan@avoidwork.com>
 * @license BSD-3-Clause
 * @version 3.6.1
 */
(function (global) {
	var b = /^(b|B)$/,
	    symbol = {
		iec: {
			bits: ["b", "Kib", "Mib", "Gib", "Tib", "Pib", "Eib", "Zib", "Yib"],
			bytes: ["B", "KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"]
		},
		jedec: {
			bits: ["b", "Kb", "Mb", "Gb", "Tb", "Pb", "Eb", "Zb", "Yb"],
			bytes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"]
		}
	},
	    fullform = {
		iec: ["", "kibi", "mebi", "gibi", "tebi", "pebi", "exbi", "zebi", "yobi"],
		jedec: ["", "kilo", "mega", "giga", "tera", "peta", "exa", "zetta", "yotta"]
	};

	/**
  * filesize
  *
  * @method filesize
  * @param  {Mixed}   arg        String, Int or Float to transform
  * @param  {Object}  descriptor [Optional] Flags
  * @return {String}             Readable file size String
  */
	function filesize(arg) {
		var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		var result = [],
		    val = 0,
		    e = void 0,
		    base = void 0,
		    bits = void 0,
		    ceil = void 0,
		    full = void 0,
		    fullforms = void 0,
		    neg = void 0,
		    num = void 0,
		    output = void 0,
		    round = void 0,
		    unix = void 0,
		    separator = void 0,
		    spacer = void 0,
		    standard = void 0,
		    symbols = void 0;

		if (isNaN(arg)) {
			throw new Error("Invalid arguments");
		}

		bits = descriptor.bits === true;
		unix = descriptor.unix === true;
		base = descriptor.base || 2;
		round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;
		separator = descriptor.separator !== void 0 ? descriptor.separator || "" : "";
		spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? "" : " ";
		symbols = descriptor.symbols || descriptor.suffixes || {};
		standard = base === 2 ? descriptor.standard || "jedec" : "jedec";
		output = descriptor.output || "string";
		full = descriptor.fullform === true;
		fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];
		e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;
		num = Number(arg);
		neg = num < 0;
		ceil = base > 2 ? 1000 : 1024;

		// Flipping a negative number to determine the size
		if (neg) {
			num = -num;
		}

		// Determining the exponent
		if (e === -1 || isNaN(e)) {
			e = Math.floor(Math.log(num) / Math.log(ceil));

			if (e < 0) {
				e = 0;
			}
		}

		// Exceeding supported length, time to reduce & multiply
		if (e > 8) {
			e = 8;
		}

		// Zero is now a special case because bytes divide by 1
		if (num === 0) {
			result[0] = 0;
			result[1] = unix ? "" : symbol[standard][bits ? "bits" : "bytes"][e];
		} else {
			val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));

			if (bits) {
				val = val * 8;

				if (val >= ceil && e < 8) {
					val = val / ceil;
					e++;
				}
			}

			result[0] = Number(val.toFixed(e > 0 ? round : 0));
			result[1] = base === 10 && e === 1 ? bits ? "kb" : "kB" : symbol[standard][bits ? "bits" : "bytes"][e];

			if (unix) {
				result[1] = standard === "jedec" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, "") : result[1];

				if (b.test(result[1])) {
					result[0] = Math.floor(result[0]);
					result[1] = "";
				}
			}
		}

		// Decorating a 'diff'
		if (neg) {
			result[0] = -result[0];
		}

		// Applying custom symbol
		result[1] = symbols[result[1]] || result[1];

		// Returning Array, Object, or String (default)
		if (output === "array") {
			return result;
		}

		if (output === "exponent") {
			return e;
		}

		if (output === "object") {
			return { value: result[0], suffix: result[1], symbol: result[1] };
		}

		if (full) {
			result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? "bit" : "byte") + (result[0] === 1 ? "" : "s");
		}

		if (separator.length > 0) {
			result[0] = result[0].toString().replace(".", separator);
		}

		return result.join(spacer);
	}

	// Partial application for functional programming
	filesize.partial = function (opt) {
		return function (arg) {
			return filesize(arg, opt);
		};
	};

	// CommonJS, AMD, script tag
	if (true) {
		module.exports = filesize;
	} else {}
})(typeof window !== "undefined" ? window : global);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/jed/jed.js":
/*!*********************************!*\
  !*** ./node_modules/jed/jed.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @preserve jed.js https://github.com/SlexAxton/Jed
 */
/*
-----------
A gettext compatible i18n library for modern JavaScript Applications

by Alex Sexton - AlexSexton [at] gmail - @SlexAxton

MIT License

A jQuery Foundation project - requires CLA to contribute -
https://contribute.jquery.org/CLA/



Jed offers the entire applicable GNU gettext spec'd set of
functions, but also offers some nicer wrappers around them.
The api for gettext was written for a language with no function
overloading, so Jed allows a little more of that.

Many thanks to Joshua I. Miller - unrtst@cpan.org - who wrote
gettext.js back in 2008. I was able to vet a lot of my ideas
against his. I also made sure Jed passed against his tests
in order to offer easy upgrades -- jsgettext.berlios.de
*/
(function (root, undef) {

  // Set up some underscore-style functions, if you already have
  // underscore, feel free to delete this section, and use it
  // directly, however, the amount of functions used doesn't
  // warrant having underscore as a full dependency.
  // Underscore 1.3.0 was used to port and is licensed
  // under the MIT License by Jeremy Ashkenas.
  var ArrayProto    = Array.prototype,
      ObjProto      = Object.prototype,
      slice         = ArrayProto.slice,
      hasOwnProp    = ObjProto.hasOwnProperty,
      nativeForEach = ArrayProto.forEach,
      breaker       = {};

  // We're not using the OOP style _ so we don't need the
  // extra level of indirection. This still means that you
  // sub out for real `_` though.
  var _ = {
    forEach : function( obj, iterator, context ) {
      var i, l, key;
      if ( obj === null ) {
        return;
      }

      if ( nativeForEach && obj.forEach === nativeForEach ) {
        obj.forEach( iterator, context );
      }
      else if ( obj.length === +obj.length ) {
        for ( i = 0, l = obj.length; i < l; i++ ) {
          if ( i in obj && iterator.call( context, obj[i], i, obj ) === breaker ) {
            return;
          }
        }
      }
      else {
        for ( key in obj) {
          if ( hasOwnProp.call( obj, key ) ) {
            if ( iterator.call (context, obj[key], key, obj ) === breaker ) {
              return;
            }
          }
        }
      }
    },
    extend : function( obj ) {
      this.forEach( slice.call( arguments, 1 ), function ( source ) {
        for ( var prop in source ) {
          obj[prop] = source[prop];
        }
      });
      return obj;
    }
  };
  // END Miniature underscore impl

  // Jed is a constructor function
  var Jed = function ( options ) {
    // Some minimal defaults
    this.defaults = {
      "locale_data" : {
        "messages" : {
          "" : {
            "domain"       : "messages",
            "lang"         : "en",
            "plural_forms" : "nplurals=2; plural=(n != 1);"
          }
          // There are no default keys, though
        }
      },
      // The default domain if one is missing
      "domain" : "messages",
      // enable debug mode to log untranslated strings to the console
      "debug" : false
    };

    // Mix in the sent options with the default options
    this.options = _.extend( {}, this.defaults, options );
    this.textdomain( this.options.domain );

    if ( options.domain && ! this.options.locale_data[ this.options.domain ] ) {
      throw new Error('Text domain set to non-existent domain: `' + options.domain + '`');
    }
  };

  // The gettext spec sets this character as the default
  // delimiter for context lookups.
  // e.g.: context\u0004key
  // If your translation company uses something different,
  // just change this at any time and it will use that instead.
  Jed.context_delimiter = String.fromCharCode( 4 );

  function getPluralFormFunc ( plural_form_string ) {
    return Jed.PF.compile( plural_form_string || "nplurals=2; plural=(n != 1);");
  }

  function Chain( key, i18n ){
    this._key = key;
    this._i18n = i18n;
  }

  // Create a chainable api for adding args prettily
  _.extend( Chain.prototype, {
    onDomain : function ( domain ) {
      this._domain = domain;
      return this;
    },
    withContext : function ( context ) {
      this._context = context;
      return this;
    },
    ifPlural : function ( num, pkey ) {
      this._val = num;
      this._pkey = pkey;
      return this;
    },
    fetch : function ( sArr ) {
      if ( {}.toString.call( sArr ) != '[object Array]' ) {
        sArr = [].slice.call(arguments, 0);
      }
      return ( sArr && sArr.length ? Jed.sprintf : function(x){ return x; } )(
        this._i18n.dcnpgettext(this._domain, this._context, this._key, this._pkey, this._val),
        sArr
      );
    }
  });

  // Add functions to the Jed prototype.
  // These will be the functions on the object that's returned
  // from creating a `new Jed()`
  // These seem redundant, but they gzip pretty well.
  _.extend( Jed.prototype, {
    // The sexier api start point
    translate : function ( key ) {
      return new Chain( key, this );
    },

    textdomain : function ( domain ) {
      if ( ! domain ) {
        return this._textdomain;
      }
      this._textdomain = domain;
    },

    gettext : function ( key ) {
      return this.dcnpgettext.call( this, undef, undef, key );
    },

    dgettext : function ( domain, key ) {
     return this.dcnpgettext.call( this, domain, undef, key );
    },

    dcgettext : function ( domain , key /*, category */ ) {
      // Ignores the category anyways
      return this.dcnpgettext.call( this, domain, undef, key );
    },

    ngettext : function ( skey, pkey, val ) {
      return this.dcnpgettext.call( this, undef, undef, skey, pkey, val );
    },

    dngettext : function ( domain, skey, pkey, val ) {
      return this.dcnpgettext.call( this, domain, undef, skey, pkey, val );
    },

    dcngettext : function ( domain, skey, pkey, val/*, category */) {
      return this.dcnpgettext.call( this, domain, undef, skey, pkey, val );
    },

    pgettext : function ( context, key ) {
      return this.dcnpgettext.call( this, undef, context, key );
    },

    dpgettext : function ( domain, context, key ) {
      return this.dcnpgettext.call( this, domain, context, key );
    },

    dcpgettext : function ( domain, context, key/*, category */) {
      return this.dcnpgettext.call( this, domain, context, key );
    },

    npgettext : function ( context, skey, pkey, val ) {
      return this.dcnpgettext.call( this, undef, context, skey, pkey, val );
    },

    dnpgettext : function ( domain, context, skey, pkey, val ) {
      return this.dcnpgettext.call( this, domain, context, skey, pkey, val );
    },

    // The most fully qualified gettext function. It has every option.
    // Since it has every option, we can use it from every other method.
    // This is the bread and butter.
    // Technically there should be one more argument in this function for 'Category',
    // but since we never use it, we might as well not waste the bytes to define it.
    dcnpgettext : function ( domain, context, singular_key, plural_key, val ) {
      // Set some defaults

      plural_key = plural_key || singular_key;

      // Use the global domain default if one
      // isn't explicitly passed in
      domain = domain || this._textdomain;

      var fallback;

      // Handle special cases

      // No options found
      if ( ! this.options ) {
        // There's likely something wrong, but we'll return the correct key for english
        // We do this by instantiating a brand new Jed instance with the default set
        // for everything that could be broken.
        fallback = new Jed();
        return fallback.dcnpgettext.call( fallback, undefined, undefined, singular_key, plural_key, val );
      }

      // No translation data provided
      if ( ! this.options.locale_data ) {
        throw new Error('No locale data provided.');
      }

      if ( ! this.options.locale_data[ domain ] ) {
        throw new Error('Domain `' + domain + '` was not found.');
      }

      if ( ! this.options.locale_data[ domain ][ "" ] ) {
        throw new Error('No locale meta information provided.');
      }

      // Make sure we have a truthy key. Otherwise we might start looking
      // into the empty string key, which is the options for the locale
      // data.
      if ( ! singular_key ) {
        throw new Error('No translation key found.');
      }

      var key  = context ? context + Jed.context_delimiter + singular_key : singular_key,
          locale_data = this.options.locale_data,
          dict = locale_data[ domain ],
          defaultConf = (locale_data.messages || this.defaults.locale_data.messages)[""],
          pluralForms = dict[""].plural_forms || dict[""]["Plural-Forms"] || dict[""]["plural-forms"] || defaultConf.plural_forms || defaultConf["Plural-Forms"] || defaultConf["plural-forms"],
          val_list,
          res;

      var val_idx;
      if (val === undefined) {
        // No value passed in; assume singular key lookup.
        val_idx = 0;

      } else {
        // Value has been passed in; use plural-forms calculations.

        // Handle invalid numbers, but try casting strings for good measure
        if ( typeof val != 'number' ) {
          val = parseInt( val, 10 );

          if ( isNaN( val ) ) {
            throw new Error('The number that was passed in is not a number.');
          }
        }

        val_idx = getPluralFormFunc(pluralForms)(val);
      }

      // Throw an error if a domain isn't found
      if ( ! dict ) {
        throw new Error('No domain named `' + domain + '` could be found.');
      }

      val_list = dict[ key ];

      // If there is no match, then revert back to
      // english style singular/plural with the keys passed in.
      if ( ! val_list || val_idx > val_list.length ) {
        if (this.options.missing_key_callback) {
          this.options.missing_key_callback(key, domain);
        }
        res = [ singular_key, plural_key ];

        // collect untranslated strings
        if (this.options.debug===true) {
          console.log(res[ getPluralFormFunc(pluralForms)( val ) ]);
        }
        return res[ getPluralFormFunc()( val ) ];
      }

      res = val_list[ val_idx ];

      // This includes empty strings on purpose
      if ( ! res  ) {
        res = [ singular_key, plural_key ];
        return res[ getPluralFormFunc()( val ) ];
      }
      return res;
    }
  });


  // We add in sprintf capabilities for post translation value interolation
  // This is not internally used, so you can remove it if you have this
  // available somewhere else, or want to use a different system.

  // We _slightly_ modify the normal sprintf behavior to more gracefully handle
  // undefined values.

  /**
   sprintf() for JavaScript 0.7-beta1
   http://www.diveintojavascript.com/projects/javascript-sprintf

   Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are met:
       * Redistributions of source code must retain the above copyright
         notice, this list of conditions and the following disclaimer.
       * Redistributions in binary form must reproduce the above copyright
         notice, this list of conditions and the following disclaimer in the
         documentation and/or other materials provided with the distribution.
       * Neither the name of sprintf() for JavaScript nor the
         names of its contributors may be used to endorse or promote products
         derived from this software without specific prior written permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   DISCLAIMED. IN NO EVENT SHALL Alexandru Marasteanu BE LIABLE FOR ANY
   DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
  var sprintf = (function() {
    function get_type(variable) {
      return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();
    }
    function str_repeat(input, multiplier) {
      for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}
      return output.join('');
    }

    var str_format = function() {
      if (!str_format.cache.hasOwnProperty(arguments[0])) {
        str_format.cache[arguments[0]] = str_format.parse(arguments[0]);
      }
      return str_format.format.call(null, str_format.cache[arguments[0]], arguments);
    };

    str_format.format = function(parse_tree, argv) {
      var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;
      for (i = 0; i < tree_length; i++) {
        node_type = get_type(parse_tree[i]);
        if (node_type === 'string') {
          output.push(parse_tree[i]);
        }
        else if (node_type === 'array') {
          match = parse_tree[i]; // convenience purposes only
          if (match[2]) { // keyword argument
            arg = argv[cursor];
            for (k = 0; k < match[2].length; k++) {
              if (!arg.hasOwnProperty(match[2][k])) {
                throw(sprintf('[sprintf] property "%s" does not exist', match[2][k]));
              }
              arg = arg[match[2][k]];
            }
          }
          else if (match[1]) { // positional argument (explicit)
            arg = argv[match[1]];
          }
          else { // positional argument (implicit)
            arg = argv[cursor++];
          }

          if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {
            throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));
          }

          // Jed EDIT
          if ( typeof arg == 'undefined' || arg === null ) {
            arg = '';
          }
          // Jed EDIT

          switch (match[8]) {
            case 'b': arg = arg.toString(2); break;
            case 'c': arg = String.fromCharCode(arg); break;
            case 'd': arg = parseInt(arg, 10); break;
            case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;
            case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;
            case 'o': arg = arg.toString(8); break;
            case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;
            case 'u': arg = Math.abs(arg); break;
            case 'x': arg = arg.toString(16); break;
            case 'X': arg = arg.toString(16).toUpperCase(); break;
          }
          arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);
          pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';
          pad_length = match[6] - String(arg).length;
          pad = match[6] ? str_repeat(pad_character, pad_length) : '';
          output.push(match[5] ? arg + pad : pad + arg);
        }
      }
      return output.join('');
    };

    str_format.cache = {};

    str_format.parse = function(fmt) {
      var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;
      while (_fmt) {
        if ((match = /^[^\x25]+/.exec(_fmt)) !== null) {
          parse_tree.push(match[0]);
        }
        else if ((match = /^\x25{2}/.exec(_fmt)) !== null) {
          parse_tree.push('%');
        }
        else if ((match = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {
          if (match[2]) {
            arg_names |= 1;
            var field_list = [], replacement_field = match[2], field_match = [];
            if ((field_match = /^([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
              field_list.push(field_match[1]);
              while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {
                if ((field_match = /^\.([a-z_][a-z_\d]*)/i.exec(replacement_field)) !== null) {
                  field_list.push(field_match[1]);
                }
                else if ((field_match = /^\[(\d+)\]/.exec(replacement_field)) !== null) {
                  field_list.push(field_match[1]);
                }
                else {
                  throw('[sprintf] huh?');
                }
              }
            }
            else {
              throw('[sprintf] huh?');
            }
            match[2] = field_list;
          }
          else {
            arg_names |= 2;
          }
          if (arg_names === 3) {
            throw('[sprintf] mixing positional and named placeholders is not (yet) supported');
          }
          parse_tree.push(match);
        }
        else {
          throw('[sprintf] huh?');
        }
        _fmt = _fmt.substring(match[0].length);
      }
      return parse_tree;
    };

    return str_format;
  })();

  var vsprintf = function(fmt, argv) {
    argv.unshift(fmt);
    return sprintf.apply(null, argv);
  };

  Jed.parse_plural = function ( plural_forms, n ) {
    plural_forms = plural_forms.replace(/n/g, n);
    return Jed.parse_expression(plural_forms);
  };

  Jed.sprintf = function ( fmt, args ) {
    if ( {}.toString.call( args ) == '[object Array]' ) {
      return vsprintf( fmt, [].slice.call(args) );
    }
    return sprintf.apply(this, [].slice.call(arguments) );
  };

  Jed.prototype.sprintf = function () {
    return Jed.sprintf.apply(this, arguments);
  };
  // END sprintf Implementation

  // Start the Plural forms section
  // This is a full plural form expression parser. It is used to avoid
  // running 'eval' or 'new Function' directly against the plural
  // forms.
  //
  // This can be important if you get translations done through a 3rd
  // party vendor. I encourage you to use this instead, however, I
  // also will provide a 'precompiler' that you can use at build time
  // to output valid/safe function representations of the plural form
  // expressions. This means you can build this code out for the most
  // part.
  Jed.PF = {};

  Jed.PF.parse = function ( p ) {
    var plural_str = Jed.PF.extractPluralExpr( p );
    return Jed.PF.parser.parse.call(Jed.PF.parser, plural_str);
  };

  Jed.PF.compile = function ( p ) {
    // Handle trues and falses as 0 and 1
    function imply( val ) {
      return (val === true ? 1 : val ? val : 0);
    }

    var ast = Jed.PF.parse( p );
    return function ( n ) {
      return imply( Jed.PF.interpreter( ast )( n ) );
    };
  };

  Jed.PF.interpreter = function ( ast ) {
    return function ( n ) {
      var res;
      switch ( ast.type ) {
        case 'GROUP':
          return Jed.PF.interpreter( ast.expr )( n );
        case 'TERNARY':
          if ( Jed.PF.interpreter( ast.expr )( n ) ) {
            return Jed.PF.interpreter( ast.truthy )( n );
          }
          return Jed.PF.interpreter( ast.falsey )( n );
        case 'OR':
          return Jed.PF.interpreter( ast.left )( n ) || Jed.PF.interpreter( ast.right )( n );
        case 'AND':
          return Jed.PF.interpreter( ast.left )( n ) && Jed.PF.interpreter( ast.right )( n );
        case 'LT':
          return Jed.PF.interpreter( ast.left )( n ) < Jed.PF.interpreter( ast.right )( n );
        case 'GT':
          return Jed.PF.interpreter( ast.left )( n ) > Jed.PF.interpreter( ast.right )( n );
        case 'LTE':
          return Jed.PF.interpreter( ast.left )( n ) <= Jed.PF.interpreter( ast.right )( n );
        case 'GTE':
          return Jed.PF.interpreter( ast.left )( n ) >= Jed.PF.interpreter( ast.right )( n );
        case 'EQ':
          return Jed.PF.interpreter( ast.left )( n ) == Jed.PF.interpreter( ast.right )( n );
        case 'NEQ':
          return Jed.PF.interpreter( ast.left )( n ) != Jed.PF.interpreter( ast.right )( n );
        case 'MOD':
          return Jed.PF.interpreter( ast.left )( n ) % Jed.PF.interpreter( ast.right )( n );
        case 'VAR':
          return n;
        case 'NUM':
          return ast.val;
        default:
          throw new Error("Invalid Token found.");
      }
    };
  };

  Jed.PF.extractPluralExpr = function ( p ) {
    // trim first
    p = p.replace(/^\s\s*/, '').replace(/\s\s*$/, '');

    if (! /;\s*$/.test(p)) {
      p = p.concat(';');
    }

    var nplurals_re = /nplurals\=(\d+);/,
        plural_re = /plural\=(.*);/,
        nplurals_matches = p.match( nplurals_re ),
        res = {},
        plural_matches;

    // Find the nplurals number
    if ( nplurals_matches.length > 1 ) {
      res.nplurals = nplurals_matches[1];
    }
    else {
      throw new Error('nplurals not found in plural_forms string: ' + p );
    }

    // remove that data to get to the formula
    p = p.replace( nplurals_re, "" );
    plural_matches = p.match( plural_re );

    if (!( plural_matches && plural_matches.length > 1 ) ) {
      throw new Error('`plural` expression not found: ' + p);
    }
    return plural_matches[ 1 ];
  };

  /* Jison generated parser */
  Jed.PF.parser = (function(){

var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expressions":3,"e":4,"EOF":5,"?":6,":":7,"||":8,"&&":9,"<":10,"<=":11,">":12,">=":13,"!=":14,"==":15,"%":16,"(":17,")":18,"n":19,"NUMBER":20,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",6:"?",7:":",8:"||",9:"&&",10:"<",11:"<=",12:">",13:">=",14:"!=",15:"==",16:"%",17:"(",18:")",19:"n",20:"NUMBER"},
productions_: [0,[3,2],[4,5],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,1],[4,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1: return { type : 'GROUP', expr: $$[$0-1] };
break;
case 2:this.$ = { type: 'TERNARY', expr: $$[$0-4], truthy : $$[$0-2], falsey: $$[$0] };
break;
case 3:this.$ = { type: "OR", left: $$[$0-2], right: $$[$0] };
break;
case 4:this.$ = { type: "AND", left: $$[$0-2], right: $$[$0] };
break;
case 5:this.$ = { type: 'LT', left: $$[$0-2], right: $$[$0] };
break;
case 6:this.$ = { type: 'LTE', left: $$[$0-2], right: $$[$0] };
break;
case 7:this.$ = { type: 'GT', left: $$[$0-2], right: $$[$0] };
break;
case 8:this.$ = { type: 'GTE', left: $$[$0-2], right: $$[$0] };
break;
case 9:this.$ = { type: 'NEQ', left: $$[$0-2], right: $$[$0] };
break;
case 10:this.$ = { type: 'EQ', left: $$[$0-2], right: $$[$0] };
break;
case 11:this.$ = { type: 'MOD', left: $$[$0-2], right: $$[$0] };
break;
case 12:this.$ = { type: 'GROUP', expr: $$[$0-1] };
break;
case 13:this.$ = { type: 'VAR' };
break;
case 14:this.$ = { type: 'NUM', val: Number(yytext) };
break;
}
},
table: [{3:1,4:2,17:[1,3],19:[1,4],20:[1,5]},{1:[3]},{5:[1,6],6:[1,7],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16]},{4:17,17:[1,3],19:[1,4],20:[1,5]},{5:[2,13],6:[2,13],7:[2,13],8:[2,13],9:[2,13],10:[2,13],11:[2,13],12:[2,13],13:[2,13],14:[2,13],15:[2,13],16:[2,13],18:[2,13]},{5:[2,14],6:[2,14],7:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],12:[2,14],13:[2,14],14:[2,14],15:[2,14],16:[2,14],18:[2,14]},{1:[2,1]},{4:18,17:[1,3],19:[1,4],20:[1,5]},{4:19,17:[1,3],19:[1,4],20:[1,5]},{4:20,17:[1,3],19:[1,4],20:[1,5]},{4:21,17:[1,3],19:[1,4],20:[1,5]},{4:22,17:[1,3],19:[1,4],20:[1,5]},{4:23,17:[1,3],19:[1,4],20:[1,5]},{4:24,17:[1,3],19:[1,4],20:[1,5]},{4:25,17:[1,3],19:[1,4],20:[1,5]},{4:26,17:[1,3],19:[1,4],20:[1,5]},{4:27,17:[1,3],19:[1,4],20:[1,5]},{6:[1,7],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[1,28]},{6:[1,7],7:[1,29],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16]},{5:[2,3],6:[2,3],7:[2,3],8:[2,3],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,3]},{5:[2,4],6:[2,4],7:[2,4],8:[2,4],9:[2,4],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,4]},{5:[2,5],6:[2,5],7:[2,5],8:[2,5],9:[2,5],10:[2,5],11:[2,5],12:[2,5],13:[2,5],14:[2,5],15:[2,5],16:[1,16],18:[2,5]},{5:[2,6],6:[2,6],7:[2,6],8:[2,6],9:[2,6],10:[2,6],11:[2,6],12:[2,6],13:[2,6],14:[2,6],15:[2,6],16:[1,16],18:[2,6]},{5:[2,7],6:[2,7],7:[2,7],8:[2,7],9:[2,7],10:[2,7],11:[2,7],12:[2,7],13:[2,7],14:[2,7],15:[2,7],16:[1,16],18:[2,7]},{5:[2,8],6:[2,8],7:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[2,8],12:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[1,16],18:[2,8]},{5:[2,9],6:[2,9],7:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],12:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[1,16],18:[2,9]},{5:[2,10],6:[2,10],7:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],12:[2,10],13:[2,10],14:[2,10],15:[2,10],16:[1,16],18:[2,10]},{5:[2,11],6:[2,11],7:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],12:[2,11],13:[2,11],14:[2,11],15:[2,11],16:[2,11],18:[2,11]},{5:[2,12],6:[2,12],7:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],12:[2,12],13:[2,12],14:[2,12],15:[2,12],16:[2,12],18:[2,12]},{4:30,17:[1,3],19:[1,4],20:[1,5]},{5:[2,2],6:[1,7],7:[2,2],8:[1,8],9:[1,9],10:[1,10],11:[1,11],12:[1,12],13:[1,13],14:[1,14],15:[1,15],16:[1,16],18:[2,2]}],
defaultActions: {6:[2,1]},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    if (typeof this.lexer.yylloc == 'undefined')
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    if (typeof this.yy.parseError === 'function')
        this.parseError = this.yy.parseError;

    function popStack (n) {
        stack.length = stack.length - 2*n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || 1; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length-1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol == null)
                symbol = lex();
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

        // handle parse error
        _handle_error:
        if (typeof action === 'undefined' || !action.length || !action[0]) {

            if (!recovering) {
                // Report error
                expected = [];
                for (p in table[state]) if (this.terminals_[p] && p > 2) {
                    expected.push("'"+this.terminals_[p]+"'");
                }
                var errStr = '';
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + this.terminals_[symbol]+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == 1 /*EOF*/ ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr,
                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol == EOF) {
                    throw new Error(errStr || 'Parsing halted.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            while (1) {
                // check for error recovery rule in this state
                if ((TERROR.toString()) in table[state]) {
                    break;
                }
                if (state == 0) {
                    throw new Error(errStr || 'Parsing halted.');
                }
                popStack(1);
                state = stack[stack.length-1];
            }

            preErrorSymbol = symbol; // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {

            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0)
                        recovering--;
                } else { // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2: // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3: // accept
                return true;
        }

    }

    return true;
}};/* Jison generated lexer */
var lexer = (function(){

var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parseError) {
            this.yy.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext+=ch;
        this.yyleng++;
        this.match+=ch;
        this.matched+=ch;
        var lines = ch.match(/\n/);
        if (lines) this.yylineno++;
        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        this._input = ch + this._input;
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            match = this._input.match(this.rules[rules[i]]);
            if (match) {
                lines = match[0].match(/\n.*/g);
                if (lines) this.yylineno += lines.length;
                this.yylloc = {first_line: this.yylloc.last_line,
                               last_line: this.yylineno+1,
                               first_column: this.yylloc.last_column,
                               last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}
                this.yytext += match[0];
                this.match += match[0];
                this.matches = match;
                this.yyleng = this.yytext.length;
                this._more = false;
                this._input = this._input.slice(match[0].length);
                this.matched += match[0];
                token = this.performAction.call(this, this.yy, this, rules[i],this.conditionStack[this.conditionStack.length-1]);
                if (token) return token;
                else return;
            }
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:return 20
break;
case 2:return 19
break;
case 3:return 8
break;
case 4:return 9
break;
case 5:return 6
break;
case 6:return 7
break;
case 7:return 11
break;
case 8:return 13
break;
case 9:return 10
break;
case 10:return 12
break;
case 11:return 14
break;
case 12:return 15
break;
case 13:return 16
break;
case 14:return 17
break;
case 15:return 18
break;
case 16:return 5
break;
case 17:return 'INVALID'
break;
}
};
lexer.rules = [/^\s+/,/^[0-9]+(\.[0-9]+)?\b/,/^n\b/,/^\|\|/,/^&&/,/^\?/,/^:/,/^<=/,/^>=/,/^</,/^>/,/^!=/,/^==/,/^%/,/^\(/,/^\)/,/^$/,/^./];
lexer.conditions = {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"inclusive":true}};return lexer;})()
parser.lexer = lexer;
return parser;
})();
// End parser

  // Handle node, amd, and global systems
  if (true) {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = Jed;
    }
    exports.Jed = Jed;
  }
  else {}

})(this);


/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "./node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "./node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "./node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "./node_modules/lodash/_basePropertyOf.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_basePropertyOf.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

module.exports = basePropertyOf;


/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js"),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ "./node_modules/lodash/_arrayMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "./node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "./node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ "./node_modules/lodash/_escapeHtmlChar.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_escapeHtmlChar.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var basePropertyOf = __webpack_require__(/*! ./_basePropertyOf */ "./node_modules/lodash/_basePropertyOf.js");

/** Used to map characters to HTML entities. */
var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};

/**
 * Used by `_.escape` to convert characters to HTML entities.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */
var escapeHtmlChar = basePropertyOf(htmlEscapes);

module.exports = escapeHtmlChar;


/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "./node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "./node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "./node_modules/lodash/escape.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/escape.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var escapeHtmlChar = __webpack_require__(/*! ./_escapeHtmlChar */ "./node_modules/lodash/_escapeHtmlChar.js"),
    toString = __webpack_require__(/*! ./toString */ "./node_modules/lodash/toString.js");

/** Used to match HTML entities and HTML characters. */
var reUnescapedHtml = /[&<>"']/g,
    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

/**
 * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
 * corresponding HTML entities.
 *
 * **Note:** No other characters are escaped. To escape additional
 * characters use a third-party library like [_he_](https://mths.be/he).
 *
 * Though the ">" character is escaped for symmetry, characters like
 * ">" and "/" don't need escaping in HTML and have no special meaning
 * unless they're part of a tag or unquoted attribute value. See
 * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
 * (under "semi-related fun fact") for more details.
 *
 * When working with HTML you should always
 * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
 * XSS vectors.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escape('fred, barney, & pebbles');
 * // => 'fred, barney, &amp; pebbles'
 */
function escape(string) {
  string = toString(string);
  return (string && reHasUnescapedHtml.test(string))
    ? string.replace(reUnescapedHtml, escapeHtmlChar)
    : string;
}

module.exports = escape;


/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "./node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "./node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ "./node_modules/lodash/_baseToString.js");

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/moment/locale/af.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/af.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var af = moment.defineLocale('af', {
    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
    meridiemParse: /vm|nm/i,
    isPM : function (input) {
        return /^nm$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'vm' : 'VM';
        } else {
            return isLower ? 'nm' : 'NM';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Vandag om] LT',
        nextDay : '[Môre om] LT',
        nextWeek : 'dddd [om] LT',
        lastDay : '[Gister om] LT',
        lastWeek : '[Laas] dddd [om] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'oor %s',
        past : '%s gelede',
        s : '\'n paar sekondes',
        m : '\'n minuut',
        mm : '%d minute',
        h : '\'n uur',
        hh : '%d ure',
        d : '\'n dag',
        dd : '%d dae',
        M : '\'n maand',
        MM : '%d maande',
        y : '\'n jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
    },
    week : {
        dow : 1, // Maandag is die eerste dag van die week.
        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
    }
});

return af;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-dz.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-dz.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var arDz = moment.defineLocale('ar-dz', {
    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 4  // The week that contains Jan 1st is the first week of the year.
    }
});

return arDz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-kw.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-kw.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var arKw = moment.defineLocale('ar-kw', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arKw;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-ly.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ly.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '4',
    '5': '5',
    '6': '6',
    '7': '7',
    '8': '8',
    '9': '9',
    '0': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'يناير',
    'فبراير',
    'مارس',
    'أبريل',
    'مايو',
    'يونيو',
    'يوليو',
    'أغسطس',
    'سبتمبر',
    'أكتوبر',
    'نوفمبر',
    'ديسمبر'
];

var arLy = moment.defineLocale('ar-ly', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arLy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-ma.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ma.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var arMa = moment.defineLocale('ar-ma', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arMa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-sa.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-sa.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};

var arSa = moment.defineLocale('ar-sa', {
    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return arSa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar-tn.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-tn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var arTn = moment.defineLocale('ar-tn', {
    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'في %s',
        past: 'منذ %s',
        s: 'ثوان',
        m: 'دقيقة',
        mm: '%d دقائق',
        h: 'ساعة',
        hh: '%d ساعات',
        d: 'يوم',
        dd: '%d أيام',
        M: 'شهر',
        MM: '%d أشهر',
        y: 'سنة',
        yy: '%d سنوات'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return arTn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ar.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ar.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'كانون الثاني يناير',
    'شباط فبراير',
    'آذار مارس',
    'نيسان أبريل',
    'أيار مايو',
    'حزيران يونيو',
    'تموز يوليو',
    'آب أغسطس',
    'أيلول سبتمبر',
    'تشرين الأول أكتوبر',
    'تشرين الثاني نوفمبر',
    'كانون الأول ديسمبر'
];

var ar = moment.defineLocale('ar', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return ar;

})));


/***/ }),

/***/ "./node_modules/moment/locale/az.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/az.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '-inci',
    5: '-inci',
    8: '-inci',
    70: '-inci',
    80: '-inci',
    2: '-nci',
    7: '-nci',
    20: '-nci',
    50: '-nci',
    3: '-üncü',
    4: '-üncü',
    100: '-üncü',
    6: '-ncı',
    9: '-uncu',
    10: '-uncu',
    30: '-uncu',
    60: '-ıncı',
    90: '-ıncı'
};

var az = moment.defineLocale('az', {
    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[sabah saat] LT',
        nextWeek : '[gələn həftə] dddd [saat] LT',
        lastDay : '[dünən] LT',
        lastWeek : '[keçən həftə] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s əvvəl',
        s : 'birneçə saniyyə',
        m : 'bir dəqiqə',
        mm : '%d dəqiqə',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir il',
        yy : '%d il'
    },
    meridiemParse: /gecə|səhər|gündüz|axşam/,
    isPM : function (input) {
        return /^(gündüz|axşam)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'gecə';
        } else if (hour < 12) {
            return 'səhər';
        } else if (hour < 17) {
            return 'gündüz';
        } else {
            return 'axşam';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '-ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return az;

})));


/***/ }),

/***/ "./node_modules/moment/locale/be.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/be.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
        'dd': 'дзень_дні_дзён',
        'MM': 'месяц_месяцы_месяцаў',
        'yy': 'год_гады_гадоў'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвіліна' : 'хвіліну';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'гадзіна' : 'гадзіну';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}

var be = moment.defineLocale('be', {
    months : {
        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
    },
    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
    weekdays : {
        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
    },
    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., HH:mm',
        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
    },
    calendar : {
        sameDay: '[Сёння ў] LT',
        nextDay: '[Заўтра ў] LT',
        lastDay: '[Учора ў] LT',
        nextWeek: function () {
            return '[У] dddd [ў] LT';
        },
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return '[У мінулую] dddd [ў] LT';
                case 1:
                case 2:
                case 4:
                    return '[У мінулы] dddd [ў] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'праз %s',
        past : '%s таму',
        s : 'некалькі секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithPlural,
        hh : relativeTimeWithPlural,
        d : 'дзень',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночы|раніцы|дня|вечара/,
    isPM : function (input) {
        return /^(дня|вечара)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночы';
        } else if (hour < 12) {
            return 'раніцы';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечара';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
            case 'D':
                return number + '-га';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return be;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bg.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bg.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var bg = moment.defineLocale('bg', {
    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Днес в] LT',
        nextDay : '[Утре в] LT',
        nextWeek : 'dddd [в] LT',
        lastDay : '[Вчера в] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[В изминалата] dddd [в] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[В изминалия] dddd [в] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'след %s',
        past : 'преди %s',
        s : 'няколко секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дни',
        M : 'месец',
        MM : '%d месеца',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bg;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bm.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bm.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';

// Language contact person : Abdoufata Kane : https://github.com/abdoufata

var bm = moment.defineLocale('bm', {
    months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
    monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
    weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
    weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
    weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'MMMM [tile] D [san] YYYY',
        LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
    },
    calendar : {
        sameDay : '[Bi lɛrɛ] LT',
        nextDay : '[Sini lɛrɛ] LT',
        nextWeek : 'dddd [don lɛrɛ] LT',
        lastDay : '[Kunu lɛrɛ] LT',
        lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s kɔnɔ',
        past : 'a bɛ %s bɔ',
        s : 'sanga dama dama',
        m : 'miniti kelen',
        mm : 'miniti %d',
        h : 'lɛrɛ kelen',
        hh : 'lɛrɛ %d',
        d : 'tile kelen',
        dd : 'tile %d',
        M : 'kalo kelen',
        MM : 'kalo %d',
        y : 'san kelen',
        yy : 'san %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return bm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '১',
    '2': '২',
    '3': '৩',
    '4': '৪',
    '5': '৫',
    '6': '৬',
    '7': '৭',
    '8': '৮',
    '9': '৯',
    '0': '০'
};
var numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0'
};

var bn = moment.defineLocale('bn', {
    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
    longDateFormat : {
        LT : 'A h:mm সময়',
        LTS : 'A h:mm:ss সময়',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm সময়',
        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
    },
    calendar : {
        sameDay : '[আজ] LT',
        nextDay : '[আগামীকাল] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[গতকাল] LT',
        lastWeek : '[গত] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s পরে',
        past : '%s আগে',
        s : 'কয়েক সেকেন্ড',
        m : 'এক মিনিট',
        mm : '%d মিনিট',
        h : 'এক ঘন্টা',
        hh : '%d ঘন্টা',
        d : 'এক দিন',
        dd : '%d দিন',
        M : 'এক মাস',
        MM : '%d মাস',
        y : 'এক বছর',
        yy : '%d বছর'
    },
    preparse: function (string) {
        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'রাত';
        } else if (hour < 10) {
            return 'সকাল';
        } else if (hour < 17) {
            return 'দুপুর';
        } else if (hour < 20) {
            return 'বিকাল';
        } else {
            return 'রাত';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '༡',
    '2': '༢',
    '3': '༣',
    '4': '༤',
    '5': '༥',
    '6': '༦',
    '7': '༧',
    '8': '༨',
    '9': '༩',
    '0': '༠'
};
var numberMap = {
    '༡': '1',
    '༢': '2',
    '༣': '3',
    '༤': '4',
    '༥': '5',
    '༦': '6',
    '༧': '7',
    '༨': '8',
    '༩': '9',
    '༠': '0'
};

var bo = moment.defineLocale('bo', {
    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[དི་རིང] LT',
        nextDay : '[སང་ཉིན] LT',
        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
        lastDay : '[ཁ་སང] LT',
        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ལ་',
        past : '%s སྔན་ལ',
        s : 'ལམ་སང',
        m : 'སྐར་མ་གཅིག',
        mm : '%d སྐར་མ',
        h : 'ཆུ་ཚོད་གཅིག',
        hh : '%d ཆུ་ཚོད',
        d : 'ཉིན་གཅིག',
        dd : '%d ཉིན་',
        M : 'ཟླ་བ་གཅིག',
        MM : '%d ཟླ་བ',
        y : 'ལོ་གཅིག',
        yy : '%d ལོ'
    },
    preparse: function (string) {
        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'མཚན་མོ';
        } else if (hour < 10) {
            return 'ཞོགས་ཀས';
        } else if (hour < 17) {
            return 'ཉིན་གུང';
        } else if (hour < 20) {
            return 'དགོང་དག';
        } else {
            return 'མཚན་མོ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/br.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/br.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function relativeTimeWithMutation(number, withoutSuffix, key) {
    var format = {
        'mm': 'munutenn',
        'MM': 'miz',
        'dd': 'devezh'
    };
    return number + ' ' + mutation(format[key], number);
}
function specialMutationForYears(number) {
    switch (lastNumber(number)) {
        case 1:
        case 3:
        case 4:
        case 5:
        case 9:
            return number + ' bloaz';
        default:
            return number + ' vloaz';
    }
}
function lastNumber(number) {
    if (number > 9) {
        return lastNumber(number % 10);
    }
    return number;
}
function mutation(text, number) {
    if (number === 2) {
        return softMutation(text);
    }
    return text;
}
function softMutation(text) {
    var mutationTable = {
        'm': 'v',
        'b': 'v',
        'd': 'z'
    };
    if (mutationTable[text.charAt(0)] === undefined) {
        return text;
    }
    return mutationTable[text.charAt(0)] + text.substring(1);
}

var br = moment.defineLocale('br', {
    months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
    monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
    weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h[e]mm A',
        LTS : 'h[e]mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [a viz] MMMM YYYY',
        LLL : 'D [a viz] MMMM YYYY h[e]mm A',
        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
    },
    calendar : {
        sameDay : '[Hiziv da] LT',
        nextDay : '[Warc\'hoazh da] LT',
        nextWeek : 'dddd [da] LT',
        lastDay : '[Dec\'h da] LT',
        lastWeek : 'dddd [paset da] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'a-benn %s',
        past : '%s \'zo',
        s : 'un nebeud segondennoù',
        m : 'ur vunutenn',
        mm : relativeTimeWithMutation,
        h : 'un eur',
        hh : '%d eur',
        d : 'un devezh',
        dd : relativeTimeWithMutation,
        M : 'ur miz',
        MM : relativeTimeWithMutation,
        y : 'ur bloaz',
        yy : specialMutationForYears
    },
    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
    ordinal : function (number) {
        var output = (number === 1) ? 'añ' : 'vet';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return br;

})));


/***/ }),

/***/ "./node_modules/moment/locale/bs.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bs.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var bs = moment.defineLocale('bs', {
    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ca.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ca.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ca = moment.defineLocale('ca', {
    months : {
        standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
        format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
        isFormat: /D[oD]?(\s)+MMMM/
    },
    monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
    weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [de] YYYY',
        ll : 'D MMM YYYY',
        LLL : 'D MMMM [de] YYYY [a les] H:mm',
        lll : 'D MMM YYYY, H:mm',
        LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
        llll : 'ddd D MMM YYYY, H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextDay : function () {
            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastDay : function () {
            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'd\'aquí %s',
        past : 'fa %s',
        s : 'uns segons',
        m : 'un minut',
        mm : '%d minuts',
        h : 'una hora',
        hh : '%d hores',
        d : 'un dia',
        dd : '%d dies',
        M : 'un mes',
        MM : '%d mesos',
        y : 'un any',
        yy : '%d anys'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal : function (number, period) {
        var output = (number === 1) ? 'r' :
            (number === 2) ? 'n' :
            (number === 3) ? 'r' :
            (number === 4) ? 't' : 'è';
        if (period === 'w' || period === 'W') {
            output = 'a';
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ca;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cs.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cs.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
function plural(n) {
    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minuty' : 'minut');
            } else {
                return result + 'minutami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodin');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dny' : 'dní');
            } else {
                return result + 'dny';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'měsíce' : 'měsíců');
            } else {
                return result + 'měsíci';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'let');
            } else {
                return result + 'lety';
            }
            break;
    }
}

var cs = moment.defineLocale('cs', {
    months : months,
    monthsShort : monthsShort,
    monthsParse : (function (months, monthsShort) {
        var i, _monthsParse = [];
        for (i = 0; i < 12; i++) {
            // use custom parser to solve problem with July (červenec)
            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
        }
        return _monthsParse;
    }(months, monthsShort)),
    shortMonthsParse : (function (monthsShort) {
        var i, _shortMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
        }
        return _shortMonthsParse;
    }(monthsShort)),
    longMonthsParse : (function (months) {
        var i, _longMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
        }
        return _longMonthsParse;
    }(months)),
    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm',
        l : 'D. M. YYYY'
    },
    calendar : {
        sameDay: '[dnes v] LT',
        nextDay: '[zítra v] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v neděli v] LT';
                case 1:
                case 2:
                    return '[v] dddd [v] LT';
                case 3:
                    return '[ve středu v] LT';
                case 4:
                    return '[ve čtvrtek v] LT';
                case 5:
                    return '[v pátek v] LT';
                case 6:
                    return '[v sobotu v] LT';
            }
        },
        lastDay: '[včera v] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulou neděli v] LT';
                case 1:
                case 2:
                    return '[minulé] dddd [v] LT';
                case 3:
                    return '[minulou středu v] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [v] LT';
                case 6:
                    return '[minulou sobotu v] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'před %s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse : /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var cv = moment.defineLocale('cv', {
    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
    },
    calendar : {
        sameDay: '[Паян] LT [сехетре]',
        nextDay: '[Ыран] LT [сехетре]',
        lastDay: '[Ӗнер] LT [сехетре]',
        nextWeek: '[Ҫитес] dddd LT [сехетре]',
        lastWeek: '[Иртнӗ] dddd LT [сехетре]',
        sameElse: 'L'
    },
    relativeTime : {
        future : function (output) {
            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
            return output + affix;
        },
        past : '%s каялла',
        s : 'пӗр-ик ҫеккунт',
        m : 'пӗр минут',
        mm : '%d минут',
        h : 'пӗр сехет',
        hh : '%d сехет',
        d : 'пӗр кун',
        dd : '%d кун',
        M : 'пӗр уйӑх',
        MM : '%d уйӑх',
        y : 'пӗр ҫул',
        yy : '%d ҫул'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
    ordinal : '%d-мӗш',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return cv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/cy.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cy.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var cy = moment.defineLocale('cy', {
    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    // time formats are the same as en-gb
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[Heddiw am] LT',
        nextDay: '[Yfory am] LT',
        nextWeek: 'dddd [am] LT',
        lastDay: '[Ddoe am] LT',
        lastWeek: 'dddd [diwethaf am] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'mewn %s',
        past: '%s yn ôl',
        s: 'ychydig eiliadau',
        m: 'munud',
        mm: '%d munud',
        h: 'awr',
        hh: '%d awr',
        d: 'diwrnod',
        dd: '%d diwrnod',
        M: 'mis',
        MM: '%d mis',
        y: 'blwyddyn',
        yy: '%d flynedd'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
    ordinal: function (number) {
        var b = number,
            output = '',
            lookup = [
                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
            ];
        if (b > 20) {
            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = 'fed'; // not 30ain, 70ain or 90ain
            } else {
                output = 'ain';
            }
        } else if (b > 0) {
            output = lookup[b];
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/da.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/da.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var da = moment.defineLocale('da', {
    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay : '[i dag kl.] LT',
        nextDay : '[i morgen kl.] LT',
        nextWeek : 'på dddd [kl.] LT',
        lastDay : '[i går kl.] LT',
        lastWeek : '[i] dddd[s kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'få sekunder',
        m : 'et minut',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dage',
        M : 'en måned',
        MM : '%d måneder',
        y : 'et år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return da;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de-at.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-at.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deAt = moment.defineLocale('de-at', {
    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deAt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de-ch.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-ch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deCh = moment.defineLocale('de-ch', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH.mm',
        LTS: 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH.mm',
        LLLL : 'dddd, D. MMMM YYYY HH.mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deCh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/de.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/de.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var de = moment.defineLocale('de', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return de;

})));


/***/ }),

/***/ "./node_modules/moment/locale/dv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/dv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = [
    'ޖެނުއަރީ',
    'ފެބްރުއަރީ',
    'މާރިޗު',
    'އޭޕްރީލު',
    'މޭ',
    'ޖޫން',
    'ޖުލައި',
    'އޯގަސްޓު',
    'ސެޕްޓެމްބަރު',
    'އޮކްޓޯބަރު',
    'ނޮވެމްބަރު',
    'ޑިސެމްބަރު'
];
var weekdays = [
    'އާދިއްތަ',
    'ހޯމަ',
    'އަންގާރަ',
    'ބުދަ',
    'ބުރާސްފަތި',
    'ހުކުރު',
    'ހޮނިހިރު'
];

var dv = moment.defineLocale('dv', {
    months : months,
    monthsShort : months,
    weekdays : weekdays,
    weekdaysShort : weekdays,
    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
    longDateFormat : {

        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/M/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /މކ|މފ/,
    isPM : function (input) {
        return 'މފ' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'މކ';
        } else {
            return 'މފ';
        }
    },
    calendar : {
        sameDay : '[މިއަދު] LT',
        nextDay : '[މާދަމާ] LT',
        nextWeek : 'dddd LT',
        lastDay : '[އިއްޔެ] LT',
        lastWeek : '[ފާއިތުވި] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ތެރޭގައި %s',
        past : 'ކުރިން %s',
        s : 'ސިކުންތުކޮޅެއް',
        m : 'މިނިޓެއް',
        mm : 'މިނިޓު %d',
        h : 'ގަޑިއިރެއް',
        hh : 'ގަޑިއިރު %d',
        d : 'ދުވަހެއް',
        dd : 'ދުވަސް %d',
        M : 'މަހެއް',
        MM : 'މަސް %d',
        y : 'އަހަރެއް',
        yy : 'އަހަރު %d'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 7,  // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return dv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/el.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/el.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}


var el = moment.defineLocale('el', {
    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return this._monthsNominativeEl;
        } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
            return this._monthsGenitiveEl[momentToFormat.month()];
        } else {
            return this._monthsNominativeEl[momentToFormat.month()];
        }
    },
    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'μμ' : 'ΜΜ';
        } else {
            return isLower ? 'πμ' : 'ΠΜ';
        }
    },
    isPM : function (input) {
        return ((input + '').toLowerCase()[0] === 'μ');
    },
    meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendarEl : {
        sameDay : '[Σήμερα {}] LT',
        nextDay : '[Αύριο {}] LT',
        nextWeek : 'dddd [{}] LT',
        lastDay : '[Χθες {}] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 6:
                    return '[το προηγούμενο] dddd [{}] LT';
                default:
                    return '[την προηγούμενη] dddd [{}] LT';
            }
        },
        sameElse : 'L'
    },
    calendar : function (key, mom) {
        var output = this._calendarEl[key],
            hours = mom && mom.hours();
        if (isFunction(output)) {
            output = output.apply(mom);
        }
        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
    },
    relativeTime : {
        future : 'σε %s',
        past : '%s πριν',
        s : 'λίγα δευτερόλεπτα',
        m : 'ένα λεπτό',
        mm : '%d λεπτά',
        h : 'μία ώρα',
        hh : '%d ώρες',
        d : 'μία μέρα',
        dd : '%d μέρες',
        M : 'ένας μήνας',
        MM : '%d μήνες',
        y : 'ένας χρόνος',
        yy : '%d χρόνια'
    },
    dayOfMonthOrdinalParse: /\d{1,2}η/,
    ordinal: '%dη',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4st is the first week of the year.
    }
});

return el;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-au.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-au.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var enAu = moment.defineLocale('en-au', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enAu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-ca.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ca.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var enCa = moment.defineLocale('en-ca', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'YYYY-MM-DD',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

return enCa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-gb.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-gb.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var enGb = moment.defineLocale('en-gb', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enGb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-ie.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ie.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var enIe = moment.defineLocale('en-ie', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enIe;

})));


/***/ }),

/***/ "./node_modules/moment/locale/en-nz.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-nz.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var enNz = moment.defineLocale('en-nz', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enNz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/eo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/eo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var eo = moment.defineLocale('eo', {
    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
    weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
    weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
    weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D[-a de] MMMM, YYYY',
        LLL : 'D[-a de] MMMM, YYYY HH:mm',
        LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
    },
    meridiemParse: /[ap]\.t\.m/i,
    isPM: function (input) {
        return input.charAt(0).toLowerCase() === 'p';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'p.t.m.' : 'P.T.M.';
        } else {
            return isLower ? 'a.t.m.' : 'A.T.M.';
        }
    },
    calendar : {
        sameDay : '[Hodiaŭ je] LT',
        nextDay : '[Morgaŭ je] LT',
        nextWeek : 'dddd [je] LT',
        lastDay : '[Hieraŭ je] LT',
        lastWeek : '[pasinta] dddd [je] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'post %s',
        past : 'antaŭ %s',
        s : 'sekundoj',
        m : 'minuto',
        mm : '%d minutoj',
        h : 'horo',
        hh : '%d horoj',
        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
        dd : '%d tagoj',
        M : 'monato',
        MM : '%d monatoj',
        y : 'jaro',
        yy : '%d jaroj'
    },
    dayOfMonthOrdinalParse: /\d{1,2}a/,
    ordinal : '%da',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es-do.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-do.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var esDo = moment.defineLocale('es-do', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY h:mm A',
        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return esDo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es-us.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-us.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var esUs = moment.defineLocale('es-us', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'MM/DD/YYYY',
        LL : 'MMMM [de] D [de] YYYY',
        LLL : 'MMMM [de] D [de] YYYY H:mm',
        LLLL : 'dddd, MMMM [de] D [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return esUs;

})));


/***/ }),

/***/ "./node_modules/moment/locale/es.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/es.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var es = moment.defineLocale('es', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex : monthsRegex,
    monthsShortRegex : monthsRegex,
    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return es;

})));


/***/ }),

/***/ "./node_modules/moment/locale/et.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/et.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
        'm' : ['ühe minuti', 'üks minut'],
        'mm': [number + ' minuti', number + ' minutit'],
        'h' : ['ühe tunni', 'tund aega', 'üks tund'],
        'hh': [number + ' tunni', number + ' tundi'],
        'd' : ['ühe päeva', 'üks päev'],
        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
        'MM': [number + ' kuu', number + ' kuud'],
        'y' : ['ühe aasta', 'aasta', 'üks aasta'],
        'yy': [number + ' aasta', number + ' aastat']
    };
    if (withoutSuffix) {
        return format[key][2] ? format[key][2] : format[key][1];
    }
    return isFuture ? format[key][0] : format[key][1];
}

var et = moment.defineLocale('et', {
    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
    longDateFormat : {
        LT   : 'H:mm',
        LTS : 'H:mm:ss',
        L    : 'DD.MM.YYYY',
        LL   : 'D. MMMM YYYY',
        LLL  : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[Täna,] LT',
        nextDay  : '[Homme,] LT',
        nextWeek : '[Järgmine] dddd LT',
        lastDay  : '[Eile,] LT',
        lastWeek : '[Eelmine] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s pärast',
        past   : '%s tagasi',
        s      : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : '%d päeva',
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return et;

})));


/***/ }),

/***/ "./node_modules/moment/locale/eu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/eu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var eu = moment.defineLocale('eu', {
    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
    monthsParseExact : true,
    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY[ko] MMMM[ren] D[a]',
        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
        l : 'YYYY-M-D',
        ll : 'YYYY[ko] MMM D[a]',
        lll : 'YYYY[ko] MMM D[a] HH:mm',
        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
    },
    calendar : {
        sameDay : '[gaur] LT[etan]',
        nextDay : '[bihar] LT[etan]',
        nextWeek : 'dddd LT[etan]',
        lastDay : '[atzo] LT[etan]',
        lastWeek : '[aurreko] dddd LT[etan]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s barru',
        past : 'duela %s',
        s : 'segundo batzuk',
        m : 'minutu bat',
        mm : '%d minutu',
        h : 'ordu bat',
        hh : '%d ordu',
        d : 'egun bat',
        dd : '%d egun',
        M : 'hilabete bat',
        MM : '%d hilabete',
        y : 'urte bat',
        yy : '%d urte'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fa.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fa.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '۱',
    '2': '۲',
    '3': '۳',
    '4': '۴',
    '5': '۵',
    '6': '۶',
    '7': '۷',
    '8': '۸',
    '9': '۹',
    '0': '۰'
};
var numberMap = {
    '۱': '1',
    '۲': '2',
    '۳': '3',
    '۴': '4',
    '۵': '5',
    '۶': '6',
    '۷': '7',
    '۸': '8',
    '۹': '9',
    '۰': '0'
};

var fa = moment.defineLocale('fa', {
    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function (input) {
        return /بعد از ظهر/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'قبل از ظهر';
        } else {
            return 'بعد از ظهر';
        }
    },
    calendar : {
        sameDay : '[امروز ساعت] LT',
        nextDay : '[فردا ساعت] LT',
        nextWeek : 'dddd [ساعت] LT',
        lastDay : '[دیروز ساعت] LT',
        lastWeek : 'dddd [پیش] [ساعت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'در %s',
        past : '%s پیش',
        s : 'چند ثانیه',
        m : 'یک دقیقه',
        mm : '%d دقیقه',
        h : 'یک ساعت',
        hh : '%d ساعت',
        d : 'یک روز',
        dd : '%d روز',
        M : 'یک ماه',
        MM : '%d ماه',
        y : 'یک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/[۰-۹]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal : '%dم',
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12 // The week that contains Jan 1st is the first week of the year.
    }
});

return fa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
var numbersFuture = [
        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
        numbersPast[7], numbersPast[8], numbersPast[9]
    ];
function translate(number, withoutSuffix, key, isFuture) {
    var result = '';
    switch (key) {
        case 's':
            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
        case 'm':
            return isFuture ? 'minuutin' : 'minuutti';
        case 'mm':
            result = isFuture ? 'minuutin' : 'minuuttia';
            break;
        case 'h':
            return isFuture ? 'tunnin' : 'tunti';
        case 'hh':
            result = isFuture ? 'tunnin' : 'tuntia';
            break;
        case 'd':
            return isFuture ? 'päivän' : 'päivä';
        case 'dd':
            result = isFuture ? 'päivän' : 'päivää';
            break;
        case 'M':
            return isFuture ? 'kuukauden' : 'kuukausi';
        case 'MM':
            result = isFuture ? 'kuukauden' : 'kuukautta';
            break;
        case 'y':
            return isFuture ? 'vuoden' : 'vuosi';
        case 'yy':
            result = isFuture ? 'vuoden' : 'vuotta';
            break;
    }
    result = verbalNumber(number, isFuture) + ' ' + result;
    return result;
}
function verbalNumber(number, isFuture) {
    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
}

var fi = moment.defineLocale('fi', {
    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'Do MMMM[ta] YYYY',
        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
        l : 'D.M.YYYY',
        ll : 'Do MMM YYYY',
        lll : 'Do MMM YYYY, [klo] HH.mm',
        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
    },
    calendar : {
        sameDay : '[tänään] [klo] LT',
        nextDay : '[huomenna] [klo] LT',
        nextWeek : 'dddd [klo] LT',
        lastDay : '[eilen] [klo] LT',
        lastWeek : '[viime] dddd[na] [klo] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s päästä',
        past : '%s sitten',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var fo = moment.defineLocale('fo', {
    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D. MMMM, YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Í dag kl.] LT',
        nextDay : '[Í morgin kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[Í gjár kl.] LT',
        lastWeek : '[síðstu] dddd [kl] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'um %s',
        past : '%s síðani',
        s : 'fá sekund',
        m : 'ein minutt',
        mm : '%d minuttir',
        h : 'ein tími',
        hh : '%d tímar',
        d : 'ein dagur',
        dd : '%d dagar',
        M : 'ein mánaði',
        MM : '%d mánaðir',
        y : 'eitt ár',
        yy : '%d ár'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr-ca.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ca.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var frCa = moment.defineLocale('fr-ca', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    }
});

return frCa;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr-ch.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var frCh = moment.defineLocale('fr-ch', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return frCh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var fr = moment.defineLocale('fr', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
    ordinal : function (number, period) {
        switch (period) {
            // TODO: Return 'e' when day of month > 1. Move this case inside
            // block for masculine words below.
            // See https://github.com/moment/moment/issues/3375
            case 'D':
                return number + (number === 1 ? 'er' : '');

            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/fy.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fy.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

var fy = moment.defineLocale('fy', {
    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[hjoed om] LT',
        nextDay: '[moarn om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[juster om] LT',
        lastWeek: '[ôfrûne] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'oer %s',
        past : '%s lyn',
        s : 'in pear sekonden',
        m : 'ien minút',
        mm : '%d minuten',
        h : 'ien oere',
        hh : '%d oeren',
        d : 'ien dei',
        dd : '%d dagen',
        M : 'ien moanne',
        MM : '%d moannen',
        y : 'ien jier',
        yy : '%d jierren'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gd.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gd.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = [
    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
];

var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

var gd = moment.defineLocale('gd', {
    months : months,
    monthsShort : monthsShort,
    monthsParseExact : true,
    weekdays : weekdays,
    weekdaysShort : weekdaysShort,
    weekdaysMin : weekdaysMin,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[An-diugh aig] LT',
        nextDay : '[A-màireach aig] LT',
        nextWeek : 'dddd [aig] LT',
        lastDay : '[An-dè aig] LT',
        lastWeek : 'dddd [seo chaidh] [aig] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ann an %s',
        past : 'bho chionn %s',
        s : 'beagan diogan',
        m : 'mionaid',
        mm : '%d mionaidean',
        h : 'uair',
        hh : '%d uairean',
        d : 'latha',
        dd : '%d latha',
        M : 'mìos',
        MM : '%d mìosan',
        y : 'bliadhna',
        yy : '%d bliadhna'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
    ordinal : function (number) {
        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gd;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var gl = moment.defineLocale('gl', {
    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextDay : function () {
            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        lastDay : function () {
            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
        },
        lastWeek : function () {
            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : function (str) {
            if (str.indexOf('un') === 0) {
                return 'n' + str;
            }
            return 'en ' + str;
        },
        past : 'hai %s',
        s : 'uns segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'unha hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gom-latn.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/gom-latn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['thodde secondanim', 'thodde second'],
        'm': ['eka mintan', 'ek minute'],
        'mm': [number + ' mintanim', number + ' mintam'],
        'h': ['eka horan', 'ek hor'],
        'hh': [number + ' horanim', number + ' hor'],
        'd': ['eka disan', 'ek dis'],
        'dd': [number + ' disanim', number + ' dis'],
        'M': ['eka mhoinean', 'ek mhoino'],
        'MM': [number + ' mhoineanim', number + ' mhoine'],
        'y': ['eka vorsan', 'ek voros'],
        'yy': [number + ' vorsanim', number + ' vorsam']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var gomLatn = moment.defineLocale('gom-latn', {
    months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
    monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
    weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
    weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'A h:mm [vazta]',
        LTS : 'A h:mm:ss [vazta]',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY A h:mm [vazta]',
        LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
        llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
    },
    calendar : {
        sameDay: '[Aiz] LT',
        nextDay: '[Faleam] LT',
        nextWeek: '[Ieta to] dddd[,] LT',
        lastDay: '[Kal] LT',
        lastWeek: '[Fatlo] dddd[,] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s',
        past : '%s adim',
        s : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse : /\d{1,2}(er)/,
    ordinal : function (number, period) {
        switch (period) {
            // the ordinal 'er' only applies to day of the month
            case 'D':
                return number + 'er';
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
            case 'w':
            case 'W':
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    },
    meridiemParse: /rati|sokalli|donparam|sanje/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'rati') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'sokalli') {
            return hour;
        } else if (meridiem === 'donparam') {
            return hour > 12 ? hour : hour + 12;
        } else if (meridiem === 'sanje') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'rati';
        } else if (hour < 12) {
            return 'sokalli';
        } else if (hour < 16) {
            return 'donparam';
        } else if (hour < 20) {
            return 'sanje';
        } else {
            return 'rati';
        }
    }
});

return gomLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/gu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
        '1': '૧',
        '2': '૨',
        '3': '૩',
        '4': '૪',
        '5': '૫',
        '6': '૬',
        '7': '૭',
        '8': '૮',
        '9': '૯',
        '0': '૦'
    };
var numberMap = {
        '૧': '1',
        '૨': '2',
        '૩': '3',
        '૪': '4',
        '૫': '5',
        '૬': '6',
        '૭': '7',
        '૮': '8',
        '૯': '9',
        '૦': '0'
    };

var gu = moment.defineLocale('gu', {
    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
    monthsParseExact: true,
    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
    longDateFormat: {
        LT: 'A h:mm વાગ્યે',
        LTS: 'A h:mm:ss વાગ્યે',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
        LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
    },
    calendar: {
        sameDay: '[આજ] LT',
        nextDay: '[કાલે] LT',
        nextWeek: 'dddd, LT',
        lastDay: '[ગઇકાલે] LT',
        lastWeek: '[પાછલા] dddd, LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%s મા',
        past: '%s પેહલા',
        s: 'અમુક પળો',
        m: 'એક મિનિટ',
        mm: '%d મિનિટ',
        h: 'એક કલાક',
        hh: '%d કલાક',
        d: 'એક દિવસ',
        dd: '%d દિવસ',
        M: 'એક મહિનો',
        MM: '%d મહિનો',
        y: 'એક વર્ષ',
        yy: '%d વર્ષ'
    },
    preparse: function (string) {
        return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'રાત') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'સવાર') {
            return hour;
        } else if (meridiem === 'બપોર') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'સાંજ') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'રાત';
        } else if (hour < 10) {
            return 'સવાર';
        } else if (hour < 17) {
            return 'બપોર';
        } else if (hour < 20) {
            return 'સાંજ';
        } else {
            return 'રાત';
        }
    },
    week: {
        dow: 0, // Sunday is the first day of the week.
        doy: 6 // The week that contains Jan 1st is the first week of the year.
    }
});

return gu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/he.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/he.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var he = moment.defineLocale('he', {
    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [ב]MMMM YYYY',
        LLL : 'D [ב]MMMM YYYY HH:mm',
        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
        l : 'D/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[היום ב־]LT',
        nextDay : '[מחר ב־]LT',
        nextWeek : 'dddd [בשעה] LT',
        lastDay : '[אתמול ב־]LT',
        lastWeek : '[ביום] dddd [האחרון בשעה] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'בעוד %s',
        past : 'לפני %s',
        s : 'מספר שניות',
        m : 'דקה',
        mm : '%d דקות',
        h : 'שעה',
        hh : function (number) {
            if (number === 2) {
                return 'שעתיים';
            }
            return number + ' שעות';
        },
        d : 'יום',
        dd : function (number) {
            if (number === 2) {
                return 'יומיים';
            }
            return number + ' ימים';
        },
        M : 'חודש',
        MM : function (number) {
            if (number === 2) {
                return 'חודשיים';
            }
            return number + ' חודשים';
        },
        y : 'שנה',
        yy : function (number) {
            if (number === 2) {
                return 'שנתיים';
            } else if (number % 10 === 0 && number !== 10) {
                return number + ' שנה';
            }
            return number + ' שנים';
        }
    },
    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
    isPM : function (input) {
        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 5) {
            return 'לפנות בוקר';
        } else if (hour < 10) {
            return 'בבוקר';
        } else if (hour < 12) {
            return isLower ? 'לפנה"צ' : 'לפני הצהריים';
        } else if (hour < 18) {
            return isLower ? 'אחה"צ' : 'אחרי הצהריים';
        } else {
            return 'בערב';
        }
    }
});

return he;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var hi = moment.defineLocale('hi', {
    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
    monthsParseExact: true,
    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm बजे',
        LTS : 'A h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[कल] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[कल] LT',
        lastWeek : '[पिछले] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s में',
        past : '%s पहले',
        s : 'कुछ ही क्षण',
        m : 'एक मिनट',
        mm : '%d मिनट',
        h : 'एक घंटा',
        hh : '%d घंटे',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महीने',
        MM : '%d महीने',
        y : 'एक वर्ष',
        yy : '%d वर्ष'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सुबह') {
            return hour;
        } else if (meridiem === 'दोपहर') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'शाम') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात';
        } else if (hour < 10) {
            return 'सुबह';
        } else if (hour < 17) {
            return 'दोपहर';
        } else if (hour < 20) {
            return 'शाम';
        } else {
            return 'रात';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return hi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var hr = moment.defineLocale('hr', {
    months : {
        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
    },
    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
function translate(number, withoutSuffix, key, isFuture) {
    var num = number;
    switch (key) {
        case 's':
            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
        case 'm':
            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'mm':
            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'h':
            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'hh':
            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'd':
            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'dd':
            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'M':
            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'MM':
            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'y':
            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
        case 'yy':
            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
    }
    return '';
}
function week(isFuture) {
    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
}

var hu = moment.defineLocale('hu', {
    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'YYYY.MM.DD.',
        LL : 'YYYY. MMMM D.',
        LLL : 'YYYY. MMMM D. H:mm',
        LLLL : 'YYYY. MMMM D., dddd H:mm'
    },
    meridiemParse: /de|du/i,
    isPM: function (input) {
        return input.charAt(1).toLowerCase() === 'u';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower === true ? 'de' : 'DE';
        } else {
            return isLower === true ? 'du' : 'DU';
        }
    },
    calendar : {
        sameDay : '[ma] LT[-kor]',
        nextDay : '[holnap] LT[-kor]',
        nextWeek : function () {
            return week.call(this, true);
        },
        lastDay : '[tegnap] LT[-kor]',
        lastWeek : function () {
            return week.call(this, false);
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s múlva',
        past : '%s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return hu;

})));


/***/ }),

/***/ "./node_modules/moment/locale/hy-am.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/hy-am.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var hyAm = moment.defineLocale('hy-am', {
    months : {
        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
    },
    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY թ.',
        LLL : 'D MMMM YYYY թ., HH:mm',
        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
    },
    calendar : {
        sameDay: '[այսօր] LT',
        nextDay: '[վաղը] LT',
        lastDay: '[երեկ] LT',
        nextWeek: function () {
            return 'dddd [օրը ժամը] LT';
        },
        lastWeek: function () {
            return '[անցած] dddd [օրը ժամը] LT';
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s հետո',
        past : '%s առաջ',
        s : 'մի քանի վայրկյան',
        m : 'րոպե',
        mm : '%d րոպե',
        h : 'ժամ',
        hh : '%d ժամ',
        d : 'օր',
        dd : '%d օր',
        M : 'ամիս',
        MM : '%d ամիս',
        y : 'տարի',
        yy : '%d տարի'
    },
    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
    isPM: function (input) {
        return /^(ցերեկվա|երեկոյան)$/.test(input);
    },
    meridiem : function (hour) {
        if (hour < 4) {
            return 'գիշերվա';
        } else if (hour < 12) {
            return 'առավոտվա';
        } else if (hour < 17) {
            return 'ցերեկվա';
        } else {
            return 'երեկոյան';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'DDD':
            case 'w':
            case 'W':
            case 'DDDo':
                if (number === 1) {
                    return number + '-ին';
                }
                return number + '-րդ';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hyAm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/id.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/id.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var id = moment.defineLocale('id', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|siang|sore|malam/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'siang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sore' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'siang';
        } else if (hours < 19) {
            return 'sore';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Besok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kemarin pukul] LT',
        lastWeek : 'dddd [lalu pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lalu',
        s : 'beberapa detik',
        m : 'semenit',
        mm : '%d menit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return id;

})));


/***/ }),

/***/ "./node_modules/moment/locale/is.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/is.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function plural(n) {
    if (n % 100 === 11) {
        return true;
    } else if (n % 10 === 1) {
        return false;
    }
    return true;
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
        case 'm':
            return withoutSuffix ? 'mínúta' : 'mínútu';
        case 'mm':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
            } else if (withoutSuffix) {
                return result + 'mínúta';
            }
            return result + 'mínútu';
        case 'hh':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
            }
            return result + 'klukkustund';
        case 'd':
            if (withoutSuffix) {
                return 'dagur';
            }
            return isFuture ? 'dag' : 'degi';
        case 'dd':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'dagar';
                }
                return result + (isFuture ? 'daga' : 'dögum');
            } else if (withoutSuffix) {
                return result + 'dagur';
            }
            return result + (isFuture ? 'dag' : 'degi');
        case 'M':
            if (withoutSuffix) {
                return 'mánuður';
            }
            return isFuture ? 'mánuð' : 'mánuði';
        case 'MM':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'mánuðir';
                }
                return result + (isFuture ? 'mánuði' : 'mánuðum');
            } else if (withoutSuffix) {
                return result + 'mánuður';
            }
            return result + (isFuture ? 'mánuð' : 'mánuði');
        case 'y':
            return withoutSuffix || isFuture ? 'ár' : 'ári';
        case 'yy':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
            }
            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
    }
}

var is = moment.defineLocale('is', {
    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
    },
    calendar : {
        sameDay : '[í dag kl.] LT',
        nextDay : '[á morgun kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[í gær kl.] LT',
        lastWeek : '[síðasta] dddd [kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'eftir %s',
        past : 'fyrir %s síðan',
        s : translate,
        m : translate,
        mm : translate,
        h : 'klukkustund',
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return is;

})));


/***/ }),

/***/ "./node_modules/moment/locale/it.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/it.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var it = moment.defineLocale('it', {
    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Oggi alle] LT',
        nextDay: '[Domani alle] LT',
        nextWeek: 'dddd [alle] LT',
        lastDay: '[Ieri alle] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[la scorsa] dddd [alle] LT';
                default:
                    return '[lo scorso] dddd [alle] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : function (s) {
            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
        },
        past : '%s fa',
        s : 'alcuni secondi',
        m : 'un minuto',
        mm : '%d minuti',
        h : 'un\'ora',
        hh : '%d ore',
        d : 'un giorno',
        dd : '%d giorni',
        M : 'un mese',
        MM : '%d mesi',
        y : 'un anno',
        yy : '%d anni'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return it;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ja.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ja.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ja = moment.defineLocale('ja', {
    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日 HH:mm',
        LLLL : 'YYYY年M月D日 HH:mm dddd',
        l : 'YYYY/MM/DD',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日 HH:mm dddd'
    },
    meridiemParse: /午前|午後/i,
    isPM : function (input) {
        return input === '午後';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return '午前';
        } else {
            return '午後';
        }
    },
    calendar : {
        sameDay : '[今日] LT',
        nextDay : '[明日] LT',
        nextWeek : '[来週]dddd LT',
        lastDay : '[昨日] LT',
        lastWeek : '[前週]dddd LT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse : /\d{1,2}日/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s後',
        past : '%s前',
        s : '数秒',
        m : '1分',
        mm : '%d分',
        h : '1時間',
        hh : '%d時間',
        d : '1日',
        dd : '%d日',
        M : '1ヶ月',
        MM : '%dヶ月',
        y : '1年',
        yy : '%d年'
    }
});

return ja;

})));


/***/ }),

/***/ "./node_modules/moment/locale/jv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/jv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var jv = moment.defineLocale('jv', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /enjing|siyang|sonten|ndalu/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'enjing') {
            return hour;
        } else if (meridiem === 'siyang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'enjing';
        } else if (hours < 15) {
            return 'siyang';
        } else if (hours < 19) {
            return 'sonten';
        } else {
            return 'ndalu';
        }
    },
    calendar : {
        sameDay : '[Dinten puniko pukul] LT',
        nextDay : '[Mbenjang pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kala wingi pukul] LT',
        lastWeek : 'dddd [kepengker pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'wonten ing %s',
        past : '%s ingkang kepengker',
        s : 'sawetawis detik',
        m : 'setunggal menit',
        mm : '%d menit',
        h : 'setunggal jam',
        hh : '%d jam',
        d : 'sedinten',
        dd : '%d dinten',
        M : 'sewulan',
        MM : '%d wulan',
        y : 'setaun',
        yy : '%d taun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return jv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ka.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ka.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ka = moment.defineLocale('ka', {
    months : {
        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
    },
    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
    weekdays : {
        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
        isFormat: /(წინა|შემდეგ)/
    },
    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[დღეს] LT[-ზე]',
        nextDay : '[ხვალ] LT[-ზე]',
        lastDay : '[გუშინ] LT[-ზე]',
        nextWeek : '[შემდეგ] dddd LT[-ზე]',
        lastWeek : '[წინა] dddd LT-ზე',
        sameElse : 'L'
    },
    relativeTime : {
        future : function (s) {
            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                s.replace(/ი$/, 'ში') :
                s + 'ში';
        },
        past : function (s) {
            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                return s.replace(/(ი|ე)$/, 'ის უკან');
            }
            if ((/წელი/).test(s)) {
                return s.replace(/წელი$/, 'წლის უკან');
            }
        },
        s : 'რამდენიმე წამი',
        m : 'წუთი',
        mm : '%d წუთი',
        h : 'საათი',
        hh : '%d საათი',
        d : 'დღე',
        dd : '%d დღე',
        M : 'თვე',
        MM : '%d თვე',
        y : 'წელი',
        yy : '%d წელი'
    },
    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
    ordinal : function (number) {
        if (number === 0) {
            return number;
        }
        if (number === 1) {
            return number + '-ლი';
        }
        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
            return 'მე-' + number;
        }
        return number + '-ე';
    },
    week : {
        dow : 1,
        doy : 7
    }
});

return ka;

})));


/***/ }),

/***/ "./node_modules/moment/locale/kk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/kk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var suffixes = {
    0: '-ші',
    1: '-ші',
    2: '-ші',
    3: '-ші',
    4: '-ші',
    5: '-ші',
    6: '-шы',
    7: '-ші',
    8: '-ші',
    9: '-шы',
    10: '-шы',
    20: '-шы',
    30: '-шы',
    40: '-шы',
    50: '-ші',
    60: '-шы',
    70: '-ші',
    80: '-ші',
    90: '-шы',
    100: '-ші'
};

var kk = moment.defineLocale('kk', {
    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгін сағат] LT',
        nextDay : '[Ертең сағат] LT',
        nextWeek : 'dddd [сағат] LT',
        lastDay : '[Кеше сағат] LT',
        lastWeek : '[Өткен аптаның] dddd [сағат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ішінде',
        past : '%s бұрын',
        s : 'бірнеше секунд',
        m : 'бір минут',
        mm : '%d минут',
        h : 'бір сағат',
        hh : '%d сағат',
        d : 'бір күн',
        dd : '%d күн',
        M : 'бір ай',
        MM : '%d ай',
        y : 'бір жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return kk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/km.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/km.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var km = moment.defineLocale('km', {
    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
        nextDay: '[ស្អែក ម៉ោង] LT',
        nextWeek: 'dddd [ម៉ោង] LT',
        lastDay: '[ម្សិលមិញ ម៉ោង] LT',
        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%sទៀត',
        past: '%sមុន',
        s: 'ប៉ុន្មានវិនាទី',
        m: 'មួយនាទី',
        mm: '%d នាទី',
        h: 'មួយម៉ោង',
        hh: '%d ម៉ោង',
        d: 'មួយថ្ងៃ',
        dd: '%d ថ្ងៃ',
        M: 'មួយខែ',
        MM: '%d ខែ',
        y: 'មួយឆ្នាំ',
        yy: '%d ឆ្នាំ'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return km;

})));


/***/ }),

/***/ "./node_modules/moment/locale/kn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/kn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '೧',
    '2': '೨',
    '3': '೩',
    '4': '೪',
    '5': '೫',
    '6': '೬',
    '7': '೭',
    '8': '೮',
    '9': '೯',
    '0': '೦'
};
var numberMap = {
    '೧': '1',
    '೨': '2',
    '೩': '3',
    '೪': '4',
    '೫': '5',
    '೬': '6',
    '೭': '7',
    '೮': '8',
    '೯': '9',
    '೦': '0'
};

var kn = moment.defineLocale('kn', {
    months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
    monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
    monthsParseExact: true,
    weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
    weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
    weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[ಇಂದು] LT',
        nextDay : '[ನಾಳೆ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ನಿನ್ನೆ] LT',
        lastWeek : '[ಕೊನೆಯ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ನಂತರ',
        past : '%s ಹಿಂದೆ',
        s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
        m : 'ಒಂದು ನಿಮಿಷ',
        mm : '%d ನಿಮಿಷ',
        h : 'ಒಂದು ಗಂಟೆ',
        hh : '%d ಗಂಟೆ',
        d : 'ಒಂದು ದಿನ',
        dd : '%d ದಿನ',
        M : 'ಒಂದು ತಿಂಗಳು',
        MM : '%d ತಿಂಗಳು',
        y : 'ಒಂದು ವರ್ಷ',
        yy : '%d ವರ್ಷ'
    },
    preparse: function (string) {
        return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ರಾತ್ರಿ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
            return hour;
        } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ಸಂಜೆ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ರಾತ್ರಿ';
        } else if (hour < 10) {
            return 'ಬೆಳಿಗ್ಗೆ';
        } else if (hour < 17) {
            return 'ಮಧ್ಯಾಹ್ನ';
        } else if (hour < 20) {
            return 'ಸಂಜೆ';
        } else {
            return 'ರಾತ್ರಿ';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
    ordinal : function (number) {
        return number + 'ನೇ';
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return kn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ko.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ko.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ko = moment.defineLocale('ko', {
    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'YYYY.MM.DD',
        LL : 'YYYY년 MMMM D일',
        LLL : 'YYYY년 MMMM D일 A h:mm',
        LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
        l : 'YYYY.MM.DD',
        ll : 'YYYY년 MMMM D일',
        lll : 'YYYY년 MMMM D일 A h:mm',
        llll : 'YYYY년 MMMM D일 dddd A h:mm'
    },
    calendar : {
        sameDay : '오늘 LT',
        nextDay : '내일 LT',
        nextWeek : 'dddd LT',
        lastDay : '어제 LT',
        lastWeek : '지난주 dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s 후',
        past : '%s 전',
        s : '몇 초',
        ss : '%d초',
        m : '1분',
        mm : '%d분',
        h : '한 시간',
        hh : '%d시간',
        d : '하루',
        dd : '%d일',
        M : '한 달',
        MM : '%d달',
        y : '일 년',
        yy : '%d년'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '일';
            case 'M':
                return number + '월';
            case 'w':
            case 'W':
                return number + '주';
            default:
                return number;
        }
    },
    meridiemParse : /오전|오후/,
    isPM : function (token) {
        return token === '오후';
    },
    meridiem : function (hour, minute, isUpper) {
        return hour < 12 ? '오전' : '오후';
    }
});

return ko;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ky.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ky.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';



var suffixes = {
    0: '-чү',
    1: '-чи',
    2: '-чи',
    3: '-чү',
    4: '-чү',
    5: '-чи',
    6: '-чы',
    7: '-чи',
    8: '-чи',
    9: '-чу',
    10: '-чу',
    20: '-чы',
    30: '-чу',
    40: '-чы',
    50: '-чү',
    60: '-чы',
    70: '-чи',
    80: '-чи',
    90: '-чу',
    100: '-чү'
};

var ky = moment.defineLocale('ky', {
    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгүн саат] LT',
        nextDay : '[Эртең саат] LT',
        nextWeek : 'dddd [саат] LT',
        lastDay : '[Кече саат] LT',
        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ичинде',
        past : '%s мурун',
        s : 'бирнече секунд',
        m : 'бир мүнөт',
        mm : '%d мүнөт',
        h : 'бир саат',
        hh : '%d саат',
        d : 'бир күн',
        dd : '%d күн',
        M : 'бир ай',
        MM : '%d ай',
        y : 'бир жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ky;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lb.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lb.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eng Minutt', 'enger Minutt'],
        'h': ['eng Stonn', 'enger Stonn'],
        'd': ['een Dag', 'engem Dag'],
        'M': ['ee Mount', 'engem Mount'],
        'y': ['ee Joer', 'engem Joer']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}
function processFutureTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'a ' + string;
    }
    return 'an ' + string;
}
function processPastTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'viru ' + string;
    }
    return 'virun ' + string;
}
/**
 * Returns true if the word before the given number loses the '-n' ending.
 * e.g. 'an 10 Deeg' but 'a 5 Deeg'
 *
 * @param number {integer}
 * @returns {boolean}
 */
function eifelerRegelAppliesToNumber(number) {
    number = parseInt(number, 10);
    if (isNaN(number)) {
        return false;
    }
    if (number < 0) {
        // Negative Number --> always true
        return true;
    } else if (number < 10) {
        // Only 1 digit
        if (4 <= number && number <= 7) {
            return true;
        }
        return false;
    } else if (number < 100) {
        // 2 digits
        var lastDigit = number % 10, firstDigit = number / 10;
        if (lastDigit === 0) {
            return eifelerRegelAppliesToNumber(firstDigit);
        }
        return eifelerRegelAppliesToNumber(lastDigit);
    } else if (number < 10000) {
        // 3 or 4 digits --> recursively check first digit
        while (number >= 10) {
            number = number / 10;
        }
        return eifelerRegelAppliesToNumber(number);
    } else {
        // Anything larger than 4 digits: recursively check first n-3 digits
        number = number / 1000;
        return eifelerRegelAppliesToNumber(number);
    }
}

var lb = moment.defineLocale('lb', {
    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm [Auer]',
        LTS: 'H:mm:ss [Auer]',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm [Auer]',
        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
    },
    calendar: {
        sameDay: '[Haut um] LT',
        sameElse: 'L',
        nextDay: '[Muer um] LT',
        nextWeek: 'dddd [um] LT',
        lastDay: '[Gëschter um] LT',
        lastWeek: function () {
            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
            switch (this.day()) {
                case 2:
                case 4:
                    return '[Leschten] dddd [um] LT';
                default:
                    return '[Leschte] dddd [um] LT';
            }
        }
    },
    relativeTime : {
        future : processFutureTime,
        past : processPastTime,
        s : 'e puer Sekonnen',
        m : processRelativeTime,
        mm : '%d Minutten',
        h : processRelativeTime,
        hh : '%d Stonnen',
        d : processRelativeTime,
        dd : '%d Deeg',
        M : processRelativeTime,
        MM : '%d Méint',
        y : processRelativeTime,
        yy : '%d Joer'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var lo = moment.defineLocale('lo', {
    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
    isPM: function (input) {
        return input === 'ຕອນແລງ';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ຕອນເຊົ້າ';
        } else {
            return 'ຕອນແລງ';
        }
    },
    calendar : {
        sameDay : '[ມື້ນີ້ເວລາ] LT',
        nextDay : '[ມື້ອື່ນເວລາ] LT',
        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
        lastDay : '[ມື້ວານນີ້ເວລາ] LT',
        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ອີກ %s',
        past : '%sຜ່ານມາ',
        s : 'ບໍ່ເທົ່າໃດວິນາທີ',
        m : '1 ນາທີ',
        mm : '%d ນາທີ',
        h : '1 ຊົ່ວໂມງ',
        hh : '%d ຊົ່ວໂມງ',
        d : '1 ມື້',
        dd : '%d ມື້',
        M : '1 ເດືອນ',
        MM : '%d ເດືອນ',
        y : '1 ປີ',
        yy : '%d ປີ'
    },
    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
    ordinal : function (number) {
        return 'ທີ່' + number;
    }
});

return lo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lt.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lt.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var units = {
    'm' : 'minutė_minutės_minutę',
    'mm': 'minutės_minučių_minutes',
    'h' : 'valanda_valandos_valandą',
    'hh': 'valandos_valandų_valandas',
    'd' : 'diena_dienos_dieną',
    'dd': 'dienos_dienų_dienas',
    'M' : 'mėnuo_mėnesio_mėnesį',
    'MM': 'mėnesiai_mėnesių_mėnesius',
    'y' : 'metai_metų_metus',
    'yy': 'metai_metų_metus'
};
function translateSeconds(number, withoutSuffix, key, isFuture) {
    if (withoutSuffix) {
        return 'kelios sekundės';
    } else {
        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
    }
}
function translateSingular(number, withoutSuffix, key, isFuture) {
    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
}
function special(number) {
    return number % 10 === 0 || (number > 10 && number < 20);
}
function forms(key) {
    return units[key].split('_');
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    if (number === 1) {
        return result + translateSingular(number, withoutSuffix, key[0], isFuture);
    } else if (withoutSuffix) {
        return result + (special(number) ? forms(key)[1] : forms(key)[0]);
    } else {
        if (isFuture) {
            return result + forms(key)[1];
        } else {
            return result + (special(number) ? forms(key)[1] : forms(key)[2]);
        }
    }
}
var lt = moment.defineLocale('lt', {
    months : {
        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
    },
    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
    weekdays : {
        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
        isFormat: /dddd HH:mm/
    },
    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY [m.] MMMM D [d.]',
        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
        l : 'YYYY-MM-DD',
        ll : 'YYYY [m.] MMMM D [d.]',
        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
    },
    calendar : {
        sameDay : '[Šiandien] LT',
        nextDay : '[Rytoj] LT',
        nextWeek : 'dddd LT',
        lastDay : '[Vakar] LT',
        lastWeek : '[Praėjusį] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'po %s',
        past : 'prieš %s',
        s : translateSeconds,
        m : translateSingular,
        mm : translate,
        h : translateSingular,
        hh : translate,
        d : translateSingular,
        dd : translate,
        M : translateSingular,
        MM : translate,
        y : translateSingular,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
    ordinal : function (number) {
        return number + '-oji';
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/lv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var units = {
    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'h': 'stundas_stundām_stunda_stundas'.split('_'),
    'hh': 'stundas_stundām_stunda_stundas'.split('_'),
    'd': 'dienas_dienām_diena_dienas'.split('_'),
    'dd': 'dienas_dienām_diena_dienas'.split('_'),
    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'y': 'gada_gadiem_gads_gadi'.split('_'),
    'yy': 'gada_gadiem_gads_gadi'.split('_')
};
/**
 * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
 */
function format(forms, number, withoutSuffix) {
    if (withoutSuffix) {
        // E.g. "21 minūte", "3 minūtes".
        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
    } else {
        // E.g. "21 minūtes" as in "pēc 21 minūtes".
        // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
    }
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    return number + ' ' + format(units[key], number, withoutSuffix);
}
function relativeTimeWithSingular(number, withoutSuffix, key) {
    return format(units[key], number, withoutSuffix);
}
function relativeSeconds(number, withoutSuffix) {
    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
}

var lv = moment.defineLocale('lv', {
    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY.',
        LL : 'YYYY. [gada] D. MMMM',
        LLL : 'YYYY. [gada] D. MMMM, HH:mm',
        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
    },
    calendar : {
        sameDay : '[Šodien pulksten] LT',
        nextDay : '[Rīt pulksten] LT',
        nextWeek : 'dddd [pulksten] LT',
        lastDay : '[Vakar pulksten] LT',
        lastWeek : '[Pagājušā] dddd [pulksten] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'pēc %s',
        past : 'pirms %s',
        s : relativeSeconds,
        m : relativeTimeWithSingular,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithSingular,
        hh : relativeTimeWithPlural,
        d : relativeTimeWithSingular,
        dd : relativeTimeWithPlural,
        M : relativeTimeWithSingular,
        MM : relativeTimeWithPlural,
        y : relativeTimeWithSingular,
        yy : relativeTimeWithPlural
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/me.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/me.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['jedan minut', 'jednog minuta'],
        mm: ['minut', 'minuta', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mjesec', 'mjeseca', 'mjeseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var me = moment.defineLocale('me', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact : true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sjutra u] LT',

        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedjelje] [u] LT',
                '[prošlog] [ponedjeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srijede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'nekoliko sekundi',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mjesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return me;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var mi = moment.defineLocale('mi', {
    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY [i] HH:mm',
        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
    },
    calendar: {
        sameDay: '[i teie mahana, i] LT',
        nextDay: '[apopo i] LT',
        nextWeek: 'dddd [i] LT',
        lastDay: '[inanahi i] LT',
        lastWeek: 'dddd [whakamutunga i] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'i roto i %s',
        past: '%s i mua',
        s: 'te hēkona ruarua',
        m: 'he meneti',
        mm: '%d meneti',
        h: 'te haora',
        hh: '%d haora',
        d: 'he ra',
        dd: '%d ra',
        M: 'he marama',
        MM: '%d marama',
        y: 'he tau',
        yy: '%d tau'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return mi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var mk = moment.defineLocale('mk', {
    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Денес во] LT',
        nextDay : '[Утре во] LT',
        nextWeek : '[Во] dddd [во] LT',
        lastDay : '[Вчера во] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[Изминатата] dddd [во] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[Изминатиот] dddd [во] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'после %s',
        past : 'пред %s',
        s : 'неколку секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дена',
        M : 'месец',
        MM : '%d месеци',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return mk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ml.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ml.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ml = moment.defineLocale('ml', {
    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm -നു',
        LTS : 'A h:mm:ss -നു',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm -നു',
        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
    },
    calendar : {
        sameDay : '[ഇന്ന്] LT',
        nextDay : '[നാളെ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ഇന്നലെ] LT',
        lastWeek : '[കഴിഞ്ഞ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s കഴിഞ്ഞ്',
        past : '%s മുൻപ്',
        s : 'അൽപ നിമിഷങ്ങൾ',
        m : 'ഒരു മിനിറ്റ്',
        mm : '%d മിനിറ്റ്',
        h : 'ഒരു മണിക്കൂർ',
        hh : '%d മണിക്കൂർ',
        d : 'ഒരു ദിവസം',
        dd : '%d ദിവസം',
        M : 'ഒരു മാസം',
        MM : '%d മാസം',
        y : 'ഒരു വർഷം',
        yy : '%d വർഷം'
    },
    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'രാത്രി';
        } else if (hour < 12) {
            return 'രാവിലെ';
        } else if (hour < 17) {
            return 'ഉച്ച കഴിഞ്ഞ്';
        } else if (hour < 20) {
            return 'വൈകുന്നേരം';
        } else {
            return 'രാത്രി';
        }
    }
});

return ml;

})));


/***/ }),

/***/ "./node_modules/moment/locale/mr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

function relativeTimeMr(number, withoutSuffix, string, isFuture)
{
    var output = '';
    if (withoutSuffix) {
        switch (string) {
            case 's': output = 'काही सेकंद'; break;
            case 'm': output = 'एक मिनिट'; break;
            case 'mm': output = '%d मिनिटे'; break;
            case 'h': output = 'एक तास'; break;
            case 'hh': output = '%d तास'; break;
            case 'd': output = 'एक दिवस'; break;
            case 'dd': output = '%d दिवस'; break;
            case 'M': output = 'एक महिना'; break;
            case 'MM': output = '%d महिने'; break;
            case 'y': output = 'एक वर्ष'; break;
            case 'yy': output = '%d वर्षे'; break;
        }
    }
    else {
        switch (string) {
            case 's': output = 'काही सेकंदां'; break;
            case 'm': output = 'एका मिनिटा'; break;
            case 'mm': output = '%d मिनिटां'; break;
            case 'h': output = 'एका तासा'; break;
            case 'hh': output = '%d तासां'; break;
            case 'd': output = 'एका दिवसा'; break;
            case 'dd': output = '%d दिवसां'; break;
            case 'M': output = 'एका महिन्या'; break;
            case 'MM': output = '%d महिन्यां'; break;
            case 'y': output = 'एका वर्षा'; break;
            case 'yy': output = '%d वर्षां'; break;
        }
    }
    return output.replace(/%d/i, number);
}

var mr = moment.defineLocale('mr', {
    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
    monthsParseExact : true,
    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm वाजता',
        LTS : 'A h:mm:ss वाजता',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm वाजता',
        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[उद्या] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[काल] LT',
        lastWeek: '[मागील] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future: '%sमध्ये',
        past: '%sपूर्वी',
        s: relativeTimeMr,
        m: relativeTimeMr,
        mm: relativeTimeMr,
        h: relativeTimeMr,
        hh: relativeTimeMr,
        d: relativeTimeMr,
        dd: relativeTimeMr,
        M: relativeTimeMr,
        MM: relativeTimeMr,
        y: relativeTimeMr,
        yy: relativeTimeMr
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात्री') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सकाळी') {
            return hour;
        } else if (meridiem === 'दुपारी') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'सायंकाळी') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात्री';
        } else if (hour < 10) {
            return 'सकाळी';
        } else if (hour < 17) {
            return 'दुपारी';
        } else if (hour < 20) {
            return 'सायंकाळी';
        } else {
            return 'रात्री';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return mr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ms-my.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ms-my.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var msMy = moment.defineLocale('ms-my', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return msMy;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ms.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ms.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ms = moment.defineLocale('ms', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ms;

})));


/***/ }),

/***/ "./node_modules/moment/locale/my.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/my.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '၁',
    '2': '၂',
    '3': '၃',
    '4': '၄',
    '5': '၅',
    '6': '၆',
    '7': '၇',
    '8': '၈',
    '9': '၉',
    '0': '၀'
};
var numberMap = {
    '၁': '1',
    '၂': '2',
    '၃': '3',
    '၄': '4',
    '၅': '5',
    '၆': '6',
    '၇': '7',
    '၈': '8',
    '၉': '9',
    '၀': '0'
};

var my = moment.defineLocale('my', {
    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ယနေ.] LT [မှာ]',
        nextDay: '[မနက်ဖြန်] LT [မှာ]',
        nextWeek: 'dddd LT [မှာ]',
        lastDay: '[မနေ.က] LT [မှာ]',
        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'လာမည့် %s မှာ',
        past: 'လွန်ခဲ့သော %s က',
        s: 'စက္ကန်.အနည်းငယ်',
        m: 'တစ်မိနစ်',
        mm: '%d မိနစ်',
        h: 'တစ်နာရီ',
        hh: '%d နာရီ',
        d: 'တစ်ရက်',
        dd: '%d ရက်',
        M: 'တစ်လ',
        MM: '%d လ',
        y: 'တစ်နှစ်',
        yy: '%d နှစ်'
    },
    preparse: function (string) {
        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 1st is the first week of the year.
    }
});

return my;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nb.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nb.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var nb = moment.defineLocale('nb', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[i dag kl.] LT',
        nextDay: '[i morgen kl.] LT',
        nextWeek: 'dddd [kl.] LT',
        lastDay: '[i går kl.] LT',
        lastWeek: '[forrige] dddd [kl.] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'noen sekunder',
        m : 'ett minutt',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dager',
        M : 'en måned',
        MM : '%d måneder',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nb;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ne.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ne.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var ne = moment.defineLocale('ne', {
    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
    monthsParseExact : true,
    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'Aको h:mm बजे',
        LTS : 'Aको h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, Aको h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'राति') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'बिहान') {
            return hour;
        } else if (meridiem === 'दिउँसो') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'साँझ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 3) {
            return 'राति';
        } else if (hour < 12) {
            return 'बिहान';
        } else if (hour < 16) {
            return 'दिउँसो';
        } else if (hour < 20) {
            return 'साँझ';
        } else {
            return 'राति';
        }
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[भोलि] LT',
        nextWeek : '[आउँदो] dddd[,] LT',
        lastDay : '[हिजो] LT',
        lastWeek : '[गएको] dddd[,] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sमा',
        past : '%s अगाडि',
        s : 'केही क्षण',
        m : 'एक मिनेट',
        mm : '%d मिनेट',
        h : 'एक घण्टा',
        hh : '%d घण्टा',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महिना',
        MM : '%d महिना',
        y : 'एक बर्ष',
        yy : '%d बर्ष'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ne;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nl-be.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/nl-be.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nlBe = moment.defineLocale('nl-be', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nlBe;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nl = moment.defineLocale('nl', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/nn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! author : https://github.com/mechuwind

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var nn = moment.defineLocale('nn', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[I dag klokka] LT',
        nextDay: '[I morgon klokka] LT',
        nextWeek: 'dddd [klokka] LT',
        lastDay: '[I går klokka] LT',
        lastWeek: '[Føregåande] dddd [klokka] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s sidan',
        s : 'nokre sekund',
        m : 'eit minutt',
        mm : '%d minutt',
        h : 'ein time',
        hh : '%d timar',
        d : 'ein dag',
        dd : '%d dagar',
        M : 'ein månad',
        MM : '%d månader',
        y : 'eit år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pa-in.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/pa-in.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '੧',
    '2': '੨',
    '3': '੩',
    '4': '੪',
    '5': '੫',
    '6': '੬',
    '7': '੭',
    '8': '੮',
    '9': '੯',
    '0': '੦'
};
var numberMap = {
    '੧': '1',
    '੨': '2',
    '੩': '3',
    '੪': '4',
    '੫': '5',
    '੬': '6',
    '੭': '7',
    '੮': '8',
    '੯': '9',
    '੦': '0'
};

var paIn = moment.defineLocale('pa-in', {
    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm ਵਜੇ',
        LTS : 'A h:mm:ss ਵਜੇ',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
    },
    calendar : {
        sameDay : '[ਅਜ] LT',
        nextDay : '[ਕਲ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ਕਲ] LT',
        lastWeek : '[ਪਿਛਲੇ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ਵਿੱਚ',
        past : '%s ਪਿਛਲੇ',
        s : 'ਕੁਝ ਸਕਿੰਟ',
        m : 'ਇਕ ਮਿੰਟ',
        mm : '%d ਮਿੰਟ',
        h : 'ਇੱਕ ਘੰਟਾ',
        hh : '%d ਘੰਟੇ',
        d : 'ਇੱਕ ਦਿਨ',
        dd : '%d ਦਿਨ',
        M : 'ਇੱਕ ਮਹੀਨਾ',
        MM : '%d ਮਹੀਨੇ',
        y : 'ਇੱਕ ਸਾਲ',
        yy : '%d ਸਾਲ'
    },
    preparse: function (string) {
        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ਰਾਤ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ਸਵੇਰ') {
            return hour;
        } else if (meridiem === 'ਦੁਪਹਿਰ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ਸ਼ਾਮ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ਰਾਤ';
        } else if (hour < 10) {
            return 'ਸਵੇਰ';
        } else if (hour < 17) {
            return 'ਦੁਪਹਿਰ';
        } else if (hour < 20) {
            return 'ਸ਼ਾਮ';
        } else {
            return 'ਰਾਤ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return paIn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/pl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
function plural(n) {
    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
}
function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'minuta' : 'minutę';
        case 'mm':
            return result + (plural(number) ? 'minuty' : 'minut');
        case 'h':
            return withoutSuffix  ? 'godzina'  : 'godzinę';
        case 'hh':
            return result + (plural(number) ? 'godziny' : 'godzin');
        case 'MM':
            return result + (plural(number) ? 'miesiące' : 'miesięcy');
        case 'yy':
            return result + (plural(number) ? 'lata' : 'lat');
    }
}

var pl = moment.defineLocale('pl', {
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return monthsNominative;
        } else if (format === '') {
            // Hack: if format empty we know this is used to generate
            // RegExp by moment. Give then back both valid forms of months
            // in RegExp ready format.
            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
        } else if (/D MMMM/.test(format)) {
            return monthsSubjective[momentToFormat.month()];
        } else {
            return monthsNominative[momentToFormat.month()];
        }
    },
    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Dziś o] LT',
        nextDay: '[Jutro o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W niedzielę o] LT';

                case 2:
                    return '[We wtorek o] LT';

                case 3:
                    return '[W środę o] LT';

                case 6:
                    return '[W sobotę o] LT';

                default:
                    return '[W] dddd [o] LT';
            }
        },
        lastDay: '[Wczoraj o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W zeszłą niedzielę o] LT';
                case 3:
                    return '[W zeszłą środę o] LT';
                case 6:
                    return '[W zeszłą sobotę o] LT';
                default:
                    return '[W zeszły] dddd [o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : '%s temu',
        s : 'kilka sekund',
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : '1 dzień',
        dd : '%d dni',
        M : 'miesiąc',
        MM : translate,
        y : 'rok',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pt-br.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/pt-br.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var ptBr = moment.defineLocale('pt-br', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : '%s atrás',
        s : 'poucos segundos',
        ss : '%d segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº'
});

return ptBr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/pt.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/pt.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var pt = moment.defineLocale('pt', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : 'há %s',
        s : 'segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pt;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ro.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ro.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
            'mm': 'minute',
            'hh': 'ore',
            'dd': 'zile',
            'MM': 'luni',
            'yy': 'ani'
        },
        separator = ' ';
    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
        separator = ' de ';
    }
    return number + separator + format[key];
}

var ro = moment.defineLocale('ro', {
    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[azi la] LT',
        nextDay: '[mâine la] LT',
        nextWeek: 'dddd [la] LT',
        lastDay: '[ieri la] LT',
        lastWeek: '[fosta] dddd [la] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'peste %s',
        past : '%s în urmă',
        s : 'câteva secunde',
        m : 'un minut',
        mm : relativeTimeWithPlural,
        h : 'o oră',
        hh : relativeTimeWithPlural,
        d : 'o zi',
        dd : relativeTimeWithPlural,
        M : 'o lună',
        MM : relativeTimeWithPlural,
        y : 'un an',
        yy : relativeTimeWithPlural
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ro;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ru.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ru.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! Author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
        'hh': 'час_часа_часов',
        'dd': 'день_дня_дней',
        'MM': 'месяц_месяца_месяцев',
        'yy': 'год_года_лет'
    };
    if (key === 'm') {
        return withoutSuffix ? 'минута' : 'минуту';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

// http://new.gramota.ru/spravka/rules/139-prop : § 103
// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
var ru = moment.defineLocale('ru', {
    months : {
        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
    },
    monthsShort : {
        // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
    },
    weekdays : {
        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
    },
    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // копия предыдущего
    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // полные названия с падежами
    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    // Выражение, которое соотвествует только сокращённым формам
    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., HH:mm',
        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
    },
    calendar : {
        sameDay: '[Сегодня в] LT',
        nextDay: '[Завтра в] LT',
        lastDay: '[Вчера в] LT',
        nextWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В следующее] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В следующий] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В следующую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        lastWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В прошлое] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В прошлый] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В прошлую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'через %s',
        past : '%s назад',
        s : 'несколько секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'час',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночи|утра|дня|вечера/i,
    isPM : function (input) {
        return /^(дня|вечера)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночи';
        } else if (hour < 12) {
            return 'утра';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечера';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
                return number + '-й';
            case 'D':
                return number + '-го';
            case 'w':
            case 'W':
                return number + '-я';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ru;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sd.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sd.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = [
    'جنوري',
    'فيبروري',
    'مارچ',
    'اپريل',
    'مئي',
    'جون',
    'جولاءِ',
    'آگسٽ',
    'سيپٽمبر',
    'آڪٽوبر',
    'نومبر',
    'ڊسمبر'
];
var days = [
    'آچر',
    'سومر',
    'اڱارو',
    'اربع',
    'خميس',
    'جمع',
    'ڇنڇر'
];

var sd = moment.defineLocale('sd', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[اڄ] LT',
        nextDay : '[سڀاڻي] LT',
        nextWeek : 'dddd [اڳين هفتي تي] LT',
        lastDay : '[ڪالهه] LT',
        lastWeek : '[گزريل هفتي] dddd [تي] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s پوء',
        past : '%s اڳ',
        s : 'چند سيڪنڊ',
        m : 'هڪ منٽ',
        mm : '%d منٽ',
        h : 'هڪ ڪلاڪ',
        hh : '%d ڪلاڪ',
        d : 'هڪ ڏينهن',
        dd : '%d ڏينهن',
        M : 'هڪ مهينو',
        MM : '%d مهينا',
        y : 'هڪ سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sd;

})));


/***/ }),

/***/ "./node_modules/moment/locale/se.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/se.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';



var se = moment.defineLocale('se', {
    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'MMMM D. [b.] YYYY',
        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
    },
    calendar : {
        sameDay: '[otne ti] LT',
        nextDay: '[ihttin ti] LT',
        nextWeek: 'dddd [ti] LT',
        lastDay: '[ikte ti] LT',
        lastWeek: '[ovddit] dddd [ti] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s geažes',
        past : 'maŋit %s',
        s : 'moadde sekunddat',
        m : 'okta minuhta',
        mm : '%d minuhtat',
        h : 'okta diimmu',
        hh : '%d diimmut',
        d : 'okta beaivi',
        dd : '%d beaivvit',
        M : 'okta mánnu',
        MM : '%d mánut',
        y : 'okta jahki',
        yy : '%d jagit'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return se;

})));


/***/ }),

/***/ "./node_modules/moment/locale/si.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/si.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


/*jshint -W100*/
var si = moment.defineLocale('si', {
    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'a h:mm',
        LTS : 'a h:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY MMMM D',
        LLL : 'YYYY MMMM D, a h:mm',
        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
    },
    calendar : {
        sameDay : '[අද] LT[ට]',
        nextDay : '[හෙට] LT[ට]',
        nextWeek : 'dddd LT[ට]',
        lastDay : '[ඊයේ] LT[ට]',
        lastWeek : '[පසුගිය] dddd LT[ට]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sකින්',
        past : '%sකට පෙර',
        s : 'තත්පර කිහිපය',
        m : 'මිනිත්තුව',
        mm : 'මිනිත්තු %d',
        h : 'පැය',
        hh : 'පැය %d',
        d : 'දිනය',
        dd : 'දින %d',
        M : 'මාසය',
        MM : 'මාස %d',
        y : 'වසර',
        yy : 'වසර %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
    ordinal : function (number) {
        return number + ' වැනි';
    },
    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
    isPM : function (input) {
        return input === 'ප.ව.' || input === 'පස් වරු';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'ප.ව.' : 'පස් වරු';
        } else {
            return isLower ? 'පෙ.ව.' : 'පෙර වරු';
        }
    }
});

return si;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
function plural(n) {
    return (n > 1) && (n < 5);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minúty' : 'minút');
            } else {
                return result + 'minútami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodín');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dni' : 'dní');
            } else {
                return result + 'dňami';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'mesiace' : 'mesiacov');
            } else {
                return result + 'mesiacmi';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'rokov');
            } else {
                return result + 'rokmi';
            }
            break;
    }
}

var sk = moment.defineLocale('sk', {
    months : months,
    monthsShort : monthsShort,
    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[dnes o] LT',
        nextDay: '[zajtra o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v nedeľu o] LT';
                case 1:
                case 2:
                    return '[v] dddd [o] LT';
                case 3:
                    return '[v stredu o] LT';
                case 4:
                    return '[vo štvrtok o] LT';
                case 5:
                    return '[v piatok o] LT';
                case 6:
                    return '[v sobotu o] LT';
            }
        },
        lastDay: '[včera o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulú nedeľu o] LT';
                case 1:
                case 2:
                    return '[minulý] dddd [o] LT';
                case 3:
                    return '[minulú stredu o] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [o] LT';
                case 6:
                    return '[minulú sobotu o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'pred %s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
        case 'm':
            return withoutSuffix ? 'ena minuta' : 'eno minuto';
        case 'mm':
            if (number === 1) {
                result += withoutSuffix ? 'minuta' : 'minuto';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
            } else {
                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'ena ura' : 'eno uro';
        case 'hh':
            if (number === 1) {
                result += withoutSuffix ? 'ura' : 'uro';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'uri' : 'urama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'ure' : 'urami';
            } else {
                result += withoutSuffix || isFuture ? 'ur' : 'urami';
            }
            return result;
        case 'd':
            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
        case 'dd':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
            } else {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
            }
            return result;
        case 'M':
            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
        case 'MM':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
            } else {
                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
            }
            return result;
        case 'y':
            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
        case 'yy':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'leto' : 'letom';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'leta' : 'leti';
            } else {
                result += withoutSuffix || isFuture ? 'let' : 'leti';
            }
            return result;
    }
}

var sl = moment.defineLocale('sl', {
    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danes ob] LT',
        nextDay  : '[jutri ob] LT',

        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[v] [nedeljo] [ob] LT';
                case 3:
                    return '[v] [sredo] [ob] LT';
                case 6:
                    return '[v] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[v] dddd [ob] LT';
            }
        },
        lastDay  : '[včeraj ob] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[prejšnjo] [nedeljo] [ob] LT';
                case 3:
                    return '[prejšnjo] [sredo] [ob] LT';
                case 6:
                    return '[prejšnjo] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prejšnji] dddd [ob] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'čez %s',
        past   : 'pred %s',
        s      : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : processRelativeTime,
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sq.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sq.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var sq = moment.defineLocale('sq', {
    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /PD|MD/,
    isPM: function (input) {
        return input.charAt(0) === 'M';
    },
    meridiem : function (hours, minutes, isLower) {
        return hours < 12 ? 'PD' : 'MD';
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Sot në] LT',
        nextDay : '[Nesër në] LT',
        nextWeek : 'dddd [në] LT',
        lastDay : '[Dje në] LT',
        lastWeek : 'dddd [e kaluar në] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'në %s',
        past : '%s më parë',
        s : 'disa sekonda',
        m : 'një minutë',
        mm : '%d minuta',
        h : 'një orë',
        hh : '%d orë',
        d : 'një ditë',
        dd : '%d ditë',
        M : 'një muaj',
        MM : '%d muaj',
        y : 'një vit',
        yy : '%d vite'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sq;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sr-cyrl.js":
/*!***********************************************!*\
  !*** ./node_modules/moment/locale/sr-cyrl.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['један минут', 'једне минуте'],
        mm: ['минут', 'минуте', 'минута'],
        h: ['један сат', 'једног сата'],
        hh: ['сат', 'сата', 'сати'],
        dd: ['дан', 'дана', 'дана'],
        MM: ['месец', 'месеца', 'месеци'],
        yy: ['година', 'године', 'година']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var srCyrl = moment.defineLocale('sr-cyrl', {
    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
    monthsParseExact: true,
    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[данас у] LT',
        nextDay: '[сутра у] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[у] [недељу] [у] LT';
                case 3:
                    return '[у] [среду] [у] LT';
                case 6:
                    return '[у] [суботу] [у] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[у] dddd [у] LT';
            }
        },
        lastDay  : '[јуче у] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[прошле] [недеље] [у] LT',
                '[прошлог] [понедељка] [у] LT',
                '[прошлог] [уторка] [у] LT',
                '[прошле] [среде] [у] LT',
                '[прошлог] [четвртка] [у] LT',
                '[прошлог] [петка] [у] LT',
                '[прошле] [суботе] [у] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'за %s',
        past   : 'пре %s',
        s      : 'неколико секунди',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'дан',
        dd     : translator.translate,
        M      : 'месец',
        MM     : translator.translate,
        y      : 'годину',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return srCyrl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['jedan minut', 'jedne minute'],
        mm: ['minut', 'minute', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mesec', 'meseca', 'meseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var sr = moment.defineLocale('sr', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sutra u] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedelju] [u] LT';
                case 3:
                    return '[u] [sredu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedelje] [u] LT',
                '[prošlog] [ponedeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'pre %s',
        s      : 'nekoliko sekundi',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ss.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ss.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';



var ss = moment.defineLocale('ss', {
    months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Namuhla nga] LT',
        nextDay : '[Kusasa nga] LT',
        nextWeek : 'dddd [nga] LT',
        lastDay : '[Itolo nga] LT',
        lastWeek : 'dddd [leliphelile] [nga] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'nga %s',
        past : 'wenteka nga %s',
        s : 'emizuzwana lomcane',
        m : 'umzuzu',
        mm : '%d emizuzu',
        h : 'lihora',
        hh : '%d emahora',
        d : 'lilanga',
        dd : '%d emalanga',
        M : 'inyanga',
        MM : '%d tinyanga',
        y : 'umnyaka',
        yy : '%d iminyaka'
    },
    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'ekuseni';
        } else if (hours < 15) {
            return 'emini';
        } else if (hours < 19) {
            return 'entsambama';
        } else {
            return 'ebusuku';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ekuseni') {
            return hour;
        } else if (meridiem === 'emini') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
            if (hour === 0) {
                return 0;
            }
            return hour + 12;
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : '%d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ss;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var sv = moment.defineLocale('sv', {
    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Idag] LT',
        nextDay: '[Imorgon] LT',
        lastDay: '[Igår] LT',
        nextWeek: '[På] dddd LT',
        lastWeek: '[I] dddd[s] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : 'för %s sedan',
        s : 'några sekunder',
        m : 'en minut',
        mm : '%d minuter',
        h : 'en timme',
        hh : '%d timmar',
        d : 'en dag',
        dd : '%d dagar',
        M : 'en månad',
        MM : '%d månader',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'e' :
            (b === 1) ? 'a' :
            (b === 2) ? 'a' :
            (b === 3) ? 'e' : 'e';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sv;

})));


/***/ }),

/***/ "./node_modules/moment/locale/sw.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sw.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var sw = moment.defineLocale('sw', {
    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[leo saa] LT',
        nextDay : '[kesho saa] LT',
        nextWeek : '[wiki ijayo] dddd [saat] LT',
        lastDay : '[jana] LT',
        lastWeek : '[wiki iliyopita] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s baadaye',
        past : 'tokea %s',
        s : 'hivi punde',
        m : 'dakika moja',
        mm : 'dakika %d',
        h : 'saa limoja',
        hh : 'masaa %d',
        d : 'siku moja',
        dd : 'masiku %d',
        M : 'mwezi mmoja',
        MM : 'miezi %d',
        y : 'mwaka mmoja',
        yy : 'miaka %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sw;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ta.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ta.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '௧',
    '2': '௨',
    '3': '௩',
    '4': '௪',
    '5': '௫',
    '6': '௬',
    '7': '௭',
    '8': '௮',
    '9': '௯',
    '0': '௦'
};
var numberMap = {
    '௧': '1',
    '௨': '2',
    '௩': '3',
    '௪': '4',
    '௫': '5',
    '௬': '6',
    '௭': '7',
    '௮': '8',
    '௯': '9',
    '௦': '0'
};

var ta = moment.defineLocale('ta', {
    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, HH:mm',
        LLLL : 'dddd, D MMMM YYYY, HH:mm'
    },
    calendar : {
        sameDay : '[இன்று] LT',
        nextDay : '[நாளை] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[நேற்று] LT',
        lastWeek : '[கடந்த வாரம்] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s இல்',
        past : '%s முன்',
        s : 'ஒரு சில விநாடிகள்',
        m : 'ஒரு நிமிடம்',
        mm : '%d நிமிடங்கள்',
        h : 'ஒரு மணி நேரம்',
        hh : '%d மணி நேரம்',
        d : 'ஒரு நாள்',
        dd : '%d நாட்கள்',
        M : 'ஒரு மாதம்',
        MM : '%d மாதங்கள்',
        y : 'ஒரு வருடம்',
        yy : '%d ஆண்டுகள்'
    },
    dayOfMonthOrdinalParse: /\d{1,2}வது/,
    ordinal : function (number) {
        return number + 'வது';
    },
    preparse: function (string) {
        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // refer http://ta.wikipedia.org/s/1er1
    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
    meridiem : function (hour, minute, isLower) {
        if (hour < 2) {
            return ' யாமம்';
        } else if (hour < 6) {
            return ' வைகறை';  // வைகறை
        } else if (hour < 10) {
            return ' காலை'; // காலை
        } else if (hour < 14) {
            return ' நண்பகல்'; // நண்பகல்
        } else if (hour < 18) {
            return ' எற்பாடு'; // எற்பாடு
        } else if (hour < 22) {
            return ' மாலை'; // மாலை
        } else {
            return ' யாமம்';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'யாமம்') {
            return hour < 2 ? hour : hour + 12;
        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
            return hour;
        } else if (meridiem === 'நண்பகல்') {
            return hour >= 10 ? hour : hour + 12;
        } else {
            return hour + 12;
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ta;

})));


/***/ }),

/***/ "./node_modules/moment/locale/te.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/te.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var te = moment.defineLocale('te', {
    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[నేడు] LT',
        nextDay : '[రేపు] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[నిన్న] LT',
        lastWeek : '[గత] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s లో',
        past : '%s క్రితం',
        s : 'కొన్ని క్షణాలు',
        m : 'ఒక నిమిషం',
        mm : '%d నిమిషాలు',
        h : 'ఒక గంట',
        hh : '%d గంటలు',
        d : 'ఒక రోజు',
        dd : '%d రోజులు',
        M : 'ఒక నెల',
        MM : '%d నెలలు',
        y : 'ఒక సంవత్సరం',
        yy : '%d సంవత్సరాలు'
    },
    dayOfMonthOrdinalParse : /\d{1,2}వ/,
    ordinal : '%dవ',
    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'రాత్రి') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ఉదయం') {
            return hour;
        } else if (meridiem === 'మధ్యాహ్నం') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'సాయంత్రం') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'రాత్రి';
        } else if (hour < 10) {
            return 'ఉదయం';
        } else if (hour < 17) {
            return 'మధ్యాహ్నం';
        } else if (hour < 20) {
            return 'సాయంత్రం';
        } else {
            return 'రాత్రి';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return te;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tet.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var tet = moment.defineLocale('tet', {
    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Ohin iha] LT',
        nextDay: '[Aban iha] LT',
        nextWeek: 'dddd [iha] LT',
        lastDay: '[Horiseik iha] LT',
        lastWeek: 'dddd [semana kotuk] [iha] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'iha %s',
        past : '%s liuba',
        s : 'minutu balun',
        m : 'minutu ida',
        mm : 'minutus %d',
        h : 'horas ida',
        hh : 'horas %d',
        d : 'loron ida',
        dd : 'loron %d',
        M : 'fulan ida',
        MM : 'fulan %d',
        y : 'tinan ida',
        yy : 'tinan %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tet;

})));


/***/ }),

/***/ "./node_modules/moment/locale/th.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/th.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var th = moment.defineLocale('th', {
    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
    monthsParseExact: true,
    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY เวลา H:mm',
        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
    },
    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
    isPM: function (input) {
        return input === 'หลังเที่ยง';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ก่อนเที่ยง';
        } else {
            return 'หลังเที่ยง';
        }
    },
    calendar : {
        sameDay : '[วันนี้ เวลา] LT',
        nextDay : '[พรุ่งนี้ เวลา] LT',
        nextWeek : 'dddd[หน้า เวลา] LT',
        lastDay : '[เมื่อวานนี้ เวลา] LT',
        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'อีก %s',
        past : '%sที่แล้ว',
        s : 'ไม่กี่วินาที',
        m : '1 นาที',
        mm : '%d นาที',
        h : '1 ชั่วโมง',
        hh : '%d ชั่วโมง',
        d : '1 วัน',
        dd : '%d วัน',
        M : '1 เดือน',
        MM : '%d เดือน',
        y : '1 ปี',
        yy : '%d ปี'
    }
});

return th;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tl-ph.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/tl-ph.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var tlPh = moment.defineLocale('tl-ph', {
    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'MM/D/YYYY',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY HH:mm',
        LLLL : 'dddd, MMMM DD, YYYY HH:mm'
    },
    calendar : {
        sameDay: 'LT [ngayong araw]',
        nextDay: '[Bukas ng] LT',
        nextWeek: 'LT [sa susunod na] dddd',
        lastDay: 'LT [kahapon]',
        lastWeek: 'LT [noong nakaraang] dddd',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'sa loob ng %s',
        past : '%s ang nakalipas',
        s : 'ilang segundo',
        m : 'isang minuto',
        mm : '%d minuto',
        h : 'isang oras',
        hh : '%d oras',
        d : 'isang araw',
        dd : '%d araw',
        M : 'isang buwan',
        MM : '%d buwan',
        y : 'isang taon',
        yy : '%d taon'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlPh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tlh.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tlh.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

function translateFuture(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'leS' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'waQ' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'nem' :
    time + ' pIq';
    return time;
}

function translatePast(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'Hu’' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'wen' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'ben' :
    time + ' ret';
    return time;
}

function translate(number, withoutSuffix, string, isFuture) {
    var numberNoun = numberAsNoun(number);
    switch (string) {
        case 'mm':
            return numberNoun + ' tup';
        case 'hh':
            return numberNoun + ' rep';
        case 'dd':
            return numberNoun + ' jaj';
        case 'MM':
            return numberNoun + ' jar';
        case 'yy':
            return numberNoun + ' DIS';
    }
}

function numberAsNoun(number) {
    var hundred = Math.floor((number % 1000) / 100),
    ten = Math.floor((number % 100) / 10),
    one = number % 10,
    word = '';
    if (hundred > 0) {
        word += numbersNouns[hundred] + 'vatlh';
    }
    if (ten > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
    }
    if (one > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[one];
    }
    return (word === '') ? 'pagh' : word;
}

var tlh = moment.defineLocale('tlh', {
    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
    monthsParseExact : true,
    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[DaHjaj] LT',
        nextDay: '[wa’leS] LT',
        nextWeek: 'LLL',
        lastDay: '[wa’Hu’] LT',
        lastWeek: 'LLL',
        sameElse: 'L'
    },
    relativeTime : {
        future : translateFuture,
        past : translatePast,
        s : 'puS lup',
        m : 'wa’ tup',
        mm : translate,
        h : 'wa’ rep',
        hh : translate,
        d : 'wa’ jaj',
        dd : translate,
        M : 'wa’ jar',
        MM : translate,
        y : 'wa’ DIS',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlh;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/tr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '\'inci',
    5: '\'inci',
    8: '\'inci',
    70: '\'inci',
    80: '\'inci',
    2: '\'nci',
    7: '\'nci',
    20: '\'nci',
    50: '\'nci',
    3: '\'üncü',
    4: '\'üncü',
    100: '\'üncü',
    6: '\'ncı',
    9: '\'uncu',
    10: '\'uncu',
    30: '\'uncu',
    60: '\'ıncı',
    90: '\'ıncı'
};

var tr = moment.defineLocale('tr', {
    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[yarın saat] LT',
        nextWeek : '[gelecek] dddd [saat] LT',
        lastDay : '[dün] LT',
        lastWeek : '[geçen] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s önce',
        s : 'birkaç saniye',
        m : 'bir dakika',
        mm : '%d dakika',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir yıl',
        yy : '%d yıl'
    },
    dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '\'ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return tr;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzl.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzl.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
// This is currently too difficult (maybe even impossible) to add.
var tzl = moment.defineLocale('tzl', {
    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM [dallas] YYYY',
        LLL : 'D. MMMM [dallas] YYYY HH.mm',
        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
    },
    meridiemParse: /d\'o|d\'a/i,
    isPM : function (input) {
        return 'd\'o' === input.toLowerCase();
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'd\'o' : 'D\'O';
        } else {
            return isLower ? 'd\'a' : 'D\'A';
        }
    },
    calendar : {
        sameDay : '[oxhi à] LT',
        nextDay : '[demà à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[ieiri à] LT',
        lastWeek : '[sür el] dddd [lasteu à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'osprei %s',
        past : 'ja%s',
        s : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['viensas secunds', '\'iensas secunds'],
        'm': ['\'n míut', '\'iens míut'],
        'mm': [number + ' míuts', '' + number + ' míuts'],
        'h': ['\'n þora', '\'iensa þora'],
        'hh': [number + ' þoras', '' + number + ' þoras'],
        'd': ['\'n ziua', '\'iensa ziua'],
        'dd': [number + ' ziuas', '' + number + ' ziuas'],
        'M': ['\'n mes', '\'iens mes'],
        'MM': [number + ' mesen', '' + number + ' mesen'],
        'y': ['\'n ar', '\'iens ar'],
        'yy': [number + ' ars', '' + number + ' ars']
    };
    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
}

return tzl;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzm-latn.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/tzm-latn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var tzmLatn = moment.defineLocale('tzm-latn', {
    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[asdkh g] LT',
        nextDay: '[aska g] LT',
        nextWeek: 'dddd [g] LT',
        lastDay: '[assant g] LT',
        lastWeek: 'dddd [g] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'dadkh s yan %s',
        past : 'yan %s',
        s : 'imik',
        m : 'minuḍ',
        mm : '%d minuḍ',
        h : 'saɛa',
        hh : '%d tassaɛin',
        d : 'ass',
        dd : '%d ossan',
        M : 'ayowr',
        MM : '%d iyyirn',
        y : 'asgas',
        yy : '%d isgasn'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzmLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/tzm.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzm.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var tzm = moment.defineLocale('tzm', {
    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
        nextWeek: 'dddd [ⴴ] LT',
        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
        lastWeek: 'dddd [ⴴ] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
        past : 'ⵢⴰⵏ %s',
        s : 'ⵉⵎⵉⴽ',
        m : 'ⵎⵉⵏⵓⴺ',
        mm : '%d ⵎⵉⵏⵓⴺ',
        h : 'ⵙⴰⵄⴰ',
        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
        d : 'ⴰⵙⵙ',
        dd : '%d oⵙⵙⴰⵏ',
        M : 'ⴰⵢoⵓⵔ',
        MM : '%d ⵉⵢⵢⵉⵔⵏ',
        y : 'ⴰⵙⴳⴰⵙ',
        yy : '%d ⵉⵙⴳⴰⵙⵏ'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzm;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/uk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
        'dd': 'день_дні_днів',
        'MM': 'місяць_місяці_місяців',
        'yy': 'рік_роки_років'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвилина' : 'хвилину';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'година' : 'годину';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
function weekdaysCaseReplace(m, format) {
    var weekdays = {
        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
    };

    if (!m) {
        return weekdays['nominative'];
    }

    var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
        'accusative' :
        ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
            'genitive' :
            'nominative');
    return weekdays[nounCase][m.day()];
}
function processHoursFunction(str) {
    return function () {
        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
    };
}

var uk = moment.defineLocale('uk', {
    months : {
        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
    },
    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
    weekdays : weekdaysCaseReplace,
    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY р.',
        LLL : 'D MMMM YYYY р., HH:mm',
        LLLL : 'dddd, D MMMM YYYY р., HH:mm'
    },
    calendar : {
        sameDay: processHoursFunction('[Сьогодні '),
        nextDay: processHoursFunction('[Завтра '),
        lastDay: processHoursFunction('[Вчора '),
        nextWeek: processHoursFunction('[У] dddd ['),
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return processHoursFunction('[Минулої] dddd [').call(this);
                case 1:
                case 2:
                case 4:
                    return processHoursFunction('[Минулого] dddd [').call(this);
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'за %s',
        past : '%s тому',
        s : 'декілька секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'годину',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'місяць',
        MM : relativeTimeWithPlural,
        y : 'рік',
        yy : relativeTimeWithPlural
    },
    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
    meridiemParse: /ночі|ранку|дня|вечора/,
    isPM: function (input) {
        return /^(дня|вечора)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночі';
        } else if (hour < 12) {
            return 'ранку';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечора';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return number + '-й';
            case 'D':
                return number + '-го';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/ur.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ur.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var months = [
    'جنوری',
    'فروری',
    'مارچ',
    'اپریل',
    'مئی',
    'جون',
    'جولائی',
    'اگست',
    'ستمبر',
    'اکتوبر',
    'نومبر',
    'دسمبر'
];
var days = [
    'اتوار',
    'پیر',
    'منگل',
    'بدھ',
    'جمعرات',
    'جمعہ',
    'ہفتہ'
];

var ur = moment.defineLocale('ur', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[آج بوقت] LT',
        nextDay : '[کل بوقت] LT',
        nextWeek : 'dddd [بوقت] LT',
        lastDay : '[گذشتہ روز بوقت] LT',
        lastWeek : '[گذشتہ] dddd [بوقت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s بعد',
        past : '%s قبل',
        s : 'چند سیکنڈ',
        m : 'ایک منٹ',
        mm : '%d منٹ',
        h : 'ایک گھنٹہ',
        hh : '%d گھنٹے',
        d : 'ایک دن',
        dd : '%d دن',
        M : 'ایک ماہ',
        MM : '%d ماہ',
        y : 'ایک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ur;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uz-latn.js":
/*!***********************************************!*\
  !*** ./node_modules/moment/locale/uz-latn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var uzLatn = moment.defineLocale('uz-latn', {
    months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
    monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
    weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
    weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
    weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Bugun soat] LT [da]',
        nextDay : '[Ertaga] LT [da]',
        nextWeek : 'dddd [kuni soat] LT [da]',
        lastDay : '[Kecha soat] LT [da]',
        lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Yaqin %s ichida',
        past : 'Bir necha %s oldin',
        s : 'soniya',
        m : 'bir daqiqa',
        mm : '%d daqiqa',
        h : 'bir soat',
        hh : '%d soat',
        d : 'bir kun',
        dd : '%d kun',
        M : 'bir oy',
        MM : '%d oy',
        y : 'bir yil',
        yy : '%d yil'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uzLatn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/uz.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/uz.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var uz = moment.defineLocale('uz', {
    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Бугун соат] LT [да]',
        nextDay : '[Эртага] LT [да]',
        nextWeek : 'dddd [куни соат] LT [да]',
        lastDay : '[Кеча соат] LT [да]',
        lastWeek : '[Утган] dddd [куни соат] LT [да]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Якин %s ичида',
        past : 'Бир неча %s олдин',
        s : 'фурсат',
        m : 'бир дакика',
        mm : '%d дакика',
        h : 'бир соат',
        hh : '%d соат',
        d : 'бир кун',
        dd : '%d кун',
        M : 'бир ой',
        MM : '%d ой',
        y : 'бир йил',
        yy : '%d йил'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 4th is the first week of the year.
    }
});

return uz;

})));


/***/ }),

/***/ "./node_modules/moment/locale/vi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/vi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var vi = moment.defineLocale('vi', {
    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
    monthsParseExact : true,
    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /sa|ch/i,
    isPM : function (input) {
        return /^ch$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'sa' : 'SA';
        } else {
            return isLower ? 'ch' : 'CH';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [năm] YYYY',
        LLL : 'D MMMM [năm] YYYY HH:mm',
        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
        l : 'DD/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hôm nay lúc] LT',
        nextDay: '[Ngày mai lúc] LT',
        nextWeek: 'dddd [tuần tới lúc] LT',
        lastDay: '[Hôm qua lúc] LT',
        lastWeek: 'dddd [tuần rồi lúc] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s tới',
        past : '%s trước',
        s : 'vài giây',
        m : 'một phút',
        mm : '%d phút',
        h : 'một giờ',
        hh : '%d giờ',
        d : 'một ngày',
        dd : '%d ngày',
        M : 'một tháng',
        MM : '%d tháng',
        y : 'một năm',
        yy : '%d năm'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return vi;

})));


/***/ }),

/***/ "./node_modules/moment/locale/x-pseudo.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/x-pseudo.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var xPseudo = moment.defineLocale('x-pseudo', {
    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
    monthsParseExact : true,
    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[T~ódá~ý át] LT',
        nextDay : '[T~ómó~rró~w át] LT',
        nextWeek : 'dddd [át] LT',
        lastDay : '[Ý~ést~érdá~ý át] LT',
        lastWeek : '[L~ást] dddd [át] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'í~ñ %s',
        past : '%s á~gó',
        s : 'á ~féw ~sécó~ñds',
        m : 'á ~míñ~úté',
        mm : '%d m~íñú~tés',
        h : 'á~ñ hó~úr',
        hh : '%d h~óúrs',
        d : 'á ~dáý',
        dd : '%d d~áýs',
        M : 'á ~móñ~th',
        MM : '%d m~óñt~hs',
        y : 'á ~ýéár',
        yy : '%d ý~éárs'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return xPseudo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/yo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/yo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var yo = moment.defineLocale('yo', {
    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Ònì ni] LT',
        nextDay : '[Ọ̀la ni] LT',
        nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
        lastDay : '[Àna ni] LT',
        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ní %s',
        past : '%s kọjá',
        s : 'ìsẹjú aayá die',
        m : 'ìsẹjú kan',
        mm : 'ìsẹjú %d',
        h : 'wákati kan',
        hh : 'wákati %d',
        d : 'ọjọ́ kan',
        dd : 'ọjọ́ %d',
        M : 'osù kan',
        MM : 'osù %d',
        y : 'ọdún kan',
        yy : 'ọdún %d'
    },
    dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
    ordinal : 'ọjọ́ %d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return yo;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-cn.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-cn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var zhCn = moment.defineLocale('zh-cn', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日Ah点mm分',
        LLLL : 'YYYY年MMMD日ddddAh点mm分',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' ||
                meridiem === '上午') {
            return hour;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        } else {
            // '中午'
            return hour >= 11 ? hour : hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            case 'M':
                return number + '月';
            case 'w':
            case 'W':
                return number + '周';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s内',
        past : '%s前',
        s : '几秒',
        m : '1 分钟',
        mm : '%d 分钟',
        h : '1 小时',
        hh : '%d 小时',
        d : '1 天',
        dd : '%d 天',
        M : '1 个月',
        MM : '%d 个月',
        y : '1 年',
        yy : '%d 年'
    },
    week : {
        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return zhCn;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-hk.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-hk.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var zhHk = moment.defineLocale('zh-hk', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日 HH:mm',
        LLLL : 'YYYY年MMMD日dddd HH:mm',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhHk;

})));


/***/ }),

/***/ "./node_modules/moment/locale/zh-tw.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-tw.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
    true ? factory(__webpack_require__(/*! ../moment */ "./node_modules/moment/moment.js")) :
   undefined
}(this, (function (moment) { 'use strict';


var zhTw = moment.defineLocale('zh-tw', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日 HH:mm',
        LLLL : 'YYYY年MMMD日dddd HH:mm',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhTw;

})));


/***/ }),

/***/ "./node_modules/moment/moment.js":
/*!***************************************!*\
  !*** ./node_modules/moment/moment.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.19.4
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    undefined
}(this, (function () { 'use strict';

var hookCallback;

function hooks () {
    return hookCallback.apply(null, arguments);
}

// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback (callback) {
    hookCallback = callback;
}

function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
}

function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
        return (Object.getOwnPropertyNames(obj).length === 0);
    } else {
        var k;
        for (k in obj) {
            if (obj.hasOwnProperty(k)) {
                return false;
            }
        }
        return true;
    }
}

function isUndefined(input) {
    return input === void 0;
}

function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
}

function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
}

function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
        res.push(fn(arr[i], i));
    }
    return res;
}

function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}

function extend(a, b) {
    for (var i in b) {
        if (hasOwnProp(b, i)) {
            a[i] = b[i];
        }
    }

    if (hasOwnProp(b, 'toString')) {
        a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
        a.valueOf = b.valueOf;
    }

    return a;
}

function createUTC (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
}

function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
        empty           : false,
        unusedTokens    : [],
        unusedInput     : [],
        overflow        : -2,
        charsLeftOver   : 0,
        nullInput       : false,
        invalidMonth    : null,
        invalidFormat   : false,
        userInvalidated : false,
        iso             : false,
        parsedDateParts : [],
        meridiem        : null,
        rfc2822         : false,
        weekdayMismatch : false
    };
}

function getParsingFlags(m) {
    if (m._pf == null) {
        m._pf = defaultParsingFlags();
    }
    return m._pf;
}

var some;
if (Array.prototype.some) {
    some = Array.prototype.some;
} else {
    some = function (fun) {
        var t = Object(this);
        var len = t.length >>> 0;

        for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
                return true;
            }
        }

        return false;
    };
}

function isValid(m) {
    if (m._isValid == null) {
        var flags = getParsingFlags(m);
        var parsedParts = some.call(flags.parsedDateParts, function (i) {
            return i != null;
        });
        var isNowValid = !isNaN(m._d.getTime()) &&
            flags.overflow < 0 &&
            !flags.empty &&
            !flags.invalidMonth &&
            !flags.invalidWeekday &&
            !flags.weekdayMismatch &&
            !flags.nullInput &&
            !flags.invalidFormat &&
            !flags.userInvalidated &&
            (!flags.meridiem || (flags.meridiem && parsedParts));

        if (m._strict) {
            isNowValid = isNowValid &&
                flags.charsLeftOver === 0 &&
                flags.unusedTokens.length === 0 &&
                flags.bigHour === undefined;
        }

        if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
        }
        else {
            return isNowValid;
        }
    }
    return m._isValid;
}

function createInvalid (flags) {
    var m = createUTC(NaN);
    if (flags != null) {
        extend(getParsingFlags(m), flags);
    }
    else {
        getParsingFlags(m).userInvalidated = true;
    }

    return m;
}

// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties = hooks.momentProperties = [];

function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
        to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
        to._i = from._i;
    }
    if (!isUndefined(from._f)) {
        to._f = from._f;
    }
    if (!isUndefined(from._l)) {
        to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
        to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
        to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
        to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
        to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
        to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
        to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
        for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];
            if (!isUndefined(val)) {
                to[prop] = val;
            }
        }
    }

    return to;
}

var updateInProgress = false;

// Moment prototype object
function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
        this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
        updateInProgress = true;
        hooks.updateOffset(this);
        updateInProgress = false;
    }
}

function isMoment (obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
}

function absFloor (number) {
    if (number < 0) {
        // -0 -> 0
        return Math.ceil(number) || 0;
    } else {
        return Math.floor(number);
    }
}

function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
        value = absFloor(coercedNumber);
    }

    return value;
}

// compare two arrays, return the number of differences
function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
        if ((dontConvert && array1[i] !== array2[i]) ||
            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
            diffs++;
        }
    }
    return diffs + lengthDiff;
}

function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false &&
            (typeof console !==  'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}

function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                } else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}

var deprecations = {};

function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}

hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}

function set (config) {
    var prop, i;
    for (i in config) {
        prop = config[i];
        if (isFunction(prop)) {
            this[i] = prop;
        } else {
            this['_' + i] = prop;
        }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
            '|' + (/\d{1,2}/).source);
}

function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig), prop;
    for (prop in childConfig) {
        if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
            } else {
                delete res[prop];
            }
        }
    }
    for (prop in parentConfig) {
        if (hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
        }
    }
    return res;
}

function Locale(config) {
    if (config != null) {
        this.set(config);
    }
}

var keys;

if (Object.keys) {
    keys = Object.keys;
} else {
    keys = function (obj) {
        var i, res = [];
        for (i in obj) {
            if (hasOwnProp(obj, i)) {
                res.push(i);
            }
        }
        return res;
    };
}

var defaultCalendar = {
    sameDay : '[Today at] LT',
    nextDay : '[Tomorrow at] LT',
    nextWeek : 'dddd [at] LT',
    lastDay : '[Yesterday at] LT',
    lastWeek : '[Last] dddd [at] LT',
    sameElse : 'L'
};

function calendar (key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
}

var defaultLongDateFormat = {
    LTS  : 'h:mm:ss A',
    LT   : 'h:mm A',
    L    : 'MM/DD/YYYY',
    LL   : 'MMMM D, YYYY',
    LLL  : 'MMMM D, YYYY h:mm A',
    LLLL : 'dddd, MMMM D, YYYY h:mm A'
};

function longDateFormat (key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
        return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
        return val.slice(1);
    });

    return this._longDateFormat[key];
}

var defaultInvalidDate = 'Invalid date';

function invalidDate () {
    return this._invalidDate;
}

var defaultOrdinal = '%d';
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

function ordinal (number) {
    return this._ordinal.replace('%d', number);
}

var defaultRelativeTime = {
    future : 'in %s',
    past   : '%s ago',
    s  : 'a few seconds',
    ss : '%d seconds',
    m  : 'a minute',
    mm : '%d minutes',
    h  : 'an hour',
    hh : '%d hours',
    d  : 'a day',
    dd : '%d days',
    M  : 'a month',
    MM : '%d months',
    y  : 'a year',
    yy : '%d years'
};

function relativeTime (number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ?
        output(number, withoutSuffix, string, isFuture) :
        output.replace(/%d/i, number);
}

function pastFuture (diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
}

var aliases = {};

function addUnitAlias (unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
}

function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;

    for (prop in inputObject) {
        if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
            }
        }
    }

    return normalizedInput;
}

var priorities = {};

function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
}

function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
        units.push({unit: u, priority: priorities[u]});
    }
    units.sort(function (a, b) {
        return a.priority - b.priority;
    });
    return units;
}

function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}

var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions = {};

var formatTokenFunctions = {};

// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken (token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
        func = function () {
            return this[callback]();
        };
    }
    if (token) {
        formatTokenFunctions[token] = func;
    }
    if (padded) {
        formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
        };
    }
    if (ordinal) {
        formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
        };
    }
}

function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
        return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
}

function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;

    for (i = 0, length = array.length; i < length; i++) {
        if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
        } else {
            array[i] = removeFormattingTokens(array[i]);
        }
    }

    return function (mom) {
        var output = '', i;
        for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
        }
        return output;
    };
}

// format date using native date object
function formatMoment(m, format) {
    if (!m.isValid()) {
        return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
}

function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
        return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        localFormattingTokens.lastIndex = 0;
        i -= 1;
    }

    return format;
}

var match1         = /\d/;            //       0 - 9
var match2         = /\d\d/;          //      00 - 99
var match3         = /\d{3}/;         //     000 - 999
var match4         = /\d{4}/;         //    0000 - 9999
var match6         = /[+-]?\d{6}/;    // -999999 - 999999
var match1to2      = /\d\d?/;         //       0 - 99
var match3to4      = /\d\d\d\d?/;     //     999 - 9999
var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
var match1to3      = /\d{1,3}/;       //       0 - 999
var match1to4      = /\d{1,4}/;       //       0 - 9999
var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

var matchUnsigned  = /\d+/;           //       0 - inf
var matchSigned    = /[+-]?\d+/;      //    -inf - inf

var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;


var regexes = {};

function addRegexToken (token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
        return (isStrict && strictRegex) ? strictRegex : regex;
    };
}

function getParseRegexForToken (token, config) {
    if (!hasOwnProp(regexes, token)) {
        return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
}

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
    }));
}

function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}

var tokens = {};

function addParseToken (token, callback) {
    var i, func = callback;
    if (typeof token === 'string') {
        token = [token];
    }
    if (isNumber(callback)) {
        func = function (input, array) {
            array[callback] = toInt(input);
        };
    }
    for (i = 0; i < token.length; i++) {
        tokens[token[i]] = func;
    }
}

function addWeekParseToken (token, callback) {
    addParseToken(token, function (input, array, config, token) {
        config._w = config._w || {};
        callback(input, config._w, config, token);
    });
}

function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
        tokens[token](input, config._a, config, token);
    }
}

var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;

// FORMATTING

addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});

addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});

addFormatToken(0, ['YYYY',   4],       0, 'year');
addFormatToken(0, ['YYYYY',  5],       0, 'year');
addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

// ALIASES

addUnitAlias('year', 'y');

// PRIORITIES

addUnitPriority('year', 1);

// PARSING

addRegexToken('Y',      matchSigned);
addRegexToken('YY',     match1to2, match2);
addRegexToken('YYYY',   match1to4, match4);
addRegexToken('YYYYY',  match1to6, match6);
addRegexToken('YYYYYY', match1to6, match6);

addParseToken(['YYYYY', 'YYYYYY'], YEAR);
addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
});

// HELPERS

function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}

// HOOKS

hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};

// MOMENTS

var getSetYear = makeGetSet('FullYear', true);

function getIsLeapYear () {
    return isLeapYear(this.year());
}

function makeGetSet (unit, keepTime) {
    return function (value) {
        if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
        } else {
            return get(this, unit);
        }
    };
}

function get (mom, unit) {
    return mom.isValid() ?
        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
}

function set$1 (mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
        }
        else {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }
}

// MOMENTS

function stringGet (units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
        return this[units]();
    }
    return this;
}


function stringSet (units, value) {
    if (typeof units === 'object') {
        units = normalizeObjectUnits(units);
        var prioritized = getPrioritizedUnits(units);
        for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
        }
    } else {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units](value);
        }
    }
    return this;
}

function mod(n, x) {
    return ((n % x) + x) % x;
}

var indexOf;

if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function (o) {
        // I know
        var i;
        for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
                return i;
            }
        }
        return -1;
    };
}

function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
        return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
}

// FORMATTING

addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
});

addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
});

addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
});

// ALIASES

addUnitAlias('month', 'M');

// PRIORITY

addUnitPriority('month', 8);

// PARSING

addRegexToken('M',    match1to2);
addRegexToken('MM',   match1to2, match2);
addRegexToken('MMM',  function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
});

addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
});

addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
        array[MONTH] = month;
    } else {
        getParsingFlags(config).invalidMonth = input;
    }
});

// LOCALES

var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths (m, format) {
    if (!m) {
        return isArray(this._months) ? this._months :
            this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] :
        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
}

var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort (m, format) {
    if (!m) {
        return isArray(this._monthsShort) ? this._monthsShort :
            this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
}

function handleStrictParse(monthName, format, strict) {
    var i, ii, mom, llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
        // this is not used
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
        for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeMonthsParse (monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
        return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
        }
    }
}

// MOMENTS

function setMonth (mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
        // No op
        return mom;
    }

    if (typeof value === 'string') {
        if (/^\d+$/.test(value)) {
            value = toInt(value);
        } else {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (!isNumber(value)) {
                return mom;
            }
        }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
}

function getSetMonth (value) {
    if (value != null) {
        setMonth(this, value);
        hooks.updateOffset(this, true);
        return this;
    } else {
        return get(this, 'Month');
    }
}

function getDaysInMonth () {
    return daysInMonth(this.year(), this.month());
}

var defaultMonthsShortRegex = matchWord;
function monthsShortRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsShortStrictRegex;
        } else {
            return this._monthsShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
        }
        return this._monthsShortStrictRegex && isStrict ?
            this._monthsShortStrictRegex : this._monthsShortRegex;
    }
}

var defaultMonthsRegex = matchWord;
function monthsRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsStrictRegex;
        } else {
            return this._monthsRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
        }
        return this._monthsStrictRegex && isStrict ?
            this._monthsStrictRegex : this._monthsRegex;
    }
}

function computeMonthsParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom;
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        shortPieces.push(this.monthsShort(mom, ''));
        longPieces.push(this.months(mom, ''));
        mixedPieces.push(this.months(mom, ''));
        mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
}

function createDate (y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date = new Date(y, m, d, h, M, s, ms);

    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
        date.setFullYear(y);
    }
    return date;
}

function createUTCDate (y) {
    var date = new Date(Date.UTC.apply(null, arguments));

    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
    }
    return date;
}

// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
        // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
}

// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear, resDayOfYear;

    if (dayOfYear <= 0) {
        resYear = year - 1;
        resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
        resYear = year + 1;
        resDayOfYear = dayOfYear - daysInYear(year);
    } else {
        resYear = year;
        resDayOfYear = dayOfYear;
    }

    return {
        year: resYear,
        dayOfYear: resDayOfYear
    };
}

function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek, resYear;

    if (week < 1) {
        resYear = mom.year() - 1;
        resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
        resWeek = week - weeksInYear(mom.year(), dow, doy);
        resYear = mom.year() + 1;
    } else {
        resYear = mom.year();
        resWeek = week;
    }

    return {
        week: resWeek,
        year: resYear
    };
}

function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// ALIASES

addUnitAlias('week', 'w');
addUnitAlias('isoWeek', 'W');

// PRIORITIES

addUnitPriority('week', 5);
addUnitPriority('isoWeek', 5);

// PARSING

addRegexToken('w',  match1to2);
addRegexToken('ww', match1to2, match2);
addRegexToken('W',  match1to2);
addRegexToken('WW', match1to2, match2);

addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
});

// HELPERS

// LOCALES

function localeWeek (mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
    dow : 0, // Sunday is the first day of the week.
    doy : 6  // The week that contains Jan 1st is the first week of the year.
};

function localeFirstDayOfWeek () {
    return this._week.dow;
}

function localeFirstDayOfYear () {
    return this._week.doy;
}

// MOMENTS

function getSetWeek (input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek (input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}

// FORMATTING

addFormatToken('d', 0, 'do', 'day');

addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
});

addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
});

addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
});

addFormatToken('e', 0, 0, 'weekday');
addFormatToken('E', 0, 0, 'isoWeekday');

// ALIASES

addUnitAlias('day', 'd');
addUnitAlias('weekday', 'e');
addUnitAlias('isoWeekday', 'E');

// PRIORITY
addUnitPriority('day', 11);
addUnitPriority('weekday', 11);
addUnitPriority('isoWeekday', 11);

// PARSING

addRegexToken('d',    match1to2);
addRegexToken('e',    match1to2);
addRegexToken('E',    match1to2);
addRegexToken('dd',   function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',   function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',   function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
});

addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
        week.d = weekday;
    } else {
        getParsingFlags(config).invalidWeekday = input;
    }
});

addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
});

// HELPERS

function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
        return input;
    }

    if (!isNaN(input)) {
        return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
        return input;
    }

    return null;
}

function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
        return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
}

// LOCALES

var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays (m, format) {
    if (!m) {
        return isArray(this._weekdays) ? this._weekdays :
            this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] :
        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
}

var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort (m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}

var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin (m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}

function handleStrictParse$1(weekdayName, format, strict) {
    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._minWeekdaysParse = [];

        for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeWeekdaysParse (weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
        return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._minWeekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already

        mom = createUTC([2000, 1]).day(i);
        if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
        }
        if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
        }
    }
}

// MOMENTS

function getSetDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
    } else {
        return day;
    }
}

function getSetLocaleDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
}

function getSetISODayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
        var weekday = parseIsoWeekday(input, this.localeData());
        return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
        return this.day() || 7;
    }
}

var defaultWeekdaysRegex = matchWord;
function weekdaysRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysStrictRegex;
        } else {
            return this._weekdaysRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
        }
        return this._weekdaysStrictRegex && isStrict ?
            this._weekdaysStrictRegex : this._weekdaysRegex;
    }
}

var defaultWeekdaysShortRegex = matchWord;
function weekdaysShortRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysShortStrictRegex;
        } else {
            return this._weekdaysShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
        }
        return this._weekdaysShortStrictRegex && isStrict ?
            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
}

var defaultWeekdaysMinRegex = matchWord;
function weekdaysMinRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysMinStrictRegex;
        } else {
            return this._weekdaysMinRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
        }
        return this._weekdaysMinStrictRegex && isStrict ?
            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
}


function computeWeekdaysParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom, minp, shortp, longp;
    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, 1]).day(i);
        minp = this.weekdaysMin(mom, '');
        shortp = this.weekdaysShort(mom, '');
        longp = this.weekdays(mom, '');
        minPieces.push(minp);
        shortPieces.push(shortp);
        longPieces.push(longp);
        mixedPieces.push(minp);
        mixedPieces.push(shortp);
        mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
}

// FORMATTING

function hFormat() {
    return this.hours() % 12 || 12;
}

function kFormat() {
    return this.hours() || 24;
}

addFormatToken('H', ['HH', 2], 0, 'hour');
addFormatToken('h', ['hh', 2], 0, hFormat);
addFormatToken('k', ['kk', 2], 0, kFormat);

addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});

addFormatToken('hmmss', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
});

addFormatToken('Hmmss', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

function meridiem (token, lowercase) {
    addFormatToken(token, 0, 0, function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
}

meridiem('a', true);
meridiem('A', false);

// ALIASES

addUnitAlias('hour', 'h');

// PRIORITY
addUnitPriority('hour', 13);

// PARSING

function matchMeridiem (isStrict, locale) {
    return locale._meridiemParse;
}

addRegexToken('a',  matchMeridiem);
addRegexToken('A',  matchMeridiem);
addRegexToken('H',  match1to2);
addRegexToken('h',  match1to2);
addRegexToken('k',  match1to2);
addRegexToken('HH', match1to2, match2);
addRegexToken('hh', match1to2, match2);
addRegexToken('kk', match1to2, match2);

addRegexToken('hmm', match3to4);
addRegexToken('hmmss', match5to6);
addRegexToken('Hmm', match3to4);
addRegexToken('Hmmss', match5to6);

addParseToken(['H', 'HH'], HOUR);
addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
});
addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
});
addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
});
addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
});

// LOCALES

function localeIsPM (input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return ((input + '').toLowerCase().charAt(0) === 'p');
}

var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
function localeMeridiem (hours, minutes, isLower) {
    if (hours > 11) {
        return isLower ? 'pm' : 'PM';
    } else {
        return isLower ? 'am' : 'AM';
    }
}


// MOMENTS

// Setting the hour should keep the time, because the user explicitly
// specified which hour he wants. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
var getSetHour = makeGetSet('Hours', true);

// months
// week
// weekdays
// meridiem
var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse
};

// internal storage for locale config files
var locales = {};
var localeFamilies = {};
var globalLocale;

function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
}

// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names) {
    var i = 0, j, next, locale, split;

    while (i < names.length) {
        split = normalizeLocale(names[i]).split('-');
        j = split.length;
        next = normalizeLocale(names[i + 1]);
        next = next ? next.split('-') : null;
        while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));
            if (locale) {
                return locale;
            }
            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                //the next array item is better than a shallower substring of this one
                break;
            }
            j--;
        }
        i++;
    }
    return null;
}

function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && (typeof module !== 'undefined') &&
            module && module.exports) {
        try {
            oldLocale = globalLocale._abbr;
            var aliasedRequire = require;
            __webpack_require__("./node_modules/moment/locale sync recursive ^\\.\\/.*$")("./" + name);
            getSetGlobalLocale(oldLocale);
        } catch (e) {}
    }
    return locales[name];
}

// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale (key, values) {
    var data;
    if (key) {
        if (isUndefined(values)) {
            data = getLocale(key);
        }
        else {
            data = defineLocale(key, values);
        }

        if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
        }
    }

    return globalLocale._abbr;
}

function defineLocale (name, config) {
    if (config !== null) {
        var parentConfig = baseConfig;
        config.abbr = name;
        if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
        } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
            } else {
                if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                });
                return null;
            }
        }
        locales[name] = new Locale(mergeConfigs(parentConfig, config));

        if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
                defineLocale(x.name, x.config);
            });
        }

        // backwards compat for now: also set the locale
        // make sure we set the locale AFTER all child locales have been
        // created, so we won't end up with the child locale set.
        getSetGlobalLocale(name);


        return locales[name];
    } else {
        // useful for testing
        delete locales[name];
        return null;
    }
}

function updateLocale(name, config) {
    if (config != null) {
        var locale, tmpLocale, parentConfig = baseConfig;
        // MERGE
        tmpLocale = loadLocale(name);
        if (tmpLocale != null) {
            parentConfig = tmpLocale._config;
        }
        config = mergeConfigs(parentConfig, config);
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;

        // backwards compat for now: also set the locale
        getSetGlobalLocale(name);
    } else {
        // pass null for config to unupdate, useful for tests
        if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
                locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
                delete locales[name];
            }
        }
    }
    return locales[name];
}

// returns locale data
function getLocale (key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
        key = key._locale._abbr;
    }

    if (!key) {
        return globalLocale;
    }

    if (!isArray(key)) {
        //short-circuit everything else
        locale = loadLocale(key);
        if (locale) {
            return locale;
        }
        key = [key];
    }

    return chooseLocale(key);
}

function listLocales() {
    return keys(locales);
}

function checkOverflow (m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
        overflow =
            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
            -1;

        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
        }
        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
        }
        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
        }

        getParsingFlags(m).overflow = overflow;
    }

    return m;
}

// Pick the first defined of two or three arguments.
function defaults(a, b, c) {
    if (a != null) {
        return a;
    }
    if (b != null) {
        return b;
    }
    return c;
}

function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}

// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray (config) {
    var i, date, input = [], currentDate, expectedWeekday, yearToUse;

    if (config._d) {
        return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
        dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
        }

        date = createUTCDate(yearToUse, 0, config._dayOfYear);
        config._a[MONTH] = date.getUTCMonth();
        config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
        config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0) {
        config._nextDay = true;
        config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
        config._a[HOUR] = 24;
    }

    // check for mismatching day of week
    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
        getParsingFlags(config).weekdayMismatch = true;
    }
}

function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
        dow = 1;
        doy = 4;

        // TODO: We need to take the current isoWeekYear, but that depends on
        // how we interpret now (local, utc, fixed offset). So create
        // a now version of current config (take local/utc/offset flags, and
        // create now).
        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
        week = defaults(w.W, 1);
        weekday = defaults(w.E, 1);
        if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
        }
    } else {
        dow = config._locale._week.dow;
        doy = config._locale._week.doy;

        var curWeek = weekOfYear(createLocal(), dow, doy);

        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

        // Default to current week.
        week = defaults(w.w, curWeek.week);

        if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
            }
        } else if (w.e != null) {
            // local weekday -- counting starts from begining of week
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
            }
        } else {
            // default to begining of week
            weekday = dow;
        }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
        getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
        getParsingFlags(config)._overflowWeekday = true;
    } else {
        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }
}

// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

var isoDates = [
    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
    ['YYYY-DDD', /\d{4}-\d{3}/],
    ['YYYY-MM', /\d{4}-\d\d/, false],
    ['YYYYYYMMDD', /[+-]\d{10}/],
    ['YYYYMMDD', /\d{8}/],
    // YYYYMM is NOT allowed by the standard
    ['GGGG[W]WWE', /\d{4}W\d{3}/],
    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
    ['YYYYDDD', /\d{7}/]
];

// iso time formats and regexes
var isoTimes = [
    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
    ['HH:mm', /\d\d:\d\d/],
    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
    ['HHmmss', /\d\d\d\d\d\d/],
    ['HHmm', /\d\d\d\d/],
    ['HH', /\d\d/]
];

var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

// date from iso format
function configFromISO(config) {
    var i, l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime, dateFormat, timeFormat, tzFormat;

    if (match) {
        getParsingFlags(config).iso = true;

        for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
            }
        }
        if (dateFormat == null) {
            config._isValid = false;
            return;
        }
        if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (timeFormat == null) {
                config._isValid = false;
                return;
            }
        }
        if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
        }
        if (match[4]) {
            if (tzRegex.exec(match[4])) {
                tzFormat = 'Z';
            } else {
                config._isValid = false;
                return;
            }
        }
        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
        configFromStringAndFormat(config);
    } else {
        config._isValid = false;
    }
}

// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
    var result = [
        untruncateYear(yearStr),
        defaultLocaleMonthsShort.indexOf(monthStr),
        parseInt(dayStr, 10),
        parseInt(hourStr, 10),
        parseInt(minuteStr, 10)
    ];

    if (secondStr) {
        result.push(parseInt(secondStr, 10));
    }

    return result;
}

function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
        return 2000 + year;
    } else if (year <= 999) {
        return 1900 + year;
    }
    return year;
}

function preprocessRFC2822(s) {
    // Remove comments and folding whitespace and replace multiple-spaces with a single space
    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
}

function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
        if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
        }
    }
    return true;
}

var obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60
};

function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
        return obsOffsets[obsOffset];
    } else if (militaryOffset) {
        // the only allowed military tz is Z
        return 0;
    } else {
        var hm = parseInt(numOffset, 10);
        var m = hm % 100, h = (hm - m) / 100;
        return h * 60 + m;
    }
}

// date and time from ref 2822 format
function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i));
    if (match) {
        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
        if (!checkWeekday(match[1], parsedArray, config)) {
            return;
        }

        config._a = parsedArray;
        config._tzm = calculateOffset(match[8], match[9], match[10]);

        config._d = createUTCDate.apply(null, config._a);
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

        getParsingFlags(config).rfc2822 = true;
    } else {
        config._isValid = false;
    }
}

// date from iso format or fallback
function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
        config._d = new Date(+matched[1]);
        return;
    }

    configFromISO(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    // Final attempt, use Input Fallback
    hooks.createFromInputFallback(config);
}

hooks.createFromInputFallback = deprecate(
    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
    'discouraged and will be removed in an upcoming major release. Please refer to ' +
    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
    function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    }
);

// constant that refers to the ISO standard
hooks.ISO_8601 = function () {};

// constant that refers to the RFC 2822 form
hooks.RFC_2822 = function () {};

// date from string and format string
function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
        configFromISO(config);
        return;
    }
    if (config._f === hooks.RFC_2822) {
        configFromRFC2822(config);
        return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
        i, parsedInput, tokens, token, skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
        token = tokens[i];
        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
        // console.log('token', token, 'parsedInput', parsedInput,
        //         'regex', getParseRegexForToken(token, config));
        if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
        }
        // don't parse if it's not a known token
        if (formatTokenFunctions[token]) {
            if (parsedInput) {
                getParsingFlags(config).empty = false;
            }
            else {
                getParsingFlags(config).unusedTokens.push(token);
            }
            addTimeToArrayFromToken(token, parsedInput, config);
        }
        else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
        }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
        getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (config._a[HOUR] <= 12 &&
        getParsingFlags(config).bigHour === true &&
        config._a[HOUR] > 0) {
        getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
}


function meridiemFixWrap (locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
        // nothing to do
        return hour;
    }
    if (locale.meridiemHour != null) {
        return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
        // Fallback
        isPm = locale.isPM(meridiem);
        if (isPm && hour < 12) {
            hour += 12;
        }
        if (!isPm && hour === 12) {
            hour = 0;
        }
        return hour;
    } else {
        // this is not supposed to happen
        return hour;
    }
}

// date from string and array of format strings
function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,

        scoreToBeat,
        i,
        currentScore;

    if (config._f.length === 0) {
        getParsingFlags(config).invalidFormat = true;
        config._d = new Date(NaN);
        return;
    }

    for (i = 0; i < config._f.length; i++) {
        currentScore = 0;
        tempConfig = copyConfig({}, config);
        if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
        }
        tempConfig._f = config._f[i];
        configFromStringAndFormat(tempConfig);

        if (!isValid(tempConfig)) {
            continue;
        }

        // if there is any input that was not parsed add a penalty for that format
        currentScore += getParsingFlags(tempConfig).charsLeftOver;

        //or tokens
        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

        getParsingFlags(tempConfig).score = currentScore;

        if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
        }
    }

    extend(config, bestMoment || tempConfig);
}

function configFromObject(config) {
    if (config._d) {
        return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10);
    });

    configFromArray(config);
}

function createFromConfig (config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
        // Adding is smart enough around DST
        res.add(1, 'd');
        res._nextDay = undefined;
    }

    return res;
}

function prepareConfig (config) {
    var input = config._i,
        format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || (format === undefined && input === '')) {
        return createInvalid({nullInput: true});
    }

    if (typeof input === 'string') {
        config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
        return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
        config._d = input;
    } else if (isArray(format)) {
        configFromStringAndArray(config);
    } else if (format) {
        configFromStringAndFormat(config);
    }  else {
        configFromInput(config);
    }

    if (!isValid(config)) {
        config._d = null;
    }

    return config;
}

function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
        config._d = new Date(hooks.now());
    } else if (isDate(input)) {
        config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
        configFromString(config);
    } else if (isArray(input)) {
        config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
        });
        configFromArray(config);
    } else if (isObject(input)) {
        configFromObject(config);
    } else if (isNumber(input)) {
        // from milliseconds
        config._d = new Date(input);
    } else {
        hooks.createFromInputFallback(config);
    }
}

function createLocalOrUTC (input, format, locale, strict, isUTC) {
    var c = {};

    if (locale === true || locale === false) {
        strict = locale;
        locale = undefined;
    }

    if ((isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)) {
        input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
}

function createLocal (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
}

var prototypeMin = deprecate(
    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

var prototypeMax = deprecate(
    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
        moments = moments[0];
    }
    if (!moments.length) {
        return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
        if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
        }
    }
    return res;
}

// TODO: Use [].sort instead?
function min () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
}

function max () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
}

var now = function () {
    return Date.now ? Date.now() : +(new Date());
};

var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

function isDurationValid(m) {
    for (var key in m) {
        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
        }
    }

    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
        if (m[ordering[i]]) {
            if (unitHasDecimal) {
                return false; // only allow non-integers for smallest unit
            }
            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                unitHasDecimal = true;
            }
        }
    }

    return true;
}

function isValid$1() {
    return this._isValid;
}

function createInvalid$1() {
    return createDuration(NaN);
}

function Duration (duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
        seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
        weeks * 7;
    // It is impossible to translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
        quarters * 3 +
        years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
}

function isDuration (obj) {
    return obj instanceof Duration;
}

function absRound (number) {
    if (number < 0) {
        return Math.round(-1 * number) * -1;
    } else {
        return Math.round(number);
    }
}

// FORMATTING

function offset (token, separator) {
    addFormatToken(token, 0, 0, function () {
        var offset = this.utcOffset();
        var sign = '+';
        if (offset < 0) {
            offset = -offset;
            sign = '-';
        }
        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
}

offset('Z', ':');
offset('ZZ', '');

// PARSING

addRegexToken('Z',  matchShortOffset);
addRegexToken('ZZ', matchShortOffset);
addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
});

// HELPERS

// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset = /([\+\-]|\d\d)/gi;

function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);

    if (matches === null) {
        return null;
    }

    var chunk   = matches[matches.length - 1] || [];
    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ?
      0 :
      parts[0] === '+' ? minutes : -minutes;
}

// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
        res = model.clone();
        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
        // Use low-level api, because this fn is low-level api.
        res._d.setTime(res._d.valueOf() + diff);
        hooks.updateOffset(res, false);
        return res;
    } else {
        return createLocal(input).local();
    }
}

function getDateOffset (m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
}

// HOOKS

// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset = function () {};

// MOMENTS

// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset (input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    if (input != null) {
        if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
                return this;
            }
        } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
            this.add(localAdjust, 'm');
        }
        if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
            }
        }
        return this;
    } else {
        return this._isUTC ? offset : getDateOffset(this);
    }
}

function getSetZone (input, keepLocalTime) {
    if (input != null) {
        if (typeof input !== 'string') {
            input = -input;
        }

        this.utcOffset(input, keepLocalTime);

        return this;
    } else {
        return -this.utcOffset();
    }
}

function setOffsetToUTC (keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
}

function setOffsetToLocal (keepLocalTime) {
    if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;

        if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
        }
    }
    return this;
}

function setOffsetToParsedOffset () {
    if (this._tzm != null) {
        this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
        var tZone = offsetFromString(matchOffset, this._i);
        if (tZone != null) {
            this.utcOffset(tZone);
        }
        else {
            this.utcOffset(0, true);
        }
    }
    return this;
}

function hasAlignedHourOffset (input) {
    if (!this.isValid()) {
        return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
}

function isDaylightSavingTime () {
    return (
        this.utcOffset() > this.clone().month(0).utcOffset() ||
        this.utcOffset() > this.clone().month(5).utcOffset()
    );
}

function isDaylightSavingTimeShifted () {
    if (!isUndefined(this._isDSTShifted)) {
        return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
        this._isDSTShifted = this.isValid() &&
            compareArrays(c._a, other.toArray()) > 0;
    } else {
        this._isDSTShifted = false;
    }

    return this._isDSTShifted;
}

function isLocal () {
    return this.isValid() ? !this._isUTC : false;
}

function isUtcOffset () {
    return this.isValid() ? this._isUTC : false;
}

function isUtc () {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
}

// ASP.NET json date format regex
var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

function createDuration (input, key) {
    var duration = input,
        // matching against regexp is expensive, do it on demand
        match = null,
        sign,
        ret,
        diffRes;

    if (isDuration(input)) {
        duration = {
            ms : input._milliseconds,
            d  : input._days,
            M  : input._months
        };
    } else if (isNumber(input)) {
        duration = {};
        if (key) {
            duration[key] = input;
        } else {
            duration.milliseconds = input;
        }
    } else if (!!(match = aspNetRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y  : 0,
            d  : toInt(match[DATE])                         * sign,
            h  : toInt(match[HOUR])                         * sign,
            m  : toInt(match[MINUTE])                       * sign,
            s  : toInt(match[SECOND])                       * sign,
            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
        };
    } else if (!!(match = isoRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
        duration = {
            y : parseIso(match[2], sign),
            M : parseIso(match[3], sign),
            w : parseIso(match[4], sign),
            d : parseIso(match[5], sign),
            h : parseIso(match[6], sign),
            m : parseIso(match[7], sign),
            s : parseIso(match[8], sign)
        };
    } else if (duration == null) {// checks for null or undefined
        duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

        duration = {};
        duration.ms = diffRes.milliseconds;
        duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
        ret._locale = input._locale;
    }

    return ret;
}

createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;

function parseIso (inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
}

function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};

    res.months = other.month() - base.month() +
        (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
        --res.months;
    }

    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

    return res;
}

function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
        return {milliseconds: 0, months: 0};
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
        res = positiveMomentsDifference(base, other);
    } else {
        res = positiveMomentsDifference(other, base);
        res.milliseconds = -res.milliseconds;
        res.months = -res.months;
    }

    return res;
}

// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction, name) {
    return function (val, period) {
        var dur, tmp;
        //invert the arguments, but complain about it
        if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val; val = period; period = tmp;
        }

        val = typeof val === 'string' ? +val : val;
        dur = createDuration(val, period);
        addSubtract(this, dur, direction);
        return this;
    };
}

function addSubtract (mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);

    if (!mom.isValid()) {
        // No op
        return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
        setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
        hooks.updateOffset(mom, days || months);
    }
}

var add      = createAdder(1, 'add');
var subtract = createAdder(-1, 'subtract');

function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
            diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
            diff < 1 ? 'sameDay' :
            diff < 2 ? 'nextDay' :
            diff < 7 ? 'nextWeek' : 'sameElse';
}

function calendar$1 (time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';

    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
}

function clone () {
    return new Moment(this);
}

function isAfter (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() > localInput.valueOf();
    } else {
        return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
}

function isBefore (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() < localInput.valueOf();
    } else {
        return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
}

function isBetween (from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
}

function isSame (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() === localInput.valueOf();
    } else {
        inputMs = localInput.valueOf();
        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
}

function isSameOrAfter (input, units) {
    return this.isSame(input, units) || this.isAfter(input,units);
}

function isSameOrBefore (input, units) {
    return this.isSame(input, units) || this.isBefore(input,units);
}

function diff (input, units, asFloat) {
    var that,
        zoneDelta,
        delta, output;

    if (!this.isValid()) {
        return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
        return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    switch (units) {
        case 'year': output = monthDiff(this, that) / 12; break;
        case 'month': output = monthDiff(this, that); break;
        case 'quarter': output = monthDiff(this, that) / 3; break;
        case 'second': output = (this - that) / 1e3; break; // 1000
        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
        default: output = this - that;
    }

    return asFloat ? output : absFloor(output);
}

function monthDiff (a, b) {
    // difference in months
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2, adjust;

    if (b - anchor < 0) {
        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor - anchor2);
    } else {
        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
}

hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

function toString () {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}

function toISOString() {
    if (!this.isValid()) {
        return null;
    }
    var m = this.clone().utc();
    if (m.year() < 0 || m.year() > 9999) {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
    if (isFunction(Date.prototype.toISOString)) {
        // native implementation is ~50x faster, use it when we can
        return this.toDate().toISOString();
    }
    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
}

/**
 * Return a human readable representation of a moment that can
 * also be evaluated to get a new moment which is the same
 *
 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
 */
function inspect () {
    if (!this.isValid()) {
        return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
        zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
}

function format (inputString) {
    if (!inputString) {
        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
}

function from (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function fromNow (withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
}

function to (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function toNow (withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
}

// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale (key) {
    var newLocaleData;

    if (key === undefined) {
        return this._locale._abbr;
    } else {
        newLocaleData = getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}

var lang = deprecate(
    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
    function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    }
);

function localeData () {
    return this._locale;
}

function startOf (units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
        case 'date':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
    }

    // weeks are a special case
    if (units === 'week') {
        this.weekday(0);
    }
    if (units === 'isoWeek') {
        this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
}

function endOf (units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
        return this;
    }

    // 'date' is an alias for 'day', so it should be considered as such.
    if (units === 'date') {
        units = 'day';
    }

    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
}

function valueOf () {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
}

function unix () {
    return Math.floor(this.valueOf() / 1000);
}

function toDate () {
    return new Date(this.valueOf());
}

function toArray () {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
}

function toObject () {
    var m = this;
    return {
        years: m.year(),
        months: m.month(),
        date: m.date(),
        hours: m.hours(),
        minutes: m.minutes(),
        seconds: m.seconds(),
        milliseconds: m.milliseconds()
    };
}

function toJSON () {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
}

function isValid$2 () {
    return isValid(this);
}

function parsingFlags () {
    return extend({}, getParsingFlags(this));
}

function invalidAt () {
    return getParsingFlags(this).overflow;
}

function creationData() {
    return {
        input: this._i,
        format: this._f,
        locale: this._locale,
        isUTC: this._isUTC,
        strict: this._strict
    };
}

// FORMATTING

addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
});

addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
});

function addWeekYearFormatToken (token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
}

addWeekYearFormatToken('gggg',     'weekYear');
addWeekYearFormatToken('ggggg',    'weekYear');
addWeekYearFormatToken('GGGG',  'isoWeekYear');
addWeekYearFormatToken('GGGGG', 'isoWeekYear');

// ALIASES

addUnitAlias('weekYear', 'gg');
addUnitAlias('isoWeekYear', 'GG');

// PRIORITY

addUnitPriority('weekYear', 1);
addUnitPriority('isoWeekYear', 1);


// PARSING

addRegexToken('G',      matchSigned);
addRegexToken('g',      matchSigned);
addRegexToken('GG',     match1to2, match2);
addRegexToken('gg',     match1to2, match2);
addRegexToken('GGGG',   match1to4, match4);
addRegexToken('gggg',   match1to4, match4);
addRegexToken('GGGGG',  match1to6, match6);
addRegexToken('ggggg',  match1to6, match6);

addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
});

addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
});

// MOMENTS

function getSetWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy);
}

function getSetISOWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input, this.isoWeek(), this.isoWeekday(), 1, 4);
}

function getISOWeeksInYear () {
    return weeksInYear(this.year(), 1, 4);
}

function getWeeksInYear () {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}

function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
        return weekOfYear(this, dow, doy).year;
    } else {
        weeksTarget = weeksInYear(input, dow, doy);
        if (week > weeksTarget) {
            week = weeksTarget;
        }
        return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
}

function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
}

// FORMATTING

addFormatToken('Q', 0, 'Qo', 'quarter');

// ALIASES

addUnitAlias('quarter', 'Q');

// PRIORITY

addUnitPriority('quarter', 7);

// PARSING

addRegexToken('Q', match1);
addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
});

// MOMENTS

function getSetQuarter (input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}

// FORMATTING

addFormatToken('D', ['DD', 2], 'Do', 'date');

// ALIASES

addUnitAlias('date', 'D');

// PRIOROITY
addUnitPriority('date', 9);

// PARSING

addRegexToken('D',  match1to2);
addRegexToken('DD', match1to2, match2);
addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
      locale._dayOfMonthOrdinalParseLenient;
});

addParseToken(['D', 'DD'], DATE);
addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0]);
});

// MOMENTS

var getSetDayOfMonth = makeGetSet('Date', true);

// FORMATTING

addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

// ALIASES

addUnitAlias('dayOfYear', 'DDD');

// PRIORITY
addUnitPriority('dayOfYear', 4);

// PARSING

addRegexToken('DDD',  match1to3);
addRegexToken('DDDD', match3);
addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
});

// HELPERS

// MOMENTS

function getSetDayOfYear (input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
}

// FORMATTING

addFormatToken('m', ['mm', 2], 0, 'minute');

// ALIASES

addUnitAlias('minute', 'm');

// PRIORITY

addUnitPriority('minute', 14);

// PARSING

addRegexToken('m',  match1to2);
addRegexToken('mm', match1to2, match2);
addParseToken(['m', 'mm'], MINUTE);

// MOMENTS

var getSetMinute = makeGetSet('Minutes', false);

// FORMATTING

addFormatToken('s', ['ss', 2], 0, 'second');

// ALIASES

addUnitAlias('second', 's');

// PRIORITY

addUnitPriority('second', 15);

// PARSING

addRegexToken('s',  match1to2);
addRegexToken('ss', match1to2, match2);
addParseToken(['s', 'ss'], SECOND);

// MOMENTS

var getSetSecond = makeGetSet('Seconds', false);

// FORMATTING

addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
});

addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
});

addFormatToken(0, ['SSS', 3], 0, 'millisecond');
addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
});
addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
});
addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
});
addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
});
addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
});
addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
});


// ALIASES

addUnitAlias('millisecond', 'ms');

// PRIORITY

addUnitPriority('millisecond', 16);

// PARSING

addRegexToken('S',    match1to3, match1);
addRegexToken('SS',   match1to3, match2);
addRegexToken('SSS',  match1to3, match3);

var token;
for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
}

function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
}

for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
}
// MOMENTS

var getSetMillisecond = makeGetSet('Milliseconds', false);

// FORMATTING

addFormatToken('z',  0, 0, 'zoneAbbr');
addFormatToken('zz', 0, 0, 'zoneName');

// MOMENTS

function getZoneAbbr () {
    return this._isUTC ? 'UTC' : '';
}

function getZoneName () {
    return this._isUTC ? 'Coordinated Universal Time' : '';
}

var proto = Moment.prototype;

proto.add               = add;
proto.calendar          = calendar$1;
proto.clone             = clone;
proto.diff              = diff;
proto.endOf             = endOf;
proto.format            = format;
proto.from              = from;
proto.fromNow           = fromNow;
proto.to                = to;
proto.toNow             = toNow;
proto.get               = stringGet;
proto.invalidAt         = invalidAt;
proto.isAfter           = isAfter;
proto.isBefore          = isBefore;
proto.isBetween         = isBetween;
proto.isSame            = isSame;
proto.isSameOrAfter     = isSameOrAfter;
proto.isSameOrBefore    = isSameOrBefore;
proto.isValid           = isValid$2;
proto.lang              = lang;
proto.locale            = locale;
proto.localeData        = localeData;
proto.max               = prototypeMax;
proto.min               = prototypeMin;
proto.parsingFlags      = parsingFlags;
proto.set               = stringSet;
proto.startOf           = startOf;
proto.subtract          = subtract;
proto.toArray           = toArray;
proto.toObject          = toObject;
proto.toDate            = toDate;
proto.toISOString       = toISOString;
proto.inspect           = inspect;
proto.toJSON            = toJSON;
proto.toString          = toString;
proto.unix              = unix;
proto.valueOf           = valueOf;
proto.creationData      = creationData;

// Year
proto.year       = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear    = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month       = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week           = proto.weeks        = getSetWeek;
proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
proto.weeksInYear    = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date       = getSetDayOfMonth;
proto.day        = proto.days             = getSetDayOfWeek;
proto.weekday    = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear  = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset            = getSetOffset;
proto.utc                  = setOffsetToUTC;
proto.local                = setOffsetToLocal;
proto.parseZone            = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST                = isDaylightSavingTime;
proto.isLocal              = isLocal;
proto.isUtcOffset          = isUtcOffset;
proto.isUtc                = isUtc;
proto.isUTC                = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

function createUnix (input) {
    return createLocal(input * 1000);
}

function createInZone () {
    return createLocal.apply(null, arguments).parseZone();
}

function preParsePostFormat (string) {
    return string;
}

var proto$1 = Locale.prototype;

proto$1.calendar        = calendar;
proto$1.longDateFormat  = longDateFormat;
proto$1.invalidDate     = invalidDate;
proto$1.ordinal         = ordinal;
proto$1.preparse        = preParsePostFormat;
proto$1.postformat      = preParsePostFormat;
proto$1.relativeTime    = relativeTime;
proto$1.pastFuture      = pastFuture;
proto$1.set             = set;

// Month
proto$1.months            =        localeMonths;
proto$1.monthsShort       =        localeMonthsShort;
proto$1.monthsParse       =        localeMonthsParse;
proto$1.monthsRegex       = monthsRegex;
proto$1.monthsShortRegex  = monthsShortRegex;

// Week
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;

// Day of Week
proto$1.weekdays       =        localeWeekdays;
proto$1.weekdaysMin    =        localeWeekdaysMin;
proto$1.weekdaysShort  =        localeWeekdaysShort;
proto$1.weekdaysParse  =        localeWeekdaysParse;

proto$1.weekdaysRegex       =        weekdaysRegex;
proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

// Hours
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;

function get$1 (format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
}

function listMonthsImpl (format, index, field) {
    if (isNumber(format)) {
        index = format;
        format = undefined;
    }

    format = format || '';

    if (index != null) {
        return get$1(format, index, field, 'month');
    }

    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get$1(format, i, field, 'month');
    }
    return out;
}

// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl (localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    } else {
        format = localeSorted;
        index = format;
        localeSorted = false;

        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    }

    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;

    if (index != null) {
        return get$1(format, (index + shift) % 7, field, 'day');
    }

    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
}

function listMonths (format, index) {
    return listMonthsImpl(format, index, 'months');
}

function listMonthsShort (format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}

function listWeekdays (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}

function listWeekdaysShort (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}

function listWeekdaysMin (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}

getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (toInt(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

// Side effect imports
hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

var mathAbs = Math.abs;

function abs () {
    var data           = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days         = mathAbs(this._days);
    this._months       = mathAbs(this._months);

    data.milliseconds  = mathAbs(data.milliseconds);
    data.seconds       = mathAbs(data.seconds);
    data.minutes       = mathAbs(data.minutes);
    data.hours         = mathAbs(data.hours);
    data.months        = mathAbs(data.months);
    data.years         = mathAbs(data.years);

    return this;
}

function addSubtract$1 (duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days         += direction * other._days;
    duration._months       += direction * other._months;

    return duration._bubble();
}

// supports only 2.0-style add(1, 's') or add(duration)
function add$1 (input, value) {
    return addSubtract$1(this, input, value, 1);
}

// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1 (input, value) {
    return addSubtract$1(this, input, value, -1);
}

function absCeil (number) {
    if (number < 0) {
        return Math.floor(number);
    } else {
        return Math.ceil(number);
    }
}

function bubble () {
    var milliseconds = this._milliseconds;
    var days         = this._days;
    var months       = this._months;
    var data         = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
            (milliseconds <= 0 && days <= 0 && months <= 0))) {
        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
        days = 0;
        months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds           = absFloor(milliseconds / 1000);
    data.seconds      = seconds % 60;

    minutes           = absFloor(seconds / 60);
    data.minutes      = minutes % 60;

    hours             = absFloor(minutes / 60);
    data.hours        = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days   = days;
    data.months = months;
    data.years  = years;

    return this;
}

function daysToMonths (days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
}

function monthsToDays (months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
}

function as (units) {
    if (!this.isValid()) {
        return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
        days   = this._days   + milliseconds / 864e5;
        months = this._months + daysToMonths(days);
        return units === 'month' ? months : months / 12;
    } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(monthsToDays(this._months));
        switch (units) {
            case 'week'   : return days / 7     + milliseconds / 6048e5;
            case 'day'    : return days         + milliseconds / 864e5;
            case 'hour'   : return days * 24    + milliseconds / 36e5;
            case 'minute' : return days * 1440  + milliseconds / 6e4;
            case 'second' : return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}

// TODO: Use this.as('ms')?
function valueOf$1 () {
    if (!this.isValid()) {
        return NaN;
    }
    return (
        this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        toInt(this._months / 12) * 31536e6
    );
}

function makeAs (alias) {
    return function () {
        return this.as(alias);
    };
}

var asMilliseconds = makeAs('ms');
var asSeconds      = makeAs('s');
var asMinutes      = makeAs('m');
var asHours        = makeAs('h');
var asDays         = makeAs('d');
var asWeeks        = makeAs('w');
var asMonths       = makeAs('M');
var asYears        = makeAs('y');

function clone$1 () {
    return createDuration(this);
}

function get$2 (units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
}

function makeGetter(name) {
    return function () {
        return this.isValid() ? this._data[name] : NaN;
    };
}

var milliseconds = makeGetter('milliseconds');
var seconds      = makeGetter('seconds');
var minutes      = makeGetter('minutes');
var hours        = makeGetter('hours');
var days         = makeGetter('days');
var months       = makeGetter('months');
var years        = makeGetter('years');

function weeks () {
    return absFloor(this.days() / 7);
}

var round = Math.round;
var thresholds = {
    ss: 44,         // a few seconds to seconds
    s : 45,         // seconds to minute
    m : 45,         // minutes to hour
    h : 22,         // hours to day
    d : 26,         // days to month
    M : 11          // months to year
};

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}

function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds <= thresholds.ss && ['s', seconds]  ||
            seconds < thresholds.s   && ['ss', seconds] ||
            minutes <= 1             && ['m']           ||
            minutes < thresholds.m   && ['mm', minutes] ||
            hours   <= 1             && ['h']           ||
            hours   < thresholds.h   && ['hh', hours]   ||
            days    <= 1             && ['d']           ||
            days    < thresholds.d   && ['dd', days]    ||
            months  <= 1             && ['M']           ||
            months  < thresholds.M   && ['MM', months]  ||
            years   <= 1             && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
}

// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding (roundingFunction) {
    if (roundingFunction === undefined) {
        return round;
    }
    if (typeof(roundingFunction) === 'function') {
        round = roundingFunction;
        return true;
    }
    return false;
}

// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold (threshold, limit) {
    if (thresholds[threshold] === undefined) {
        return false;
    }
    if (limit === undefined) {
        return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
        thresholds.ss = limit - 1;
    }
    return true;
}

function humanize (withSuffix) {
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);

    if (withSuffix) {
        output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
}

var abs$1 = Math.abs;

function sign(x) {
    return ((x > 0) - (x < 0)) || +x;
}

function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000;
    var days         = abs$1(this._days);
    var months       = abs$1(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes           = absFloor(seconds / 60);
    hours             = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years  = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
    var total = this.asSeconds();

    if (!total) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
    }

    var totalSign = total < 0 ? '-' : '';
    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

    return totalSign + 'P' +
        (Y ? ymSign + Y + 'Y' : '') +
        (M ? ymSign + M + 'M' : '') +
        (D ? daysSign + D + 'D' : '') +
        ((h || m || s) ? 'T' : '') +
        (h ? hmsSign + h + 'H' : '') +
        (m ? hmsSign + m + 'M' : '') +
        (s ? hmsSign + s + 'S' : '');
}

var proto$2 = Duration.prototype;

proto$2.isValid        = isValid$1;
proto$2.abs            = abs;
proto$2.add            = add$1;
proto$2.subtract       = subtract$1;
proto$2.as             = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds      = asSeconds;
proto$2.asMinutes      = asMinutes;
proto$2.asHours        = asHours;
proto$2.asDays         = asDays;
proto$2.asWeeks        = asWeeks;
proto$2.asMonths       = asMonths;
proto$2.asYears        = asYears;
proto$2.valueOf        = valueOf$1;
proto$2._bubble        = bubble;
proto$2.clone          = clone$1;
proto$2.get            = get$2;
proto$2.milliseconds   = milliseconds;
proto$2.seconds        = seconds;
proto$2.minutes        = minutes;
proto$2.hours          = hours;
proto$2.days           = days;
proto$2.weeks          = weeks;
proto$2.months         = months;
proto$2.years          = years;
proto$2.humanize       = humanize;
proto$2.toISOString    = toISOString$1;
proto$2.toString       = toISOString$1;
proto$2.toJSON         = toISOString$1;
proto$2.locale         = locale;
proto$2.localeData     = localeData;

// Deprecations
proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
proto$2.lang = lang;

// Side effect imports

// FORMATTING

addFormatToken('X', 0, 0, 'unix');
addFormatToken('x', 0, 0, 'valueOf');

// PARSING

addRegexToken('x', matchSigned);
addRegexToken('X', matchTimestamp);
addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
});
addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
});

// Side effect imports


hooks.version = '2.19.4';

setHookCallback(createLocal);

hooks.fn                    = proto;
hooks.min                   = min;
hooks.max                   = max;
hooks.now                   = now;
hooks.utc                   = createUTC;
hooks.unix                  = createUnix;
hooks.months                = listMonths;
hooks.isDate                = isDate;
hooks.locale                = getSetGlobalLocale;
hooks.invalid               = createInvalid;
hooks.duration              = createDuration;
hooks.isMoment              = isMoment;
hooks.weekdays              = listWeekdays;
hooks.parseZone             = createInZone;
hooks.localeData            = getLocale;
hooks.isDuration            = isDuration;
hooks.monthsShort           = listMonthsShort;
hooks.weekdaysMin           = listWeekdaysMin;
hooks.defineLocale          = defineLocale;
hooks.updateLocale          = updateLocale;
hooks.locales               = listLocales;
hooks.weekdaysShort         = listWeekdaysShort;
hooks.normalizeUnits        = normalizeUnits;
hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat        = getCalendarFormat;
hooks.prototype             = proto;

return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/pluggable.js/dist/pluggable.js":
/*!*****************************************************!*\
  !*** ./node_modules/pluggable.js/dist/pluggable.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! lodash */ "lodash")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else { var mod; }
})(this, function (exports, _lodash) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.enable = undefined;

    var _ = _interopRequireWildcard(_lodash);

    function _interopRequireWildcard(obj) {
        if (obj && obj.__esModule) {
            return obj;
        } else {
            var newObj = {};

            if (obj != null) {
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
                }
            }

            newObj.default = obj;
            return newObj;
        }
    }

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    // The `PluginSocket` class contains the plugin architecture, and gets
    // created whenever `pluggable.enable(obj);` is called on the object
    // that you want to make pluggable.
    // You can also see it as the thing into which the plugins are plugged.
    // It takes two parameters, first, the object being made pluggable, and
    // then the name by which the pluggable object may be referenced on the
    // __super__ object (inside overrides).
    function PluginSocket(plugged, name) {
        this.name = name;
        this.plugged = plugged;
        if (typeof this.plugged.__super__ === 'undefined') {
            this.plugged.__super__ = {};
        } else if (typeof this.plugged.__super__ === 'string') {
            this.plugged.__super__ = { '__string__': this.plugged.__super__ };
        }
        this.plugged.__super__[name] = this.plugged;
        this.plugins = {};
        this.initialized_plugins = [];
    }

    // Now we add methods to the PluginSocket by adding them to its
    // prototype.
    _.extend(PluginSocket.prototype, {

        // `wrappedOverride` creates a partially applied wrapper function
        // that makes sure to set the proper super method when the
        // overriding method is called. This is done to enable
        // chaining of plugin methods, all the way up to the
        // original method.
        wrappedOverride: function wrappedOverride(key, value, super_method, default_super) {
            if (typeof super_method === "function") {
                if (typeof this.__super__ === "undefined") {
                    /* We're not on the context of the plugged object.
                     * This can happen when the overridden method is called via
                     * an event handler or when it's a constructor.
                     *
                     * In this case, we simply tack on the  __super__ obj.
                     */
                    this.__super__ = default_super;
                }
                this.__super__[key] = super_method.bind(this);
            }
            return value.apply(this, _.drop(arguments, 4));
        },

        // `_overrideAttribute` overrides an attribute on the original object
        // (the thing being plugged into).
        //
        // If the attribute being overridden is a function, then the original
        // function will still be available via the `__super__` attribute.
        //
        // If the same function is being overridden multiple times, then
        // the original function will be available at the end of a chain of
        // functions, starting from the most recent override, all the way
        // back to the original function, each being referenced by the
        // previous' __super__ attribute.
        //
        // For example:
        //
        // `plugin2.MyFunc.__super__.myFunc => plugin1.MyFunc.__super__.myFunc => original.myFunc`
        _overrideAttribute: function _overrideAttribute(key, plugin) {
            var value = plugin.overrides[key];
            if (typeof value === "function") {
                var default_super = {};
                default_super[this.name] = this.plugged;

                var wrapped_function = _.partial(this.wrappedOverride, key, value, this.plugged[key], default_super);
                this.plugged[key] = wrapped_function;
            } else {
                this.plugged[key] = value;
            }
        },

        _extendObject: function _extendObject(obj, attributes) {
            if (!obj.prototype.__super__) {
                obj.prototype.__super__ = {};
                obj.prototype.__super__[this.name] = this.plugged;
            }
            var that = this;
            _.each(attributes, function (value, key) {
                if (key === 'events') {
                    obj.prototype[key] = _.extend(value, obj.prototype[key]);
                } else if (typeof value === 'function') {
                    // We create a partially applied wrapper function, that
                    // makes sure to set the proper super method when the
                    // overriding method is called. This is done to enable
                    // chaining of plugin methods, all the way up to the
                    // original method.
                    var default_super = {};
                    default_super[that.name] = that.plugged;

                    var wrapped_function = _.partial(that.wrappedOverride, key, value, obj.prototype[key], default_super);
                    obj.prototype[key] = wrapped_function;
                } else {
                    obj.prototype[key] = value;
                }
            });
        },

        // Plugins can specify dependencies (by means of the
        // `dependencies` list attribute) which refers to dependencies
        // which will be initialized first, before the plugin itself gets initialized.
        //
        // If `strict_plugin_dependencies` is set to `false` (on the object being
        // made pluggable), then no error will be thrown if any of these plugins aren't
        // available.
        loadPluginDependencies: function loadPluginDependencies(plugin) {
            var _this = this;

            _.each(plugin.dependencies, function (name) {
                var dep = _this.plugins[name];
                if (dep) {
                    if (_.includes(dep.dependencies, plugin.__name__)) {
                        /* FIXME: circular dependency checking is only one level deep. */
                        throw "Found a circular dependency between the plugins \"" + plugin.__name__ + "\" and \"" + name + "\"";
                    }
                    _this.initializePlugin(dep);
                } else {
                    _this.throwUndefinedDependencyError("Could not find dependency \"" + name + "\" " + "for the plugin \"" + plugin.__name__ + "\". " + "If it's needed, make sure it's loaded by require.js");
                }
            });
        },

        throwUndefinedDependencyError: function throwUndefinedDependencyError(msg) {
            if (this.plugged.strict_plugin_dependencies) {
                throw msg;
            } else {
                console.log(msg);
                return;
            }
        },

        // `applyOverrides` is called by initializePlugin. It applies any
        // and all overrides of methods or Backbone views and models that
        // are defined on any of the plugins.
        applyOverrides: function applyOverrides(plugin) {
            var _this2 = this;

            _.each(Object.keys(plugin.overrides || {}), function (key) {
                var override = plugin.overrides[key];
                if ((typeof override === 'undefined' ? 'undefined' : _typeof(override)) === "object") {
                    if (typeof _this2.plugged[key] === 'undefined') {
                        _this2.throwUndefinedDependencyError("Error: Plugin \"" + plugin.__name__ + "\" tried to override " + key + " but it's not found.");
                    } else {
                        _this2._extendObject(_this2.plugged[key], override);
                    }
                } else {
                    _this2._overrideAttribute(key, plugin);
                }
            });
        },

        // `initializePlugin` applies the overrides (if any) defined on all
        // the registered plugins and then calls the initialize method of the plugin
        initializePlugin: function initializePlugin(plugin) {
            if (!_.includes(_.keys(this.allowed_plugins), plugin.__name__)) {
                /* Don't initialize disallowed plugins. */
                return;
            }
            if (_.includes(this.initialized_plugins, plugin.__name__)) {
                /* Don't initialize plugins twice, otherwise we get
                * infinite recursion in overridden methods.
                */
                return;
            }
            if (_.isBoolean(plugin.enabled) && plugin.enabled || _.isFunction(plugin.enabled) && plugin.enabled(this.plugged) || _.isNil(plugin.enabled)) {
                _.extend(plugin, this.properties);
                if (plugin.dependencies) {
                    this.loadPluginDependencies(plugin);
                }
                this.applyOverrides(plugin);
                if (typeof plugin.initialize === "function") {
                    plugin.initialize.bind(plugin)(this);
                }
                this.initialized_plugins.push(plugin.__name__);
            }
        },

        // `registerPlugin` registers (or inserts, if you'd like) a plugin,
        // by adding it to the `plugins` map on the PluginSocket instance.
        registerPlugin: function registerPlugin(name, plugin) {
            if (name in this.plugins) {
                throw new Error('Error: Plugin name ' + name + ' is already taken');
            }
            plugin.__name__ = name;
            this.plugins[name] = plugin;
        },

        // `initializePlugins` should get called once all plugins have been
        // registered. It will then iterate through all the plugins, calling
        // `initializePlugin` for each.
        // The passed in  properties variable is an object with attributes and methods
        // which will be attached to the plugins.
        initializePlugins: function initializePlugins() {
            var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var whitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            var blacklist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

            if (!_.size(this.plugins)) {
                return;
            }
            this.properties = properties;
            this.allowed_plugins = _.pickBy(this.plugins, function (plugin, key) {
                return (!whitelist.length || whitelist.length && _.includes(whitelist, key)) && !_.includes(blacklist, key);
            });
            _.each(_.values(this.allowed_plugins), this.initializePlugin.bind(this));
        }
    });

    function enable(object, name, attrname) {
        // Call the `enable` method to make an object pluggable
        //
        // It takes three parameters:
        // - `object`: The object that gets made pluggable.
        // - `name`: The string name by which the now pluggable object
        //     may be referenced on the __super__ obj (in overrides).
        //     The default value is "plugged".
        // - `attrname`: The string name of the attribute on the now
        //     pluggable object, which refers to the PluginSocket instance
        //     that gets created.
        if (typeof attrname === "undefined") {
            attrname = "pluginSocket";
        }
        if (typeof name === 'undefined') {
            name = 'plugged';
        }
        var ref = {};
        ref[attrname] = new PluginSocket(object, name);
        return _.extend(object, ref);
    }

    exports.enable = enable;
    exports.default = {
        enable: enable
    };
});

//# sourceMappingURL=pluggable.js.map


/***/ }),

/***/ "./node_modules/sizzle/dist/sizzle.js":
/*!********************************************!*\
  !*** ./node_modules/sizzle/dist/sizzle.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

// EXPOSE
var _sizzle = window.Sizzle;

Sizzle.noConflict = function() {
	if ( window.Sizzle === Sizzle ) {
		window.Sizzle = _sizzle;
	}

	return Sizzle;
};

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() { return Sizzle; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
// Sizzle requires that there be a global window in Common-JS like environments
} else {}
// EXPOSE

})( window );


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom-attributes.js":
/*!***********************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom-attributes.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var booleanAttrs = ["allowfullscreen", "async", "autofocus", "autoplay", "checked", "compact", "controls", "declare",
    "default", "defaultchecked", "defaultmuted", "defaultselected", "defer", "disabled", "draggable",
    "enabled", "formnovalidate", "hidden", "indeterminate", "inert", "ismap", "itemscope", "loop", "multiple",
    "muted", "nohref", "noresize", "noshade", "novalidate", "nowrap", "open", "pauseonexit", "readonly",
    "required", "reversed", "scoped", "seamless", "selected", "sortable", "spellcheck", "translate",
    "truespeed", "typemustmatch", "visible"];
var xlinkNS = 'http://www.w3.org/1999/xlink';
var xmlNS = 'http://www.w3.org/XML/1998/namespace';
var colonChar = 58;
var xChar = 120;
var booleanAttrsDict = Object.create(null);
for (var i = 0, len = booleanAttrs.length; i < len; i++) {
    booleanAttrsDict[booleanAttrs[i]] = true;
}
function updateAttrs(oldVnode, vnode) {
    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        var cur = attrs[key];
        var old = oldAttrs[key];
        if (old !== cur) {
            if (booleanAttrsDict[key]) {
                if (cur) {
                    elm.setAttribute(key, "");
                }
                else {
                    elm.removeAttribute(key);
                }
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
exports.attributesModule = { create: updateAttrs, update: updateAttrs };
exports.default = exports.attributesModule;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy8ucmVnaXN0cnkubnBtanMub3JnL2Jyb3dzZXItcGFjay82LjAuMi9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwibW9kdWxlcy9hdHRyaWJ1dGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYm9vbGVhbkF0dHJzID0gW1wiYWxsb3dmdWxsc2NyZWVuXCIsIFwiYXN5bmNcIiwgXCJhdXRvZm9jdXNcIiwgXCJhdXRvcGxheVwiLCBcImNoZWNrZWRcIiwgXCJjb21wYWN0XCIsIFwiY29udHJvbHNcIiwgXCJkZWNsYXJlXCIsXG4gICAgXCJkZWZhdWx0XCIsIFwiZGVmYXVsdGNoZWNrZWRcIiwgXCJkZWZhdWx0bXV0ZWRcIiwgXCJkZWZhdWx0c2VsZWN0ZWRcIiwgXCJkZWZlclwiLCBcImRpc2FibGVkXCIsIFwiZHJhZ2dhYmxlXCIsXG4gICAgXCJlbmFibGVkXCIsIFwiZm9ybW5vdmFsaWRhdGVcIiwgXCJoaWRkZW5cIiwgXCJpbmRldGVybWluYXRlXCIsIFwiaW5lcnRcIiwgXCJpc21hcFwiLCBcIml0ZW1zY29wZVwiLCBcImxvb3BcIiwgXCJtdWx0aXBsZVwiLFxuICAgIFwibXV0ZWRcIiwgXCJub2hyZWZcIiwgXCJub3Jlc2l6ZVwiLCBcIm5vc2hhZGVcIiwgXCJub3ZhbGlkYXRlXCIsIFwibm93cmFwXCIsIFwib3BlblwiLCBcInBhdXNlb25leGl0XCIsIFwicmVhZG9ubHlcIixcbiAgICBcInJlcXVpcmVkXCIsIFwicmV2ZXJzZWRcIiwgXCJzY29wZWRcIiwgXCJzZWFtbGVzc1wiLCBcInNlbGVjdGVkXCIsIFwic29ydGFibGVcIiwgXCJzcGVsbGNoZWNrXCIsIFwidHJhbnNsYXRlXCIsXG4gICAgXCJ0cnVlc3BlZWRcIiwgXCJ0eXBlbXVzdG1hdGNoXCIsIFwidmlzaWJsZVwiXTtcbnZhciB4bGlua05TID0gJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnO1xudmFyIHhtbE5TID0gJ2h0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZSc7XG52YXIgY29sb25DaGFyID0gNTg7XG52YXIgeENoYXIgPSAxMjA7XG52YXIgYm9vbGVhbkF0dHJzRGljdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5mb3IgKHZhciBpID0gMCwgbGVuID0gYm9vbGVhbkF0dHJzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYm9vbGVhbkF0dHJzRGljdFtib29sZWFuQXR0cnNbaV1dID0gdHJ1ZTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZUF0dHJzKG9sZFZub2RlLCB2bm9kZSkge1xuICAgIHZhciBrZXksIGVsbSA9IHZub2RlLmVsbSwgb2xkQXR0cnMgPSBvbGRWbm9kZS5kYXRhLmF0dHJzLCBhdHRycyA9IHZub2RlLmRhdGEuYXR0cnM7XG4gICAgaWYgKCFvbGRBdHRycyAmJiAhYXR0cnMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAob2xkQXR0cnMgPT09IGF0dHJzKVxuICAgICAgICByZXR1cm47XG4gICAgb2xkQXR0cnMgPSBvbGRBdHRycyB8fCB7fTtcbiAgICBhdHRycyA9IGF0dHJzIHx8IHt9O1xuICAgIC8vIHVwZGF0ZSBtb2RpZmllZCBhdHRyaWJ1dGVzLCBhZGQgbmV3IGF0dHJpYnV0ZXNcbiAgICBmb3IgKGtleSBpbiBhdHRycykge1xuICAgICAgICB2YXIgY3VyID0gYXR0cnNba2V5XTtcbiAgICAgICAgdmFyIG9sZCA9IG9sZEF0dHJzW2tleV07XG4gICAgICAgIGlmIChvbGQgIT09IGN1cikge1xuICAgICAgICAgICAgaWYgKGJvb2xlYW5BdHRyc0RpY3Rba2V5XSkge1xuICAgICAgICAgICAgICAgIGlmIChjdXIpIHtcbiAgICAgICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZShrZXksIFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZWxtLnJlbW92ZUF0dHJpYnV0ZShrZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChrZXkuY2hhckNvZGVBdCgwKSAhPT0geENoYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZShrZXksIGN1cik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGtleS5jaGFyQ29kZUF0KDMpID09PSBjb2xvbkNoYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXNzdW1lIHhtbCBuYW1lc3BhY2VcbiAgICAgICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZU5TKHhtbE5TLCBrZXksIGN1cik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGtleS5jaGFyQ29kZUF0KDUpID09PSBjb2xvbkNoYXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQXNzdW1lIHhsaW5rIG5hbWVzcGFjZVxuICAgICAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlTlMoeGxpbmtOUywga2V5LCBjdXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZWxtLnNldEF0dHJpYnV0ZShrZXksIGN1cik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIHJlbW92ZSByZW1vdmVkIGF0dHJpYnV0ZXNcbiAgICAvLyB1c2UgYGluYCBvcGVyYXRvciBzaW5jZSB0aGUgcHJldmlvdXMgYGZvcmAgaXRlcmF0aW9uIHVzZXMgaXQgKC5pLmUuIGFkZCBldmVuIGF0dHJpYnV0ZXMgd2l0aCB1bmRlZmluZWQgdmFsdWUpXG4gICAgLy8gdGhlIG90aGVyIG9wdGlvbiBpcyB0byByZW1vdmUgYWxsIGF0dHJpYnV0ZXMgd2l0aCB2YWx1ZSA9PSB1bmRlZmluZWRcbiAgICBmb3IgKGtleSBpbiBvbGRBdHRycykge1xuICAgICAgICBpZiAoIShrZXkgaW4gYXR0cnMpKSB7XG4gICAgICAgICAgICBlbG0ucmVtb3ZlQXR0cmlidXRlKGtleSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmF0dHJpYnV0ZXNNb2R1bGUgPSB7IGNyZWF0ZTogdXBkYXRlQXR0cnMsIHVwZGF0ZTogdXBkYXRlQXR0cnMgfTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuYXR0cmlidXRlc01vZHVsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF0dHJpYnV0ZXMuanMubWFwIl19


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom-class.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom-class.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function updateClass(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (!klass[name]) {
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? 'add' : 'remove'](name);
        }
    }
}
exports.classModule = { create: updateClass, update: updateClass };
exports.default = exports.classModule;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy8ucmVnaXN0cnkubnBtanMub3JnL2Jyb3dzZXItcGFjay82LjAuMi9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwibW9kdWxlcy9jbGFzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gdXBkYXRlQ2xhc3Mob2xkVm5vZGUsIHZub2RlKSB7XG4gICAgdmFyIGN1ciwgbmFtZSwgZWxtID0gdm5vZGUuZWxtLCBvbGRDbGFzcyA9IG9sZFZub2RlLmRhdGEuY2xhc3MsIGtsYXNzID0gdm5vZGUuZGF0YS5jbGFzcztcbiAgICBpZiAoIW9sZENsYXNzICYmICFrbGFzcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChvbGRDbGFzcyA9PT0ga2xhc3MpXG4gICAgICAgIHJldHVybjtcbiAgICBvbGRDbGFzcyA9IG9sZENsYXNzIHx8IHt9O1xuICAgIGtsYXNzID0ga2xhc3MgfHwge307XG4gICAgZm9yIChuYW1lIGluIG9sZENsYXNzKSB7XG4gICAgICAgIGlmICgha2xhc3NbbmFtZV0pIHtcbiAgICAgICAgICAgIGVsbS5jbGFzc0xpc3QucmVtb3ZlKG5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAobmFtZSBpbiBrbGFzcykge1xuICAgICAgICBjdXIgPSBrbGFzc1tuYW1lXTtcbiAgICAgICAgaWYgKGN1ciAhPT0gb2xkQ2xhc3NbbmFtZV0pIHtcbiAgICAgICAgICAgIGVsbS5jbGFzc0xpc3RbY3VyID8gJ2FkZCcgOiAncmVtb3ZlJ10obmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLmNsYXNzTW9kdWxlID0geyBjcmVhdGU6IHVwZGF0ZUNsYXNzLCB1cGRhdGU6IHVwZGF0ZUNsYXNzIH07XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmNsYXNzTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xhc3MuanMubWFwIl19


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom-dataset.js":
/*!********************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom-dataset.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CAPS_REGEX = /[A-Z]/g;
function updateDataset(oldVnode, vnode) {
    var elm = vnode.elm, oldDataset = oldVnode.data.dataset, dataset = vnode.data.dataset, key;
    if (!oldDataset && !dataset)
        return;
    if (oldDataset === dataset)
        return;
    oldDataset = oldDataset || {};
    dataset = dataset || {};
    var d = elm.dataset;
    for (key in oldDataset) {
        if (!dataset[key]) {
            if (d) {
                if (key in d) {
                    delete d[key];
                }
            }
            else {
                elm.removeAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase());
            }
        }
    }
    for (key in dataset) {
        if (oldDataset[key] !== dataset[key]) {
            if (d) {
                d[key] = dataset[key];
            }
            else {
                elm.setAttribute('data-' + key.replace(CAPS_REGEX, '-$&').toLowerCase(), dataset[key]);
            }
        }
    }
}
exports.datasetModule = { create: updateDataset, update: updateDataset };
exports.default = exports.datasetModule;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJtb2R1bGVzL2RhdGFzZXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIENBUFNfUkVHRVggPSAvW0EtWl0vZztcbmZ1bmN0aW9uIHVwZGF0ZURhdGFzZXQob2xkVm5vZGUsIHZub2RlKSB7XG4gICAgdmFyIGVsbSA9IHZub2RlLmVsbSwgb2xkRGF0YXNldCA9IG9sZFZub2RlLmRhdGEuZGF0YXNldCwgZGF0YXNldCA9IHZub2RlLmRhdGEuZGF0YXNldCwga2V5O1xuICAgIGlmICghb2xkRGF0YXNldCAmJiAhZGF0YXNldClcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChvbGREYXRhc2V0ID09PSBkYXRhc2V0KVxuICAgICAgICByZXR1cm47XG4gICAgb2xkRGF0YXNldCA9IG9sZERhdGFzZXQgfHwge307XG4gICAgZGF0YXNldCA9IGRhdGFzZXQgfHwge307XG4gICAgdmFyIGQgPSBlbG0uZGF0YXNldDtcbiAgICBmb3IgKGtleSBpbiBvbGREYXRhc2V0KSB7XG4gICAgICAgIGlmICghZGF0YXNldFtrZXldKSB7XG4gICAgICAgICAgICBpZiAoZCkge1xuICAgICAgICAgICAgICAgIGlmIChrZXkgaW4gZCkge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgZFtrZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsbS5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtJyArIGtleS5yZXBsYWNlKENBUFNfUkVHRVgsICctJCYnKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGtleSBpbiBkYXRhc2V0KSB7XG4gICAgICAgIGlmIChvbGREYXRhc2V0W2tleV0gIT09IGRhdGFzZXRba2V5XSkge1xuICAgICAgICAgICAgaWYgKGQpIHtcbiAgICAgICAgICAgICAgICBkW2tleV0gPSBkYXRhc2V0W2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlbG0uc2V0QXR0cmlidXRlKCdkYXRhLScgKyBrZXkucmVwbGFjZShDQVBTX1JFR0VYLCAnLSQmJykudG9Mb3dlckNhc2UoKSwgZGF0YXNldFtrZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZGF0YXNldE1vZHVsZSA9IHsgY3JlYXRlOiB1cGRhdGVEYXRhc2V0LCB1cGRhdGU6IHVwZGF0ZURhdGFzZXQgfTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuZGF0YXNldE1vZHVsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGFzZXQuanMubWFwIl19


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom-props.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom-props.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function updateProps(oldVnode, vnode) {
    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in oldProps) {
        if (!props[key]) {
            delete elm[key];
        }
    }
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
exports.propsModule = { create: updateProps, update: updateProps };
exports.default = exports.propsModule;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy8ucmVnaXN0cnkubnBtanMub3JnL2Jyb3dzZXItcGFjay82LjAuMi9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwibW9kdWxlcy9wcm9wcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiB1cGRhdGVQcm9wcyhvbGRWbm9kZSwgdm5vZGUpIHtcbiAgICB2YXIga2V5LCBjdXIsIG9sZCwgZWxtID0gdm5vZGUuZWxtLCBvbGRQcm9wcyA9IG9sZFZub2RlLmRhdGEucHJvcHMsIHByb3BzID0gdm5vZGUuZGF0YS5wcm9wcztcbiAgICBpZiAoIW9sZFByb3BzICYmICFwcm9wcylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChvbGRQcm9wcyA9PT0gcHJvcHMpXG4gICAgICAgIHJldHVybjtcbiAgICBvbGRQcm9wcyA9IG9sZFByb3BzIHx8IHt9O1xuICAgIHByb3BzID0gcHJvcHMgfHwge307XG4gICAgZm9yIChrZXkgaW4gb2xkUHJvcHMpIHtcbiAgICAgICAgaWYgKCFwcm9wc1trZXldKSB7XG4gICAgICAgICAgICBkZWxldGUgZWxtW2tleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChrZXkgaW4gcHJvcHMpIHtcbiAgICAgICAgY3VyID0gcHJvcHNba2V5XTtcbiAgICAgICAgb2xkID0gb2xkUHJvcHNba2V5XTtcbiAgICAgICAgaWYgKG9sZCAhPT0gY3VyICYmIChrZXkgIT09ICd2YWx1ZScgfHwgZWxtW2tleV0gIT09IGN1cikpIHtcbiAgICAgICAgICAgIGVsbVtrZXldID0gY3VyO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5wcm9wc01vZHVsZSA9IHsgY3JlYXRlOiB1cGRhdGVQcm9wcywgdXBkYXRlOiB1cGRhdGVQcm9wcyB9O1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5wcm9wc01vZHVsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3BzLmpzLm1hcCJdfQ==


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom-style.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom-style.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var raf = (typeof window !== 'undefined' && window.requestAnimationFrame) || setTimeout;
var nextFrame = function (fn) { raf(function () { raf(fn); }); };
function setNextFrame(obj, prop, val) {
    nextFrame(function () { obj[prop] = val; });
}
function updateStyle(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    var oldHasDel = 'delayed' in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = '';
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === 'delayed' && style.delayed) {
            for (var name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== 'remove' && cur !== oldStyle[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    var style, name, elm = vnode.elm, s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    var s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    compStyle = getComputedStyle(elm);
    var props = compStyle['transition-property'].split(', ');
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener('transitionend', function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
exports.styleModule = {
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle
};
exports.default = exports.styleModule;

},{}]},{},[1])(1)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy8ucmVnaXN0cnkubnBtanMub3JnL2Jyb3dzZXItcGFjay82LjAuMi9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwibW9kdWxlcy9zdHlsZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgcmFmID0gKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpIHx8IHNldFRpbWVvdXQ7XG52YXIgbmV4dEZyYW1lID0gZnVuY3Rpb24gKGZuKSB7IHJhZihmdW5jdGlvbiAoKSB7IHJhZihmbik7IH0pOyB9O1xuZnVuY3Rpb24gc2V0TmV4dEZyYW1lKG9iaiwgcHJvcCwgdmFsKSB7XG4gICAgbmV4dEZyYW1lKGZ1bmN0aW9uICgpIHsgb2JqW3Byb3BdID0gdmFsOyB9KTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG9sZFZub2RlLCB2bm9kZSkge1xuICAgIHZhciBjdXIsIG5hbWUsIGVsbSA9IHZub2RlLmVsbSwgb2xkU3R5bGUgPSBvbGRWbm9kZS5kYXRhLnN0eWxlLCBzdHlsZSA9IHZub2RlLmRhdGEuc3R5bGU7XG4gICAgaWYgKCFvbGRTdHlsZSAmJiAhc3R5bGUpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAob2xkU3R5bGUgPT09IHN0eWxlKVxuICAgICAgICByZXR1cm47XG4gICAgb2xkU3R5bGUgPSBvbGRTdHlsZSB8fCB7fTtcbiAgICBzdHlsZSA9IHN0eWxlIHx8IHt9O1xuICAgIHZhciBvbGRIYXNEZWwgPSAnZGVsYXllZCcgaW4gb2xkU3R5bGU7XG4gICAgZm9yIChuYW1lIGluIG9sZFN0eWxlKSB7XG4gICAgICAgIGlmICghc3R5bGVbbmFtZV0pIHtcbiAgICAgICAgICAgIGlmIChuYW1lWzBdID09PSAnLScgJiYgbmFtZVsxXSA9PT0gJy0nKSB7XG4gICAgICAgICAgICAgICAgZWxtLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxtLnN0eWxlW25hbWVdID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChuYW1lIGluIHN0eWxlKSB7XG4gICAgICAgIGN1ciA9IHN0eWxlW25hbWVdO1xuICAgICAgICBpZiAobmFtZSA9PT0gJ2RlbGF5ZWQnICYmIHN0eWxlLmRlbGF5ZWQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIG5hbWUyIGluIHN0eWxlLmRlbGF5ZWQpIHtcbiAgICAgICAgICAgICAgICBjdXIgPSBzdHlsZS5kZWxheWVkW25hbWUyXTtcbiAgICAgICAgICAgICAgICBpZiAoIW9sZEhhc0RlbCB8fCBjdXIgIT09IG9sZFN0eWxlLmRlbGF5ZWRbbmFtZTJdKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldE5leHRGcmFtZShlbG0uc3R5bGUsIG5hbWUyLCBjdXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChuYW1lICE9PSAncmVtb3ZlJyAmJiBjdXIgIT09IG9sZFN0eWxlW25hbWVdKSB7XG4gICAgICAgICAgICBpZiAobmFtZVswXSA9PT0gJy0nICYmIG5hbWVbMV0gPT09ICctJykge1xuICAgICAgICAgICAgICAgIGVsbS5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBjdXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxtLnN0eWxlW25hbWVdID0gY3VyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gYXBwbHlEZXN0cm95U3R5bGUodm5vZGUpIHtcbiAgICB2YXIgc3R5bGUsIG5hbWUsIGVsbSA9IHZub2RlLmVsbSwgcyA9IHZub2RlLmRhdGEuc3R5bGU7XG4gICAgaWYgKCFzIHx8ICEoc3R5bGUgPSBzLmRlc3Ryb3kpKVxuICAgICAgICByZXR1cm47XG4gICAgZm9yIChuYW1lIGluIHN0eWxlKSB7XG4gICAgICAgIGVsbS5zdHlsZVtuYW1lXSA9IHN0eWxlW25hbWVdO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFwcGx5UmVtb3ZlU3R5bGUodm5vZGUsIHJtKSB7XG4gICAgdmFyIHMgPSB2bm9kZS5kYXRhLnN0eWxlO1xuICAgIGlmICghcyB8fCAhcy5yZW1vdmUpIHtcbiAgICAgICAgcm0oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgbmFtZSwgZWxtID0gdm5vZGUuZWxtLCBpID0gMCwgY29tcFN0eWxlLCBzdHlsZSA9IHMucmVtb3ZlLCBhbW91bnQgPSAwLCBhcHBsaWVkID0gW107XG4gICAgZm9yIChuYW1lIGluIHN0eWxlKSB7XG4gICAgICAgIGFwcGxpZWQucHVzaChuYW1lKTtcbiAgICAgICAgZWxtLnN0eWxlW25hbWVdID0gc3R5bGVbbmFtZV07XG4gICAgfVxuICAgIGNvbXBTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxtKTtcbiAgICB2YXIgcHJvcHMgPSBjb21wU3R5bGVbJ3RyYW5zaXRpb24tcHJvcGVydHknXS5zcGxpdCgnLCAnKTtcbiAgICBmb3IgKDsgaSA8IHByb3BzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmIChhcHBsaWVkLmluZGV4T2YocHJvcHNbaV0pICE9PSAtMSlcbiAgICAgICAgICAgIGFtb3VudCsrO1xuICAgIH1cbiAgICBlbG0uYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIGZ1bmN0aW9uIChldikge1xuICAgICAgICBpZiAoZXYudGFyZ2V0ID09PSBlbG0pXG4gICAgICAgICAgICAtLWFtb3VudDtcbiAgICAgICAgaWYgKGFtb3VudCA9PT0gMClcbiAgICAgICAgICAgIHJtKCk7XG4gICAgfSk7XG59XG5leHBvcnRzLnN0eWxlTW9kdWxlID0ge1xuICAgIGNyZWF0ZTogdXBkYXRlU3R5bGUsXG4gICAgdXBkYXRlOiB1cGRhdGVTdHlsZSxcbiAgICBkZXN0cm95OiBhcHBseURlc3Ryb3lTdHlsZSxcbiAgICByZW1vdmU6IGFwcGx5UmVtb3ZlU3R5bGVcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLnN0eWxlTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R5bGUuanMubWFwIl19


/***/ }),

/***/ "./node_modules/snabbdom/dist/snabbdom.js":
/*!************************************************!*\
  !*** ./node_modules/snabbdom/dist/snabbdom.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var is = require("./is");
function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (is.array(c)) {
            children = c;
        }
        else if (is.primitive(c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (is.array(b)) {
            children = b;
        }
        else if (is.primitive(b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (is.array(children)) {
        for (i = 0; i < children.length; ++i) {
            if (is.primitive(children[i]))
                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i]);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return vnode_1.vnode(sel, data, children, text, undefined);
}
exports.h = h;
;
exports.default = h;

},{"./is":3,"./vnode":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function createElement(tagName) {
    return document.createElement(tagName);
}
function createElementNS(namespaceURI, qualifiedName) {
    return document.createElementNS(namespaceURI, qualifiedName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
exports.htmlDomApi = {
    createElement: createElement,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    getTextContent: getTextContent,
    isElement: isElement,
    isText: isText,
    isComment: isComment,
};
exports.default = exports.htmlDomApi;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}
exports.primitive = primitive;

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var is = require("./is");
var htmldomapi_1 = require("./htmldomapi");
function isUndef(s) { return s === undefined; }
function isDef(s) { return s !== undefined; }
var emptyNode = vnode_1.default('', {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
}
function isVnode(vnode) {
    return vnode.sel !== undefined;
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, map = {}, key, ch;
    for (i = beginIdx; i <= endIdx; ++i) {
        ch = children[i];
        if (ch != null) {
            key = ch.key;
            if (key !== undefined)
                map[key] = i;
        }
    }
    return map;
}
var hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];
var h_1 = require("./h");
exports.h = h_1.h;
var thunk_1 = require("./thunk");
exports.thunk = thunk_1.thunk;
function init(modules, domApi) {
    var i, j, cbs = {};
    var api = domApi !== undefined ? domApi : htmldomapi_1.default;
    for (i = 0; i < hooks.length; ++i) {
        cbs[hooks[i]] = [];
        for (j = 0; j < modules.length; ++j) {
            var hook = modules[j][hooks[i]];
            if (hook !== undefined) {
                cbs[hooks[i]].push(hook);
            }
        }
    }
    function emptyNodeAt(elm) {
        var id = elm.id ? '#' + elm.id : '';
        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';
        return vnode_1.default(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                var parent_1 = api.parentNode(childElm);
                api.removeChild(parent_1, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var i, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.init)) {
                i(vnode);
                data = vnode.data;
            }
        }
        var children = vnode.children, sel = vnode.sel;
        if (sel === '!') {
            if (isUndef(vnode.text)) {
                vnode.text = '';
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            var hashIdx = sel.indexOf('#');
            var dotIdx = sel.indexOf('.', hashIdx);
            var hash = hashIdx > 0 ? hashIdx : sel.length;
            var dot = dotIdx > 0 ? dotIdx : sel.length;
            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;
            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)
                : api.createElement(tag);
            if (hash < dot)
                elm.setAttribute('id', sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute('class', sel.slice(dot + 1).replace(/\./g, ' '));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (is.array(children)) {
                for (i = 0; i < children.length; ++i) {
                    var ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (is.primitive(vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            i = vnode.data.hook; // Reuse variable
            if (isDef(i)) {
                if (i.create)
                    i.create(emptyNode, vnode);
                if (i.insert)
                    insertedVnodeQueue.push(vnode);
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            var ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var i, j, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.destroy))
                i(vnode);
            for (i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (j = 0; j < vnode.children.length; ++j) {
                    i = vnode.children[j];
                    if (i != null && typeof i !== "string") {
                        invokeDestroyHook(i);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        for (; startIdx <= endIdx; ++startIdx) {
            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)
                        cbs.remove[i_1](ch, rm);
                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {
                        i_1(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else {
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        var oldStartIdx = 0, newStartIdx = 0;
        var oldEndIdx = oldCh.length - 1;
        var oldStartVnode = oldCh[0];
        var oldEndVnode = oldCh[oldEndIdx];
        var newEndIdx = newCh.length - 1;
        var newStartVnode = newCh[0];
        var newEndVnode = newCh[newEndIdx];
        var oldKeyToIdx;
        var idxInOld;
        var elmToMove;
        var before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    newStartVnode = newCh[++newStartIdx];
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                    newStartVnode = newCh[++newStartIdx];
                }
            }
        }
        if (oldStartIdx > oldEndIdx) {
            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
        }
        else if (newStartIdx > newEndIdx) {
            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var i, hook;
        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {
            i(oldVnode, vnode);
        }
        var elm = vnode.elm = oldVnode.elm;
        var oldCh = oldVnode.children;
        var ch = vnode.children;
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined) {
            for (i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            i = vnode.data.hook;
            if (isDef(i) && isDef(i = i.update))
                i(oldVnode, vnode);
        }
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, '');
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, '');
            }
        }
        else if (oldVnode.text !== vnode.text) {
            api.setTextContent(elm, vnode.text);
        }
        if (isDef(hook) && isDef(i = hook.postpatch)) {
            i(oldVnode, vnode);
        }
    }
    return function patch(oldVnode, vnode) {
        var i, elm, parent;
        var insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (!isVnode(oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}
exports.init = init;

},{"./h":1,"./htmldomapi":2,"./is":3,"./thunk":5,"./vnode":6}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var h_1 = require("./h");
function copyToThunk(vnode, thunk) {
    thunk.elm = vnode.elm;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
}
function init(thunk) {
    var cur = thunk.data;
    var vnode = cur.fn.apply(undefined, cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    var i, old = oldVnode.data, cur = thunk.data;
    var oldArgs = old.args, args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn.apply(undefined, args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn.apply(undefined, args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
exports.thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return h_1.h(sel, {
        key: key,
        hook: { init: init, prepatch: prepatch },
        fn: fn,
        args: args
    });
};
exports.default = exports.thunk;

},{"./h":1}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
exports.vnode = vnode;
exports.default = vnode;

},{}]},{},[4])(4)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,


/***/ }),

/***/ "./node_modules/snabbdom/dist/tovnode.js":
/*!***********************************************!*\
  !*** ./node_modules/snabbdom/dist/tovnode.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function createElement(tagName) {
    return document.createElement(tagName);
}
function createElementNS(namespaceURI, qualifiedName) {
    return document.createElementNS(namespaceURI, qualifiedName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
exports.htmlDomApi = {
    createElement: createElement,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    getTextContent: getTextContent,
    isElement: isElement,
    isText: isText,
    isComment: isComment,
};
exports.default = exports.htmlDomApi;

},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = require("./vnode");
var htmldomapi_1 = require("./htmldomapi");
function toVNode(node, domApi) {
    var api = domApi !== undefined ? domApi : htmldomapi_1.default;
    var text;
    if (api.isElement(node)) {
        var id = node.id ? '#' + node.id : '';
        var cn = node.getAttribute('class');
        var c = cn ? '.' + cn.split(' ').join('.') : '';
        var sel = api.tagName(node).toLowerCase() + id + c;
        var attrs = {};
        var children = [];
        var name_1;
        var i = void 0, n = void 0;
        var elmAttrs = node.attributes;
        var elmChildren = node.childNodes;
        for (i = 0, n = elmAttrs.length; i < n; i++) {
            name_1 = elmAttrs[i].nodeName;
            if (name_1 !== 'id' && name_1 !== 'class') {
                attrs[name_1] = elmAttrs[i].nodeValue;
            }
        }
        for (i = 0, n = elmChildren.length; i < n; i++) {
            children.push(toVNode(elmChildren[i]));
        }
        return vnode_1.default(sel, { attrs: attrs }, children, undefined, node);
    }
    else if (api.isText(node)) {
        text = api.getTextContent(node);
        return vnode_1.default(undefined, undefined, undefined, text, node);
    }
    else if (api.isComment(node)) {
        text = api.getTextContent(node);
        return vnode_1.default('!', {}, [], text, node);
    }
    else {
        return vnode_1.default('', {}, [], undefined, undefined);
    }
}
exports.toVNode = toVNode;
exports.default = toVNode;

},{"./htmldomapi":1,"./vnode":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
exports.vnode = vnode;
exports.default = vnode;

},{}]},{},[2])(2)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy8ucmVnaXN0cnkubnBtanMub3JnL2Jyb3dzZXItcGFjay82LjAuMi9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiaHRtbGRvbWFwaS5qcyIsInRvdm5vZGUuanMiLCJ2bm9kZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50KHRhZ05hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnROUyhuYW1lc3BhY2VVUkksIHF1YWxpZmllZE5hbWUpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWVzcGFjZVVSSSwgcXVhbGlmaWVkTmFtZSk7XG59XG5mdW5jdGlvbiBjcmVhdGVUZXh0Tm9kZSh0ZXh0KSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29tbWVudCh0ZXh0KSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQodGV4dCk7XG59XG5mdW5jdGlvbiBpbnNlcnRCZWZvcmUocGFyZW50Tm9kZSwgbmV3Tm9kZSwgcmVmZXJlbmNlTm9kZSkge1xuICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG5ld05vZGUsIHJlZmVyZW5jZU5vZGUpO1xufVxuZnVuY3Rpb24gcmVtb3ZlQ2hpbGQobm9kZSwgY2hpbGQpIHtcbiAgICBub2RlLnJlbW92ZUNoaWxkKGNoaWxkKTtcbn1cbmZ1bmN0aW9uIGFwcGVuZENoaWxkKG5vZGUsIGNoaWxkKSB7XG4gICAgbm9kZS5hcHBlbmRDaGlsZChjaGlsZCk7XG59XG5mdW5jdGlvbiBwYXJlbnROb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS5wYXJlbnROb2RlO1xufVxuZnVuY3Rpb24gbmV4dFNpYmxpbmcobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5leHRTaWJsaW5nO1xufVxuZnVuY3Rpb24gdGFnTmFtZShlbG0pIHtcbiAgICByZXR1cm4gZWxtLnRhZ05hbWU7XG59XG5mdW5jdGlvbiBzZXRUZXh0Q29udGVudChub2RlLCB0ZXh0KSB7XG4gICAgbm9kZS50ZXh0Q29udGVudCA9IHRleHQ7XG59XG5mdW5jdGlvbiBnZXRUZXh0Q29udGVudChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudGV4dENvbnRlbnQ7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09PSAxO1xufVxuZnVuY3Rpb24gaXNUZXh0KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS5ub2RlVHlwZSA9PT0gMztcbn1cbmZ1bmN0aW9uIGlzQ29tbWVudChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUubm9kZVR5cGUgPT09IDg7XG59XG5leHBvcnRzLmh0bWxEb21BcGkgPSB7XG4gICAgY3JlYXRlRWxlbWVudDogY3JlYXRlRWxlbWVudCxcbiAgICBjcmVhdGVFbGVtZW50TlM6IGNyZWF0ZUVsZW1lbnROUyxcbiAgICBjcmVhdGVUZXh0Tm9kZTogY3JlYXRlVGV4dE5vZGUsXG4gICAgY3JlYXRlQ29tbWVudDogY3JlYXRlQ29tbWVudCxcbiAgICBpbnNlcnRCZWZvcmU6IGluc2VydEJlZm9yZSxcbiAgICByZW1vdmVDaGlsZDogcmVtb3ZlQ2hpbGQsXG4gICAgYXBwZW5kQ2hpbGQ6IGFwcGVuZENoaWxkLFxuICAgIHBhcmVudE5vZGU6IHBhcmVudE5vZGUsXG4gICAgbmV4dFNpYmxpbmc6IG5leHRTaWJsaW5nLFxuICAgIHRhZ05hbWU6IHRhZ05hbWUsXG4gICAgc2V0VGV4dENvbnRlbnQ6IHNldFRleHRDb250ZW50LFxuICAgIGdldFRleHRDb250ZW50OiBnZXRUZXh0Q29udGVudCxcbiAgICBpc0VsZW1lbnQ6IGlzRWxlbWVudCxcbiAgICBpc1RleHQ6IGlzVGV4dCxcbiAgICBpc0NvbW1lbnQ6IGlzQ29tbWVudCxcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmh0bWxEb21BcGk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odG1sZG9tYXBpLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHZub2RlXzEgPSByZXF1aXJlKFwiLi92bm9kZVwiKTtcbnZhciBodG1sZG9tYXBpXzEgPSByZXF1aXJlKFwiLi9odG1sZG9tYXBpXCIpO1xuZnVuY3Rpb24gdG9WTm9kZShub2RlLCBkb21BcGkpIHtcbiAgICB2YXIgYXBpID0gZG9tQXBpICE9PSB1bmRlZmluZWQgPyBkb21BcGkgOiBodG1sZG9tYXBpXzEuZGVmYXVsdDtcbiAgICB2YXIgdGV4dDtcbiAgICBpZiAoYXBpLmlzRWxlbWVudChub2RlKSkge1xuICAgICAgICB2YXIgaWQgPSBub2RlLmlkID8gJyMnICsgbm9kZS5pZCA6ICcnO1xuICAgICAgICB2YXIgY24gPSBub2RlLmdldEF0dHJpYnV0ZSgnY2xhc3MnKTtcbiAgICAgICAgdmFyIGMgPSBjbiA/ICcuJyArIGNuLnNwbGl0KCcgJykuam9pbignLicpIDogJyc7XG4gICAgICAgIHZhciBzZWwgPSBhcGkudGFnTmFtZShub2RlKS50b0xvd2VyQ2FzZSgpICsgaWQgKyBjO1xuICAgICAgICB2YXIgYXR0cnMgPSB7fTtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gW107XG4gICAgICAgIHZhciBuYW1lXzE7XG4gICAgICAgIHZhciBpID0gdm9pZCAwLCBuID0gdm9pZCAwO1xuICAgICAgICB2YXIgZWxtQXR0cnMgPSBub2RlLmF0dHJpYnV0ZXM7XG4gICAgICAgIHZhciBlbG1DaGlsZHJlbiA9IG5vZGUuY2hpbGROb2RlcztcbiAgICAgICAgZm9yIChpID0gMCwgbiA9IGVsbUF0dHJzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgbmFtZV8xID0gZWxtQXR0cnNbaV0ubm9kZU5hbWU7XG4gICAgICAgICAgICBpZiAobmFtZV8xICE9PSAnaWQnICYmIG5hbWVfMSAhPT0gJ2NsYXNzJykge1xuICAgICAgICAgICAgICAgIGF0dHJzW25hbWVfMV0gPSBlbG1BdHRyc1tpXS5ub2RlVmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gMCwgbiA9IGVsbUNoaWxkcmVuLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgY2hpbGRyZW4ucHVzaCh0b1ZOb2RlKGVsbUNoaWxkcmVuW2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZub2RlXzEuZGVmYXVsdChzZWwsIHsgYXR0cnM6IGF0dHJzIH0sIGNoaWxkcmVuLCB1bmRlZmluZWQsIG5vZGUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChhcGkuaXNUZXh0KG5vZGUpKSB7XG4gICAgICAgIHRleHQgPSBhcGkuZ2V0VGV4dENvbnRlbnQobm9kZSk7XG4gICAgICAgIHJldHVybiB2bm9kZV8xLmRlZmF1bHQodW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdGV4dCwgbm9kZSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGFwaS5pc0NvbW1lbnQobm9kZSkpIHtcbiAgICAgICAgdGV4dCA9IGFwaS5nZXRUZXh0Q29udGVudChub2RlKTtcbiAgICAgICAgcmV0dXJuIHZub2RlXzEuZGVmYXVsdCgnIScsIHt9LCBbXSwgdGV4dCwgbm9kZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gdm5vZGVfMS5kZWZhdWx0KCcnLCB7fSwgW10sIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTtcbiAgICB9XG59XG5leHBvcnRzLnRvVk5vZGUgPSB0b1ZOb2RlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdG9WTm9kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvdm5vZGUuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiB2bm9kZShzZWwsIGRhdGEsIGNoaWxkcmVuLCB0ZXh0LCBlbG0pIHtcbiAgICB2YXIga2V5ID0gZGF0YSA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogZGF0YS5rZXk7XG4gICAgcmV0dXJuIHsgc2VsOiBzZWwsIGRhdGE6IGRhdGEsIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICAgICAgdGV4dDogdGV4dCwgZWxtOiBlbG0sIGtleToga2V5IH07XG59XG5leHBvcnRzLnZub2RlID0gdm5vZGU7XG5leHBvcnRzLmRlZmF1bHQgPSB2bm9kZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZub2RlLmpzLm1hcCJdfQ==


/***/ }),

/***/ "./node_modules/twemoji/2/esm.js":
/*!***************************************!*\
  !*** ./node_modules/twemoji/2/esm.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*! Copyright Twitter Inc. and other contributors. Licensed under MIT */
var twemoji=function(){"use strict";var twemoji={base:"https://twemoji.maxcdn.com/2/",ext:".png",size:"72x72",className:"emoji",convert:{fromCodePoint:fromCodePoint,toCodePoint:toCodePoint},onerror:function onerror(){if(this.parentNode){this.parentNode.replaceChild(createText(this.alt,false),this)}},parse:parse,replace:replace,test:test},escaper={"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"},re=/(?:\ud83d[\udc68\udc69])(?:\ud83c[\udffb-\udfff])?\u200d(?:\u2695\ufe0f|\u2696\ufe0f|\u2708\ufe0f|\ud83c[\udf3e\udf73\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|\ud83e[\uddb0-\uddb3])|(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75]|\u26f9)((?:\ud83c[\udffb-\udfff]|\ufe0f)\u200d[\u2640\u2642]\ufe0f)|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd35\udd37-\udd39\udd3d\udd3e\uddb8\uddb9\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])?\u200d[\u2640\u2642]\ufe0f|(?:\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d[\udc68\udc69]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68|\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d[\udc68\udc69]|\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83c\udff3\ufe0f\u200d\ud83c\udf08|\ud83c\udff4\u200d\u2620\ufe0f|\ud83d\udc41\u200d\ud83d\udde8|\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc6f\u200d\u2640\ufe0f|\ud83d\udc6f\u200d\u2642\ufe0f|\ud83e\udd3c\u200d\u2640\ufe0f|\ud83e\udd3c\u200d\u2642\ufe0f|\ud83e\uddde\u200d\u2640\ufe0f|\ud83e\uddde\u200d\u2642\ufe0f|\ud83e\udddf\u200d\u2640\ufe0f|\ud83e\udddf\u200d\u2642\ufe0f)|[\u0023\u002a\u0030-\u0039]\ufe0f?\u20e3|(?:[\u00a9\u00ae\u2122\u265f]\ufe0f)|(?:\ud83c[\udc04\udd70\udd71\udd7e\udd7f\ude02\ude1a\ude2f\ude37\udf21\udf24-\udf2c\udf36\udf7d\udf96\udf97\udf99-\udf9b\udf9e\udf9f\udfcd\udfce\udfd4-\udfdf\udff3\udff5\udff7]|\ud83d[\udc3f\udc41\udcfd\udd49\udd4a\udd6f\udd70\udd73\udd76-\udd79\udd87\udd8a-\udd8d\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa\udecb\udecd-\udecf\udee0-\udee5\udee9\udef0\udef3]|[\u203c\u2049\u2139\u2194-\u2199\u21a9\u21aa\u231a\u231b\u2328\u23cf\u23ed-\u23ef\u23f1\u23f2\u23f8-\u23fa\u24c2\u25aa\u25ab\u25b6\u25c0\u25fb-\u25fe\u2600-\u2604\u260e\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262a\u262e\u262f\u2638-\u263a\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267b\u267f\u2692-\u2697\u2699\u269b\u269c\u26a0\u26a1\u26aa\u26ab\u26b0\u26b1\u26bd\u26be\u26c4\u26c5\u26c8\u26cf\u26d1\u26d3\u26d4\u26e9\u26ea\u26f0-\u26f5\u26f8\u26fa\u26fd\u2702\u2708\u2709\u270f\u2712\u2714\u2716\u271d\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u2764\u27a1\u2934\u2935\u2b05-\u2b07\u2b1b\u2b1c\u2b50\u2b55\u3030\u303d\u3297\u3299])(?:\ufe0f|(?!\ufe0e))|(?:(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75\udd90]|[\u261d\u26f7\u26f9\u270c\u270d])(?:\ufe0f|(?!\ufe0e))|(?:\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd7a\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\uddb5\uddb6\uddb8\uddb9\uddd1-\udddd]|[\u270a\u270b]))(?:\ud83c[\udffb-\udfff])?|(?:\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f|\ud83c\udde6\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff]|\ud83c\udde7\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff]|\ud83c\udde8\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff]|\ud83c\udde9\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff]|\ud83c\uddea\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa]|\ud83c\uddeb\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7]|\ud83c\uddec\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe]|\ud83c\udded\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa]|\ud83c\uddee\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9]|\ud83c\uddef\ud83c[\uddea\uddf2\uddf4\uddf5]|\ud83c\uddf0\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff]|\ud83c\uddf1\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe]|\ud83c\uddf2\ud83c[\udde6\udde8-\udded\uddf0-\uddff]|\ud83c\uddf3\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff]|\ud83c\uddf4\ud83c\uddf2|\ud83c\uddf5\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe]|\ud83c\uddf6\ud83c\udde6|\ud83c\uddf7\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc]|\ud83c\uddf8\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff]|\ud83c\uddf9\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff]|\ud83c\uddfa\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff]|\ud83c\uddfb\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa]|\ud83c\uddfc\ud83c[\uddeb\uddf8]|\ud83c\uddfd\ud83c\uddf0|\ud83c\uddfe\ud83c[\uddea\uddf9]|\ud83c\uddff\ud83c[\udde6\uddf2\uddfc]|\ud83c[\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf84\udf86-\udf93\udfa0-\udfc1\udfc5\udfc6\udfc8\udfc9\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc44\udc45\udc51-\udc65\udc6a-\udc6d\udc6f\udc79-\udc7b\udc7d-\udc80\udc84\udc88-\udca9\udcab-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udda4\uddfb-\ude44\ude48-\ude4a\ude80-\udea2\udea4-\udeb3\udeb7-\udebf\udec1-\udec5\uded0-\uded2\udeeb\udeec\udef4-\udef9]|\ud83e[\udd10-\udd17\udd1d\udd20-\udd25\udd27-\udd2f\udd3a\udd3c\udd40-\udd45\udd47-\udd70\udd73-\udd76\udd7a\udd7c-\udda2\uddb4\uddb7\uddc0-\uddc2\uddd0\uddde-\uddff]|[\u23e9-\u23ec\u23f0\u23f3\u267e\u26ce\u2705\u2728\u274c\u274e\u2753-\u2755\u2795-\u2797\u27b0\u27bf\ue50a])|\ufe0f/g,UFE0Fg=/\uFE0F/g,U200D=String.fromCharCode(8205),rescaper=/[&<>'"]/g,shouldntBeParsed=/^(?:iframe|noframes|noscript|script|select|style|textarea)$/,fromCharCode=String.fromCharCode;return twemoji;function createText(text,clean){return document.createTextNode(clean?text.replace(UFE0Fg,""):text)}function escapeHTML(s){return s.replace(rescaper,replacer)}function defaultImageSrcGenerator(icon,options){return"".concat(options.base,options.size,"/",icon,options.ext)}function grabAllTextNodes(node,allText){var childNodes=node.childNodes,length=childNodes.length,subnode,nodeType;while(length--){subnode=childNodes[length];nodeType=subnode.nodeType;if(nodeType===3){allText.push(subnode)}else if(nodeType===1&&!("ownerSVGElement"in subnode)&&!shouldntBeParsed.test(subnode.nodeName.toLowerCase())){grabAllTextNodes(subnode,allText)}}return allText}function grabTheRightIcon(rawText){return toCodePoint(rawText.indexOf(U200D)<0?rawText.replace(UFE0Fg,""):rawText)}function parseNode(node,options){var allText=grabAllTextNodes(node,[]),length=allText.length,attrib,attrname,modified,fragment,subnode,text,match,i,index,img,rawText,iconId,src;while(length--){modified=false;fragment=document.createDocumentFragment();subnode=allText[length];text=subnode.nodeValue;i=0;while(match=re.exec(text)){index=match.index;if(index!==i){fragment.appendChild(createText(text.slice(i,index),true))}rawText=match[0];iconId=grabTheRightIcon(rawText);i=index+rawText.length;src=options.callback(iconId,options);if(iconId&&src){img=new Image;img.onerror=options.onerror;img.setAttribute("draggable","false");attrib=options.attributes(rawText,iconId);for(attrname in attrib){if(attrib.hasOwnProperty(attrname)&&attrname.indexOf("on")!==0&&!img.hasAttribute(attrname)){img.setAttribute(attrname,attrib[attrname])}}img.className=options.className;img.alt=rawText;img.src=src;modified=true;fragment.appendChild(img)}if(!img)fragment.appendChild(createText(rawText,false));img=null}if(modified){if(i<text.length){fragment.appendChild(createText(text.slice(i),true))}subnode.parentNode.replaceChild(fragment,subnode)}}return node}function parseString(str,options){return replace(str,function(rawText){var ret=rawText,iconId=grabTheRightIcon(rawText),src=options.callback(iconId,options),attrib,attrname;if(iconId&&src){ret="<img ".concat('class="',options.className,'" ','draggable="false" ','alt="',rawText,'"',' src="',src,'"');attrib=options.attributes(rawText,iconId);for(attrname in attrib){if(attrib.hasOwnProperty(attrname)&&attrname.indexOf("on")!==0&&ret.indexOf(" "+attrname+"=")===-1){ret=ret.concat(" ",attrname,'="',escapeHTML(attrib[attrname]),'"')}}ret=ret.concat("/>")}return ret})}function replacer(m){return escaper[m]}function returnNull(){return null}function toSizeSquaredAsset(value){return typeof value==="number"?value+"x"+value:value}function fromCodePoint(codepoint){var code=typeof codepoint==="string"?parseInt(codepoint,16):codepoint;if(code<65536){return fromCharCode(code)}code-=65536;return fromCharCode(55296+(code>>10),56320+(code&1023))}function parse(what,how){if(!how||typeof how==="function"){how={callback:how}}return(typeof what==="string"?parseString:parseNode)(what,{callback:how.callback||defaultImageSrcGenerator,attributes:typeof how.attributes==="function"?how.attributes:returnNull,base:typeof how.base==="string"?how.base:twemoji.base,ext:how.ext||twemoji.ext,size:how.folder||toSizeSquaredAsset(how.size||twemoji.size),className:how.className||twemoji.className,onerror:how.onerror||twemoji.onerror})}function replace(text,callback){return String(text).replace(re,callback)}function test(text){re.lastIndex=0;var result=re.test(text);re.lastIndex=0;return result}function toCodePoint(unicodeSurrogates,sep){var r=[],c=0,p=0,i=0;while(i<unicodeSurrogates.length){c=unicodeSurrogates.charCodeAt(i++);if(p){r.push((65536+(p-55296<<10)+(c-56320)).toString(16));p=0}else if(55296<=c&&c<=56319){p=c}else{r.push(c.toString(16))}}return r.join(sep||"-")}}();
/* harmony default export */ __webpack_exports__["default"] = (twemoji);



/***/ }),

/***/ "./node_modules/urijs/src/IPv6.js":
/*!****************************************!*\
  !*** ./node_modules/urijs/src/IPv6.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * URI.js - Mutating URLs
 * IPv6 Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */

(function (root, factory) {
  'use strict';
  // https://github.com/umdjs/umd/blob/master/returnExports.js
  if (typeof module === 'object' && module.exports) {
    // Node
    module.exports = factory();
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function (root) {
  'use strict';

  /*
  var _in = "fe80:0000:0000:0000:0204:61ff:fe9d:f156";
  var _out = IPv6.best(_in);
  var _expected = "fe80::204:61ff:fe9d:f156";

  console.log(_in, _out, _expected, _out === _expected);
  */

  // save current IPv6 variable, if any
  var _IPv6 = root && root.IPv6;

  function bestPresentation(address) {
    // based on:
    // Javascript to test an IPv6 address for proper format, and to
    // present the "best text representation" according to IETF Draft RFC at
    // http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04
    // 8 Feb 2010 Rich Brown, Dartware, LLC
    // Please feel free to use this code as long as you provide a link to
    // http://www.intermapper.com
    // http://intermapper.com/support/tools/IPV6-Validator.aspx
    // http://download.dartware.com/thirdparty/ipv6validator.js

    var _address = address.toLowerCase();
    var segments = _address.split(':');
    var length = segments.length;
    var total = 8;

    // trim colons (:: or ::a:b:c… or …a:b:c::)
    if (segments[0] === '' && segments[1] === '' && segments[2] === '') {
      // must have been ::
      // remove first two items
      segments.shift();
      segments.shift();
    } else if (segments[0] === '' && segments[1] === '') {
      // must have been ::xxxx
      // remove the first item
      segments.shift();
    } else if (segments[length - 1] === '' && segments[length - 2] === '') {
      // must have been xxxx::
      segments.pop();
    }

    length = segments.length;

    // adjust total segments for IPv4 trailer
    if (segments[length - 1].indexOf('.') !== -1) {
      // found a "." which means IPv4
      total = 7;
    }

    // fill empty segments them with "0000"
    var pos;
    for (pos = 0; pos < length; pos++) {
      if (segments[pos] === '') {
        break;
      }
    }

    if (pos < total) {
      segments.splice(pos, 1, '0000');
      while (segments.length < total) {
        segments.splice(pos, 0, '0000');
      }
    }

    // strip leading zeros
    var _segments;
    for (var i = 0; i < total; i++) {
      _segments = segments[i].split('');
      for (var j = 0; j < 3 ; j++) {
        if (_segments[0] === '0' && _segments.length > 1) {
          _segments.splice(0,1);
        } else {
          break;
        }
      }

      segments[i] = _segments.join('');
    }

    // find longest sequence of zeroes and coalesce them into one segment
    var best = -1;
    var _best = 0;
    var _current = 0;
    var current = -1;
    var inzeroes = false;
    // i; already declared

    for (i = 0; i < total; i++) {
      if (inzeroes) {
        if (segments[i] === '0') {
          _current += 1;
        } else {
          inzeroes = false;
          if (_current > _best) {
            best = current;
            _best = _current;
          }
        }
      } else {
        if (segments[i] === '0') {
          inzeroes = true;
          current = i;
          _current = 1;
        }
      }
    }

    if (_current > _best) {
      best = current;
      _best = _current;
    }

    if (_best > 1) {
      segments.splice(best, _best, '');
    }

    length = segments.length;

    // assemble remaining segments
    var result = '';
    if (segments[0] === '')  {
      result = ':';
    }

    for (i = 0; i < length; i++) {
      result += segments[i];
      if (i === length - 1) {
        break;
      }

      result += ':';
    }

    if (segments[length - 1] === '') {
      result += ':';
    }

    return result;
  }

  function noConflict() {
    /*jshint validthis: true */
    if (root.IPv6 === this) {
      root.IPv6 = _IPv6;
    }

    return this;
  }

  return {
    best: bestPresentation,
    noConflict: noConflict
  };
}));


/***/ }),

/***/ "./node_modules/urijs/src/SecondLevelDomains.js":
/*!******************************************************!*\
  !*** ./node_modules/urijs/src/SecondLevelDomains.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */

(function (root, factory) {
  'use strict';
  // https://github.com/umdjs/umd/blob/master/returnExports.js
  if (typeof module === 'object' && module.exports) {
    // Node
    module.exports = factory();
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function (root) {
  'use strict';

  // save current SecondLevelDomains variable, if any
  var _SecondLevelDomains = root && root.SecondLevelDomains;

  var SLD = {
    // list of known Second Level Domains
    // converted list of SLDs from https://github.com/gavingmiller/second-level-domains
    // ----
    // publicsuffix.org is more current and actually used by a couple of browsers internally.
    // downside is it also contains domains like "dyndns.org" - which is fine for the security
    // issues browser have to deal with (SOP for cookies, etc) - but is way overboard for URI.js
    // ----
    list: {
      'ac':' com gov mil net org ',
      'ae':' ac co gov mil name net org pro sch ',
      'af':' com edu gov net org ',
      'al':' com edu gov mil net org ',
      'ao':' co ed gv it og pb ',
      'ar':' com edu gob gov int mil net org tur ',
      'at':' ac co gv or ',
      'au':' asn com csiro edu gov id net org ',
      'ba':' co com edu gov mil net org rs unbi unmo unsa untz unze ',
      'bb':' biz co com edu gov info net org store tv ',
      'bh':' biz cc com edu gov info net org ',
      'bn':' com edu gov net org ',
      'bo':' com edu gob gov int mil net org tv ',
      'br':' adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ',
      'bs':' com edu gov net org ',
      'bz':' du et om ov rg ',
      'ca':' ab bc mb nb nf nl ns nt nu on pe qc sk yk ',
      'ck':' biz co edu gen gov info net org ',
      'cn':' ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ',
      'co':' com edu gov mil net nom org ',
      'cr':' ac c co ed fi go or sa ',
      'cy':' ac biz com ekloges gov ltd name net org parliament press pro tm ',
      'do':' art com edu gob gov mil net org sld web ',
      'dz':' art asso com edu gov net org pol ',
      'ec':' com edu fin gov info med mil net org pro ',
      'eg':' com edu eun gov mil name net org sci ',
      'er':' com edu gov ind mil net org rochest w ',
      'es':' com edu gob nom org ',
      'et':' biz com edu gov info name net org ',
      'fj':' ac biz com info mil name net org pro ',
      'fk':' ac co gov net nom org ',
      'fr':' asso com f gouv nom prd presse tm ',
      'gg':' co net org ',
      'gh':' com edu gov mil org ',
      'gn':' ac com gov net org ',
      'gr':' com edu gov mil net org ',
      'gt':' com edu gob ind mil net org ',
      'gu':' com edu gov net org ',
      'hk':' com edu gov idv net org ',
      'hu':' 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ',
      'id':' ac co go mil net or sch web ',
      'il':' ac co gov idf k12 muni net org ',
      'in':' ac co edu ernet firm gen gov i ind mil net nic org res ',
      'iq':' com edu gov i mil net org ',
      'ir':' ac co dnssec gov i id net org sch ',
      'it':' edu gov ',
      'je':' co net org ',
      'jo':' com edu gov mil name net org sch ',
      'jp':' ac ad co ed go gr lg ne or ',
      'ke':' ac co go info me mobi ne or sc ',
      'kh':' com edu gov mil net org per ',
      'ki':' biz com de edu gov info mob net org tel ',
      'km':' asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ',
      'kn':' edu gov net org ',
      'kr':' ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ',
      'kw':' com edu gov net org ',
      'ky':' com edu gov net org ',
      'kz':' com edu gov mil net org ',
      'lb':' com edu gov net org ',
      'lk':' assn com edu gov grp hotel int ltd net ngo org sch soc web ',
      'lr':' com edu gov net org ',
      'lv':' asn com conf edu gov id mil net org ',
      'ly':' com edu gov id med net org plc sch ',
      'ma':' ac co gov m net org press ',
      'mc':' asso tm ',
      'me':' ac co edu gov its net org priv ',
      'mg':' com edu gov mil nom org prd tm ',
      'mk':' com edu gov inf name net org pro ',
      'ml':' com edu gov net org presse ',
      'mn':' edu gov org ',
      'mo':' com edu gov net org ',
      'mt':' com edu gov net org ',
      'mv':' aero biz com coop edu gov info int mil museum name net org pro ',
      'mw':' ac co com coop edu gov int museum net org ',
      'mx':' com edu gob net org ',
      'my':' com edu gov mil name net org sch ',
      'nf':' arts com firm info net other per rec store web ',
      'ng':' biz com edu gov mil mobi name net org sch ',
      'ni':' ac co com edu gob mil net nom org ',
      'np':' com edu gov mil net org ',
      'nr':' biz com edu gov info net org ',
      'om':' ac biz co com edu gov med mil museum net org pro sch ',
      'pe':' com edu gob mil net nom org sld ',
      'ph':' com edu gov i mil net ngo org ',
      'pk':' biz com edu fam gob gok gon gop gos gov net org web ',
      'pl':' art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ',
      'pr':' ac biz com edu est gov info isla name net org pro prof ',
      'ps':' com edu gov net org plo sec ',
      'pw':' belau co ed go ne or ',
      'ro':' arts com firm info nom nt org rec store tm www ',
      'rs':' ac co edu gov in org ',
      'sb':' com edu gov net org ',
      'sc':' com edu gov net org ',
      'sh':' co com edu gov net nom org ',
      'sl':' com edu gov net org ',
      'st':' co com consulado edu embaixada gov mil net org principe saotome store ',
      'sv':' com edu gob org red ',
      'sz':' ac co org ',
      'tr':' av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ',
      'tt':' aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ',
      'tw':' club com ebiz edu game gov idv mil net org ',
      'mu':' ac co com gov net or org ',
      'mz':' ac co edu gov org ',
      'na':' co com ',
      'nz':' ac co cri geek gen govt health iwi maori mil net org parliament school ',
      'pa':' abo ac com edu gob ing med net nom org sld ',
      'pt':' com edu gov int net nome org publ ',
      'py':' com edu gov mil net org ',
      'qa':' com edu gov mil net org ',
      're':' asso com nom ',
      'ru':' ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ',
      'rw':' ac co com edu gouv gov int mil net ',
      'sa':' com edu gov med net org pub sch ',
      'sd':' com edu gov info med net org tv ',
      'se':' a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ',
      'sg':' com edu gov idn net org per ',
      'sn':' art com edu gouv org perso univ ',
      'sy':' com edu gov mil net news org ',
      'th':' ac co go in mi net or ',
      'tj':' ac biz co com edu go gov info int mil name net nic org test web ',
      'tn':' agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ',
      'tz':' ac co go ne or ',
      'ua':' biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ',
      'ug':' ac co go ne or org sc ',
      'uk':' ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ',
      'us':' dni fed isa kids nsn ',
      'uy':' com edu gub mil net org ',
      've':' co com edu gob info mil net org web ',
      'vi':' co com k12 net org ',
      'vn':' ac biz com edu gov health info int name net org pro ',
      'ye':' co com gov ltd me net org plc ',
      'yu':' ac co edu gov org ',
      'za':' ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ',
      'zm':' ac co com edu gov net org sch ',
      // https://en.wikipedia.org/wiki/CentralNic#Second-level_domains
      'com': 'ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ',
      'net': 'gb jp se uk ',
      'org': 'ae',
      'de': 'com '
    },
    // gorhill 2013-10-25: Using indexOf() instead Regexp(). Significant boost
    // in both performance and memory footprint. No initialization required.
    // http://jsperf.com/uri-js-sld-regex-vs-binary-search/4
    // Following methods use lastIndexOf() rather than array.split() in order
    // to avoid any memory allocations.
    has: function(domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
        return false;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {
        return false;
      }
      var sldList = SLD.list[domain.slice(tldOffset+1)];
      if (!sldList) {
        return false;
      }
      return sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') >= 0;
    },
    is: function(domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
        return false;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
      if (sldOffset >= 0) {
        return false;
      }
      var sldList = SLD.list[domain.slice(tldOffset+1)];
      if (!sldList) {
        return false;
      }
      return sldList.indexOf(' ' + domain.slice(0, tldOffset) + ' ') >= 0;
    },
    get: function(domain) {
      var tldOffset = domain.lastIndexOf('.');
      if (tldOffset <= 0 || tldOffset >= (domain.length-1)) {
        return null;
      }
      var sldOffset = domain.lastIndexOf('.', tldOffset-1);
      if (sldOffset <= 0 || sldOffset >= (tldOffset-1)) {
        return null;
      }
      var sldList = SLD.list[domain.slice(tldOffset+1)];
      if (!sldList) {
        return null;
      }
      if (sldList.indexOf(' ' + domain.slice(sldOffset+1, tldOffset) + ' ') < 0) {
        return null;
      }
      return domain.slice(sldOffset+1);
    },
    noConflict: function(){
      if (root.SecondLevelDomains === this) {
        root.SecondLevelDomains = _SecondLevelDomains;
      }
      return this;
    }
  };

  return SLD;
}));


/***/ }),

/***/ "./node_modules/urijs/src/URI.js":
/*!***************************************!*\
  !*** ./node_modules/urijs/src/URI.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
(function (root, factory) {
  'use strict';
  // https://github.com/umdjs/umd/blob/master/returnExports.js
  if (typeof module === 'object' && module.exports) {
    // Node
    module.exports = factory(__webpack_require__(/*! ./punycode */ "./node_modules/urijs/src/punycode.js"), __webpack_require__(/*! ./IPv6 */ "./node_modules/urijs/src/IPv6.js"), __webpack_require__(/*! ./SecondLevelDomains */ "./node_modules/urijs/src/SecondLevelDomains.js"));
  } else if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./punycode */ "./node_modules/urijs/src/punycode.js"), __webpack_require__(/*! ./IPv6 */ "./node_modules/urijs/src/IPv6.js"), __webpack_require__(/*! ./SecondLevelDomains */ "./node_modules/urijs/src/SecondLevelDomains.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(this, function (punycode, IPv6, SLD, root) {
  'use strict';
  /*global location, escape, unescape */
  // FIXME: v2.0.0 renamce non-camelCase properties to uppercase
  /*jshint camelcase: false */

  // save current URI variable, if any
  var _URI = root && root.URI;

  function URI(url, base) {
    var _urlSupplied = arguments.length >= 1;
    var _baseSupplied = arguments.length >= 2;

    // Allow instantiation without the 'new' keyword
    if (!(this instanceof URI)) {
      if (_urlSupplied) {
        if (_baseSupplied) {
          return new URI(url, base);
        }

        return new URI(url);
      }

      return new URI();
    }

    if (url === undefined) {
      if (_urlSupplied) {
        throw new TypeError('undefined is not a valid argument for URI');
      }

      if (typeof location !== 'undefined') {
        url = location.href + '';
      } else {
        url = '';
      }
    }

    if (url === null) {
      if (_urlSupplied) {
        throw new TypeError('null is not a valid argument for URI');
      }
    }

    this.href(url);

    // resolve to base according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#constructor
    if (base !== undefined) {
      return this.absoluteTo(base);
    }

    return this;
  }

  function isInteger(value) {
    return /^[0-9]+$/.test(value);
  }

  URI.version = '1.19.1';

  var p = URI.prototype;
  var hasOwn = Object.prototype.hasOwnProperty;

  function escapeRegEx(string) {
    // https://github.com/medialize/URI.js/commit/85ac21783c11f8ccab06106dba9735a31a86924d#commitcomment-821963
    return string.replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
  }

  function getType(value) {
    // IE8 doesn't return [Object Undefined] but [Object Object] for undefined value
    if (value === undefined) {
      return 'Undefined';
    }

    return String(Object.prototype.toString.call(value)).slice(8, -1);
  }

  function isArray(obj) {
    return getType(obj) === 'Array';
  }

  function filterArrayValues(data, value) {
    var lookup = {};
    var i, length;

    if (getType(value) === 'RegExp') {
      lookup = null;
    } else if (isArray(value)) {
      for (i = 0, length = value.length; i < length; i++) {
        lookup[value[i]] = true;
      }
    } else {
      lookup[value] = true;
    }

    for (i = 0, length = data.length; i < length; i++) {
      /*jshint laxbreak: true */
      var _match = lookup && lookup[data[i]] !== undefined
        || !lookup && value.test(data[i]);
      /*jshint laxbreak: false */
      if (_match) {
        data.splice(i, 1);
        length--;
        i--;
      }
    }

    return data;
  }

  function arrayContains(list, value) {
    var i, length;

    // value may be string, number, array, regexp
    if (isArray(value)) {
      // Note: this can be optimized to O(n) (instead of current O(m * n))
      for (i = 0, length = value.length; i < length; i++) {
        if (!arrayContains(list, value[i])) {
          return false;
        }
      }

      return true;
    }

    var _type = getType(value);
    for (i = 0, length = list.length; i < length; i++) {
      if (_type === 'RegExp') {
        if (typeof list[i] === 'string' && list[i].match(value)) {
          return true;
        }
      } else if (list[i] === value) {
        return true;
      }
    }

    return false;
  }

  function arraysEqual(one, two) {
    if (!isArray(one) || !isArray(two)) {
      return false;
    }

    // arrays can't be equal if they have different amount of content
    if (one.length !== two.length) {
      return false;
    }

    one.sort();
    two.sort();

    for (var i = 0, l = one.length; i < l; i++) {
      if (one[i] !== two[i]) {
        return false;
      }
    }

    return true;
  }

  function trimSlashes(text) {
    var trim_expression = /^\/+|\/+$/g;
    return text.replace(trim_expression, '');
  }

  URI._parts = function() {
    return {
      protocol: null,
      username: null,
      password: null,
      hostname: null,
      urn: null,
      port: null,
      path: null,
      query: null,
      fragment: null,
      // state
      preventInvalidHostname: URI.preventInvalidHostname,
      duplicateQueryParameters: URI.duplicateQueryParameters,
      escapeQuerySpace: URI.escapeQuerySpace
    };
  };
  // state: throw on invalid hostname
  // see https://github.com/medialize/URI.js/pull/345
  // and https://github.com/medialize/URI.js/issues/354
  URI.preventInvalidHostname = false;
  // state: allow duplicate query parameters (a=1&a=1)
  URI.duplicateQueryParameters = false;
  // state: replaces + with %20 (space in query strings)
  URI.escapeQuerySpace = true;
  // static properties
  URI.protocol_expression = /^[a-z][a-z0-9.+-]*$/i;
  URI.idn_expression = /[^a-z0-9\._-]/i;
  URI.punycode_expression = /(xn--)/i;
  // well, 333.444.555.666 matches, but it sure ain't no IPv4 - do we care?
  URI.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/;
  // credits to Rich Brown
  // source: http://forums.intermapper.com/viewtopic.php?p=1096#1096
  // specification: http://www.ietf.org/rfc/rfc4291.txt
  URI.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
  // expression used is "gruber revised" (@gruber v2) determined to be the
  // best solution in a regex-golf we did a couple of ages ago at
  // * http://mathiasbynens.be/demo/url-regex
  // * http://rodneyrehm.de/t/url-regex.html
  URI.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;
  URI.findUri = {
    // valid "scheme://" or "www."
    start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,
    // everything up to the next whitespace
    end: /[\s\r\n]|$/,
    // trim trailing punctuation captured by end RegExp
    trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/,
    // balanced parens inclusion (), [], {}, <>
    parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g,
  };
  // http://www.iana.org/assignments/uri-schemes.html
  // http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers#Well-known_ports
  URI.defaultPorts = {
    http: '80',
    https: '443',
    ftp: '21',
    gopher: '70',
    ws: '80',
    wss: '443'
  };
  // list of protocols which always require a hostname
  URI.hostProtocols = [
    'http',
    'https'
  ];

  // allowed hostname characters according to RFC 3986
  // ALPHA DIGIT "-" "." "_" "~" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" %encoded
  // I've never seen a (non-IDN) hostname other than: ALPHA DIGIT . - _
  URI.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/;
  // map DOM Elements to their URI attribute
  URI.domAttributes = {
    'a': 'href',
    'blockquote': 'cite',
    'link': 'href',
    'base': 'href',
    'script': 'src',
    'form': 'action',
    'img': 'src',
    'area': 'href',
    'iframe': 'src',
    'embed': 'src',
    'source': 'src',
    'track': 'src',
    'input': 'src', // but only if type="image"
    'audio': 'src',
    'video': 'src'
  };
  URI.getDomAttribute = function(node) {
    if (!node || !node.nodeName) {
      return undefined;
    }

    var nodeName = node.nodeName.toLowerCase();
    // <input> should only expose src for type="image"
    if (nodeName === 'input' && node.type !== 'image') {
      return undefined;
    }

    return URI.domAttributes[nodeName];
  };

  function escapeForDumbFirefox36(value) {
    // https://github.com/medialize/URI.js/issues/91
    return escape(value);
  }

  // encoding / decoding according to RFC3986
  function strictEncodeURIComponent(string) {
    // see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent
    return encodeURIComponent(string)
      .replace(/[!'()*]/g, escapeForDumbFirefox36)
      .replace(/\*/g, '%2A');
  }
  URI.encode = strictEncodeURIComponent;
  URI.decode = decodeURIComponent;
  URI.iso8859 = function() {
    URI.encode = escape;
    URI.decode = unescape;
  };
  URI.unicode = function() {
    URI.encode = strictEncodeURIComponent;
    URI.decode = decodeURIComponent;
  };
  URI.characters = {
    pathname: {
      encode: {
        // RFC3986 2.1: For consistency, URI producers and normalizers should
        // use uppercase hexadecimal digits for all percent-encodings.
        expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig,
        map: {
          // -._~!'()*
          '%24': '$',
          '%26': '&',
          '%2B': '+',
          '%2C': ',',
          '%3B': ';',
          '%3D': '=',
          '%3A': ':',
          '%40': '@'
        }
      },
      decode: {
        expression: /[\/\?#]/g,
        map: {
          '/': '%2F',
          '?': '%3F',
          '#': '%23'
        }
      }
    },
    reserved: {
      encode: {
        // RFC3986 2.1: For consistency, URI producers and normalizers should
        // use uppercase hexadecimal digits for all percent-encodings.
        expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig,
        map: {
          // gen-delims
          '%3A': ':',
          '%2F': '/',
          '%3F': '?',
          '%23': '#',
          '%5B': '[',
          '%5D': ']',
          '%40': '@',
          // sub-delims
          '%21': '!',
          '%24': '$',
          '%26': '&',
          '%27': '\'',
          '%28': '(',
          '%29': ')',
          '%2A': '*',
          '%2B': '+',
          '%2C': ',',
          '%3B': ';',
          '%3D': '='
        }
      }
    },
    urnpath: {
      // The characters under `encode` are the characters called out by RFC 2141 as being acceptable
      // for usage in a URN. RFC2141 also calls out "-", ".", and "_" as acceptable characters, but
      // these aren't encoded by encodeURIComponent, so we don't have to call them out here. Also
      // note that the colon character is not featured in the encoding map; this is because URI.js
      // gives the colons in URNs semantic meaning as the delimiters of path segements, and so it
      // should not appear unencoded in a segment itself.
      // See also the note above about RFC3986 and capitalalized hex digits.
      encode: {
        expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig,
        map: {
          '%21': '!',
          '%24': '$',
          '%27': '\'',
          '%28': '(',
          '%29': ')',
          '%2A': '*',
          '%2B': '+',
          '%2C': ',',
          '%3B': ';',
          '%3D': '=',
          '%40': '@'
        }
      },
      // These characters are the characters called out by RFC2141 as "reserved" characters that
      // should never appear in a URN, plus the colon character (see note above).
      decode: {
        expression: /[\/\?#:]/g,
        map: {
          '/': '%2F',
          '?': '%3F',
          '#': '%23',
          ':': '%3A'
        }
      }
    }
  };
  URI.encodeQuery = function(string, escapeQuerySpace) {
    var escaped = URI.encode(string + '');
    if (escapeQuerySpace === undefined) {
      escapeQuerySpace = URI.escapeQuerySpace;
    }

    return escapeQuerySpace ? escaped.replace(/%20/g, '+') : escaped;
  };
  URI.decodeQuery = function(string, escapeQuerySpace) {
    string += '';
    if (escapeQuerySpace === undefined) {
      escapeQuerySpace = URI.escapeQuerySpace;
    }

    try {
      return URI.decode(escapeQuerySpace ? string.replace(/\+/g, '%20') : string);
    } catch(e) {
      // we're not going to mess with weird encodings,
      // give up and return the undecoded original string
      // see https://github.com/medialize/URI.js/issues/87
      // see https://github.com/medialize/URI.js/issues/92
      return string;
    }
  };
  // generate encode/decode path functions
  var _parts = {'encode':'encode', 'decode':'decode'};
  var _part;
  var generateAccessor = function(_group, _part) {
    return function(string) {
      try {
        return URI[_part](string + '').replace(URI.characters[_group][_part].expression, function(c) {
          return URI.characters[_group][_part].map[c];
        });
      } catch (e) {
        // we're not going to mess with weird encodings,
        // give up and return the undecoded original string
        // see https://github.com/medialize/URI.js/issues/87
        // see https://github.com/medialize/URI.js/issues/92
        return string;
      }
    };
  };

  for (_part in _parts) {
    URI[_part + 'PathSegment'] = generateAccessor('pathname', _parts[_part]);
    URI[_part + 'UrnPathSegment'] = generateAccessor('urnpath', _parts[_part]);
  }

  var generateSegmentedPathFunction = function(_sep, _codingFuncName, _innerCodingFuncName) {
    return function(string) {
      // Why pass in names of functions, rather than the function objects themselves? The
      // definitions of some functions (but in particular, URI.decode) will occasionally change due
      // to URI.js having ISO8859 and Unicode modes. Passing in the name and getting it will ensure
      // that the functions we use here are "fresh".
      var actualCodingFunc;
      if (!_innerCodingFuncName) {
        actualCodingFunc = URI[_codingFuncName];
      } else {
        actualCodingFunc = function(string) {
          return URI[_codingFuncName](URI[_innerCodingFuncName](string));
        };
      }

      var segments = (string + '').split(_sep);

      for (var i = 0, length = segments.length; i < length; i++) {
        segments[i] = actualCodingFunc(segments[i]);
      }

      return segments.join(_sep);
    };
  };

  // This takes place outside the above loop because we don't want, e.g., encodeUrnPath functions.
  URI.decodePath = generateSegmentedPathFunction('/', 'decodePathSegment');
  URI.decodeUrnPath = generateSegmentedPathFunction(':', 'decodeUrnPathSegment');
  URI.recodePath = generateSegmentedPathFunction('/', 'encodePathSegment', 'decode');
  URI.recodeUrnPath = generateSegmentedPathFunction(':', 'encodeUrnPathSegment', 'decode');

  URI.encodeReserved = generateAccessor('reserved', 'encode');

  URI.parse = function(string, parts) {
    var pos;
    if (!parts) {
      parts = {
        preventInvalidHostname: URI.preventInvalidHostname
      };
    }
    // [protocol"://"[username[":"password]"@"]hostname[":"port]"/"?][path]["?"querystring]["#"fragment]

    // extract fragment
    pos = string.indexOf('#');
    if (pos > -1) {
      // escaping?
      parts.fragment = string.substring(pos + 1) || null;
      string = string.substring(0, pos);
    }

    // extract query
    pos = string.indexOf('?');
    if (pos > -1) {
      // escaping?
      parts.query = string.substring(pos + 1) || null;
      string = string.substring(0, pos);
    }

    // extract protocol
    if (string.substring(0, 2) === '//') {
      // relative-scheme
      parts.protocol = null;
      string = string.substring(2);
      // extract "user:pass@host:port"
      string = URI.parseAuthority(string, parts);
    } else {
      pos = string.indexOf(':');
      if (pos > -1) {
        parts.protocol = string.substring(0, pos) || null;
        if (parts.protocol && !parts.protocol.match(URI.protocol_expression)) {
          // : may be within the path
          parts.protocol = undefined;
        } else if (string.substring(pos + 1, pos + 3) === '//') {
          string = string.substring(pos + 3);

          // extract "user:pass@host:port"
          string = URI.parseAuthority(string, parts);
        } else {
          string = string.substring(pos + 1);
          parts.urn = true;
        }
      }
    }

    // what's left must be the path
    parts.path = string;

    // and we're done
    return parts;
  };
  URI.parseHost = function(string, parts) {
    if (!string) {
      string = '';
    }

    // Copy chrome, IE, opera backslash-handling behavior.
    // Back slashes before the query string get converted to forward slashes
    // See: https://github.com/joyent/node/blob/386fd24f49b0e9d1a8a076592a404168faeecc34/lib/url.js#L115-L124
    // See: https://code.google.com/p/chromium/issues/detail?id=25916
    // https://github.com/medialize/URI.js/pull/233
    string = string.replace(/\\/g, '/');

    // extract host:port
    var pos = string.indexOf('/');
    var bracketPos;
    var t;

    if (pos === -1) {
      pos = string.length;
    }

    if (string.charAt(0) === '[') {
      // IPv6 host - http://tools.ietf.org/html/draft-ietf-6man-text-addr-representation-04#section-6
      // I claim most client software breaks on IPv6 anyways. To simplify things, URI only accepts
      // IPv6+port in the format [2001:db8::1]:80 (for the time being)
      bracketPos = string.indexOf(']');
      parts.hostname = string.substring(1, bracketPos) || null;
      parts.port = string.substring(bracketPos + 2, pos) || null;
      if (parts.port === '/') {
        parts.port = null;
      }
    } else {
      var firstColon = string.indexOf(':');
      var firstSlash = string.indexOf('/');
      var nextColon = string.indexOf(':', firstColon + 1);
      if (nextColon !== -1 && (firstSlash === -1 || nextColon < firstSlash)) {
        // IPv6 host contains multiple colons - but no port
        // this notation is actually not allowed by RFC 3986, but we're a liberal parser
        parts.hostname = string.substring(0, pos) || null;
        parts.port = null;
      } else {
        t = string.substring(0, pos).split(':');
        parts.hostname = t[0] || null;
        parts.port = t[1] || null;
      }
    }

    if (parts.hostname && string.substring(pos).charAt(0) !== '/') {
      pos++;
      string = '/' + string;
    }

    if (parts.preventInvalidHostname) {
      URI.ensureValidHostname(parts.hostname, parts.protocol);
    }

    if (parts.port) {
      URI.ensureValidPort(parts.port);
    }

    return string.substring(pos) || '/';
  };
  URI.parseAuthority = function(string, parts) {
    string = URI.parseUserinfo(string, parts);
    return URI.parseHost(string, parts);
  };
  URI.parseUserinfo = function(string, parts) {
    // extract username:password
    var firstSlash = string.indexOf('/');
    var pos = string.lastIndexOf('@', firstSlash > -1 ? firstSlash : string.length - 1);
    var t;

    // authority@ must come before /path
    if (pos > -1 && (firstSlash === -1 || pos < firstSlash)) {
      t = string.substring(0, pos).split(':');
      parts.username = t[0] ? URI.decode(t[0]) : null;
      t.shift();
      parts.password = t[0] ? URI.decode(t.join(':')) : null;
      string = string.substring(pos + 1);
    } else {
      parts.username = null;
      parts.password = null;
    }

    return string;
  };
  URI.parseQuery = function(string, escapeQuerySpace) {
    if (!string) {
      return {};
    }

    // throw out the funky business - "?"[name"="value"&"]+
    string = string.replace(/&+/g, '&').replace(/^\?*&*|&+$/g, '');

    if (!string) {
      return {};
    }

    var items = {};
    var splits = string.split('&');
    var length = splits.length;
    var v, name, value;

    for (var i = 0; i < length; i++) {
      v = splits[i].split('=');
      name = URI.decodeQuery(v.shift(), escapeQuerySpace);
      // no "=" is null according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#collect-url-parameters
      value = v.length ? URI.decodeQuery(v.join('='), escapeQuerySpace) : null;

      if (hasOwn.call(items, name)) {
        if (typeof items[name] === 'string' || items[name] === null) {
          items[name] = [items[name]];
        }

        items[name].push(value);
      } else {
        items[name] = value;
      }
    }

    return items;
  };

  URI.build = function(parts) {
    var t = '';

    if (parts.protocol) {
      t += parts.protocol + ':';
    }

    if (!parts.urn && (t || parts.hostname)) {
      t += '//';
    }

    t += (URI.buildAuthority(parts) || '');

    if (typeof parts.path === 'string') {
      if (parts.path.charAt(0) !== '/' && typeof parts.hostname === 'string') {
        t += '/';
      }

      t += parts.path;
    }

    if (typeof parts.query === 'string' && parts.query) {
      t += '?' + parts.query;
    }

    if (typeof parts.fragment === 'string' && parts.fragment) {
      t += '#' + parts.fragment;
    }
    return t;
  };
  URI.buildHost = function(parts) {
    var t = '';

    if (!parts.hostname) {
      return '';
    } else if (URI.ip6_expression.test(parts.hostname)) {
      t += '[' + parts.hostname + ']';
    } else {
      t += parts.hostname;
    }

    if (parts.port) {
      t += ':' + parts.port;
    }

    return t;
  };
  URI.buildAuthority = function(parts) {
    return URI.buildUserinfo(parts) + URI.buildHost(parts);
  };
  URI.buildUserinfo = function(parts) {
    var t = '';

    if (parts.username) {
      t += URI.encode(parts.username);
    }

    if (parts.password) {
      t += ':' + URI.encode(parts.password);
    }

    if (t) {
      t += '@';
    }

    return t;
  };
  URI.buildQuery = function(data, duplicateQueryParameters, escapeQuerySpace) {
    // according to http://tools.ietf.org/html/rfc3986 or http://labs.apache.org/webarch/uri/rfc/rfc3986.html
    // being »-._~!$&'()*+,;=:@/?« %HEX and alnum are allowed
    // the RFC explicitly states ?/foo being a valid use case, no mention of parameter syntax!
    // URI.js treats the query string as being application/x-www-form-urlencoded
    // see http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type

    var t = '';
    var unique, key, i, length;
    for (key in data) {
      if (hasOwn.call(data, key) && key) {
        if (isArray(data[key])) {
          unique = {};
          for (i = 0, length = data[key].length; i < length; i++) {
            if (data[key][i] !== undefined && unique[data[key][i] + ''] === undefined) {
              t += '&' + URI.buildQueryParameter(key, data[key][i], escapeQuerySpace);
              if (duplicateQueryParameters !== true) {
                unique[data[key][i] + ''] = true;
              }
            }
          }
        } else if (data[key] !== undefined) {
          t += '&' + URI.buildQueryParameter(key, data[key], escapeQuerySpace);
        }
      }
    }

    return t.substring(1);
  };
  URI.buildQueryParameter = function(name, value, escapeQuerySpace) {
    // http://www.w3.org/TR/REC-html40/interact/forms.html#form-content-type -- application/x-www-form-urlencoded
    // don't append "=" for null values, according to http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html#url-parameter-serialization
    return URI.encodeQuery(name, escapeQuerySpace) + (value !== null ? '=' + URI.encodeQuery(value, escapeQuerySpace) : '');
  };

  URI.addQuery = function(data, name, value) {
    if (typeof name === 'object') {
      for (var key in name) {
        if (hasOwn.call(name, key)) {
          URI.addQuery(data, key, name[key]);
        }
      }
    } else if (typeof name === 'string') {
      if (data[name] === undefined) {
        data[name] = value;
        return;
      } else if (typeof data[name] === 'string') {
        data[name] = [data[name]];
      }

      if (!isArray(value)) {
        value = [value];
      }

      data[name] = (data[name] || []).concat(value);
    } else {
      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');
    }
  };

  URI.setQuery = function(data, name, value) {
    if (typeof name === 'object') {
      for (var key in name) {
        if (hasOwn.call(name, key)) {
          URI.setQuery(data, key, name[key]);
        }
      }
    } else if (typeof name === 'string') {
      data[name] = value === undefined ? null : value;
    } else {
      throw new TypeError('URI.setQuery() accepts an object, string as the name parameter');
    }
  };

  URI.removeQuery = function(data, name, value) {
    var i, length, key;

    if (isArray(name)) {
      for (i = 0, length = name.length; i < length; i++) {
        data[name[i]] = undefined;
      }
    } else if (getType(name) === 'RegExp') {
      for (key in data) {
        if (name.test(key)) {
          data[key] = undefined;
        }
      }
    } else if (typeof name === 'object') {
      for (key in name) {
        if (hasOwn.call(name, key)) {
          URI.removeQuery(data, key, name[key]);
        }
      }
    } else if (typeof name === 'string') {
      if (value !== undefined) {
        if (getType(value) === 'RegExp') {
          if (!isArray(data[name]) && value.test(data[name])) {
            data[name] = undefined;
          } else {
            data[name] = filterArrayValues(data[name], value);
          }
        } else if (data[name] === String(value) && (!isArray(value) || value.length === 1)) {
          data[name] = undefined;
        } else if (isArray(data[name])) {
          data[name] = filterArrayValues(data[name], value);
        }
      } else {
        data[name] = undefined;
      }
    } else {
      throw new TypeError('URI.removeQuery() accepts an object, string, RegExp as the first parameter');
    }
  };
  URI.hasQuery = function(data, name, value, withinArray) {
    switch (getType(name)) {
      case 'String':
        // Nothing to do here
        break;

      case 'RegExp':
        for (var key in data) {
          if (hasOwn.call(data, key)) {
            if (name.test(key) && (value === undefined || URI.hasQuery(data, key, value))) {
              return true;
            }
          }
        }

        return false;

      case 'Object':
        for (var _key in name) {
          if (hasOwn.call(name, _key)) {
            if (!URI.hasQuery(data, _key, name[_key])) {
              return false;
            }
          }
        }

        return true;

      default:
        throw new TypeError('URI.hasQuery() accepts a string, regular expression or object as the name parameter');
    }

    switch (getType(value)) {
      case 'Undefined':
        // true if exists (but may be empty)
        return name in data; // data[name] !== undefined;

      case 'Boolean':
        // true if exists and non-empty
        var _booly = Boolean(isArray(data[name]) ? data[name].length : data[name]);
        return value === _booly;

      case 'Function':
        // allow complex comparison
        return !!value(data[name], name, data);

      case 'Array':
        if (!isArray(data[name])) {
          return false;
        }

        var op = withinArray ? arrayContains : arraysEqual;
        return op(data[name], value);

      case 'RegExp':
        if (!isArray(data[name])) {
          return Boolean(data[name] && data[name].match(value));
        }

        if (!withinArray) {
          return false;
        }

        return arrayContains(data[name], value);

      case 'Number':
        value = String(value);
        /* falls through */
      case 'String':
        if (!isArray(data[name])) {
          return data[name] === value;
        }

        if (!withinArray) {
          return false;
        }

        return arrayContains(data[name], value);

      default:
        throw new TypeError('URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter');
    }
  };


  URI.joinPaths = function() {
    var input = [];
    var segments = [];
    var nonEmptySegments = 0;

    for (var i = 0; i < arguments.length; i++) {
      var url = new URI(arguments[i]);
      input.push(url);
      var _segments = url.segment();
      for (var s = 0; s < _segments.length; s++) {
        if (typeof _segments[s] === 'string') {
          segments.push(_segments[s]);
        }

        if (_segments[s]) {
          nonEmptySegments++;
        }
      }
    }

    if (!segments.length || !nonEmptySegments) {
      return new URI('');
    }

    var uri = new URI('').segment(segments);

    if (input[0].path() === '' || input[0].path().slice(0, 1) === '/') {
      uri.path('/' + uri.path());
    }

    return uri.normalize();
  };

  URI.commonPath = function(one, two) {
    var length = Math.min(one.length, two.length);
    var pos;

    // find first non-matching character
    for (pos = 0; pos < length; pos++) {
      if (one.charAt(pos) !== two.charAt(pos)) {
        pos--;
        break;
      }
    }

    if (pos < 1) {
      return one.charAt(0) === two.charAt(0) && one.charAt(0) === '/' ? '/' : '';
    }

    // revert to last /
    if (one.charAt(pos) !== '/' || two.charAt(pos) !== '/') {
      pos = one.substring(0, pos).lastIndexOf('/');
    }

    return one.substring(0, pos + 1);
  };

  URI.withinString = function(string, callback, options) {
    options || (options = {});
    var _start = options.start || URI.findUri.start;
    var _end = options.end || URI.findUri.end;
    var _trim = options.trim || URI.findUri.trim;
    var _parens = options.parens || URI.findUri.parens;
    var _attributeOpen = /[a-z0-9-]=["']?$/i;

    _start.lastIndex = 0;
    while (true) {
      var match = _start.exec(string);
      if (!match) {
        break;
      }

      var start = match.index;
      if (options.ignoreHtml) {
        // attribut(e=["']?$)
        var attributeOpen = string.slice(Math.max(start - 3, 0), start);
        if (attributeOpen && _attributeOpen.test(attributeOpen)) {
          continue;
        }
      }

      var end = start + string.slice(start).search(_end);
      var slice = string.slice(start, end);
      // make sure we include well balanced parens
      var parensEnd = -1;
      while (true) {
        var parensMatch = _parens.exec(slice);
        if (!parensMatch) {
          break;
        }

        var parensMatchEnd = parensMatch.index + parensMatch[0].length;
        parensEnd = Math.max(parensEnd, parensMatchEnd);
      }

      if (parensEnd > -1) {
        slice = slice.slice(0, parensEnd) + slice.slice(parensEnd).replace(_trim, '');
      } else {
        slice = slice.replace(_trim, '');
      }

      if (slice.length <= match[0].length) {
        // the extract only contains the starting marker of a URI,
        // e.g. "www" or "http://"
        continue;
      }

      if (options.ignore && options.ignore.test(slice)) {
        continue;
      }

      end = start + slice.length;
      var result = callback(slice, start, end, string);
      if (result === undefined) {
        _start.lastIndex = end;
        continue;
      }

      result = String(result);
      string = string.slice(0, start) + result + string.slice(end);
      _start.lastIndex = start + result.length;
    }

    _start.lastIndex = 0;
    return string;
  };

  URI.ensureValidHostname = function(v, protocol) {
    // Theoretically URIs allow percent-encoding in Hostnames (according to RFC 3986)
    // they are not part of DNS and therefore ignored by URI.js

    var hasHostname = !!v; // not null and not an empty string
    var hasProtocol = !!protocol;
    var rejectEmptyHostname = false;

    if (hasProtocol) {
      rejectEmptyHostname = arrayContains(URI.hostProtocols, protocol);
    }

    if (rejectEmptyHostname && !hasHostname) {
      throw new TypeError('Hostname cannot be empty, if protocol is ' + protocol);
    } else if (v && v.match(URI.invalid_hostname_characters)) {
      // test punycode
      if (!punycode) {
        throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
      }
      if (punycode.toASCII(v).match(URI.invalid_hostname_characters)) {
        throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-:_]');
      }
    }
  };

  URI.ensureValidPort = function (v) {
    if (!v) {
      return;
    }

    var port = Number(v);
    if (isInteger(port) && (port > 0) && (port < 65536)) {
      return;
    }

    throw new TypeError('Port "' + v + '" is not a valid port');
  };

  // noConflict
  URI.noConflict = function(removeAll) {
    if (removeAll) {
      var unconflicted = {
        URI: this.noConflict()
      };

      if (root.URITemplate && typeof root.URITemplate.noConflict === 'function') {
        unconflicted.URITemplate = root.URITemplate.noConflict();
      }

      if (root.IPv6 && typeof root.IPv6.noConflict === 'function') {
        unconflicted.IPv6 = root.IPv6.noConflict();
      }

      if (root.SecondLevelDomains && typeof root.SecondLevelDomains.noConflict === 'function') {
        unconflicted.SecondLevelDomains = root.SecondLevelDomains.noConflict();
      }

      return unconflicted;
    } else if (root.URI === this) {
      root.URI = _URI;
    }

    return this;
  };

  p.build = function(deferBuild) {
    if (deferBuild === true) {
      this._deferred_build = true;
    } else if (deferBuild === undefined || this._deferred_build) {
      this._string = URI.build(this._parts);
      this._deferred_build = false;
    }

    return this;
  };

  p.clone = function() {
    return new URI(this);
  };

  p.valueOf = p.toString = function() {
    return this.build(false)._string;
  };


  function generateSimpleAccessor(_part){
    return function(v, build) {
      if (v === undefined) {
        return this._parts[_part] || '';
      } else {
        this._parts[_part] = v || null;
        this.build(!build);
        return this;
      }
    };
  }

  function generatePrefixAccessor(_part, _key){
    return function(v, build) {
      if (v === undefined) {
        return this._parts[_part] || '';
      } else {
        if (v !== null) {
          v = v + '';
          if (v.charAt(0) === _key) {
            v = v.substring(1);
          }
        }

        this._parts[_part] = v;
        this.build(!build);
        return this;
      }
    };
  }

  p.protocol = generateSimpleAccessor('protocol');
  p.username = generateSimpleAccessor('username');
  p.password = generateSimpleAccessor('password');
  p.hostname = generateSimpleAccessor('hostname');
  p.port = generateSimpleAccessor('port');
  p.query = generatePrefixAccessor('query', '?');
  p.fragment = generatePrefixAccessor('fragment', '#');

  p.search = function(v, build) {
    var t = this.query(v, build);
    return typeof t === 'string' && t.length ? ('?' + t) : t;
  };
  p.hash = function(v, build) {
    var t = this.fragment(v, build);
    return typeof t === 'string' && t.length ? ('#' + t) : t;
  };

  p.pathname = function(v, build) {
    if (v === undefined || v === true) {
      var res = this._parts.path || (this._parts.hostname ? '/' : '');
      return v ? (this._parts.urn ? URI.decodeUrnPath : URI.decodePath)(res) : res;
    } else {
      if (this._parts.urn) {
        this._parts.path = v ? URI.recodeUrnPath(v) : '';
      } else {
        this._parts.path = v ? URI.recodePath(v) : '/';
      }
      this.build(!build);
      return this;
    }
  };
  p.path = p.pathname;
  p.href = function(href, build) {
    var key;

    if (href === undefined) {
      return this.toString();
    }

    this._string = '';
    this._parts = URI._parts();

    var _URI = href instanceof URI;
    var _object = typeof href === 'object' && (href.hostname || href.path || href.pathname);
    if (href.nodeName) {
      var attribute = URI.getDomAttribute(href);
      href = href[attribute] || '';
      _object = false;
    }

    // window.location is reported to be an object, but it's not the sort
    // of object we're looking for:
    // * location.protocol ends with a colon
    // * location.query != object.search
    // * location.hash != object.fragment
    // simply serializing the unknown object should do the trick
    // (for location, not for everything...)
    if (!_URI && _object && href.pathname !== undefined) {
      href = href.toString();
    }

    if (typeof href === 'string' || href instanceof String) {
      this._parts = URI.parse(String(href), this._parts);
    } else if (_URI || _object) {
      var src = _URI ? href._parts : href;
      for (key in src) {
        if (key === 'query') { continue; }
        if (hasOwn.call(this._parts, key)) {
          this._parts[key] = src[key];
        }
      }
      if (src.query) {
        this.query(src.query, false);
      }
    } else {
      throw new TypeError('invalid input');
    }

    this.build(!build);
    return this;
  };

  // identification accessors
  p.is = function(what) {
    var ip = false;
    var ip4 = false;
    var ip6 = false;
    var name = false;
    var sld = false;
    var idn = false;
    var punycode = false;
    var relative = !this._parts.urn;

    if (this._parts.hostname) {
      relative = false;
      ip4 = URI.ip4_expression.test(this._parts.hostname);
      ip6 = URI.ip6_expression.test(this._parts.hostname);
      ip = ip4 || ip6;
      name = !ip;
      sld = name && SLD && SLD.has(this._parts.hostname);
      idn = name && URI.idn_expression.test(this._parts.hostname);
      punycode = name && URI.punycode_expression.test(this._parts.hostname);
    }

    switch (what.toLowerCase()) {
      case 'relative':
        return relative;

      case 'absolute':
        return !relative;

      // hostname identification
      case 'domain':
      case 'name':
        return name;

      case 'sld':
        return sld;

      case 'ip':
        return ip;

      case 'ip4':
      case 'ipv4':
      case 'inet4':
        return ip4;

      case 'ip6':
      case 'ipv6':
      case 'inet6':
        return ip6;

      case 'idn':
        return idn;

      case 'url':
        return !this._parts.urn;

      case 'urn':
        return !!this._parts.urn;

      case 'punycode':
        return punycode;
    }

    return null;
  };

  // component specific input validation
  var _protocol = p.protocol;
  var _port = p.port;
  var _hostname = p.hostname;

  p.protocol = function(v, build) {
    if (v) {
      // accept trailing ://
      v = v.replace(/:(\/\/)?$/, '');

      if (!v.match(URI.protocol_expression)) {
        throw new TypeError('Protocol "' + v + '" contains characters other than [A-Z0-9.+-] or doesn\'t start with [A-Z]');
      }
    }

    return _protocol.call(this, v, build);
  };
  p.scheme = p.protocol;
  p.port = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v !== undefined) {
      if (v === 0) {
        v = null;
      }

      if (v) {
        v += '';
        if (v.charAt(0) === ':') {
          v = v.substring(1);
        }

        URI.ensureValidPort(v);
      }
    }
    return _port.call(this, v, build);
  };
  p.hostname = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v !== undefined) {
      var x = { preventInvalidHostname: this._parts.preventInvalidHostname };
      var res = URI.parseHost(v, x);
      if (res !== '/') {
        throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
      }

      v = x.hostname;
      if (this._parts.preventInvalidHostname) {
        URI.ensureValidHostname(v, this._parts.protocol);
      }
    }

    return _hostname.call(this, v, build);
  };

  // compound accessors
  p.origin = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined) {
      var protocol = this.protocol();
      var authority = this.authority();
      if (!authority) {
        return '';
      }

      return (protocol ? protocol + '://' : '') + this.authority();
    } else {
      var origin = URI(v);
      this
        .protocol(origin.protocol())
        .authority(origin.authority())
        .build(!build);
      return this;
    }
  };
  p.host = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined) {
      return this._parts.hostname ? URI.buildHost(this._parts) : '';
    } else {
      var res = URI.parseHost(v, this._parts);
      if (res !== '/') {
        throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
      }

      this.build(!build);
      return this;
    }
  };
  p.authority = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined) {
      return this._parts.hostname ? URI.buildAuthority(this._parts) : '';
    } else {
      var res = URI.parseAuthority(v, this._parts);
      if (res !== '/') {
        throw new TypeError('Hostname "' + v + '" contains characters other than [A-Z0-9.-]');
      }

      this.build(!build);
      return this;
    }
  };
  p.userinfo = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined) {
      var t = URI.buildUserinfo(this._parts);
      return t ? t.substring(0, t.length -1) : t;
    } else {
      if (v[v.length-1] !== '@') {
        v += '@';
      }

      URI.parseUserinfo(v, this._parts);
      this.build(!build);
      return this;
    }
  };
  p.resource = function(v, build) {
    var parts;

    if (v === undefined) {
      return this.path() + this.search() + this.hash();
    }

    parts = URI.parse(v);
    this._parts.path = parts.path;
    this._parts.query = parts.query;
    this._parts.fragment = parts.fragment;
    this.build(!build);
    return this;
  };

  // fraction accessors
  p.subdomain = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    // convenience, return "www" from "www.example.org"
    if (v === undefined) {
      if (!this._parts.hostname || this.is('IP')) {
        return '';
      }

      // grab domain and add another segment
      var end = this._parts.hostname.length - this.domain().length - 1;
      return this._parts.hostname.substring(0, end) || '';
    } else {
      var e = this._parts.hostname.length - this.domain().length;
      var sub = this._parts.hostname.substring(0, e);
      var replace = new RegExp('^' + escapeRegEx(sub));

      if (v && v.charAt(v.length - 1) !== '.') {
        v += '.';
      }

      if (v.indexOf(':') !== -1) {
        throw new TypeError('Domains cannot contain colons');
      }

      if (v) {
        URI.ensureValidHostname(v, this._parts.protocol);
      }

      this._parts.hostname = this._parts.hostname.replace(replace, v);
      this.build(!build);
      return this;
    }
  };
  p.domain = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (typeof v === 'boolean') {
      build = v;
      v = undefined;
    }

    // convenience, return "example.org" from "www.example.org"
    if (v === undefined) {
      if (!this._parts.hostname || this.is('IP')) {
        return '';
      }

      // if hostname consists of 1 or 2 segments, it must be the domain
      var t = this._parts.hostname.match(/\./g);
      if (t && t.length < 2) {
        return this._parts.hostname;
      }

      // grab tld and add another segment
      var end = this._parts.hostname.length - this.tld(build).length - 1;
      end = this._parts.hostname.lastIndexOf('.', end -1) + 1;
      return this._parts.hostname.substring(end) || '';
    } else {
      if (!v) {
        throw new TypeError('cannot set domain empty');
      }

      if (v.indexOf(':') !== -1) {
        throw new TypeError('Domains cannot contain colons');
      }

      URI.ensureValidHostname(v, this._parts.protocol);

      if (!this._parts.hostname || this.is('IP')) {
        this._parts.hostname = v;
      } else {
        var replace = new RegExp(escapeRegEx(this.domain()) + '$');
        this._parts.hostname = this._parts.hostname.replace(replace, v);
      }

      this.build(!build);
      return this;
    }
  };
  p.tld = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (typeof v === 'boolean') {
      build = v;
      v = undefined;
    }

    // return "org" from "www.example.org"
    if (v === undefined) {
      if (!this._parts.hostname || this.is('IP')) {
        return '';
      }

      var pos = this._parts.hostname.lastIndexOf('.');
      var tld = this._parts.hostname.substring(pos + 1);

      if (build !== true && SLD && SLD.list[tld.toLowerCase()]) {
        return SLD.get(this._parts.hostname) || tld;
      }

      return tld;
    } else {
      var replace;

      if (!v) {
        throw new TypeError('cannot set TLD empty');
      } else if (v.match(/[^a-zA-Z0-9-]/)) {
        if (SLD && SLD.is(v)) {
          replace = new RegExp(escapeRegEx(this.tld()) + '$');
          this._parts.hostname = this._parts.hostname.replace(replace, v);
        } else {
          throw new TypeError('TLD "' + v + '" contains characters other than [A-Z0-9]');
        }
      } else if (!this._parts.hostname || this.is('IP')) {
        throw new ReferenceError('cannot set TLD on non-domain host');
      } else {
        replace = new RegExp(escapeRegEx(this.tld()) + '$');
        this._parts.hostname = this._parts.hostname.replace(replace, v);
      }

      this.build(!build);
      return this;
    }
  };
  p.directory = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined || v === true) {
      if (!this._parts.path && !this._parts.hostname) {
        return '';
      }

      if (this._parts.path === '/') {
        return '/';
      }

      var end = this._parts.path.length - this.filename().length - 1;
      var res = this._parts.path.substring(0, end) || (this._parts.hostname ? '/' : '');

      return v ? URI.decodePath(res) : res;

    } else {
      var e = this._parts.path.length - this.filename().length;
      var directory = this._parts.path.substring(0, e);
      var replace = new RegExp('^' + escapeRegEx(directory));

      // fully qualifier directories begin with a slash
      if (!this.is('relative')) {
        if (!v) {
          v = '/';
        }

        if (v.charAt(0) !== '/') {
          v = '/' + v;
        }
      }

      // directories always end with a slash
      if (v && v.charAt(v.length - 1) !== '/') {
        v += '/';
      }

      v = URI.recodePath(v);
      this._parts.path = this._parts.path.replace(replace, v);
      this.build(!build);
      return this;
    }
  };
  p.filename = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (typeof v !== 'string') {
      if (!this._parts.path || this._parts.path === '/') {
        return '';
      }

      var pos = this._parts.path.lastIndexOf('/');
      var res = this._parts.path.substring(pos+1);

      return v ? URI.decodePathSegment(res) : res;
    } else {
      var mutatedDirectory = false;

      if (v.charAt(0) === '/') {
        v = v.substring(1);
      }

      if (v.match(/\.?\//)) {
        mutatedDirectory = true;
      }

      var replace = new RegExp(escapeRegEx(this.filename()) + '$');
      v = URI.recodePath(v);
      this._parts.path = this._parts.path.replace(replace, v);

      if (mutatedDirectory) {
        this.normalizePath(build);
      } else {
        this.build(!build);
      }

      return this;
    }
  };
  p.suffix = function(v, build) {
    if (this._parts.urn) {
      return v === undefined ? '' : this;
    }

    if (v === undefined || v === true) {
      if (!this._parts.path || this._parts.path === '/') {
        return '';
      }

      var filename = this.filename();
      var pos = filename.lastIndexOf('.');
      var s, res;

      if (pos === -1) {
        return '';
      }

      // suffix may only contain alnum characters (yup, I made this up.)
      s = filename.substring(pos+1);
      res = (/^[a-z0-9%]+$/i).test(s) ? s : '';
      return v ? URI.decodePathSegment(res) : res;
    } else {
      if (v.charAt(0) === '.') {
        v = v.substring(1);
      }

      var suffix = this.suffix();
      var replace;

      if (!suffix) {
        if (!v) {
          return this;
        }

        this._parts.path += '.' + URI.recodePath(v);
      } else if (!v) {
        replace = new RegExp(escapeRegEx('.' + suffix) + '$');
      } else {
        replace = new RegExp(escapeRegEx(suffix) + '$');
      }

      if (replace) {
        v = URI.recodePath(v);
        this._parts.path = this._parts.path.replace(replace, v);
      }

      this.build(!build);
      return this;
    }
  };
  p.segment = function(segment, v, build) {
    var separator = this._parts.urn ? ':' : '/';
    var path = this.path();
    var absolute = path.substring(0, 1) === '/';
    var segments = path.split(separator);

    if (segment !== undefined && typeof segment !== 'number') {
      build = v;
      v = segment;
      segment = undefined;
    }

    if (segment !== undefined && typeof segment !== 'number') {
      throw new Error('Bad segment "' + segment + '", must be 0-based integer');
    }

    if (absolute) {
      segments.shift();
    }

    if (segment < 0) {
      // allow negative indexes to address from the end
      segment = Math.max(segments.length + segment, 0);
    }

    if (v === undefined) {
      /*jshint laxbreak: true */
      return segment === undefined
        ? segments
        : segments[segment];
      /*jshint laxbreak: false */
    } else if (segment === null || segments[segment] === undefined) {
      if (isArray(v)) {
        segments = [];
        // collapse empty elements within array
        for (var i=0, l=v.length; i < l; i++) {
          if (!v[i].length && (!segments.length || !segments[segments.length -1].length)) {
            continue;
          }

          if (segments.length && !segments[segments.length -1].length) {
            segments.pop();
          }

          segments.push(trimSlashes(v[i]));
        }
      } else if (v || typeof v === 'string') {
        v = trimSlashes(v);
        if (segments[segments.length -1] === '') {
          // empty trailing elements have to be overwritten
          // to prevent results such as /foo//bar
          segments[segments.length -1] = v;
        } else {
          segments.push(v);
        }
      }
    } else {
      if (v) {
        segments[segment] = trimSlashes(v);
      } else {
        segments.splice(segment, 1);
      }
    }

    if (absolute) {
      segments.unshift('');
    }

    return this.path(segments.join(separator), build);
  };
  p.segmentCoded = function(segment, v, build) {
    var segments, i, l;

    if (typeof segment !== 'number') {
      build = v;
      v = segment;
      segment = undefined;
    }

    if (v === undefined) {
      segments = this.segment(segment, v, build);
      if (!isArray(segments)) {
        segments = segments !== undefined ? URI.decode(segments) : undefined;
      } else {
        for (i = 0, l = segments.length; i < l; i++) {
          segments[i] = URI.decode(segments[i]);
        }
      }

      return segments;
    }

    if (!isArray(v)) {
      v = (typeof v === 'string' || v instanceof String) ? URI.encode(v) : v;
    } else {
      for (i = 0, l = v.length; i < l; i++) {
        v[i] = URI.encode(v[i]);
      }
    }

    return this.segment(segment, v, build);
  };

  // mutating query string
  var q = p.query;
  p.query = function(v, build) {
    if (v === true) {
      return URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
    } else if (typeof v === 'function') {
      var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
      var result = v.call(this, data);
      this._parts.query = URI.buildQuery(result || data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
      this.build(!build);
      return this;
    } else if (v !== undefined && typeof v !== 'string') {
      this._parts.query = URI.buildQuery(v, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
      this.build(!build);
      return this;
    } else {
      return q.call(this, v, build);
    }
  };
  p.setQuery = function(name, value, build) {
    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);

    if (typeof name === 'string' || name instanceof String) {
      data[name] = value !== undefined ? value : null;
    } else if (typeof name === 'object') {
      for (var key in name) {
        if (hasOwn.call(name, key)) {
          data[key] = name[key];
        }
      }
    } else {
      throw new TypeError('URI.addQuery() accepts an object, string as the name parameter');
    }

    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
    if (typeof name !== 'string') {
      build = value;
    }

    this.build(!build);
    return this;
  };
  p.addQuery = function(name, value, build) {
    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
    URI.addQuery(data, name, value === undefined ? null : value);
    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
    if (typeof name !== 'string') {
      build = value;
    }

    this.build(!build);
    return this;
  };
  p.removeQuery = function(name, value, build) {
    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
    URI.removeQuery(data, name, value);
    this._parts.query = URI.buildQuery(data, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace);
    if (typeof name !== 'string') {
      build = value;
    }

    this.build(!build);
    return this;
  };
  p.hasQuery = function(name, value, withinArray) {
    var data = URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
    return URI.hasQuery(data, name, value, withinArray);
  };
  p.setSearch = p.setQuery;
  p.addSearch = p.addQuery;
  p.removeSearch = p.removeQuery;
  p.hasSearch = p.hasQuery;

  // sanitizing URLs
  p.normalize = function() {
    if (this._parts.urn) {
      return this
        .normalizeProtocol(false)
        .normalizePath(false)
        .normalizeQuery(false)
        .normalizeFragment(false)
        .build();
    }

    return this
      .normalizeProtocol(false)
      .normalizeHostname(false)
      .normalizePort(false)
      .normalizePath(false)
      .normalizeQuery(false)
      .normalizeFragment(false)
      .build();
  };
  p.normalizeProtocol = function(build) {
    if (typeof this._parts.protocol === 'string') {
      this._parts.protocol = this._parts.protocol.toLowerCase();
      this.build(!build);
    }

    return this;
  };
  p.normalizeHostname = function(build) {
    if (this._parts.hostname) {
      if (this.is('IDN') && punycode) {
        this._parts.hostname = punycode.toASCII(this._parts.hostname);
      } else if (this.is('IPv6') && IPv6) {
        this._parts.hostname = IPv6.best(this._parts.hostname);
      }

      this._parts.hostname = this._parts.hostname.toLowerCase();
      this.build(!build);
    }

    return this;
  };
  p.normalizePort = function(build) {
    // remove port of it's the protocol's default
    if (typeof this._parts.protocol === 'string' && this._parts.port === URI.defaultPorts[this._parts.protocol]) {
      this._parts.port = null;
      this.build(!build);
    }

    return this;
  };
  p.normalizePath = function(build) {
    var _path = this._parts.path;
    if (!_path) {
      return this;
    }

    if (this._parts.urn) {
      this._parts.path = URI.recodeUrnPath(this._parts.path);
      this.build(!build);
      return this;
    }

    if (this._parts.path === '/') {
      return this;
    }

    _path = URI.recodePath(_path);

    var _was_relative;
    var _leadingParents = '';
    var _parent, _pos;

    // handle relative paths
    if (_path.charAt(0) !== '/') {
      _was_relative = true;
      _path = '/' + _path;
    }

    // handle relative files (as opposed to directories)
    if (_path.slice(-3) === '/..' || _path.slice(-2) === '/.') {
      _path += '/';
    }

    // resolve simples
    _path = _path
      .replace(/(\/(\.\/)+)|(\/\.$)/g, '/')
      .replace(/\/{2,}/g, '/');

    // remember leading parents
    if (_was_relative) {
      _leadingParents = _path.substring(1).match(/^(\.\.\/)+/) || '';
      if (_leadingParents) {
        _leadingParents = _leadingParents[0];
      }
    }

    // resolve parents
    while (true) {
      _parent = _path.search(/\/\.\.(\/|$)/);
      if (_parent === -1) {
        // no more ../ to resolve
        break;
      } else if (_parent === 0) {
        // top level cannot be relative, skip it
        _path = _path.substring(3);
        continue;
      }

      _pos = _path.substring(0, _parent).lastIndexOf('/');
      if (_pos === -1) {
        _pos = _parent;
      }
      _path = _path.substring(0, _pos) + _path.substring(_parent + 3);
    }

    // revert to relative
    if (_was_relative && this.is('relative')) {
      _path = _leadingParents + _path.substring(1);
    }

    this._parts.path = _path;
    this.build(!build);
    return this;
  };
  p.normalizePathname = p.normalizePath;
  p.normalizeQuery = function(build) {
    if (typeof this._parts.query === 'string') {
      if (!this._parts.query.length) {
        this._parts.query = null;
      } else {
        this.query(URI.parseQuery(this._parts.query, this._parts.escapeQuerySpace));
      }

      this.build(!build);
    }

    return this;
  };
  p.normalizeFragment = function(build) {
    if (!this._parts.fragment) {
      this._parts.fragment = null;
      this.build(!build);
    }

    return this;
  };
  p.normalizeSearch = p.normalizeQuery;
  p.normalizeHash = p.normalizeFragment;

  p.iso8859 = function() {
    // expect unicode input, iso8859 output
    var e = URI.encode;
    var d = URI.decode;

    URI.encode = escape;
    URI.decode = decodeURIComponent;
    try {
      this.normalize();
    } finally {
      URI.encode = e;
      URI.decode = d;
    }
    return this;
  };

  p.unicode = function() {
    // expect iso8859 input, unicode output
    var e = URI.encode;
    var d = URI.decode;

    URI.encode = strictEncodeURIComponent;
    URI.decode = unescape;
    try {
      this.normalize();
    } finally {
      URI.encode = e;
      URI.decode = d;
    }
    return this;
  };

  p.readable = function() {
    var uri = this.clone();
    // removing username, password, because they shouldn't be displayed according to RFC 3986
    uri.username('').password('').normalize();
    var t = '';
    if (uri._parts.protocol) {
      t += uri._parts.protocol + '://';
    }

    if (uri._parts.hostname) {
      if (uri.is('punycode') && punycode) {
        t += punycode.toUnicode(uri._parts.hostname);
        if (uri._parts.port) {
          t += ':' + uri._parts.port;
        }
      } else {
        t += uri.host();
      }
    }

    if (uri._parts.hostname && uri._parts.path && uri._parts.path.charAt(0) !== '/') {
      t += '/';
    }

    t += uri.path(true);
    if (uri._parts.query) {
      var q = '';
      for (var i = 0, qp = uri._parts.query.split('&'), l = qp.length; i < l; i++) {
        var kv = (qp[i] || '').split('=');
        q += '&' + URI.decodeQuery(kv[0], this._parts.escapeQuerySpace)
          .replace(/&/g, '%26');

        if (kv[1] !== undefined) {
          q += '=' + URI.decodeQuery(kv[1], this._parts.escapeQuerySpace)
            .replace(/&/g, '%26');
        }
      }
      t += '?' + q.substring(1);
    }

    t += URI.decodeQuery(uri.hash(), true);
    return t;
  };

  // resolving relative and absolute URLs
  p.absoluteTo = function(base) {
    var resolved = this.clone();
    var properties = ['protocol', 'username', 'password', 'hostname', 'port'];
    var basedir, i, p;

    if (this._parts.urn) {
      throw new Error('URNs do not have any generally defined hierarchical components');
    }

    if (!(base instanceof URI)) {
      base = new URI(base);
    }

    if (resolved._parts.protocol) {
      // Directly returns even if this._parts.hostname is empty.
      return resolved;
    } else {
      resolved._parts.protocol = base._parts.protocol;
    }

    if (this._parts.hostname) {
      return resolved;
    }

    for (i = 0; (p = properties[i]); i++) {
      resolved._parts[p] = base._parts[p];
    }

    if (!resolved._parts.path) {
      resolved._parts.path = base._parts.path;
      if (!resolved._parts.query) {
        resolved._parts.query = base._parts.query;
      }
    } else {
      if (resolved._parts.path.substring(-2) === '..') {
        resolved._parts.path += '/';
      }

      if (resolved.path().charAt(0) !== '/') {
        basedir = base.directory();
        basedir = basedir ? basedir : base.path().indexOf('/') === 0 ? '/' : '';
        resolved._parts.path = (basedir ? (basedir + '/') : '') + resolved._parts.path;
        resolved.normalizePath();
      }
    }

    resolved.build();
    return resolved;
  };
  p.relativeTo = function(base) {
    var relative = this.clone().normalize();
    var relativeParts, baseParts, common, relativePath, basePath;

    if (relative._parts.urn) {
      throw new Error('URNs do not have any generally defined hierarchical components');
    }

    base = new URI(base).normalize();
    relativeParts = relative._parts;
    baseParts = base._parts;
    relativePath = relative.path();
    basePath = base.path();

    if (relativePath.charAt(0) !== '/') {
      throw new Error('URI is already relative');
    }

    if (basePath.charAt(0) !== '/') {
      throw new Error('Cannot calculate a URI relative to another relative URI');
    }

    if (relativeParts.protocol === baseParts.protocol) {
      relativeParts.protocol = null;
    }

    if (relativeParts.username !== baseParts.username || relativeParts.password !== baseParts.password) {
      return relative.build();
    }

    if (relativeParts.protocol !== null || relativeParts.username !== null || relativeParts.password !== null) {
      return relative.build();
    }

    if (relativeParts.hostname === baseParts.hostname && relativeParts.port === baseParts.port) {
      relativeParts.hostname = null;
      relativeParts.port = null;
    } else {
      return relative.build();
    }

    if (relativePath === basePath) {
      relativeParts.path = '';
      return relative.build();
    }

    // determine common sub path
    common = URI.commonPath(relativePath, basePath);

    // If the paths have nothing in common, return a relative URL with the absolute path.
    if (!common) {
      return relative.build();
    }

    var parents = baseParts.path
      .substring(common.length)
      .replace(/[^\/]*$/, '')
      .replace(/.*?\//g, '../');

    relativeParts.path = (parents + relativeParts.path.substring(common.length)) || './';

    return relative.build();
  };

  // comparing URIs
  p.equals = function(uri) {
    var one = this.clone();
    var two = new URI(uri);
    var one_map = {};
    var two_map = {};
    var checked = {};
    var one_query, two_query, key;

    one.normalize();
    two.normalize();

    // exact match
    if (one.toString() === two.toString()) {
      return true;
    }

    // extract query string
    one_query = one.query();
    two_query = two.query();
    one.query('');
    two.query('');

    // definitely not equal if not even non-query parts match
    if (one.toString() !== two.toString()) {
      return false;
    }

    // query parameters have the same length, even if they're permuted
    if (one_query.length !== two_query.length) {
      return false;
    }

    one_map = URI.parseQuery(one_query, this._parts.escapeQuerySpace);
    two_map = URI.parseQuery(two_query, this._parts.escapeQuerySpace);

    for (key in one_map) {
      if (hasOwn.call(one_map, key)) {
        if (!isArray(one_map[key])) {
          if (one_map[key] !== two_map[key]) {
            return false;
          }
        } else if (!arraysEqual(one_map[key], two_map[key])) {
          return false;
        }

        checked[key] = true;
      }
    }

    for (key in two_map) {
      if (hasOwn.call(two_map, key)) {
        if (!checked[key]) {
          // two contains a parameter not present in one
          return false;
        }
      }
    }

    return true;
  };

  // state
  p.preventInvalidHostname = function(v) {
    this._parts.preventInvalidHostname = !!v;
    return this;
  };

  p.duplicateQueryParameters = function(v) {
    this._parts.duplicateQueryParameters = !!v;
    return this;
  };

  p.escapeQuerySpace = function(v) {
    this._parts.escapeQuerySpace = !!v;
    return this;
  };

  return URI;
}));


/***/ }),

/***/ "./node_modules/urijs/src/punycode.js":
/*!********************************************!*\
  !*** ./node_modules/urijs/src/punycode.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.0 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.3.2',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return punycode;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/xss/dist/xss.js":
/*!**************************************!*\
  !*** ./node_modules/xss/dist/xss.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var require;var require;(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * default settings
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS = require("cssfilter").FilterCSS;
var getDefaultCSSWhiteList = require("cssfilter").getDefaultWhiteList;
var _ = require("./util");

function getDefaultWhiteList() {
  return {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: ["autoplay", "controls", "loop", "preload", "src"],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: ["autoplay", "controls", "loop", "preload", "src", "height", "width"]
  };
}

var defaultCSSFilter = new FilterCSS();

/**
 * default onTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onTag(tag, html, options) {
  // do nothing
}

/**
 * default onIgnoreTag function
 *
 * @param {String} tag
 * @param {String} html
 * @param {Object} options
 * @return {String}
 */
function onIgnoreTag(tag, html, options) {
  // do nothing
}

/**
 * default onTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default onIgnoreTagAttr function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function onIgnoreTagAttr(tag, name, value) {
  // do nothing
}

/**
 * default escapeHtml function
 *
 * @param {String} html
 */
function escapeHtml(html) {
  return html.replace(REGEXP_LT, "&lt;").replace(REGEXP_GT, "&gt;");
}

/**
 * default safeAttrValue function
 *
 * @param {String} tag
 * @param {String} name
 * @param {String} value
 * @param {Object} cssFilter
 * @return {String}
 */
function safeAttrValue(tag, name, value, cssFilter) {
  // unescape attribute value firstly
  value = friendlyAttrValue(value);

  if (name === "href" || name === "src") {
    // filter `href` and `src` attribute
    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`
    value = _.trim(value);
    if (value === "#") return "#";
    if (
      !(
        value.substr(0, 7) === "http://" ||
        value.substr(0, 8) === "https://" ||
        value.substr(0, 7) === "mailto:" ||
        value.substr(0, 4) === "tel:" ||
        value[0] === "#" ||
        value[0] === "/"
      )
    ) {
      return "";
    }
  } else if (name === "background") {
    // filter `background` attribute (maybe no use)
    // `javascript:`
    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
      return "";
    }
  } else if (name === "style") {
    // `expression()`
    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {
      return "";
    }
    // `url()`
    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;
    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {
      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;
      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {
        return "";
      }
    }
    if (cssFilter !== false) {
      cssFilter = cssFilter || defaultCSSFilter;
      value = cssFilter.process(value);
    }
  }

  // escape `<>"` before returns
  value = escapeAttrValue(value);
  return value;
}

// RegExp list
var REGEXP_LT = /</g;
var REGEXP_GT = />/g;
var REGEXP_QUOTE = /"/g;
var REGEXP_QUOTE_2 = /&quot;/g;
var REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;
var REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;
var REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;
var REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\/\*|\*\//gm;
var REGEXP_DEFAULT_ON_TAG_ATTR_4 = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\s"'`]*(d\s*a\s*t\s*a\s*)\:\s*image\//gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_7 = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi;
var REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\s*r\s*l\s*\(.*/gi;

/**
 * escape doube quote
 *
 * @param {String} str
 * @return {String} str
 */
function escapeQuote(str) {
  return str.replace(REGEXP_QUOTE, "&quot;");
}

/**
 * unescape double quote
 *
 * @param {String} str
 * @return {String} str
 */
function unescapeQuote(str) {
  return str.replace(REGEXP_QUOTE_2, '"');
}

/**
 * escape html entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeHtmlEntities(str) {
  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {
    return code[0] === "x" || code[0] === "X"
      ? String.fromCharCode(parseInt(code.substr(1), 16))
      : String.fromCharCode(parseInt(code, 10));
  });
}

/**
 * escape html5 new danger entities
 *
 * @param {String} str
 * @return {String}
 */
function escapeDangerHtml5Entities(str) {
  return str
    .replace(REGEXP_ATTR_VALUE_COLON, ":")
    .replace(REGEXP_ATTR_VALUE_NEWLINE, " ");
}

/**
 * clear nonprintable characters
 *
 * @param {String} str
 * @return {String}
 */
function clearNonPrintableCharacter(str) {
  var str2 = "";
  for (var i = 0, len = str.length; i < len; i++) {
    str2 += str.charCodeAt(i) < 32 ? " " : str.charAt(i);
  }
  return _.trim(str2);
}

/**
 * get friendly attribute value
 *
 * @param {String} str
 * @return {String}
 */
function friendlyAttrValue(str) {
  str = unescapeQuote(str);
  str = escapeHtmlEntities(str);
  str = escapeDangerHtml5Entities(str);
  str = clearNonPrintableCharacter(str);
  return str;
}

/**
 * unescape attribute value
 *
 * @param {String} str
 * @return {String}
 */
function escapeAttrValue(str) {
  str = escapeQuote(str);
  str = escapeHtml(str);
  return str;
}

/**
 * `onIgnoreTag` function for removing all the tags that are not in whitelist
 */
function onIgnoreTagStripAll() {
  return "";
}

/**
 * remove tag body
 * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)
 *
 * @param {array} tags
 * @param {function} next
 */
function StripTagBody(tags, next) {
  if (typeof next !== "function") {
    next = function() {};
  }

  var isRemoveAllTag = !Array.isArray(tags);
  function isRemoveTag(tag) {
    if (isRemoveAllTag) return true;
    return _.indexOf(tags, tag) !== -1;
  }

  var removeList = [];
  var posStart = false;

  return {
    onIgnoreTag: function(tag, html, options) {
      if (isRemoveTag(tag)) {
        if (options.isClosing) {
          var ret = "[/removed]";
          var end = options.position + ret.length;
          removeList.push([
            posStart !== false ? posStart : options.position,
            end
          ]);
          posStart = false;
          return ret;
        } else {
          if (!posStart) {
            posStart = options.position;
          }
          return "[removed]";
        }
      } else {
        return next(tag, html, options);
      }
    },
    remove: function(html) {
      var rethtml = "";
      var lastPos = 0;
      _.forEach(removeList, function(pos) {
        rethtml += html.slice(lastPos, pos[0]);
        lastPos = pos[1];
      });
      rethtml += html.slice(lastPos);
      return rethtml;
    }
  };
}

/**
 * remove html comments
 *
 * @param {String} html
 * @return {String}
 */
function stripCommentTag(html) {
  return html.replace(STRIP_COMMENT_TAG_REGEXP, "");
}
var STRIP_COMMENT_TAG_REGEXP = /<!--[\s\S]*?-->/g;

/**
 * remove invisible characters
 *
 * @param {String} html
 * @return {String}
 */
function stripBlankChar(html) {
  var chars = html.split("");
  chars = chars.filter(function(char) {
    var c = char.charCodeAt(0);
    if (c === 127) return false;
    if (c <= 31) {
      if (c === 10 || c === 13) return true;
      return false;
    }
    return true;
  });
  return chars.join("");
}

exports.whiteList = getDefaultWhiteList();
exports.getDefaultWhiteList = getDefaultWhiteList;
exports.onTag = onTag;
exports.onIgnoreTag = onIgnoreTag;
exports.onTagAttr = onTagAttr;
exports.onIgnoreTagAttr = onIgnoreTagAttr;
exports.safeAttrValue = safeAttrValue;
exports.escapeHtml = escapeHtml;
exports.escapeQuote = escapeQuote;
exports.unescapeQuote = unescapeQuote;
exports.escapeHtmlEntities = escapeHtmlEntities;
exports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;
exports.clearNonPrintableCharacter = clearNonPrintableCharacter;
exports.friendlyAttrValue = friendlyAttrValue;
exports.escapeAttrValue = escapeAttrValue;
exports.onIgnoreTagStripAll = onIgnoreTagStripAll;
exports.StripTagBody = StripTagBody;
exports.stripCommentTag = stripCommentTag;
exports.stripBlankChar = stripBlankChar;
exports.cssFilter = defaultCSSFilter;
exports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;

},{"./util":4,"cssfilter":8}],2:[function(require,module,exports){
/**
 * xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var DEFAULT = require("./default");
var parser = require("./parser");
var FilterXSS = require("./xss");

/**
 * filter xss function
 *
 * @param {String} html
 * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }
 * @return {String}
 */
function filterXSS(html, options) {
  var xss = new FilterXSS(options);
  return xss.process(html);
}

exports = module.exports = filterXSS;
exports.FilterXSS = FilterXSS;
for (var i in DEFAULT) exports[i] = DEFAULT[i];
for (var i in parser) exports[i] = parser[i];

// using `xss` on the browser, output `filterXSS` to the globals
if (typeof window !== "undefined") {
  window.filterXSS = module.exports;
}

},{"./default":1,"./parser":3,"./xss":5}],3:[function(require,module,exports){
/**
 * Simple HTML Parser
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var _ = require("./util");

/**
 * get tag name
 *
 * @param {String} html e.g. '<a hef="#">'
 * @return {String}
 */
function getTagName(html) {
  var i = _.spaceIndex(html);
  if (i === -1) {
    var tagName = html.slice(1, -1);
  } else {
    var tagName = html.slice(1, i + 1);
  }
  tagName = _.trim(tagName).toLowerCase();
  if (tagName.slice(0, 1) === "/") tagName = tagName.slice(1);
  if (tagName.slice(-1) === "/") tagName = tagName.slice(0, -1);
  return tagName;
}

/**
 * is close tag?
 *
 * @param {String} html 如：'<a hef="#">'
 * @return {Boolean}
 */
function isClosing(html) {
  return html.slice(0, 2) === "</";
}

/**
 * parse input html and returns processed html
 *
 * @param {String} html
 * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)
 * @param {Function} escapeHtml
 * @return {String}
 */
function parseTag(html, onTag, escapeHtml) {
  "user strict";

  var rethtml = "";
  var lastPos = 0;
  var tagStart = false;
  var quoteStart = false;
  var currentPos = 0;
  var len = html.length;
  var currentTagName = "";
  var currentHtml = "";

  for (currentPos = 0; currentPos < len; currentPos++) {
    var c = html.charAt(currentPos);
    if (tagStart === false) {
      if (c === "<") {
        tagStart = currentPos;
        continue;
      }
    } else {
      if (quoteStart === false) {
        if (c === "<") {
          rethtml += escapeHtml(html.slice(lastPos, currentPos));
          tagStart = currentPos;
          lastPos = currentPos;
          continue;
        }
        if (c === ">") {
          rethtml += escapeHtml(html.slice(lastPos, tagStart));
          currentHtml = html.slice(tagStart, currentPos + 1);
          currentTagName = getTagName(currentHtml);
          rethtml += onTag(
            tagStart,
            rethtml.length,
            currentTagName,
            currentHtml,
            isClosing(currentHtml)
          );
          lastPos = currentPos + 1;
          tagStart = false;
          continue;
        }
        if ((c === '"' || c === "'") && html.charAt(currentPos - 1) === "=") {
          quoteStart = c;
          continue;
        }
      } else {
        if (c === quoteStart) {
          quoteStart = false;
          continue;
        }
      }
    }
  }
  if (lastPos < html.length) {
    rethtml += escapeHtml(html.substr(lastPos));
  }

  return rethtml;
}

var REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\.\-]/gim;

/**
 * parse input attributes and returns processed attributes
 *
 * @param {String} html e.g. `href="#" target="_blank"`
 * @param {Function} onAttr e.g. `function (name, value)`
 * @return {String}
 */
function parseAttr(html, onAttr) {
  "user strict";

  var lastPos = 0;
  var retAttrs = [];
  var tmpName = false;
  var len = html.length;

  function addAttr(name, value) {
    name = _.trim(name);
    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, "").toLowerCase();
    if (name.length < 1) return;
    var ret = onAttr(name, value || "");
    if (ret) retAttrs.push(ret);
  }

  // 逐个分析字符
  for (var i = 0; i < len; i++) {
    var c = html.charAt(i);
    var v, j;
    if (tmpName === false && c === "=") {
      tmpName = html.slice(lastPos, i);
      lastPos = i + 1;
      continue;
    }
    if (tmpName !== false) {
      if (
        i === lastPos &&
        (c === '"' || c === "'") &&
        html.charAt(i - 1) === "="
      ) {
        j = html.indexOf(c, i + 1);
        if (j === -1) {
          break;
        } else {
          v = _.trim(html.slice(lastPos + 1, j));
          addAttr(tmpName, v);
          tmpName = false;
          i = j;
          lastPos = i + 1;
          continue;
        }
      }
    }
    if (/\s|\n|\t/.test(c)) {
      html = html.replace(/\s|\n|\t/g, " ");
      if (tmpName === false) {
        j = findNextEqual(html, i);
        if (j === -1) {
          v = _.trim(html.slice(lastPos, i));
          addAttr(v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          i = j - 1;
          continue;
        }
      } else {
        j = findBeforeEqual(html, i - 1);
        if (j === -1) {
          v = _.trim(html.slice(lastPos, i));
          v = stripQuoteWrap(v);
          addAttr(tmpName, v);
          tmpName = false;
          lastPos = i + 1;
          continue;
        } else {
          continue;
        }
      }
    }
  }

  if (lastPos < html.length) {
    if (tmpName === false) {
      addAttr(html.slice(lastPos));
    } else {
      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));
    }
  }

  return _.trim(retAttrs.join(" "));
}

function findNextEqual(str, i) {
  for (; i < str.length; i++) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function findBeforeEqual(str, i) {
  for (; i > 0; i--) {
    var c = str[i];
    if (c === " ") continue;
    if (c === "=") return i;
    return -1;
  }
}

function isQuoteWrapString(text) {
  if (
    (text[0] === '"' && text[text.length - 1] === '"') ||
    (text[0] === "'" && text[text.length - 1] === "'")
  ) {
    return true;
  } else {
    return false;
  }
}

function stripQuoteWrap(text) {
  if (isQuoteWrapString(text)) {
    return text.substr(1, text.length - 2);
  } else {
    return text;
  }
}

exports.parseTag = parseTag;
exports.parseAttr = parseAttr;

},{"./util":4}],4:[function(require,module,exports){
module.exports = {
  indexOf: function(arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function(arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function(str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, "");
  },
  spaceIndex: function(str) {
    var reg = /\s|\n|\t/;
    var match = reg.exec(str);
    return match ? match.index : -1;
  }
};

},{}],5:[function(require,module,exports){
/**
 * filter xss
 *
 * @author Zongmin Lei<leizongmin@gmail.com>
 */

var FilterCSS = require("cssfilter").FilterCSS;
var DEFAULT = require("./default");
var parser = require("./parser");
var parseTag = parser.parseTag;
var parseAttr = parser.parseAttr;
var _ = require("./util");

/**
 * returns `true` if the input value is `undefined` or `null`
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull(obj) {
  return obj === undefined || obj === null;
}

/**
 * get attributes for a tag
 *
 * @param {String} html
 * @return {Object}
 *   - {String} html
 *   - {Boolean} closing
 */
function getAttrs(html) {
  var i = _.spaceIndex(html);
  if (i === -1) {
    return {
      html: "",
      closing: html[html.length - 2] === "/"
    };
  }
  html = _.trim(html.slice(i + 1, -1));
  var isClosing = html[html.length - 1] === "/";
  if (isClosing) html = _.trim(html.slice(0, -1));
  return {
    html: html,
    closing: isClosing
  };
}

/**
 * shallow copy
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject(obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * FilterXSS class
 *
 * @param {Object} options
 *        whiteList, onTag, onTagAttr, onIgnoreTag,
 *        onIgnoreTagAttr, safeAttrValue, escapeHtml
 *        stripIgnoreTagBody, allowCommentTag, stripBlankChar
 *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`
 */
function FilterXSS(options) {
  options = shallowCopyObject(options || {});

  if (options.stripIgnoreTag) {
    if (options.onIgnoreTag) {
      console.error(
        'Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'
      );
    }
    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;
  }

  options.whiteList = options.whiteList || DEFAULT.whiteList;
  options.onTag = options.onTag || DEFAULT.onTag;
  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;
  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;
  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;
  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;
  this.options = options;

  if (options.css === false) {
    this.cssFilter = false;
  } else {
    options.css = options.css || {};
    this.cssFilter = new FilterCSS(options.css);
  }
}

/**
 * start process and returns result
 *
 * @param {String} html
 * @return {String}
 */
FilterXSS.prototype.process = function(html) {
  // compatible with the input
  html = html || "";
  html = html.toString();
  if (!html) return "";

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onTag = options.onTag;
  var onIgnoreTag = options.onIgnoreTag;
  var onTagAttr = options.onTagAttr;
  var onIgnoreTagAttr = options.onIgnoreTagAttr;
  var safeAttrValue = options.safeAttrValue;
  var escapeHtml = options.escapeHtml;
  var cssFilter = me.cssFilter;

  // remove invisible characters
  if (options.stripBlankChar) {
    html = DEFAULT.stripBlankChar(html);
  }

  // remove html comments
  if (!options.allowCommentTag) {
    html = DEFAULT.stripCommentTag(html);
  }

  // if enable stripIgnoreTagBody
  var stripIgnoreTagBody = false;
  if (options.stripIgnoreTagBody) {
    var stripIgnoreTagBody = DEFAULT.StripTagBody(
      options.stripIgnoreTagBody,
      onIgnoreTag
    );
    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;
  }

  var retHtml = parseTag(
    html,
    function(sourcePosition, position, tag, html, isClosing) {
      var info = {
        sourcePosition: sourcePosition,
        position: position,
        isClosing: isClosing,
        isWhite: whiteList.hasOwnProperty(tag)
      };

      // call `onTag()`
      var ret = onTag(tag, html, info);
      if (!isNull(ret)) return ret;

      if (info.isWhite) {
        if (info.isClosing) {
          return "</" + tag + ">";
        }

        var attrs = getAttrs(html);
        var whiteAttrList = whiteList[tag];
        var attrsHtml = parseAttr(attrs.html, function(name, value) {
          // call `onTagAttr()`
          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;
          var ret = onTagAttr(tag, name, value, isWhiteAttr);
          if (!isNull(ret)) return ret;

          if (isWhiteAttr) {
            // call `safeAttrValue()`
            value = safeAttrValue(tag, name, value, cssFilter);
            if (value) {
              return name + '="' + value + '"';
            } else {
              return name;
            }
          } else {
            // call `onIgnoreTagAttr()`
            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);
            if (!isNull(ret)) return ret;
            return;
          }
        });

        // build new tag html
        var html = "<" + tag;
        if (attrsHtml) html += " " + attrsHtml;
        if (attrs.closing) html += " /";
        html += ">";
        return html;
      } else {
        // call `onIgnoreTag()`
        var ret = onIgnoreTag(tag, html, info);
        if (!isNull(ret)) return ret;
        return escapeHtml(html);
      }
    },
    escapeHtml
  );

  // if enable stripIgnoreTagBody
  if (stripIgnoreTagBody) {
    retHtml = stripIgnoreTagBody.remove(retHtml);
  }

  return retHtml;
};

module.exports = FilterXSS;

},{"./default":1,"./parser":3,"./util":4,"cssfilter":8}],6:[function(require,module,exports){
/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var DEFAULT = require('./default');
var parseStyle = require('./parser');
var _ = require('./util');


/**
 * 返回值是否为空
 *
 * @param {Object} obj
 * @return {Boolean}
 */
function isNull (obj) {
  return (obj === undefined || obj === null);
}

/**
 * 浅拷贝对象
 *
 * @param {Object} obj
 * @return {Object}
 */
function shallowCopyObject (obj) {
  var ret = {};
  for (var i in obj) {
    ret[i] = obj[i];
  }
  return ret;
}

/**
 * 创建CSS过滤器
 *
 * @param {Object} options
 *   - {Object} whiteList
 *   - {Function} onAttr
 *   - {Function} onIgnoreAttr
 *   - {Function} safeAttrValue
 */
function FilterCSS (options) {
  options = shallowCopyObject(options || {});
  options.whiteList = options.whiteList || DEFAULT.whiteList;
  options.onAttr = options.onAttr || DEFAULT.onAttr;
  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;
  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;
  this.options = options;
}

FilterCSS.prototype.process = function (css) {
  // 兼容各种奇葩输入
  css = css || '';
  css = css.toString();
  if (!css) return '';

  var me = this;
  var options = me.options;
  var whiteList = options.whiteList;
  var onAttr = options.onAttr;
  var onIgnoreAttr = options.onIgnoreAttr;
  var safeAttrValue = options.safeAttrValue;

  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {

    var check = whiteList[name];
    var isWhite = false;
    if (check === true) isWhite = check;
    else if (typeof check === 'function') isWhite = check(value);
    else if (check instanceof RegExp) isWhite = check.test(value);
    if (isWhite !== true) isWhite = false;

    // 如果过滤后 value 为空则直接忽略
    value = safeAttrValue(name, value);
    if (!value) return;

    var opts = {
      position: position,
      sourcePosition: sourcePosition,
      source: source,
      isWhite: isWhite
    };

    if (isWhite) {

      var ret = onAttr(name, value, opts);
      if (isNull(ret)) {
        return name + ':' + value;
      } else {
        return ret;
      }

    } else {

      var ret = onIgnoreAttr(name, value, opts);
      if (!isNull(ret)) {
        return ret;
      }

    }
  });

  return retCSS;
};


module.exports = FilterCSS;

},{"./default":7,"./parser":9,"./util":10}],7:[function(require,module,exports){
/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

function getDefaultWhiteList () {
  // 白名单值说明：
  // true: 允许该属性
  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许
  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许
  // 除上面列出的值外均表示不允许
  var whiteList = {};

  whiteList['align-content'] = false; // default: auto
  whiteList['align-items'] = false; // default: auto
  whiteList['align-self'] = false; // default: auto
  whiteList['alignment-adjust'] = false; // default: auto
  whiteList['alignment-baseline'] = false; // default: baseline
  whiteList['all'] = false; // default: depending on individual properties
  whiteList['anchor-point'] = false; // default: none
  whiteList['animation'] = false; // default: depending on individual properties
  whiteList['animation-delay'] = false; // default: 0
  whiteList['animation-direction'] = false; // default: normal
  whiteList['animation-duration'] = false; // default: 0
  whiteList['animation-fill-mode'] = false; // default: none
  whiteList['animation-iteration-count'] = false; // default: 1
  whiteList['animation-name'] = false; // default: none
  whiteList['animation-play-state'] = false; // default: running
  whiteList['animation-timing-function'] = false; // default: ease
  whiteList['azimuth'] = false; // default: center
  whiteList['backface-visibility'] = false; // default: visible
  whiteList['background'] = true; // default: depending on individual properties
  whiteList['background-attachment'] = true; // default: scroll
  whiteList['background-clip'] = true; // default: border-box
  whiteList['background-color'] = true; // default: transparent
  whiteList['background-image'] = true; // default: none
  whiteList['background-origin'] = true; // default: padding-box
  whiteList['background-position'] = true; // default: 0% 0%
  whiteList['background-repeat'] = true; // default: repeat
  whiteList['background-size'] = true; // default: auto
  whiteList['baseline-shift'] = false; // default: baseline
  whiteList['binding'] = false; // default: none
  whiteList['bleed'] = false; // default: 6pt
  whiteList['bookmark-label'] = false; // default: content()
  whiteList['bookmark-level'] = false; // default: none
  whiteList['bookmark-state'] = false; // default: open
  whiteList['border'] = true; // default: depending on individual properties
  whiteList['border-bottom'] = true; // default: depending on individual properties
  whiteList['border-bottom-color'] = true; // default: current color
  whiteList['border-bottom-left-radius'] = true; // default: 0
  whiteList['border-bottom-right-radius'] = true; // default: 0
  whiteList['border-bottom-style'] = true; // default: none
  whiteList['border-bottom-width'] = true; // default: medium
  whiteList['border-collapse'] = true; // default: separate
  whiteList['border-color'] = true; // default: depending on individual properties
  whiteList['border-image'] = true; // default: none
  whiteList['border-image-outset'] = true; // default: 0
  whiteList['border-image-repeat'] = true; // default: stretch
  whiteList['border-image-slice'] = true; // default: 100%
  whiteList['border-image-source'] = true; // default: none
  whiteList['border-image-width'] = true; // default: 1
  whiteList['border-left'] = true; // default: depending on individual properties
  whiteList['border-left-color'] = true; // default: current color
  whiteList['border-left-style'] = true; // default: none
  whiteList['border-left-width'] = true; // default: medium
  whiteList['border-radius'] = true; // default: 0
  whiteList['border-right'] = true; // default: depending on individual properties
  whiteList['border-right-color'] = true; // default: current color
  whiteList['border-right-style'] = true; // default: none
  whiteList['border-right-width'] = true; // default: medium
  whiteList['border-spacing'] = true; // default: 0
  whiteList['border-style'] = true; // default: depending on individual properties
  whiteList['border-top'] = true; // default: depending on individual properties
  whiteList['border-top-color'] = true; // default: current color
  whiteList['border-top-left-radius'] = true; // default: 0
  whiteList['border-top-right-radius'] = true; // default: 0
  whiteList['border-top-style'] = true; // default: none
  whiteList['border-top-width'] = true; // default: medium
  whiteList['border-width'] = true; // default: depending on individual properties
  whiteList['bottom'] = false; // default: auto
  whiteList['box-decoration-break'] = true; // default: slice
  whiteList['box-shadow'] = true; // default: none
  whiteList['box-sizing'] = true; // default: content-box
  whiteList['box-snap'] = true; // default: none
  whiteList['box-suppress'] = true; // default: show
  whiteList['break-after'] = true; // default: auto
  whiteList['break-before'] = true; // default: auto
  whiteList['break-inside'] = true; // default: auto
  whiteList['caption-side'] = false; // default: top
  whiteList['chains'] = false; // default: none
  whiteList['clear'] = true; // default: none
  whiteList['clip'] = false; // default: auto
  whiteList['clip-path'] = false; // default: none
  whiteList['clip-rule'] = false; // default: nonzero
  whiteList['color'] = true; // default: implementation dependent
  whiteList['color-interpolation-filters'] = true; // default: auto
  whiteList['column-count'] = false; // default: auto
  whiteList['column-fill'] = false; // default: balance
  whiteList['column-gap'] = false; // default: normal
  whiteList['column-rule'] = false; // default: depending on individual properties
  whiteList['column-rule-color'] = false; // default: current color
  whiteList['column-rule-style'] = false; // default: medium
  whiteList['column-rule-width'] = false; // default: medium
  whiteList['column-span'] = false; // default: none
  whiteList['column-width'] = false; // default: auto
  whiteList['columns'] = false; // default: depending on individual properties
  whiteList['contain'] = false; // default: none
  whiteList['content'] = false; // default: normal
  whiteList['counter-increment'] = false; // default: none
  whiteList['counter-reset'] = false; // default: none
  whiteList['counter-set'] = false; // default: none
  whiteList['crop'] = false; // default: auto
  whiteList['cue'] = false; // default: depending on individual properties
  whiteList['cue-after'] = false; // default: none
  whiteList['cue-before'] = false; // default: none
  whiteList['cursor'] = false; // default: auto
  whiteList['direction'] = false; // default: ltr
  whiteList['display'] = true; // default: depending on individual properties
  whiteList['display-inside'] = true; // default: auto
  whiteList['display-list'] = true; // default: none
  whiteList['display-outside'] = true; // default: inline-level
  whiteList['dominant-baseline'] = false; // default: auto
  whiteList['elevation'] = false; // default: level
  whiteList['empty-cells'] = false; // default: show
  whiteList['filter'] = false; // default: none
  whiteList['flex'] = false; // default: depending on individual properties
  whiteList['flex-basis'] = false; // default: auto
  whiteList['flex-direction'] = false; // default: row
  whiteList['flex-flow'] = false; // default: depending on individual properties
  whiteList['flex-grow'] = false; // default: 0
  whiteList['flex-shrink'] = false; // default: 1
  whiteList['flex-wrap'] = false; // default: nowrap
  whiteList['float'] = false; // default: none
  whiteList['float-offset'] = false; // default: 0 0
  whiteList['flood-color'] = false; // default: black
  whiteList['flood-opacity'] = false; // default: 1
  whiteList['flow-from'] = false; // default: none
  whiteList['flow-into'] = false; // default: none
  whiteList['font'] = true; // default: depending on individual properties
  whiteList['font-family'] = true; // default: implementation dependent
  whiteList['font-feature-settings'] = true; // default: normal
  whiteList['font-kerning'] = true; // default: auto
  whiteList['font-language-override'] = true; // default: normal
  whiteList['font-size'] = true; // default: medium
  whiteList['font-size-adjust'] = true; // default: none
  whiteList['font-stretch'] = true; // default: normal
  whiteList['font-style'] = true; // default: normal
  whiteList['font-synthesis'] = true; // default: weight style
  whiteList['font-variant'] = true; // default: normal
  whiteList['font-variant-alternates'] = true; // default: normal
  whiteList['font-variant-caps'] = true; // default: normal
  whiteList['font-variant-east-asian'] = true; // default: normal
  whiteList['font-variant-ligatures'] = true; // default: normal
  whiteList['font-variant-numeric'] = true; // default: normal
  whiteList['font-variant-position'] = true; // default: normal
  whiteList['font-weight'] = true; // default: normal
  whiteList['grid'] = false; // default: depending on individual properties
  whiteList['grid-area'] = false; // default: depending on individual properties
  whiteList['grid-auto-columns'] = false; // default: auto
  whiteList['grid-auto-flow'] = false; // default: none
  whiteList['grid-auto-rows'] = false; // default: auto
  whiteList['grid-column'] = false; // default: depending on individual properties
  whiteList['grid-column-end'] = false; // default: auto
  whiteList['grid-column-start'] = false; // default: auto
  whiteList['grid-row'] = false; // default: depending on individual properties
  whiteList['grid-row-end'] = false; // default: auto
  whiteList['grid-row-start'] = false; // default: auto
  whiteList['grid-template'] = false; // default: depending on individual properties
  whiteList['grid-template-areas'] = false; // default: none
  whiteList['grid-template-columns'] = false; // default: none
  whiteList['grid-template-rows'] = false; // default: none
  whiteList['hanging-punctuation'] = false; // default: none
  whiteList['height'] = true; // default: auto
  whiteList['hyphens'] = false; // default: manual
  whiteList['icon'] = false; // default: auto
  whiteList['image-orientation'] = false; // default: auto
  whiteList['image-resolution'] = false; // default: normal
  whiteList['ime-mode'] = false; // default: auto
  whiteList['initial-letters'] = false; // default: normal
  whiteList['inline-box-align'] = false; // default: last
  whiteList['justify-content'] = false; // default: auto
  whiteList['justify-items'] = false; // default: auto
  whiteList['justify-self'] = false; // default: auto
  whiteList['left'] = false; // default: auto
  whiteList['letter-spacing'] = true; // default: normal
  whiteList['lighting-color'] = true; // default: white
  whiteList['line-box-contain'] = false; // default: block inline replaced
  whiteList['line-break'] = false; // default: auto
  whiteList['line-grid'] = false; // default: match-parent
  whiteList['line-height'] = false; // default: normal
  whiteList['line-snap'] = false; // default: none
  whiteList['line-stacking'] = false; // default: depending on individual properties
  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby
  whiteList['line-stacking-shift'] = false; // default: consider-shifts
  whiteList['line-stacking-strategy'] = false; // default: inline-line-height
  whiteList['list-style'] = true; // default: depending on individual properties
  whiteList['list-style-image'] = true; // default: none
  whiteList['list-style-position'] = true; // default: outside
  whiteList['list-style-type'] = true; // default: disc
  whiteList['margin'] = true; // default: depending on individual properties
  whiteList['margin-bottom'] = true; // default: 0
  whiteList['margin-left'] = true; // default: 0
  whiteList['margin-right'] = true; // default: 0
  whiteList['margin-top'] = true; // default: 0
  whiteList['marker-offset'] = false; // default: auto
  whiteList['marker-side'] = false; // default: list-item
  whiteList['marks'] = false; // default: none
  whiteList['mask'] = false; // default: border-box
  whiteList['mask-box'] = false; // default: see individual properties
  whiteList['mask-box-outset'] = false; // default: 0
  whiteList['mask-box-repeat'] = false; // default: stretch
  whiteList['mask-box-slice'] = false; // default: 0 fill
  whiteList['mask-box-source'] = false; // default: none
  whiteList['mask-box-width'] = false; // default: auto
  whiteList['mask-clip'] = false; // default: border-box
  whiteList['mask-image'] = false; // default: none
  whiteList['mask-origin'] = false; // default: border-box
  whiteList['mask-position'] = false; // default: center
  whiteList['mask-repeat'] = false; // default: no-repeat
  whiteList['mask-size'] = false; // default: border-box
  whiteList['mask-source-type'] = false; // default: auto
  whiteList['mask-type'] = false; // default: luminance
  whiteList['max-height'] = true; // default: none
  whiteList['max-lines'] = false; // default: none
  whiteList['max-width'] = true; // default: none
  whiteList['min-height'] = true; // default: 0
  whiteList['min-width'] = true; // default: 0
  whiteList['move-to'] = false; // default: normal
  whiteList['nav-down'] = false; // default: auto
  whiteList['nav-index'] = false; // default: auto
  whiteList['nav-left'] = false; // default: auto
  whiteList['nav-right'] = false; // default: auto
  whiteList['nav-up'] = false; // default: auto
  whiteList['object-fit'] = false; // default: fill
  whiteList['object-position'] = false; // default: 50% 50%
  whiteList['opacity'] = false; // default: 1
  whiteList['order'] = false; // default: 0
  whiteList['orphans'] = false; // default: 2
  whiteList['outline'] = false; // default: depending on individual properties
  whiteList['outline-color'] = false; // default: invert
  whiteList['outline-offset'] = false; // default: 0
  whiteList['outline-style'] = false; // default: none
  whiteList['outline-width'] = false; // default: medium
  whiteList['overflow'] = false; // default: depending on individual properties
  whiteList['overflow-wrap'] = false; // default: normal
  whiteList['overflow-x'] = false; // default: visible
  whiteList['overflow-y'] = false; // default: visible
  whiteList['padding'] = true; // default: depending on individual properties
  whiteList['padding-bottom'] = true; // default: 0
  whiteList['padding-left'] = true; // default: 0
  whiteList['padding-right'] = true; // default: 0
  whiteList['padding-top'] = true; // default: 0
  whiteList['page'] = false; // default: auto
  whiteList['page-break-after'] = false; // default: auto
  whiteList['page-break-before'] = false; // default: auto
  whiteList['page-break-inside'] = false; // default: auto
  whiteList['page-policy'] = false; // default: start
  whiteList['pause'] = false; // default: implementation dependent
  whiteList['pause-after'] = false; // default: implementation dependent
  whiteList['pause-before'] = false; // default: implementation dependent
  whiteList['perspective'] = false; // default: none
  whiteList['perspective-origin'] = false; // default: 50% 50%
  whiteList['pitch'] = false; // default: medium
  whiteList['pitch-range'] = false; // default: 50
  whiteList['play-during'] = false; // default: auto
  whiteList['position'] = false; // default: static
  whiteList['presentation-level'] = false; // default: 0
  whiteList['quotes'] = false; // default: text
  whiteList['region-fragment'] = false; // default: auto
  whiteList['resize'] = false; // default: none
  whiteList['rest'] = false; // default: depending on individual properties
  whiteList['rest-after'] = false; // default: none
  whiteList['rest-before'] = false; // default: none
  whiteList['richness'] = false; // default: 50
  whiteList['right'] = false; // default: auto
  whiteList['rotation'] = false; // default: 0
  whiteList['rotation-point'] = false; // default: 50% 50%
  whiteList['ruby-align'] = false; // default: auto
  whiteList['ruby-merge'] = false; // default: separate
  whiteList['ruby-position'] = false; // default: before
  whiteList['shape-image-threshold'] = false; // default: 0.0
  whiteList['shape-outside'] = false; // default: none
  whiteList['shape-margin'] = false; // default: 0
  whiteList['size'] = false; // default: auto
  whiteList['speak'] = false; // default: auto
  whiteList['speak-as'] = false; // default: normal
  whiteList['speak-header'] = false; // default: once
  whiteList['speak-numeral'] = false; // default: continuous
  whiteList['speak-punctuation'] = false; // default: none
  whiteList['speech-rate'] = false; // default: medium
  whiteList['stress'] = false; // default: 50
  whiteList['string-set'] = false; // default: none
  whiteList['tab-size'] = false; // default: 8
  whiteList['table-layout'] = false; // default: auto
  whiteList['text-align'] = true; // default: start
  whiteList['text-align-last'] = true; // default: auto
  whiteList['text-combine-upright'] = true; // default: none
  whiteList['text-decoration'] = true; // default: none
  whiteList['text-decoration-color'] = true; // default: currentColor
  whiteList['text-decoration-line'] = true; // default: none
  whiteList['text-decoration-skip'] = true; // default: objects
  whiteList['text-decoration-style'] = true; // default: solid
  whiteList['text-emphasis'] = true; // default: depending on individual properties
  whiteList['text-emphasis-color'] = true; // default: currentColor
  whiteList['text-emphasis-position'] = true; // default: over right
  whiteList['text-emphasis-style'] = true; // default: none
  whiteList['text-height'] = true; // default: auto
  whiteList['text-indent'] = true; // default: 0
  whiteList['text-justify'] = true; // default: auto
  whiteList['text-orientation'] = true; // default: mixed
  whiteList['text-overflow'] = true; // default: clip
  whiteList['text-shadow'] = true; // default: none
  whiteList['text-space-collapse'] = true; // default: collapse
  whiteList['text-transform'] = true; // default: none
  whiteList['text-underline-position'] = true; // default: auto
  whiteList['text-wrap'] = true; // default: normal
  whiteList['top'] = false; // default: auto
  whiteList['transform'] = false; // default: none
  whiteList['transform-origin'] = false; // default: 50% 50% 0
  whiteList['transform-style'] = false; // default: flat
  whiteList['transition'] = false; // default: depending on individual properties
  whiteList['transition-delay'] = false; // default: 0s
  whiteList['transition-duration'] = false; // default: 0s
  whiteList['transition-property'] = false; // default: all
  whiteList['transition-timing-function'] = false; // default: ease
  whiteList['unicode-bidi'] = false; // default: normal
  whiteList['vertical-align'] = false; // default: baseline
  whiteList['visibility'] = false; // default: visible
  whiteList['voice-balance'] = false; // default: center
  whiteList['voice-duration'] = false; // default: auto
  whiteList['voice-family'] = false; // default: implementation dependent
  whiteList['voice-pitch'] = false; // default: medium
  whiteList['voice-range'] = false; // default: medium
  whiteList['voice-rate'] = false; // default: normal
  whiteList['voice-stress'] = false; // default: normal
  whiteList['voice-volume'] = false; // default: medium
  whiteList['volume'] = false; // default: medium
  whiteList['white-space'] = false; // default: normal
  whiteList['widows'] = false; // default: 2
  whiteList['width'] = true; // default: auto
  whiteList['will-change'] = false; // default: auto
  whiteList['word-break'] = true; // default: normal
  whiteList['word-spacing'] = true; // default: normal
  whiteList['word-wrap'] = true; // default: normal
  whiteList['wrap-flow'] = false; // default: auto
  whiteList['wrap-through'] = false; // default: wrap
  whiteList['writing-mode'] = false; // default: horizontal-tb
  whiteList['z-index'] = false; // default: auto

  return whiteList;
}


/**
 * 匹配到白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onAttr (name, value, options) {
  // do nothing
}

/**
 * 匹配到不在白名单上的一个属性时
 *
 * @param {String} name
 * @param {String} value
 * @param {Object} options
 * @return {String}
 */
function onIgnoreAttr (name, value, options) {
  // do nothing
}

var REGEXP_URL_JAVASCRIPT = /javascript\s*\:/img;

/**
 * 过滤属性值
 *
 * @param {String} name
 * @param {String} value
 * @return {String}
 */
function safeAttrValue(name, value) {
  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';
  return value;
}


exports.whiteList = getDefaultWhiteList();
exports.getDefaultWhiteList = getDefaultWhiteList;
exports.onAttr = onAttr;
exports.onIgnoreAttr = onIgnoreAttr;
exports.safeAttrValue = safeAttrValue;

},{}],8:[function(require,module,exports){
/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var DEFAULT = require('./default');
var FilterCSS = require('./css');


/**
 * XSS过滤
 *
 * @param {String} css 要过滤的CSS代码
 * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr
 * @return {String}
 */
function filterCSS (html, options) {
  var xss = new FilterCSS(options);
  return xss.process(html);
}


// 输出
exports = module.exports = filterCSS;
exports.FilterCSS = FilterCSS;
for (var i in DEFAULT) exports[i] = DEFAULT[i];

// 在浏览器端使用
if (typeof window !== 'undefined') {
  window.filterCSS = module.exports;
}

},{"./css":6,"./default":7}],9:[function(require,module,exports){
/**
 * cssfilter
 *
 * @author 老雷<leizongmin@gmail.com>
 */

var _ = require('./util');


/**
 * 解析style
 *
 * @param {String} css
 * @param {Function} onAttr 处理属性的函数
 *   参数格式： function (sourcePosition, position, name, value, source)
 * @return {String}
 */
function parseStyle (css, onAttr) {
  css = _.trimRight(css);
  if (css[css.length - 1] !== ';') css += ';';
  var cssLength = css.length;
  var isParenthesisOpen = false;
  var lastPos = 0;
  var i = 0;
  var retCSS = '';

  function addNewAttr () {
    // 如果没有正常的闭合圆括号，则直接忽略当前属性
    if (!isParenthesisOpen) {
      var source = _.trim(css.slice(lastPos, i));
      var j = source.indexOf(':');
      if (j !== -1) {
        var name = _.trim(source.slice(0, j));
        var value = _.trim(source.slice(j + 1));
        // 必须有属性名称
        if (name) {
          var ret = onAttr(lastPos, retCSS.length, name, value, source);
          if (ret) retCSS += ret + '; ';
        }
      }
    }
    lastPos = i + 1;
  }

  for (; i < cssLength; i++) {
    var c = css[i];
    if (c === '/' && css[i + 1] === '*') {
      // 备注开始
      var j = css.indexOf('*/', i + 2);
      // 如果没有正常的备注结束，则后面的部分全部跳过
      if (j === -1) break;
      // 直接将当前位置调到备注结尾，并且初始化状态
      i = j + 1;
      lastPos = i + 1;
      isParenthesisOpen = false;
    } else if (c === '(') {
      isParenthesisOpen = true;
    } else if (c === ')') {
      isParenthesisOpen = false;
    } else if (c === ';') {
      if (isParenthesisOpen) {
        // 在圆括号里面，忽略
      } else {
        addNewAttr();
      }
    } else if (c === '\n') {
      addNewAttr();
    }
  }

  return _.trim(retCSS);
}

module.exports = parseStyle;

},{"./util":10}],10:[function(require,module,exports){
module.exports = {
  indexOf: function (arr, item) {
    var i, j;
    if (Array.prototype.indexOf) {
      return arr.indexOf(item);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      if (arr[i] === item) {
        return i;
      }
    }
    return -1;
  },
  forEach: function (arr, fn, scope) {
    var i, j;
    if (Array.prototype.forEach) {
      return arr.forEach(fn, scope);
    }
    for (i = 0, j = arr.length; i < j; i++) {
      fn.call(scope, arr[i], i, arr);
    }
  },
  trim: function (str) {
    if (String.prototype.trim) {
      return str.trim();
    }
    return str.replace(/(^\s*)|(\s*$)/g, '');
  },
  trimRight: function (str) {
    if (String.prototype.trimRight) {
      return str.trimRight();
    }
    return str.replace(/(\s*$)/g, '');
  }
};

},{}]},{},[2]);


/*** EXPORTS FROM exports-loader ***/
exports["filterXSS"] = (filterXSS);
exports["filterCSS"] = (filterCSS);

/***/ }),

/***/ "./src/backbone.noconflict.js":
/*!************************************!*\
  !*** ./src/backbone.noconflict.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

/*global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Backbone) {
  return Backbone.noConflict();
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ "./src/converse-autocomplete.js":
/*!**************************************!*\
  !*** ./src/converse-autocomplete.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
// This plugin started as a fork of Lea Verou's Awesomplete
// https://leaverou.github.io/awesomplete/
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  var _converse$env = converse.env,
      _ = _converse$env._,
      Backbone = _converse$env.Backbone,
      u = converse.env.utils;
  converse.plugins.add("converse-autocomplete", {
    initialize: function initialize() {
      var _converse = this._converse;

      _converse.FILTER_CONTAINS = function (text, input) {
        return RegExp(helpers.regExpEscape(input.trim()), "i").test(text);
      };

      _converse.FILTER_STARTSWITH = function (text, input) {
        return RegExp("^" + helpers.regExpEscape(input.trim()), "i").test(text);
      };

      var SORT_BYLENGTH = function SORT_BYLENGTH(a, b) {
        if (a.length !== b.length) {
          return a.length - b.length;
        }

        return a < b ? -1 : 1;
      };

      var ITEM = function ITEM(text, input) {
        input = input.trim();
        var element = document.createElement("li");
        element.setAttribute("aria-selected", "false");
        var regex = new RegExp("(" + input + ")", "ig");
        var parts = input ? text.split(regex) : [text];
        parts.forEach(function (txt) {
          if (input && txt.match(regex)) {
            var match = document.createElement("mark");
            match.textContent = txt;
            element.appendChild(match);
          } else {
            element.appendChild(document.createTextNode(txt));
          }
        });
        return element;
      };

      var AutoComplete =
      /*#__PURE__*/
      function () {
        function AutoComplete(el) {
          var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          _classCallCheck(this, AutoComplete);

          this.is_opened = false;

          if (u.hasClass('.suggestion-box', el)) {
            this.container = el;
          } else {
            this.container = el.querySelector('.suggestion-box');
          }

          this.input = this.container.querySelector('.suggestion-box__input');
          this.input.setAttribute("autocomplete", "off");
          this.input.setAttribute("aria-autocomplete", "list");
          this.ul = this.container.querySelector('.suggestion-box__results');
          this.status = this.container.querySelector('.suggestion-box__additions');

          _.assignIn(this, {
            'match_current_word': false,
            // Match only the current word, otherwise all input is matched
            'match_on_tab': false,
            // Whether matching should only start when tab's pressed
            'trigger_on_at': false,
            // Whether @ should trigger autocomplete
            'min_chars': 2,
            'max_items': 10,
            'auto_evaluate': true,
            'auto_first': false,
            'data': _.identity,
            'filter': _converse.FILTER_CONTAINS,
            'sort': config.sort === false ? false : SORT_BYLENGTH,
            'item': ITEM
          }, config);

          this.index = -1;
          this.bindEvents();

          if (this.input.hasAttribute("list")) {
            this.list = "#" + this.input.getAttribute("list");
            this.input.removeAttribute("list");
          } else {
            this.list = this.input.getAttribute("data-list") || config.list || [];
          }
        }

        _createClass(AutoComplete, [{
          key: "bindEvents",
          value: function bindEvents() {
            var _this = this;

            // Bind events
            var input = {
              "blur": function blur() {
                return _this.close({
                  'reason': 'blur'
                });
              }
            };

            if (this.auto_evaluate) {
              input["input"] = function () {
                return _this.evaluate();
              };
            }

            this._events = {
              'input': input,
              'form': {
                "submit": function submit() {
                  return _this.close({
                    'reason': 'submit'
                  });
                }
              },
              'ul': {
                "mousedown": function mousedown(ev) {
                  return _this.onMouseDown(ev);
                },
                "mouseover": function mouseover(ev) {
                  return _this.onMouseOver(ev);
                }
              }
            };
            helpers.bind(this.input, this._events.input);
            helpers.bind(this.input.form, this._events.form);
            helpers.bind(this.ul, this._events.ul);
          }
        }, {
          key: "close",
          value: function close(o) {
            if (!this.opened) {
              return;
            }

            this.ul.setAttribute("hidden", "");
            this.is_opened = false;
            this.index = -1;
            this.trigger("suggestion-box-close", o || {});
          }
        }, {
          key: "insertValue",
          value: function insertValue(suggestion) {
            var value;

            if (this.match_current_word) {
              u.replaceCurrentWord(this.input, suggestion.value);
            } else {
              this.input.value = suggestion.value;
            }
          }
        }, {
          key: "open",
          value: function open() {
            this.ul.removeAttribute("hidden");
            this.is_opened = true;

            if (this.auto_first && this.index === -1) {
              this.goto(0);
            }

            this.trigger("suggestion-box-open");
          }
        }, {
          key: "destroy",
          value: function destroy() {
            //remove events from the input and its form
            helpers.unbind(this.input, this._events.input);
            helpers.unbind(this.input.form, this._events.form); //move the input out of the suggestion-box container and remove the container and its children

            var parentNode = this.container.parentNode;
            parentNode.insertBefore(this.input, this.container);
            parentNode.removeChild(this.container); //remove autocomplete and aria-autocomplete attributes

            this.input.removeAttribute("autocomplete");
            this.input.removeAttribute("aria-autocomplete");
          }
        }, {
          key: "next",
          value: function next() {
            var count = this.ul.children.length;
            this.goto(this.index < count - 1 ? this.index + 1 : count ? 0 : -1);
          }
        }, {
          key: "previous",
          value: function previous() {
            var count = this.ul.children.length,
                pos = this.index - 1;
            this.goto(this.selected && pos !== -1 ? pos : count - 1);
          }
        }, {
          key: "goto",
          value: function goto(i) {
            // Should not be used directly, highlights specific item without any checks!
            var list = this.ul.children;

            if (this.selected) {
              list[this.index].setAttribute("aria-selected", "false");
            }

            this.index = i;

            if (i > -1 && list.length > 0) {
              list[i].setAttribute("aria-selected", "true");
              list[i].focus();
              this.status.textContent = list[i].textContent; // scroll to highlighted element in case parent's height is fixed

              this.ul.scrollTop = list[i].offsetTop - this.ul.clientHeight + list[i].clientHeight;
              this.trigger("suggestion-box-highlight", {
                'text': this.suggestions[this.index]
              });
            }
          }
        }, {
          key: "select",
          value: function select(selected, origin) {
            if (selected) {
              this.index = u.siblingIndex(selected);
            } else {
              selected = this.ul.children[this.index];
            }

            if (selected) {
              var suggestion = this.suggestions[this.index];
              this.insertValue(suggestion);
              this.close({
                'reason': 'select'
              });
              this.auto_completing = false;
              this.trigger("suggestion-box-selectcomplete", {
                'text': suggestion
              });
            }
          }
        }, {
          key: "onMouseOver",
          value: function onMouseOver(ev) {
            var li = u.ancestor(ev.target, 'li');

            if (li) {
              this.goto(Array.prototype.slice.call(this.ul.children).indexOf(li));
            }
          }
        }, {
          key: "onMouseDown",
          value: function onMouseDown(ev) {
            if (ev.button !== 0) {
              return; // Only select on left click
            }

            var li = u.ancestor(ev.target, 'li');

            if (li) {
              ev.preventDefault();
              this.select(li, ev.target);
            }
          }
        }, {
          key: "keyPressed",
          value: function keyPressed(ev) {
            if (this.opened) {
              if (_.includes([_converse.keycodes.ENTER, _converse.keycodes.TAB], ev.keyCode) && this.selected) {
                ev.preventDefault();
                ev.stopPropagation();
                this.select();
                return true;
              } else if (ev.keyCode === _converse.keycodes.ESCAPE) {
                this.close({
                  'reason': 'esc'
                });
                return true;
              } else if (_.includes([_converse.keycodes.UP_ARROW, _converse.keycodes.DOWN_ARROW], ev.keyCode)) {
                ev.preventDefault();
                ev.stopPropagation();
                this[ev.keyCode === _converse.keycodes.UP_ARROW ? "previous" : "next"]();
                return true;
              }
            }

            if (_.includes([_converse.keycodes.SHIFT, _converse.keycodes.META, _converse.keycodes.META_RIGHT, _converse.keycodes.ESCAPE, _converse.keycodes.ALT], ev.keyCode)) {
              return;
            }

            if (this.match_on_tab && ev.keyCode === _converse.keycodes.TAB) {
              ev.preventDefault();
              this.auto_completing = true;
            } else if (this.trigger_on_at && ev.keyCode === _converse.keycodes.AT) {
              this.auto_completing = true;
            }
          }
        }, {
          key: "evaluate",
          value: function evaluate(ev) {
            var _this2 = this;

            var arrow_pressed = ev.keyCode === _converse.keycodes.UP_ARROW || ev.keyCode === _converse.keycodes.DOWN_ARROW;

            if (!this.auto_completing || this.selected && arrow_pressed) {
              return;
            }

            var list = typeof this._list === "function" ? this._list() : this._list;

            if (list.length === 0) {
              return;
            }

            var value = this.match_current_word ? u.getCurrentWord(this.input) : this.input.value;
            var ignore_min_chars = false;

            if (this.trigger_on_at && value.startsWith('@')) {
              ignore_min_chars = true;
              value = value.slice('1');
            }

            if (value.length >= this.min_chars || ignore_min_chars) {
              this.index = -1; // Populate list with options that match

              this.ul.innerHTML = "";
              this.suggestions = list.map(function (item) {
                return new Suggestion(_this2.data(item, value));
              }).filter(function (item) {
                return _this2.filter(item, value);
              });

              if (this.sort !== false) {
                this.suggestions = this.suggestions.sort(this.sort);
              }

              this.suggestions = this.suggestions.slice(0, this.max_items);
              this.suggestions.forEach(function (text) {
                return _this2.ul.appendChild(_this2.item(text, value));
              });

              if (this.ul.children.length === 0) {
                this.close({
                  'reason': 'nomatches'
                });
              } else {
                this.open();
              }
            } else {
              this.close({
                'reason': 'nomatches'
              });
              this.auto_completing = false;
            }
          }
        }, {
          key: "list",
          set: function set(list) {
            if (Array.isArray(list) || typeof list === "function") {
              this._list = list;
            } else if (typeof list === "string" && _.includes(list, ",")) {
              this._list = list.split(/\s*,\s*/);
            } else {
              // Element or CSS selector
              list = helpers.getElement(list);

              if (list && list.children) {
                var items = [];
                slice.apply(list.children).forEach(function (el) {
                  if (!el.disabled) {
                    var text = el.textContent.trim(),
                        value = el.value || text,
                        label = el.label || text;

                    if (value !== "") {
                      items.push({
                        label: label,
                        value: value
                      });
                    }
                  }
                });
                this._list = items;
              }
            }

            if (document.activeElement === this.input) {
              this.evaluate();
            }
          }
        }, {
          key: "selected",
          get: function get() {
            return this.index > -1;
          }
        }, {
          key: "opened",
          get: function get() {
            return this.is_opened;
          }
        }]);

        return AutoComplete;
      }(); // Make it an event emitter


      _.extend(AutoComplete.prototype, Backbone.Events); // Private functions


      function Suggestion(data) {
        var o = Array.isArray(data) ? {
          label: data[0],
          value: data[1]
        } : _typeof(data) === "object" && "label" in data && "value" in data ? data : {
          label: data,
          value: data
        };
        this.label = o.label || o.value;
        this.value = o.value;
      }

      Object.defineProperty(Suggestion.prototype = Object.create(String.prototype), "length", {
        get: function get() {
          return this.label.length;
        }
      });

      Suggestion.prototype.toString = Suggestion.prototype.valueOf = function () {
        return "" + this.label;
      }; // Helpers


      var slice = Array.prototype.slice;
      var helpers = {
        getElement: function getElement(expr, el) {
          return typeof expr === "string" ? (el || document).querySelector(expr) : expr || null;
        },
        bind: function bind(element, o) {
          if (element) {
            var _loop = function _loop() {
              if (!Object.prototype.hasOwnProperty.call(o, event)) {
                return "continue";
              }

              var callback = o[event];
              event.split(/\s+/).forEach(function (event) {
                return element.addEventListener(event, callback);
              });
            };

            for (var event in o) {
              var _ret = _loop();

              if (_ret === "continue") continue;
            }
          }
        },
        unbind: function unbind(element, o) {
          if (element) {
            var _loop2 = function _loop2() {
              if (!Object.prototype.hasOwnProperty.call(o, event)) {
                return "continue";
              }

              var callback = o[event];
              event.split(/\s+/).forEach(function (event) {
                return element.removeEventListener(event, callback);
              });
            };

            for (var event in o) {
              var _ret2 = _loop2();

              if (_ret2 === "continue") continue;
            }
          }
        },
        regExpEscape: function regExpEscape(s) {
          return s.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&");
        }
      };
      _converse.AutoComplete = AutoComplete;
    }
  });
});

/***/ }),

/***/ "./src/converse-bookmarks.js":
/*!***********************************!*\
  !*** ./src/converse-bookmarks.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */

/* This is a Converse.js plugin which add support for bookmarks specified
 * in XEP-0048.
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-muc */ "./src/converse-muc.js"), __webpack_require__(/*! templates/chatroom_bookmark_form.html */ "./src/templates/chatroom_bookmark_form.html"), __webpack_require__(/*! templates/chatroom_bookmark_toggle.html */ "./src/templates/chatroom_bookmark_toggle.html"), __webpack_require__(/*! templates/bookmark.html */ "./src/templates/bookmark.html"), __webpack_require__(/*! templates/bookmarks_list.html */ "./src/templates/bookmarks_list.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, muc, tpl_chatroom_bookmark_form, tpl_chatroom_bookmark_toggle, tpl_bookmark, tpl_bookmarks_list) {
  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      b64_sha1 = _converse$env.b64_sha1,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._;
  var u = converse.env.utils;
  converse.plugins.add('converse-bookmarks', {
    /* Plugin dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin.
     *
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found. By default it's
     * false, which means these plugins are only loaded opportunistically.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatboxes", "converse-muc", "converse-muc-views"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      ChatRoomView: {
        events: {
          'click .toggle-bookmark': 'toggleBookmark'
        },
        initialize: function initialize() {
          this.__super__.initialize.apply(this, arguments);

          this.model.on('change:bookmarked', this.onBookmarked, this);
          this.setBookmarkState();
        },
        renderBookmarkToggle: function renderBookmarkToggle() {
          if (this.el.querySelector('.chat-head .toggle-bookmark')) {
            return;
          }

          var _converse = this.__super__._converse,
              __ = _converse.__;
          var bookmark_button = tpl_chatroom_bookmark_toggle(_.assignIn(this.model.toJSON(), {
            info_toggle_bookmark: __('Bookmark this groupchat'),
            bookmarked: this.model.get('bookmarked')
          }));
          var close_button = this.el.querySelector('.close-chatbox-button');
          close_button.insertAdjacentHTML('afterend', bookmark_button);
        },
        renderHeading: function renderHeading() {
          var _this = this;

          this.__super__.renderHeading.apply(this, arguments);

          var _converse = this.__super__._converse;

          if (_converse.allow_bookmarks) {
            _converse.checkBookmarksSupport().then(function (supported) {
              if (supported) {
                _this.renderBookmarkToggle();
              }
            }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
          }
        },
        checkForReservedNick: function checkForReservedNick() {
          /* Check if the user has a bookmark with a saved nickanme
           * for this groupchat, and if so use it.
           * Otherwise delegate to the super method.
           */
          var _converse = this.__super__._converse;

          if (_.isUndefined(_converse.bookmarks) || !_converse.allow_bookmarks) {
            return this.__super__.checkForReservedNick.apply(this, arguments);
          }

          var model = _converse.bookmarks.findWhere({
            'jid': this.model.get('jid')
          });

          if (!_.isUndefined(model) && model.get('nick')) {
            this.join(model.get('nick'));
          } else {
            return this.__super__.checkForReservedNick.apply(this, arguments);
          }
        },
        onBookmarked: function onBookmarked() {
          var icon = this.el.querySelector('.toggle-bookmark');

          if (_.isNull(icon)) {
            return;
          }

          if (this.model.get('bookmarked')) {
            icon.classList.add('button-on');
          } else {
            icon.classList.remove('button-on');
          }
        },
        setBookmarkState: function setBookmarkState() {
          /* Set whether the groupchat is bookmarked or not.
           */
          var _converse = this.__super__._converse;

          if (!_.isUndefined(_converse.bookmarks)) {
            var models = _converse.bookmarks.where({
              'jid': this.model.get('jid')
            });

            if (!models.length) {
              this.model.save('bookmarked', false);
            } else {
              this.model.save('bookmarked', true);
            }
          }
        },
        renderBookmarkForm: function renderBookmarkForm() {
          var _converse = this.__super__._converse,
              __ = _converse.__,
              body = this.el.querySelector('.chatroom-body');

          _.each(body.children, function (child) {
            child.classList.add('hidden');
          }); // Remove any existing forms


          _.each(body.querySelectorAll('.chatroom-form-container'), u.removeElement);

          body.insertAdjacentHTML('beforeend', tpl_chatroom_bookmark_form({
            heading: __('Bookmark this groupchat'),
            label_name: __('The name for this bookmark:'),
            label_autojoin: __('Would you like this groupchat to be automatically joined upon startup?'),
            label_nick: __('What should your nickname for this groupchat be?'),
            default_nick: this.model.get('nick'),
            label_submit: __('Save'),
            label_cancel: __('Cancel')
          }));
          var form = body.querySelector('form.chatroom-form');
          form.addEventListener('submit', this.onBookmarkFormSubmitted.bind(this));
          form.querySelector('.button-cancel').addEventListener('click', this.closeForm.bind(this));
        },
        onBookmarkFormSubmitted: function onBookmarkFormSubmitted(ev) {
          ev.preventDefault();
          var _converse = this.__super__._converse;

          _converse.bookmarks.createBookmark({
            'jid': this.model.get('jid'),
            'autojoin': _.get(ev.target.querySelector('input[name="autojoin"]'), 'checked') || false,
            'name': _.get(ev.target.querySelector('input[name=name]'), 'value'),
            'nick': _.get(ev.target.querySelector('input[name=nick]'), 'value')
          });

          u.removeElement(this.el.querySelector('div.chatroom-form-container'));
          this.renderAfterTransition();
        },
        toggleBookmark: function toggleBookmark(ev) {
          if (ev) {
            ev.preventDefault();
            ev.stopPropagation();
          }

          var _converse = this.__super__._converse;

          var models = _converse.bookmarks.where({
            'jid': this.model.get('jid')
          });

          if (!models.length) {
            this.renderBookmarkForm();
          } else {
            _.forEach(models, function (model) {
              model.destroy();
            });

            this.el.querySelector('.toggle-bookmark').classList.remove('button-on');
          }
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__; // Configuration values for this plugin
      // ====================================
      // Refer to docs/source/configuration.rst for explanations of these
      // configuration settings.

      _converse.api.settings.update({
        allow_bookmarks: true,
        allow_public_bookmarks: false,
        hide_open_bookmarks: true
      }); // Promises exposed by this plugin


      _converse.api.promises.add('bookmarksInitialized'); // Pure functions on the _converse object


      _.extend(_converse, {
        removeBookmarkViaEvent: function removeBookmarkViaEvent(ev) {
          /* Remove a bookmark as determined by the passed in
           * event.
           */
          ev.preventDefault();
          var name = ev.target.getAttribute('data-bookmark-name');
          var jid = ev.target.getAttribute('data-room-jid');

          if (confirm(__("Are you sure you want to remove the bookmark \"%1$s\"?", name))) {
            _.invokeMap(_converse.bookmarks.where({
              'jid': jid
            }), Backbone.Model.prototype.destroy);
          }
        },
        addBookmarkViaEvent: function addBookmarkViaEvent(ev) {
          /* Add a bookmark as determined by the passed in
           * event.
           */
          ev.preventDefault();
          var jid = ev.target.getAttribute('data-room-jid');

          var chatroom = _converse.api.rooms.open(jid, {
            'bring_to_foreground': true
          });

          _converse.chatboxviews.get(jid).renderBookmarkForm();
        }
      });

      _converse.Bookmark = Backbone.Model;
      _converse.Bookmarks = Backbone.Collection.extend({
        model: _converse.Bookmark,
        comparator: function comparator(item) {
          return item.get('name').toLowerCase();
        },
        initialize: function initialize() {
          this.on('add', _.flow(this.openBookmarkedRoom, this.markRoomAsBookmarked));
          this.on('remove', this.markRoomAsUnbookmarked, this);
          this.on('remove', this.sendBookmarkStanza, this);

          var storage = _converse.config.get('storage'),
              cache_key = "converse.room-bookmarks".concat(_converse.bare_jid);

          this.fetched_flag = b64_sha1(cache_key + 'fetched');
          this.browserStorage = new Backbone.BrowserStorage[storage](b64_sha1(cache_key));
        },
        openBookmarkedRoom: function openBookmarkedRoom(bookmark) {
          if (bookmark.get('autojoin')) {
            var groupchat = _converse.api.rooms.create(bookmark.get('jid'), bookmark.get('nick'));

            if (!groupchat.get('hidden')) {
              groupchat.trigger('show');
            }
          }

          return bookmark;
        },
        fetchBookmarks: function fetchBookmarks() {
          var deferred = u.getResolveablePromise();

          if (this.browserStorage.records.length > 0) {
            this.fetch({
              'success': _.bind(this.onCachedBookmarksFetched, this, deferred),
              'error': _.bind(this.onCachedBookmarksFetched, this, deferred)
            });
          } else if (!window.sessionStorage.getItem(this.fetched_flag)) {
            // There aren't any cached bookmarks and the
            // `fetched_flag` is off, so we query the XMPP server.
            // If nothing is returned from the XMPP server, we set
            // the `fetched_flag` to avoid calling the server again.
            this.fetchBookmarksFromServer(deferred);
          } else {
            deferred.resolve();
          }

          return deferred;
        },
        onCachedBookmarksFetched: function onCachedBookmarksFetched(deferred) {
          return deferred.resolve();
        },
        createBookmark: function createBookmark(options) {
          var _this2 = this;

          this.create(options);
          this.sendBookmarkStanza().catch(function (iq) {
            return _this2.onBookmarkError(iq, options);
          });
        },
        sendBookmarkStanza: function sendBookmarkStanza() {
          var stanza = $iq({
            'type': 'set',
            'from': _converse.connection.jid
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('publish', {
            'node': 'storage:bookmarks'
          }).c('item', {
            'id': 'current'
          }).c('storage', {
            'xmlns': 'storage:bookmarks'
          });
          this.each(function (model) {
            stanza.c('conference', {
              'name': model.get('name'),
              'autojoin': model.get('autojoin'),
              'jid': model.get('jid')
            }).c('nick').t(model.get('nick')).up().up();
          });
          stanza.up().up().up();
          stanza.c('publish-options').c('x', {
            'xmlns': Strophe.NS.XFORM,
            'type': 'submit'
          }).c('field', {
            'var': 'FORM_TYPE',
            'type': 'hidden'
          }).c('value').t('http://jabber.org/protocol/pubsub#publish-options').up().up().c('field', {
            'var': 'pubsub#persist_items'
          }).c('value').t('true').up().up().c('field', {
            'var': 'pubsub#access_model'
          }).c('value').t('whitelist');
          return _converse.api.sendIQ(stanza);
        },
        onBookmarkError: function onBookmarkError(iq, options) {
          _converse.log("Error while trying to add bookmark", Strophe.LogLevel.ERROR);

          _converse.log(iq);

          _converse.api.alert.show(Strophe.LogLevel.ERROR, __('Error'), [__("Sorry, something went wrong while trying to save your bookmark.")]);

          this.findWhere({
            'jid': options.jid
          }).destroy();
        },
        fetchBookmarksFromServer: function fetchBookmarksFromServer(deferred) {
          var _this3 = this;

          var stanza = $iq({
            'from': _converse.connection.jid,
            'type': 'get'
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('items', {
            'node': 'storage:bookmarks'
          });

          _converse.api.sendIQ(stanza).then(function (iq) {
            return _this3.onBookmarksReceived(deferred, iq);
          }).catch(function (iq) {
            return _this3.onBookmarksReceivedError(deferred, iq);
          });
        },
        markRoomAsBookmarked: function markRoomAsBookmarked(bookmark) {
          var groupchat = _converse.chatboxes.get(bookmark.get('jid'));

          if (!_.isUndefined(groupchat)) {
            groupchat.save('bookmarked', true);
          }
        },
        markRoomAsUnbookmarked: function markRoomAsUnbookmarked(bookmark) {
          var groupchat = _converse.chatboxes.get(bookmark.get('jid'));

          if (!_.isUndefined(groupchat)) {
            groupchat.save('bookmarked', false);
          }
        },
        createBookmarksFromStanza: function createBookmarksFromStanza(stanza) {
          var _this4 = this;

          var bookmarks = sizzle('items[node="storage:bookmarks"] ' + 'item#current ' + 'storage[xmlns="storage:bookmarks"] ' + 'conference', stanza);

          _.forEach(bookmarks, function (bookmark) {
            var jid = bookmark.getAttribute('jid');

            _this4.create({
              'jid': jid,
              'name': bookmark.getAttribute('name') || jid,
              'autojoin': bookmark.getAttribute('autojoin') === 'true',
              'nick': _.get(bookmark.querySelector('nick'), 'textContent')
            });
          });
        },
        onBookmarksReceived: function onBookmarksReceived(deferred, iq) {
          this.createBookmarksFromStanza(iq);

          if (!_.isUndefined(deferred)) {
            return deferred.resolve();
          }
        },
        onBookmarksReceivedError: function onBookmarksReceivedError(deferred, iq) {
          window.sessionStorage.setItem(this.fetched_flag, true);

          _converse.log('Error while fetching bookmarks', Strophe.LogLevel.WARN);

          _converse.log(iq.outerHTML, Strophe.LogLevel.DEBUG);

          if (!_.isNil(deferred)) {
            if (iq.querySelector('error[type="cancel"] item-not-found')) {
              // Not an exception, the user simply doesn't have
              // any bookmarks.
              return deferred.resolve();
            } else {
              return deferred.reject(new Error("Could not fetch bookmarks"));
            }
          }
        }
      });
      _converse.BookmarksList = Backbone.Model.extend({
        defaults: {
          "toggle-state": _converse.OPENED
        }
      });
      _converse.BookmarkView = Backbone.VDOMView.extend({
        toHTML: function toHTML() {
          return tpl_bookmark({
            'hidden': _converse.hide_open_bookmarks && _converse.chatboxes.where({
              'jid': this.model.get('jid')
            }).length,
            'bookmarked': true,
            'info_leave_room': __('Leave this groupchat'),
            'info_remove': __('Remove this bookmark'),
            'info_remove_bookmark': __('Unbookmark this groupchat'),
            'info_title': __('Show more information on this groupchat'),
            'jid': this.model.get('jid'),
            'name': Strophe.xmlunescape(this.model.get('name')),
            'open_title': __('Click to open this groupchat')
          });
        }
      });
      _converse.BookmarksView = Backbone.OrderedListView.extend({
        tagName: 'div',
        className: 'bookmarks-list list-container rooms-list-container',
        events: {
          'click .add-bookmark': 'addBookmark',
          'click .bookmarks-toggle': 'toggleBookmarksList',
          'click .remove-bookmark': 'removeBookmark',
          'click .open-room': 'openRoom'
        },
        listSelector: '.rooms-list',
        ItemView: _converse.BookmarkView,
        subviewIndex: 'jid',
        initialize: function initialize() {
          Backbone.OrderedListView.prototype.initialize.apply(this, arguments);
          this.model.on('add', this.showOrHide, this);
          this.model.on('remove', this.showOrHide, this);

          _converse.chatboxes.on('add', this.renderBookmarkListElement, this);

          _converse.chatboxes.on('remove', this.renderBookmarkListElement, this);

          var storage = _converse.config.get('storage'),
              id = b64_sha1("converse.room-bookmarks".concat(_converse.bare_jid, "-list-model"));

          this.list_model = new _converse.BookmarksList({
            'id': id
          });
          this.list_model.browserStorage = new Backbone.BrowserStorage[storage](id);
          this.list_model.fetch();
          this.render();
          this.sortAndPositionAllItems();
        },
        render: function render() {
          this.el.innerHTML = tpl_bookmarks_list({
            'toggle_state': this.list_model.get('toggle-state'),
            'desc_bookmarks': __('Click to toggle the bookmarks list'),
            'label_bookmarks': __('Bookmarks'),
            '_converse': _converse
          });
          this.showOrHide();
          this.insertIntoControlBox();
          return this;
        },
        insertIntoControlBox: function insertIntoControlBox() {
          var controlboxview = _converse.chatboxviews.get('controlbox');

          if (!_.isUndefined(controlboxview) && !u.rootContains(_converse.root, this.el)) {
            var el = controlboxview.el.querySelector('.bookmarks-list');

            if (!_.isNull(el)) {
              el.parentNode.replaceChild(this.el, el);
            }
          }
        },
        openRoom: function openRoom(ev) {
          ev.preventDefault();
          var name = ev.target.textContent;
          var jid = ev.target.getAttribute('data-room-jid');
          var data = {
            'name': name || Strophe.unescapeNode(Strophe.getNodeFromJid(jid)) || jid
          };

          _converse.api.rooms.open(jid, data);
        },
        removeBookmark: _converse.removeBookmarkViaEvent,
        addBookmark: _converse.addBookmarkViaEvent,
        renderBookmarkListElement: function renderBookmarkListElement(chatbox) {
          var bookmarkview = this.get(chatbox.get('jid'));

          if (_.isNil(bookmarkview)) {
            // A chat box has been closed, but we don't have a
            // bookmark for it, so nothing further to do here.
            return;
          }

          bookmarkview.render();
          this.showOrHide();
        },
        showOrHide: function showOrHide(item) {
          if (_converse.hide_open_bookmarks) {
            var bookmarks = this.model.filter(function (bookmark) {
              return !_converse.chatboxes.get(bookmark.get('jid'));
            });

            if (!bookmarks.length) {
              u.hideElement(this.el);
              return;
            }
          }

          if (this.model.models.length) {
            u.showElement(this.el);
          }
        },
        toggleBookmarksList: function toggleBookmarksList(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var icon_el = ev.target.querySelector('.fa');

          if (u.hasClass('fa-caret-down', icon_el)) {
            u.slideIn(this.el.querySelector('.bookmarks'));
            this.list_model.save({
              'toggle-state': _converse.CLOSED
            });
            icon_el.classList.remove("fa-caret-down");
            icon_el.classList.add("fa-caret-right");
          } else {
            icon_el.classList.remove("fa-caret-right");
            icon_el.classList.add("fa-caret-down");
            u.slideOut(this.el.querySelector('.bookmarks'));
            this.list_model.save({
              'toggle-state': _converse.OPENED
            });
          }
        }
      });

      _converse.checkBookmarksSupport = function () {
        return new Promise(function (resolve, reject) {
          Promise.all([_converse.api.disco.getIdentity('pubsub', 'pep', _converse.bare_jid), _converse.api.disco.supports(Strophe.NS.PUBSUB + '#publish-options', _converse.bare_jid)]).then(function (args) {
            resolve(args[0] && (args[1].length || _converse.allow_public_bookmarks));
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
      };

      var initBookmarks = function initBookmarks() {
        if (!_converse.allow_bookmarks) {
          return;
        }

        _converse.checkBookmarksSupport().then(function (supported) {
          if (supported) {
            _converse.bookmarks = new _converse.Bookmarks();
            _converse.bookmarksview = new _converse.BookmarksView({
              'model': _converse.bookmarks
            });

            _converse.bookmarks.fetchBookmarks().catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL)).then(function () {
              return _converse.emit('bookmarksInitialized');
            });
          } else {
            _converse.emit('bookmarksInitialized');
          }
        });
      };

      u.onMultipleEvents([{
        'object': _converse,
        'event': 'chatBoxesFetched'
      }, {
        'object': _converse,
        'event': 'roomsPanelRendered'
      }], initBookmarks);

      _converse.on('clearSession', function () {
        if (!_.isUndefined(_converse.bookmarks)) {
          _converse.bookmarks.browserStorage._clear();

          window.sessionStorage.removeItem(_converse.bookmarks.fetched_flag);
        }
      });

      _converse.on('reconnected', initBookmarks);

      _converse.on('connected', function () {
        // Add a handler for bookmarks pushed from other connected clients
        // (from the same user obviously)
        _converse.connection.addHandler(function (message) {
          if (sizzle('event[xmlns="' + Strophe.NS.PUBSUB + '#event"] items[node="storage:bookmarks"]', message).length) {
            _converse.api.waitUntil('bookmarksInitialized').then(function () {
              return _converse.bookmarks.createBookmarksFromStanza(message);
            }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
          }
        }, null, 'message', 'headline', null, _converse.bare_jid);
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-caps.js":
/*!******************************!*\
  !*** ./src/converse-caps.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      $build = _converse$env.$build,
      _ = _converse$env._,
      b64_sha1 = _converse$env.b64_sha1;
  Strophe.addNamespace('CAPS', "http://jabber.org/protocol/caps");

  function propertySort(array, property) {
    return array.sort(function (a, b) {
      return a[property] > b[property] ? -1 : 1;
    });
  }

  function generateVerificationString(_converse) {
    var identities = _converse.api.disco.own.identities.get(),
        features = _converse.api.disco.own.features.get();

    if (identities.length > 1) {
      propertySort(identities, "category");
      propertySort(identities, "type");
      propertySort(identities, "lang");
    }

    var S = _.reduce(identities, function (result, id) {
      return "".concat(result).concat(id.category, "/").concat(id.type, "/").concat(_.get(id, 'lang', ''), "/").concat(id.name, "<");
    }, "");

    features.sort();
    S = _.reduce(features, function (result, feature) {
      return "".concat(result).concat(feature, "<");
    }, S);
    return b64_sha1(S);
  }

  function createCapsNode(_converse) {
    return $build("c", {
      'xmlns': Strophe.NS.CAPS,
      'hash': "sha-1",
      'node': "https://conversejs.org",
      'ver': generateVerificationString(_converse)
    }).nodeTree;
  }

  converse.plugins.add('converse-caps', {
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      XMPPStatus: {
        constructPresence: function constructPresence() {
          var presence = this.__super__.constructPresence.apply(this, arguments);

          presence.root().cnode(createCapsNode(this.__super__._converse));
          return presence;
        }
      }
    }
  });
});

/***/ }),

/***/ "./src/converse-chatboxes.js":
/*!***********************************!*\
  !*** ./src/converse-chatboxes.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! filesize */ "./node_modules/filesize/lib/filesize.js"), __webpack_require__(/*! utils/form */ "./src/utils/form.js"), __webpack_require__(/*! utils/emoji */ "./src/utils/emoji.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, filesize) {
  "use strict";

  var _converse$env = converse.env,
      $msg = _converse$env.$msg,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      b64_sha1 = _converse$env.b64_sha1,
      moment = _converse$env.moment,
      sizzle = _converse$env.sizzle,
      utils = _converse$env.utils,
      _ = _converse$env._;
  var u = converse.env.utils;
  Strophe.addNamespace('MESSAGE_CORRECT', 'urn:xmpp:message-correct:0');
  Strophe.addNamespace('REFERENCE', 'urn:xmpp:reference:0');
  converse.plugins.add('converse-chatboxes', {
    dependencies: ["converse-roster", "converse-vcard"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__; // Configuration values for this plugin
      // ====================================
      // Refer to docs/source/configuration.rst for explanations of these
      // configuration settings.

      _converse.api.settings.update({
        'filter_by_resource': false,
        'auto_join_private_chats': [],
        'forward_messages': false
      });

      _converse.api.promises.add(['chatBoxesFetched', 'chatBoxesInitialized', 'privateChatsAutoJoined']);

      function openChat(jid) {
        if (!utils.isValidJID(jid)) {
          return _converse.log("Invalid JID \"".concat(jid, "\" provided in URL fragment"), Strophe.LogLevel.WARN);
        }

        _converse.api.chats.open(jid);
      }

      _converse.router.route('converse/chat?jid=:jid', openChat);

      _converse.Message = Backbone.Model.extend({
        defaults: function defaults() {
          return {
            'msgid': _converse.connection.getUniqueId(),
            'time': moment().format()
          };
        },
        initialize: function initialize() {
          this.setVCard();

          if (this.get('file')) {
            this.on('change:put', this.uploadFile, this);

            if (!_.includes([_converse.SUCCESS, _converse.FAILURE], this.get('upload'))) {
              this.getRequestSlotURL();
            }
          }

          if (this.isOnlyChatStateNotification()) {
            window.setTimeout(this.destroy.bind(this), 20000);
          }
        },
        getVCardForChatroomOccupant: function getVCardForChatroomOccupant() {
          var chatbox = this.collection.chatbox,
              nick = Strophe.getResourceFromJid(this.get('from'));

          if (chatbox.get('nick') === nick) {
            return _converse.xmppstatus.vcard;
          } else {
            var vcard;

            if (this.get('vcard_jid')) {
              vcard = _converse.vcards.findWhere({
                'jid': this.get('vcard_jid')
              });
            }

            if (!vcard) {
              var jid;
              var occupant = chatbox.occupants.findWhere({
                'nick': nick
              });

              if (occupant && occupant.get('jid')) {
                jid = occupant.get('jid');
                this.save({
                  'vcard_jid': jid
                }, {
                  'silent': true
                });
              } else {
                jid = this.get('from');
              }

              vcard = _converse.vcards.findWhere({
                'jid': jid
              }) || _converse.vcards.create({
                'jid': jid
              });
            }

            return vcard;
          }
        },
        setVCard: function setVCard() {
          if (this.get('type') === 'groupchat') {
            this.vcard = this.getVCardForChatroomOccupant();
          } else {
            var jid = this.get('from');
            this.vcard = _converse.vcards.findWhere({
              'jid': jid
            }) || _converse.vcards.create({
              'jid': jid
            });
          }
        },
        isOnlyChatStateNotification: function isOnlyChatStateNotification() {
          return u.isOnlyChatStateNotification(this);
        },
        getDisplayName: function getDisplayName() {
          if (this.get('type') === 'groupchat') {
            return this.get('nick');
          } else {
            return this.vcard.get('fullname') || this.get('from');
          }
        },
        sendSlotRequestStanza: function sendSlotRequestStanza() {
          var _this = this;

          /* Send out an IQ stanza to request a file upload slot.
           *
           * https://xmpp.org/extensions/xep-0363.html#request
           */
          var file = this.get('file');
          return new Promise(function (resolve, reject) {
            var iq = converse.env.$iq({
              'from': _converse.jid,
              'to': _this.get('slot_request_url'),
              'type': 'get'
            }).c('request', {
              'xmlns': Strophe.NS.HTTPUPLOAD,
              'filename': file.name,
              'size': file.size,
              'content-type': file.type
            });

            _converse.connection.sendIQ(iq, resolve, reject);
          });
        },
        getRequestSlotURL: function getRequestSlotURL() {
          var _this2 = this;

          this.sendSlotRequestStanza().then(function (stanza) {
            var slot = stanza.querySelector('slot');

            if (slot) {
              _this2.save({
                'get': slot.querySelector('get').getAttribute('url'),
                'put': slot.querySelector('put').getAttribute('url')
              });
            } else {
              return _this2.save({
                'type': 'error',
                'message': __("Sorry, could not determine file upload URL.")
              });
            }
          }).catch(function (e) {
            _converse.log(e, Strophe.LogLevel.ERROR);

            return _this2.save({
              'type': 'error',
              'message': __("Sorry, could not determine upload URL.")
            });
          });
        },
        uploadFile: function uploadFile() {
          var _this3 = this;

          var xhr = new XMLHttpRequest();

          xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
              _converse.log("Status: " + xhr.status, Strophe.LogLevel.INFO);

              if (xhr.status === 200 || xhr.status === 201) {
                _this3.save({
                  'upload': _converse.SUCCESS,
                  'oob_url': _this3.get('get'),
                  'message': _this3.get('get')
                });
              } else {
                xhr.onerror();
              }
            }
          };

          xhr.upload.addEventListener("progress", function (evt) {
            if (evt.lengthComputable) {
              _this3.set('progress', evt.loaded / evt.total);
            }
          }, false);

          xhr.onerror = function () {
            var message;

            if (xhr.responseText) {
              message = __('Sorry, could not succesfully upload your file. Your server’s response: "%1$s"', xhr.responseText);
            } else {
              message = __('Sorry, could not succesfully upload your file.');
            }

            _this3.save({
              'type': 'error',
              'upload': _converse.FAILURE,
              'message': message
            });
          };

          xhr.open('PUT', this.get('put'), true);
          xhr.setRequestHeader("Content-type", this.get('file').type);
          xhr.send(this.get('file'));
        }
      });
      _converse.Messages = Backbone.Collection.extend({
        model: _converse.Message,
        comparator: 'time'
      });
      _converse.ChatBox = _converse.ModelWithVCardAndPresence.extend({
        defaults: function defaults() {
          return {
            'bookmarked': false,
            'chat_state': undefined,
            'num_unread': 0,
            'type': _converse.PRIVATE_CHAT_TYPE,
            'message_type': 'chat',
            'url': '',
            'hidden': _.includes(['mobile', 'fullscreen'], _converse.view_mode)
          };
        },
        initialize: function initialize() {
          var _this4 = this;

          _converse.ModelWithVCardAndPresence.prototype.initialize.apply(this, arguments);

          _converse.api.waitUntil('rosterContactsFetched').then(function () {
            _this4.addRelatedContact(_converse.roster.findWhere({
              'jid': _this4.get('jid')
            }));
          });

          this.messages = new _converse.Messages();

          var storage = _converse.config.get('storage');

          this.messages.browserStorage = new Backbone.BrowserStorage[storage](b64_sha1("converse.messages".concat(this.get('jid')).concat(_converse.bare_jid)));
          this.messages.chatbox = this;
          this.messages.on('change:upload', function (message) {
            if (message.get('upload') === _converse.SUCCESS) {
              _this4.sendMessageStanza(_this4.createMessageStanza(message));
            }
          });
          this.on('change:chat_state', this.sendChatState, this);
          this.save({
            // The chat_state will be set to ACTIVE once the chat box is opened
            // and we listen for change:chat_state, so shouldn't set it to ACTIVE here.
            'box_id': b64_sha1(this.get('jid')),
            'time_opened': this.get('time_opened') || moment().valueOf(),
            'user_id': Strophe.getNodeFromJid(this.get('jid'))
          });
        },
        addRelatedContact: function addRelatedContact(contact) {
          if (!_.isUndefined(contact)) {
            this.contact = contact;
            this.trigger('contactAdded', contact);
          }
        },
        getDisplayName: function getDisplayName() {
          return this.vcard.get('fullname') || this.get('jid');
        },
        handleMessageCorrection: function handleMessageCorrection(stanza) {
          var replace = sizzle("replace[xmlns=\"".concat(Strophe.NS.MESSAGE_CORRECT, "\"]"), stanza).pop();

          if (replace) {
            var msgid = replace && replace.getAttribute('id') || stanza.getAttribute('id'),
                message = msgid && this.messages.findWhere({
              msgid: msgid
            });

            if (!message) {
              // XXX: Looks like we received a correction for a
              // non-existing message, probably due to MAM.
              // Not clear what can be done about this... we'll
              // just create it as a separate message for now.
              return false;
            }

            var older_versions = message.get('older_versions') || [];
            older_versions.push(message.get('message'));
            message.save({
              'message': _converse.chatboxes.getMessageBody(stanza),
              'references': this.getReferencesFromStanza(stanza),
              'older_versions': older_versions,
              'edited': true
            });
            return true;
          }

          return false;
        },
        createMessageStanza: function createMessageStanza(message) {
          /* Given a _converse.Message Backbone.Model, return the XML
           * stanza that represents it.
           *
           *  Parameters:
           *    (Object) message - The Backbone.Model representing the message
           */
          var stanza = $msg({
            'from': _converse.connection.jid,
            'to': this.get('jid'),
            'type': this.get('message_type'),
            'id': message.get('edited') && _converse.connection.getUniqueId() || message.get('msgid')
          }).c('body').t(message.get('message')).up().c(_converse.ACTIVE, {
            'xmlns': Strophe.NS.CHATSTATES
          }).up();

          if (message.get('is_spoiler')) {
            if (message.get('spoiler_hint')) {
              stanza.c('spoiler', {
                'xmlns': Strophe.NS.SPOILER
              }, message.get('spoiler_hint')).up();
            } else {
              stanza.c('spoiler', {
                'xmlns': Strophe.NS.SPOILER
              }).up();
            }
          }

          (message.get('references') || []).forEach(function (reference) {
            var attrs = {
              'xmlns': Strophe.NS.REFERENCE,
              'begin': reference.begin,
              'end': reference.end,
              'type': reference.type
            };

            if (reference.uri) {
              attrs.uri = reference.uri;
            }

            stanza.c('reference', attrs).up();
          });

          if (message.get('file')) {
            stanza.c('x', {
              'xmlns': Strophe.NS.OUTOFBAND
            }).c('url').t(message.get('message')).up();
          }

          if (message.get('edited')) {
            stanza.c('replace', {
              'xmlns': Strophe.NS.MESSAGE_CORRECT,
              'id': message.get('msgid')
            }).up();
          }

          return stanza;
        },
        sendMessageStanza: function sendMessageStanza(stanza) {
          _converse.connection.send(stanza);

          if (_converse.forward_messages) {
            // Forward the message, so that other connected resources are also aware of it.
            _converse.connection.send($msg({
              'to': _converse.bare_jid,
              'type': this.get('message_type')
            }).c('forwarded', {
              'xmlns': Strophe.NS.FORWARD
            }).c('delay', {
              'xmns': Strophe.NS.DELAY,
              'stamp': moment().format()
            }).up().cnode(stanza.tree()));
          }
        },
        getOutgoingMessageAttributes: function getOutgoingMessageAttributes(text, spoiler_hint) {
          var is_spoiler = this.get('composing_spoiler');
          return _.extend(this.toJSON(), {
            'id': _converse.connection.getUniqueId(),
            'fullname': _converse.xmppstatus.get('fullname'),
            'from': _converse.bare_jid,
            'sender': 'me',
            'time': moment().format(),
            'message': text ? u.httpToGeoUri(u.shortnameToUnicode(text), _converse) : undefined,
            'is_spoiler': is_spoiler,
            'spoiler_hint': is_spoiler ? spoiler_hint : undefined,
            'type': this.get('message_type')
          });
        },
        sendMessage: function sendMessage(attrs) {
          /* Responsible for sending off a text message.
           *
           *  Parameters:
           *    (Message) message - The chat message
           */
          var message = this.messages.findWhere('correcting');

          if (message) {
            var older_versions = message.get('older_versions') || [];
            older_versions.push(message.get('message'));
            message.save({
              'correcting': false,
              'edited': true,
              'message': attrs.message,
              'older_versions': older_versions,
              'references': attrs.references
            });
          } else {
            message = this.messages.create(attrs);
          }

          return this.sendMessageStanza(this.createMessageStanza(message));
        },
        sendChatState: function sendChatState() {
          /* Sends a message with the status of the user in this chat session
           * as taken from the 'chat_state' attribute of the chat box.
           * See XEP-0085 Chat State Notifications.
           */
          _converse.connection.send($msg({
            'to': this.get('jid'),
            'type': 'chat'
          }).c(this.get('chat_state'), {
            'xmlns': Strophe.NS.CHATSTATES
          }).up().c('no-store', {
            'xmlns': Strophe.NS.HINTS
          }).up().c('no-permanent-store', {
            'xmlns': Strophe.NS.HINTS
          }));
        },
        sendFiles: function sendFiles(files) {
          var _this5 = this;

          _converse.api.disco.supports(Strophe.NS.HTTPUPLOAD, _converse.domain).then(function (result) {
            var item = result.pop(),
                data = item.dataforms.where({
              'FORM_TYPE': {
                'value': Strophe.NS.HTTPUPLOAD,
                'type': "hidden"
              }
            }).pop(),
                max_file_size = window.parseInt(_.get(data, 'attributes.max-file-size.value')),
                slot_request_url = _.get(item, 'id');

            if (!slot_request_url) {
              _this5.messages.create({
                'message': __("Sorry, looks like file upload is not supported by your server."),
                'type': 'error'
              });

              return;
            }

            _.each(files, function (file) {
              if (!window.isNaN(max_file_size) && window.parseInt(file.size) > max_file_size) {
                return _this5.messages.create({
                  'message': __('The size of your file, %1$s, exceeds the maximum allowed by your server, which is %2$s.', file.name, filesize(max_file_size)),
                  'type': 'error'
                });
              } else {
                _this5.messages.create(_.extend(_this5.getOutgoingMessageAttributes(), {
                  'file': file,
                  'progress': 0,
                  'slot_request_url': slot_request_url
                }));
              }
            });
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        getReferencesFromStanza: function getReferencesFromStanza(stanza) {
          var text = _.propertyOf(stanza.querySelector('body'))('textContent');

          return sizzle("reference[xmlns=\"".concat(Strophe.NS.REFERENCE, "\"]"), stanza).map(function (ref) {
            var begin = ref.getAttribute('begin'),
                end = ref.getAttribute('end');
            return {
              'begin': begin,
              'end': end,
              'type': ref.getAttribute('type'),
              'value': text.slice(begin, end),
              'uri': ref.getAttribute('uri')
            };
          });
        },
        getMessageAttributesFromStanza: function getMessageAttributesFromStanza(stanza, original_stanza) {
          /* Parses a passed in message stanza and returns an object
           * of attributes.
           *
           * Parameters:
           *    (XMLElement) stanza - The message stanza
           *    (XMLElement) delay - The <delay> node from the
           *      stanza, if there was one.
           *    (XMLElement) original_stanza - The original stanza,
           *      that contains the message stanza, if it was
           *      contained, otherwise it's the message stanza itself.
           */
          var archive = sizzle("result[xmlns=\"".concat(Strophe.NS.MAM, "\"]"), original_stanza).pop(),
              spoiler = sizzle("spoiler[xmlns=\"".concat(Strophe.NS.SPOILER, "\"]"), original_stanza).pop(),
              delay = sizzle("delay[xmlns=\"".concat(Strophe.NS.DELAY, "\"]"), original_stanza).pop(),
              chat_state = stanza.getElementsByTagName(_converse.COMPOSING).length && _converse.COMPOSING || stanza.getElementsByTagName(_converse.PAUSED).length && _converse.PAUSED || stanza.getElementsByTagName(_converse.INACTIVE).length && _converse.INACTIVE || stanza.getElementsByTagName(_converse.ACTIVE).length && _converse.ACTIVE || stanza.getElementsByTagName(_converse.GONE).length && _converse.GONE;

          var attrs = {
            'chat_state': chat_state,
            'is_archived': !_.isNil(archive),
            'is_delayed': !_.isNil(delay),
            'is_spoiler': !_.isNil(spoiler),
            'message': _converse.chatboxes.getMessageBody(stanza) || undefined,
            'references': this.getReferencesFromStanza(stanza),
            'msgid': stanza.getAttribute('id'),
            'time': delay ? delay.getAttribute('stamp') : moment().format(),
            'type': stanza.getAttribute('type')
          };

          if (attrs.type === 'groupchat') {
            attrs.from = stanza.getAttribute('from');
            attrs.nick = Strophe.unescapeNode(Strophe.getResourceFromJid(attrs.from));
            attrs.sender = attrs.nick === this.get('nick') ? 'me' : 'them';
          } else {
            attrs.from = Strophe.getBareJidFromJid(stanza.getAttribute('from'));

            if (attrs.from === _converse.bare_jid) {
              attrs.sender = 'me';
              attrs.fullname = _converse.xmppstatus.get('fullname');
            } else {
              attrs.sender = 'them';
              attrs.fullname = this.get('fullname');
            }
          }

          _.each(sizzle("x[xmlns=\"".concat(Strophe.NS.OUTOFBAND, "\"]"), stanza), function (xform) {
            attrs['oob_url'] = xform.querySelector('url').textContent;
            attrs['oob_desc'] = xform.querySelector('url').textContent;
          });

          if (spoiler) {
            attrs.spoiler_hint = spoiler.textContent.length > 0 ? spoiler.textContent : '';
          }

          return attrs;
        },
        createMessage: function createMessage(message, original_stanza) {
          /* Create a Backbone.Message object inside this chat box
           * based on the identified message stanza.
           */
          var that = this;

          function _create(attrs) {
            var is_csn = u.isOnlyChatStateNotification(attrs);

            if (is_csn && (attrs.is_delayed || attrs.type === 'groupchat' && Strophe.getResourceFromJid(attrs.from) == that.get('nick'))) {
              // XXX: MUC leakage
              // No need showing delayed or our own CSN messages
              return;
            } else if (!is_csn && !attrs.file && !attrs.message && !attrs.oob_url && attrs.type !== 'error') {
              // TODO: handle <subject> messages (currently being done by ChatRoom)
              return;
            } else {
              return that.messages.create(attrs);
            }
          }

          var result = this.getMessageAttributesFromStanza(message, original_stanza);

          if (typeof result.then === "function") {
            return new Promise(function (resolve, reject) {
              return result.then(function (attrs) {
                return resolve(_create(attrs));
              });
            });
          } else {
            var _message = _create(result);

            return Promise.resolve(_message);
          }
        },
        isHidden: function isHidden() {
          /* Returns a boolean to indicate whether a newly received
           * message will be visible to the user or not.
           */
          return this.get('hidden') || this.get('minimized') || this.isScrolledUp() || _converse.windowState === 'hidden';
        },
        incrementUnreadMsgCounter: function incrementUnreadMsgCounter(message) {
          /* Given a newly received message, update the unread counter if
           * necessary.
           */
          if (!message) {
            return;
          }

          if (_.isNil(message.get('message'))) {
            return;
          }

          if (utils.isNewMessage(message) && this.isHidden()) {
            this.save({
              'num_unread': this.get('num_unread') + 1
            });

            _converse.incrementMsgCounter();
          }
        },
        clearUnreadMsgCounter: function clearUnreadMsgCounter() {
          u.safeSave(this, {
            'num_unread': 0
          });
        },
        isScrolledUp: function isScrolledUp() {
          return this.get('scrolled', true);
        }
      });
      _converse.ChatBoxes = Backbone.Collection.extend({
        comparator: 'time_opened',
        model: function model(attrs, options) {
          return new _converse.ChatBox(attrs, options);
        },
        registerMessageHandler: function registerMessageHandler() {
          var _this6 = this;

          _converse.connection.addHandler(function (stanza) {
            _this6.onMessage(stanza);

            return true;
          }, null, 'message', 'chat');

          _converse.connection.addHandler(function (stanza) {
            _this6.onErrorMessage(stanza);

            return true;
          }, null, 'message', 'error');
        },
        chatBoxMayBeShown: function chatBoxMayBeShown(chatbox) {
          return true;
        },
        onChatBoxesFetched: function onChatBoxesFetched(collection) {
          var _this7 = this;

          /* Show chat boxes upon receiving them from sessionStorage */
          collection.each(function (chatbox) {
            if (_this7.chatBoxMayBeShown(chatbox)) {
              chatbox.trigger('show');
            }
          });

          _converse.emit('chatBoxesFetched');
        },
        onConnected: function onConnected() {
          this.browserStorage = new Backbone.BrowserStorage.session("converse.chatboxes-".concat(_converse.bare_jid));
          this.registerMessageHandler();
          this.fetch({
            'add': true,
            'success': this.onChatBoxesFetched.bind(this)
          });
        },
        onErrorMessage: function onErrorMessage(message) {
          /* Handler method for all incoming error message stanzas
          */
          var from_jid = Strophe.getBareJidFromJid(message.getAttribute('from'));

          if (utils.isSameBareJID(from_jid, _converse.bare_jid)) {
            return true;
          }

          var chatbox = this.getChatBox(from_jid);

          if (!chatbox) {
            return true;
          }

          chatbox.createMessage(message, message);
          return true;
        },
        getMessageBody: function getMessageBody(stanza) {
          /* Given a message stanza, return the text contained in its body.
           */
          var type = stanza.getAttribute('type');

          if (type === 'error') {
            var error = stanza.querySelector('error');
            return _.propertyOf(error.querySelector('text'))('textContent') || __('Sorry, an error occurred:') + ' ' + error.innerHTML;
          } else {
            return _.propertyOf(stanza.querySelector('body'))('textContent');
          }
        },
        onMessage: function onMessage(stanza) {
          /* Handler method for all incoming single-user chat "message"
           * stanzas.
           *
           * Parameters:
           *    (XMLElement) stanza - The incoming message stanza
           */
          var to_jid = stanza.getAttribute('to');
          var to_resource = Strophe.getResourceFromJid(to_jid);

          if (_converse.filter_by_resource && to_resource && to_resource !== _converse.resource) {
            _converse.log("onMessage: Ignoring incoming message intended for a different resource: ".concat(to_jid), Strophe.LogLevel.INFO);

            return true;
          } else if (utils.isHeadlineMessage(_converse, stanza)) {
            // XXX: Ideally we wouldn't have to check for headline
            // messages, but Prosody sends headline messages with the
            // wrong type ('chat'), so we need to filter them out here.
            _converse.log("onMessage: Ignoring incoming headline message sent with type 'chat' from JID: ".concat(stanza.getAttribute('from')), Strophe.LogLevel.INFO);

            return true;
          }

          var from_jid = stanza.getAttribute('from');
          var forwarded = stanza.querySelector('forwarded'),
              original_stanza = stanza;

          if (!_.isNull(forwarded)) {
            var forwarded_message = forwarded.querySelector('message'),
                forwarded_from = forwarded_message.getAttribute('from'),
                is_carbon = !_.isNull(stanza.querySelector("received[xmlns=\"".concat(Strophe.NS.CARBONS, "\"]")));

            if (is_carbon && Strophe.getBareJidFromJid(forwarded_from) !== from_jid) {
              // Prevent message forging via carbons
              // https://xmpp.org/extensions/xep-0280.html#security
              return true;
            }

            stanza = forwarded_message;
            from_jid = stanza.getAttribute('from');
            to_jid = stanza.getAttribute('to');
          }

          var from_bare_jid = Strophe.getBareJidFromJid(from_jid),
              from_resource = Strophe.getResourceFromJid(from_jid),
              is_me = from_bare_jid === _converse.bare_jid;
          var contact_jid;

          if (is_me) {
            // I am the sender, so this must be a forwarded message...
            if (_.isNull(to_jid)) {
              return _converse.log("Don't know how to handle message stanza without 'to' attribute. ".concat(stanza.outerHTML), Strophe.LogLevel.ERROR);
            }

            contact_jid = Strophe.getBareJidFromJid(to_jid);
          } else {
            contact_jid = from_bare_jid;
          } // Get chat box, but only create a new one when the message has a body.


          var attrs = {
            'fullname': _.get(_converse.api.contacts.get(contact_jid), 'attributes.fullname')
          };
          var chatbox = this.getChatBox(contact_jid, attrs, !_.isNull(stanza.querySelector('body')));

          if (chatbox && !chatbox.handleMessageCorrection(stanza)) {
            var msgid = stanza.getAttribute('id'),
                message = msgid && chatbox.messages.findWhere({
              msgid: msgid
            });

            if (!message) {
              // Only create the message when we're sure it's not a duplicate
              chatbox.createMessage(stanza, original_stanza).then(function (msg) {
                return chatbox.incrementUnreadMsgCounter(msg);
              }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
            }
          }

          _converse.emit('message', {
            'stanza': original_stanza,
            'chatbox': chatbox
          });

          return true;
        },
        getChatBox: function getChatBox(jid) {
          var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          var create = arguments.length > 2 ? arguments[2] : undefined;

          /* Returns a chat box or optionally return a newly
           * created one if one doesn't exist.
           *
           * Parameters:
           *    (String) jid - The JID of the user whose chat box we want
           *    (Boolean) create - Should a new chat box be created if none exists?
           *    (Object) attrs - Optional chat box atributes.
           */
          if (_.isObject(jid)) {
            create = attrs;
            attrs = jid;
            jid = attrs.jid;
          }

          jid = Strophe.getBareJidFromJid(jid.toLowerCase());
          var chatbox = this.get(Strophe.getBareJidFromJid(jid));

          if (!chatbox && create) {
            _.extend(attrs, {
              'jid': jid,
              'id': jid
            });

            chatbox = this.create(attrs, {
              'error': function error(model, response) {
                _converse.log(response.responseText);
              }
            });
          }

          return chatbox;
        }
      });

      function autoJoinChats() {
        /* Automatically join private chats, based on the
         * "auto_join_private_chats" configuration setting.
         */
        _.each(_converse.auto_join_private_chats, function (jid) {
          if (_converse.chatboxes.where({
            'jid': jid
          }).length) {
            return;
          }

          if (_.isString(jid)) {
            _converse.api.chats.open(jid);
          } else {
            _converse.log('Invalid jid criteria specified for "auto_join_private_chats"', Strophe.LogLevel.ERROR);
          }
        });

        _converse.emit('privateChatsAutoJoined');
      }
      /************************ BEGIN Event Handlers ************************/


      _converse.on('chatBoxesFetched', autoJoinChats);

      _converse.api.waitUntil('rosterContactsFetched').then(function () {
        _converse.roster.on('add', function (contact) {
          /* When a new contact is added, check if we already have a
           * chatbox open for it, and if so attach it to the chatbox.
           */
          var chatbox = _converse.chatboxes.findWhere({
            'jid': contact.get('jid')
          });

          if (chatbox) {
            chatbox.addRelatedContact(contact);
          }
        });
      });

      _converse.on('addClientFeatures', function () {
        _converse.api.disco.own.features.add(Strophe.NS.MESSAGE_CORRECT);

        _converse.api.disco.own.features.add(Strophe.NS.HTTPUPLOAD);

        _converse.api.disco.own.features.add(Strophe.NS.OUTOFBAND);
      });

      _converse.api.listen.on('pluginsInitialized', function () {
        _converse.chatboxes = new _converse.ChatBoxes();

        _converse.emit('chatBoxesInitialized');
      });

      _converse.api.listen.on('presencesInitialized', function () {
        return _converse.chatboxes.onConnected();
      });
      /************************ END Event Handlers ************************/

      /************************ BEGIN API ************************/


      _.extend(_converse.api, {
        /**
         * The "chats" namespace (used for one-on-one chats)
         *
         * @namespace _converse.api.chats
         * @memberOf _converse.api
         */
        'chats': {
          /**
           * @method _converse.api.chats.create
           * @param {string|string[]} jid|jids An jid or array of jids
           * @param {object} attrs An object containing configuration attributes.
           */
          'create': function create(jids, attrs) {
            if (_.isUndefined(jids)) {
              _converse.log("chats.create: You need to provide at least one JID", Strophe.LogLevel.ERROR);

              return null;
            }

            if (_.isString(jids)) {
              if (attrs && !_.get(attrs, 'fullname')) {
                attrs.fullname = _.get(_converse.api.contacts.get(jids), 'attributes.fullname');
              }

              var chatbox = _converse.chatboxes.getChatBox(jids, attrs, true);

              if (_.isNil(chatbox)) {
                _converse.log("Could not open chatbox for JID: " + jids, Strophe.LogLevel.ERROR);

                return;
              }

              return chatbox;
            }

            return _.map(jids, function (jid) {
              attrs.fullname = _.get(_converse.api.contacts.get(jid), 'attributes.fullname');
              return _converse.chatboxes.getChatBox(jid, attrs, true).trigger('show');
            });
          },

          /**
           * Opens a new one-on-one chat.
           *
           * @method _converse.api.chats.open
           * @param {String|string[]} name - e.g. 'buddy@example.com' or ['buddy1@example.com', 'buddy2@example.com']
           * @returns {Promise} Promise which resolves with the Backbone.Model representing the chat.
           *
           * @example
           * // To open a single chat, provide the JID of the contact you're chatting with in that chat:
           * converse.plugins.add('myplugin', {
           *     initialize: function() {
           *         var _converse = this._converse;
           *         // Note, buddy@example.org must be in your contacts roster!
           *         _converse.api.chats.open('buddy@example.com').then((chat) => {
           *             // Now you can do something with the chat model
           *         });
           *     }
           * });
           *
           * @example
           * // To open an array of chats, provide an array of JIDs:
           * converse.plugins.add('myplugin', {
           *     initialize: function () {
           *         var _converse = this._converse;
           *         // Note, these users must first be in your contacts roster!
           *         _converse.api.chats.open(['buddy1@example.com', 'buddy2@example.com']).then((chats) => {
           *             // Now you can do something with the chat models
           *         });
           *     }
           * });
           *
           */
          'open': function open(jids, attrs) {
            return new Promise(function (resolve, reject) {
              Promise.all([_converse.api.waitUntil('rosterContactsFetched'), _converse.api.waitUntil('chatBoxesFetched')]).then(function () {
                if (_.isUndefined(jids)) {
                  var err_msg = "chats.open: You need to provide at least one JID";

                  _converse.log(err_msg, Strophe.LogLevel.ERROR);

                  reject(new Error(err_msg));
                } else if (_.isString(jids)) {
                  resolve(_converse.api.chats.create(jids, attrs).trigger('show'));
                } else {
                  resolve(_.map(jids, function (jid) {
                    return _converse.api.chats.create(jid, attrs).trigger('show');
                  }));
                }
              }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
            });
          },

          /**
           * Returns a chat model. The chat should already be open.
           *
           * @method _converse.api.chats.get
           * @param {String|string[]} name - e.g. 'buddy@example.com' or ['buddy1@example.com', 'buddy2@example.com']
           * @returns {Backbone.Model}
           *
           * @example
           * // To return a single chat, provide the JID of the contact you're chatting with in that chat:
           * const model = _converse.api.chats.get('buddy@example.com');
           *
           * @example
           * // To return an array of chats, provide an array of JIDs:
           * const models = _converse.api.chats.get(['buddy1@example.com', 'buddy2@example.com']);
           *
           * @example
           * // To return all open chats, call the method without any parameters::
           * const models = _converse.api.chats.get();
           *
           */
          'get': function get(jids) {
            if (_.isUndefined(jids)) {
              var result = [];

              _converse.chatboxes.each(function (chatbox) {
                // FIXME: Leaky abstraction from MUC. We need to add a
                // base type for chat boxes, and check for that.
                if (chatbox.get('type') !== _converse.CHATROOMS_TYPE) {
                  result.push(chatbox);
                }
              });

              return result;
            } else if (_.isString(jids)) {
              return _converse.chatboxes.getChatBox(jids);
            }

            return _.map(jids, _.partial(_converse.chatboxes.getChatBox.bind(_converse.chatboxes), _, {}, true));
          }
        }
      });
      /************************ END API ************************/

    }
  });
  return converse;
});

/***/ }),

/***/ "./src/converse-chatboxviews.js":
/*!**************************************!*\
  !*** ./src/converse-chatboxviews.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/chatboxes.html */ "./src/templates/chatboxes.html"), __webpack_require__(/*! converse-chatboxes */ "./src/converse-chatboxes.js"), __webpack_require__(/*! backbone.overview */ "backbone.overview")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_chatboxes) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      _ = _converse$env._;
  var AvatarMixin = {
    renderAvatar: function renderAvatar() {
      var canvas_el = this.el.querySelector('canvas');

      if (_.isNull(canvas_el)) {
        return;
      }

      var image_type = this.model.vcard.get('image_type'),
          image = this.model.vcard.get('image'),
          img_src = "data:" + image_type + ";base64," + image,
          img = new Image();

      img.onload = function () {
        var ctx = canvas_el.getContext('2d'),
            ratio = img.width / img.height;
        ctx.clearRect(0, 0, canvas_el.width, canvas_el.height);

        if (ratio < 1) {
          var scaled_img_with = canvas_el.width * ratio,
              x = Math.floor((canvas_el.width - scaled_img_with) / 2);
          ctx.drawImage(img, x, 0, scaled_img_with, canvas_el.height);
        } else {
          ctx.drawImage(img, 0, 0, canvas_el.width, canvas_el.height * ratio);
        }
      };

      img.src = img_src;
    }
  };
  converse.plugins.add('converse-chatboxviews', {
    dependencies: ["converse-chatboxes"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      initStatus: function initStatus(reconnecting) {
        var _converse = this.__super__._converse;

        if (!reconnecting) {
          _converse.chatboxviews.closeAllChatBoxes();
        }

        return this.__super__.initStatus.apply(this, arguments);
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.promises.add(['chatBoxViewsInitialized']);

      _converse.ViewWithAvatar = Backbone.NativeView.extend(AvatarMixin);
      _converse.VDOMViewWithAvatar = Backbone.VDOMView.extend(AvatarMixin);
      _converse.ChatBoxViews = Backbone.Overview.extend({
        _ensureElement: function _ensureElement() {
          /* Override method from backbone.js
           * If the #conversejs element doesn't exist, create it.
           */
          if (!this.el) {
            var el = _converse.root.querySelector('#conversejs');

            if (_.isNull(el)) {
              el = document.createElement('div');
              el.setAttribute('id', 'conversejs');

              var body = _converse.root.querySelector('body');

              if (body) {
                body.appendChild(el);
              } else {
                // Perhaps inside a web component?
                _converse.root.appendChild(el);
              }
            }

            el.innerHTML = '';
            this.setElement(el, false);
          } else {
            this.setElement(_.result(this, 'el'), false);
          }
        },
        initialize: function initialize() {
          this.model.on("destroy", this.removeChat, this);
          this.el.classList.add("converse-".concat(_converse.view_mode));
          this.render();
        },
        render: function render() {
          try {
            this.el.innerHTML = tpl_chatboxes();
          } catch (e) {
            this._ensureElement();

            this.el.innerHTML = tpl_chatboxes();
          }

          this.row_el = this.el.querySelector('.row');
        },
        insertRowColumn: function insertRowColumn(el) {
          /* Add a new DOM element (likely a chat box) into the
           * the row managed by this overview.
           */
          this.row_el.insertAdjacentElement('afterBegin', el);
        },
        removeChat: function removeChat(item) {
          this.remove(item.get('id'));
        },
        closeAllChatBoxes: function closeAllChatBoxes() {
          /* This method gets overridden in src/converse-controlbox.js if
           * the controlbox plugin is active.
           */
          this.each(function (view) {
            view.close();
          });
          return this;
        },
        chatBoxMayBeShown: function chatBoxMayBeShown(chatbox) {
          return this.model.chatBoxMayBeShown(chatbox);
        }
      });
      /************************ BEGIN Event Handlers ************************/

      _converse.api.waitUntil('rosterContactsFetched').then(function () {
        _converse.roster.on('add', function (contact) {
          /* When a new contact is added, check if we already have a
           * chatbox open for it, and if so attach it to the chatbox.
           */
          var chatbox = _converse.chatboxes.findWhere({
            'jid': contact.get('jid')
          });

          if (chatbox) {
            chatbox.addRelatedContact(contact);
          }
        });
      });

      _converse.api.listen.on('chatBoxesInitialized', function () {
        _converse.chatboxviews = new _converse.ChatBoxViews({
          'model': _converse.chatboxes
        });

        _converse.emit('chatBoxViewsInitialized');
      });

      _converse.api.listen.on('clearSession', function () {
        return _converse.chatboxviews.closeAllChatBoxes();
      });
      /************************ END Event Handlers ************************/

    }
  });
  return converse;
});

/***/ }),

/***/ "./src/converse-chatview.js":
/*!**********************************!*\
  !*** ./src/converse-chatview.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! utils/emoji */ "./src/utils/emoji.js"), __webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js"), __webpack_require__(/*! twemoji */ "./node_modules/twemoji/2/esm.js"), __webpack_require__(/*! xss */ "./node_modules/xss/dist/xss.js"), __webpack_require__(/*! templates/chatbox.html */ "./src/templates/chatbox.html"), __webpack_require__(/*! templates/chatbox_head.html */ "./src/templates/chatbox_head.html"), __webpack_require__(/*! templates/chatbox_message_form.html */ "./src/templates/chatbox_message_form.html"), __webpack_require__(/*! templates/emojis.html */ "./src/templates/emojis.html"), __webpack_require__(/*! templates/error_message.html */ "./src/templates/error_message.html"), __webpack_require__(/*! templates/help_message.html */ "./src/templates/help_message.html"), __webpack_require__(/*! templates/info.html */ "./src/templates/info.html"), __webpack_require__(/*! templates/new_day.html */ "./src/templates/new_day.html"), __webpack_require__(/*! templates/user_details_modal.html */ "./src/templates/user_details_modal.html"), __webpack_require__(/*! templates/toolbar_fileupload.html */ "./src/templates/toolbar_fileupload.html"), __webpack_require__(/*! templates/spinner.html */ "./src/templates/spinner.html"), __webpack_require__(/*! templates/spoiler_button.html */ "./src/templates/spoiler_button.html"), __webpack_require__(/*! templates/status_message.html */ "./src/templates/status_message.html"), __webpack_require__(/*! templates/toolbar.html */ "./src/templates/toolbar.html"), __webpack_require__(/*! converse-modal */ "./src/converse-modal.js"), __webpack_require__(/*! converse-chatboxviews */ "./src/converse-chatboxviews.js"), __webpack_require__(/*! converse-message-view */ "./src/converse-message-view.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (u, converse, bootstrap, twemoji, xss, tpl_chatbox, tpl_chatbox_head, tpl_chatbox_message_form, tpl_emojis, tpl_error_message, tpl_help_message, tpl_info, tpl_new_day, tpl_user_details_modal, tpl_toolbar_fileupload, tpl_spinner, tpl_spoiler_button, tpl_status_message, tpl_toolbar) {
  "use strict";

  var _converse$env = converse.env,
      $msg = _converse$env.$msg,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      _ = _converse$env._,
      b64_sha1 = _converse$env.b64_sha1,
      f = _converse$env.f,
      sizzle = _converse$env.sizzle,
      moment = _converse$env.moment;
  converse.plugins.add('converse-chatview', {
    /* Plugin dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin.
     *
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found. By default it's
     * false, which means these plugins are only loaded opportunistically.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatboxviews", "converse-disco", "converse-message-view", "converse-modal"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.settings.update({
        'emoji_image_path': twemoji.default.base,
        'show_send_button': false,
        'show_toolbar': true,
        'time_format': 'HH:mm',
        'use_system_emojis': true,
        'visible_toolbar_buttons': {
          'call': false,
          'clear': true,
          'emoji': true,
          'spoiler': true
        }
      });

      twemoji.default.base = _converse.emoji_image_path;

      function onWindowStateChanged(data) {
        if (_converse.chatboxviews) {
          _converse.chatboxviews.each(function (view) {
            return view.onWindowStateChanged(data.state);
          });
        }
      }

      _converse.api.listen.on('windowStateChanged', onWindowStateChanged);

      _converse.EmojiPicker = Backbone.Model.extend({
        defaults: {
          'current_category': 'people',
          'current_skintone': '',
          'scroll_position': 0
        }
      });
      _converse.EmojiPickerView = Backbone.VDOMView.extend({
        className: 'emoji-picker-container',
        events: {
          'click .emoji-category-picker li.emoji-category': 'chooseCategory',
          'click .emoji-skintone-picker li.emoji-skintone': 'chooseSkinTone'
        },
        initialize: function initialize() {
          this.model.on('change:current_skintone', this.render, this);
          this.model.on('change:current_category', this.render, this);
        },
        toHTML: function toHTML() {
          return tpl_emojis(_.extend(this.model.toJSON(), {
            '_': _,
            'transform': u.getEmojiRenderer(_converse),
            'emojis_by_category': u.getEmojisByCategory(_converse),
            'toned_emojis': u.getTonedEmojis(_converse),
            'skintones': ['tone1', 'tone2', 'tone3', 'tone4', 'tone5'],
            'shouldBeHidden': this.shouldBeHidden
          }));
        },
        shouldBeHidden: function shouldBeHidden(shortname, current_skintone, toned_emojis) {
          /* Helper method for the template which decides whether an
           * emoji should be hidden, based on which skin tone is
           * currently being applied.
           */
          if (_.includes(shortname, '_tone')) {
            if (!current_skintone || !_.includes(shortname, current_skintone)) {
              return true;
            }
          } else {
            if (current_skintone && _.includes(toned_emojis, shortname)) {
              return true;
            }
          }

          return false;
        },
        chooseSkinTone: function chooseSkinTone(ev) {
          ev.preventDefault();
          ev.stopPropagation();
          var target = ev.target.nodeName === 'IMG' ? ev.target.parentElement : ev.target;
          var skintone = target.getAttribute("data-skintone").trim();

          if (this.model.get('current_skintone') === skintone) {
            this.model.save({
              'current_skintone': ''
            });
          } else {
            this.model.save({
              'current_skintone': skintone
            });
          }
        },
        chooseCategory: function chooseCategory(ev) {
          ev.preventDefault();
          ev.stopPropagation();
          var target = ev.target.nodeName === 'IMG' ? ev.target.parentElement : ev.target;
          var category = target.getAttribute("data-category").trim();
          this.model.save({
            'current_category': category,
            'scroll_position': 0
          });
        }
      });
      _converse.ChatBoxHeading = _converse.ViewWithAvatar.extend({
        initialize: function initialize() {
          this.model.on('change:status', this.onStatusMessageChanged, this);
          this.model.vcard.on('change', this.render, this);
        },
        render: function render() {
          this.el.innerHTML = tpl_chatbox_head(_.extend(this.model.vcard.toJSON(), this.model.toJSON(), {
            '_converse': _converse,
            'info_close': __('Close this chat box')
          }));
          this.renderAvatar();
          return this;
        },
        onStatusMessageChanged: function onStatusMessageChanged(item) {
          this.render();

          _converse.emit('contactStatusMessageChanged', {
            'contact': item.attributes,
            'message': item.get('status')
          });
        }
      });
      _converse.UserDetailsModal = _converse.BootstrapModal.extend({
        events: {
          'click button.remove-contact': 'removeContact',
          'click button.refresh-contact': 'refreshContact',
          'click .fingerprint-trust .btn input': 'toggleDeviceTrust'
        },
        initialize: function initialize() {
          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          this.model.on('contactAdded', this.registerContactEventHandlers, this);
          this.model.on('change', this.render, this);
          this.registerContactEventHandlers();

          _converse.emit('userDetailsModalInitialized', this.model);
        },
        toHTML: function toHTML() {
          return tpl_user_details_modal(_.extend(this.model.toJSON(), this.model.vcard.toJSON(), {
            '_': _,
            '__': __,
            'view': this,
            '_converse': _converse,
            'allow_contact_removal': _converse.allow_contact_removal,
            'display_name': this.model.getDisplayName(),
            'is_roster_contact': !_.isUndefined(this.model.contact),
            'utils': u
          }));
        },
        registerContactEventHandlers: function registerContactEventHandlers() {
          var _this = this;

          if (!_.isUndefined(this.model.contact)) {
            this.model.contact.on('change', this.render, this);
            this.model.contact.vcard.on('change', this.render, this);
            this.model.contact.on('destroy', function () {
              delete _this.model.contact;

              _this.render();
            });
          }
        },
        refreshContact: function refreshContact(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var refresh_icon = this.el.querySelector('.fa-refresh');
          u.addClass('fa-spin', refresh_icon);

          _converse.api.vcard.update(this.model.contact.vcard, true).then(function () {
            return u.removeClass('fa-spin', refresh_icon);
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        removeContact: function removeContact(ev) {
          var _this2 = this;

          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (!_converse.allow_contact_removal) {
            return;
          }

          var result = confirm(__("Are you sure you want to remove this contact?"));

          if (result === true) {
            this.modal.hide();
            this.model.contact.removeFromRoster(function (iq) {
              _this2.model.contact.destroy();
            }, function (err) {
              _converse.log(err, Strophe.LogLevel.ERROR);

              _converse.api.alert.show(Strophe.LogLevel.ERROR, __('Error'), [__('Sorry, there was an error while trying to remove %1$s as a contact.', _this2.model.contact.getDisplayName())]);
            });
          }
        }
      });
      _converse.ChatBoxView = Backbone.NativeView.extend({
        length: 200,
        className: 'chatbox hidden',
        is_chatroom: false,
        // Leaky abstraction from MUC
        events: {
          'change input.fileupload': 'onFileSelection',
          'click .chat-msg__action-edit': 'onMessageEditButtonClicked',
          'click .chatbox-navback': 'showControlBox',
          'click .close-chatbox-button': 'close',
          'click .new-msgs-indicator': 'viewUnreadMessages',
          'click .send-button': 'onFormSubmitted',
          'click .show-user-details-modal': 'showUserDetailsModal',
          'click .spoiler-toggle': 'toggleSpoilerMessage',
          'click .toggle-call': 'toggleCall',
          'click .toggle-clear': 'clearMessages',
          'click .toggle-compose-spoiler': 'toggleComposeSpoilerMessage',
          'click .toggle-smiley ul.emoji-picker li': 'insertEmoji',
          'click .toggle-smiley': 'toggleEmojiMenu',
          'click .upload-file': 'toggleFileUpload',
          'input .chat-textarea': 'inputChanged',
          'keydown .chat-textarea': 'keyPressed'
        },
        initialize: function initialize() {
          this.initDebounced();
          this.model.messages.on('add', this.onMessageAdded, this);
          this.model.messages.on('rendered', this.scrollDown, this);
          this.model.on('show', this.show, this);
          this.model.on('destroy', this.remove, this);
          this.model.presence.on('change:show', this.onPresenceChanged, this);
          this.model.on('showHelpMessages', this.showHelpMessages, this);
          this.render();
          this.fetchMessages();

          _converse.emit('chatBoxOpened', this);

          _converse.emit('chatBoxInitialized', this);
        },
        initDebounced: function initDebounced() {
          this.scrollDown = _.debounce(this._scrollDown, 250);
          this.markScrolled = _.debounce(this._markScrolled, 100);
          this.show = _.debounce(this._show, 250, {
            'leading': true
          });
        },
        render: function render() {
          // XXX: Is this still needed?
          this.el.setAttribute('id', this.model.get('box_id'));
          this.el.innerHTML = tpl_chatbox(_.extend(this.model.toJSON(), {
            unread_msgs: __('You have unread messages')
          }));
          this.content = this.el.querySelector('.chat-content');
          this.renderMessageForm();
          this.insertHeading();
          return this;
        },
        renderToolbar: function renderToolbar(toolbar, options) {
          if (!_converse.show_toolbar) {
            return this;
          }

          toolbar = toolbar || tpl_toolbar;
          options = _.assign(this.model.toJSON(), this.getToolbarOptions(options || {}));
          this.el.querySelector('.chat-toolbar').innerHTML = toolbar(options);
          this.addSpoilerButton(options);
          this.addFileUploadButton();

          _converse.emit('renderToolbar', this);

          return this;
        },
        renderMessageForm: function renderMessageForm() {
          var placeholder;

          if (this.model.get('composing_spoiler')) {
            placeholder = __('Hidden message');
          } else {
            placeholder = __('Message');
          }

          var form_container = this.el.querySelector('.message-form-container');
          form_container.innerHTML = tpl_chatbox_message_form(_.extend(this.model.toJSON(), {
            'hint_value': _.get(this.el.querySelector('.spoiler-hint'), 'value'),
            'label_message': placeholder,
            'label_send': __('Send'),
            'label_spoiler_hint': __('Optional hint'),
            'message_value': _.get(this.el.querySelector('.chat-textarea'), 'value'),
            'show_send_button': _converse.show_send_button,
            'show_toolbar': _converse.show_toolbar,
            'unread_msgs': __('You have unread messages')
          }));
          this.renderToolbar();
        },
        showControlBox: function showControlBox() {
          // Used in mobile view, to navigate back to the controlbox
          var view = _converse.chatboxviews.get('controlbox');

          view.show();
          this.hide();
        },
        showUserDetailsModal: function showUserDetailsModal(ev) {
          ev.preventDefault();

          if (_.isUndefined(this.user_details_modal)) {
            this.user_details_modal = new _converse.UserDetailsModal({
              model: this.model
            });
          }

          this.user_details_modal.show(ev);
        },
        toggleFileUpload: function toggleFileUpload(ev) {
          this.el.querySelector('input.fileupload').click();
        },
        onFileSelection: function onFileSelection(evt) {
          this.model.sendFiles(evt.target.files);
        },
        addFileUploadButton: function addFileUploadButton(options) {
          var _this3 = this;

          _converse.api.disco.supports(Strophe.NS.HTTPUPLOAD, _converse.domain).then(function (result) {
            if (result.length) {
              _this3.el.querySelector('.chat-toolbar').insertAdjacentHTML('beforeend', tpl_toolbar_fileupload({
                'tooltip_upload_file': __('Choose a file to send')
              }));
            }
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        addSpoilerButton: function addSpoilerButton(options) {
          var _this4 = this;

          /* Asynchronously adds a button for writing spoiler
           * messages, based on whether the contact's client supports
           * it.
           */
          if (!options.show_spoiler_button || this.model.get('type') === 'chatroom') {
            return;
          }

          var contact_jid = this.model.get('jid');
          var resources = this.model.presence.get('resources');

          if (_.isEmpty(resources)) {
            return;
          }

          Promise.all(_.map(_.keys(resources), function (resource) {
            return _converse.api.disco.supports(Strophe.NS.SPOILER, "".concat(contact_jid, "/").concat(resource));
          })).then(function (results) {
            if (_.filter(results, 'length').length) {
              var html = tpl_spoiler_button(_this4.model.toJSON());

              if (_converse.visible_toolbar_buttons.emoji) {
                _this4.el.querySelector('.toggle-smiley').insertAdjacentHTML('afterEnd', html);
              } else {
                _this4.el.querySelector('.chat-toolbar').insertAdjacentHTML('afterBegin', html);
              }
            }
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        insertHeading: function insertHeading() {
          this.heading = new _converse.ChatBoxHeading({
            'model': this.model
          });
          this.heading.render();
          this.heading.chatview = this;

          if (!_.isUndefined(this.model.contact)) {
            this.model.contact.on('destroy', this.heading.render, this);
          }

          var flyout = this.el.querySelector('.flyout');
          flyout.insertBefore(this.heading.el, flyout.querySelector('.chat-body'));
          return this;
        },
        getToolbarOptions: function getToolbarOptions(options) {
          var label_toggle_spoiler;

          if (this.model.get('composing_spoiler')) {
            label_toggle_spoiler = __('Click to write as a normal (non-spoiler) message');
          } else {
            label_toggle_spoiler = __('Click to write your message as a spoiler');
          }

          return _.extend(options || {}, {
            'label_clear': __('Clear all messages'),
            'tooltip_insert_smiley': __('Insert emojis'),
            'tooltip_start_call': __('Start a call'),
            'label_toggle_spoiler': label_toggle_spoiler,
            'show_call_button': _converse.visible_toolbar_buttons.call,
            'show_spoiler_button': _converse.visible_toolbar_buttons.spoiler,
            'use_emoji': _converse.visible_toolbar_buttons.emoji
          });
        },
        afterMessagesFetched: function afterMessagesFetched() {
          this.insertIntoDOM();
          this.scrollDown();
          this.content.addEventListener('scroll', this.markScrolled.bind(this));

          _converse.emit('afterMessagesFetched', this);
        },
        fetchMessages: function fetchMessages() {
          this.model.messages.fetch({
            'add': true,
            'success': this.afterMessagesFetched.bind(this),
            'error': this.afterMessagesFetched.bind(this)
          });
          return this;
        },
        insertIntoDOM: function insertIntoDOM() {
          /* This method gets overridden in src/converse-controlbox.js
           * as well as src/converse-muc.js (if those plugins are
           * enabled).
           */
          _converse.chatboxviews.insertRowColumn(this.el);

          return this;
        },
        showChatEvent: function showChatEvent(message) {
          var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
          var isodate = moment().format();
          this.content.insertAdjacentHTML('beforeend', tpl_info({
            'extra_classes': 'chat-event',
            'message': message,
            'isodate': isodate,
            'data': data
          }));
          this.insertDayIndicator(this.content.lastElementChild);
          this.scrollDown();
          return isodate;
        },
        showErrorMessage: function showErrorMessage(message) {
          this.content.insertAdjacentHTML('beforeend', tpl_error_message({
            'message': message,
            'isodate': moment().format()
          }));
          this.scrollDown();
        },
        addSpinner: function addSpinner() {
          var append = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

          if (_.isNull(this.el.querySelector('.spinner'))) {
            if (append) {
              this.content.insertAdjacentHTML('beforeend', tpl_spinner());
              this.scrollDown();
            } else {
              this.content.insertAdjacentHTML('afterbegin', tpl_spinner());
            }
          }
        },
        clearSpinner: function clearSpinner() {
          _.each(this.content.querySelectorAll('span.spinner'), function (el) {
            return el.parentNode.removeChild(el);
          });
        },
        insertDayIndicator: function insertDayIndicator(next_msg_el) {
          /* Inserts an indicator into the chat area, showing the
           * day as given by the passed in date.
           *
           * The indicator is only inserted if necessary.
           *
           * Parameters:
           *  (HTMLElement) next_msg_el - The message element before
           *      which the day indicator element must be inserted.
           *      This element must have a "data-isodate" attribute
           *      which specifies its creation date.
           */
          var prev_msg_el = u.getPreviousElement(next_msg_el, ".message:not(.chat-state-notification)"),
              prev_msg_date = _.isNull(prev_msg_el) ? null : prev_msg_el.getAttribute('data-isodate'),
              next_msg_date = next_msg_el.getAttribute('data-isodate');

          if (_.isNull(prev_msg_date) || moment(next_msg_date).isAfter(prev_msg_date, 'day')) {
            var day_date = moment(next_msg_date).startOf('day');
            next_msg_el.insertAdjacentHTML('beforeBegin', tpl_new_day({
              'isodate': day_date.format(),
              'datestring': day_date.format("dddd MMM Do YYYY")
            }));
          }
        },
        getLastMessageDate: function getLastMessageDate(cutoff) {
          /* Return the ISO8601 format date of the latest message.
           *
           * Parameters:
           *  (Object) cutoff: Moment Date cutoff date. The last
           *      message received cutoff this date will be returned.
           */
          var first_msg = u.getFirstChildElement(this.content, '.message:not(.chat-state-notification)'),
              oldest_date = first_msg ? first_msg.getAttribute('data-isodate') : null;

          if (!_.isNull(oldest_date) && moment(oldest_date).isAfter(cutoff)) {
            return null;
          }

          var last_msg = u.getLastChildElement(this.content, '.message:not(.chat-state-notification)'),
              most_recent_date = last_msg ? last_msg.getAttribute('data-isodate') : null;

          if (_.isNull(most_recent_date) || moment(most_recent_date).isBefore(cutoff)) {
            return most_recent_date;
          }
          /* XXX: We avoid .chat-state-notification messages, since they are
           * temporary and get removed once a new element is
           * inserted into the chat area, so we don't query for
           * them here, otherwise we get a null reference later
           * upon element insertion.
           */


          var msg_dates = _.invokeMap(sizzle('.message:not(.chat-state-notification)', this.content), Element.prototype.getAttribute, 'data-isodate');

          if (_.isObject(cutoff)) {
            cutoff = cutoff.format();
          }

          msg_dates.push(cutoff);
          msg_dates.sort();
          var idx = msg_dates.lastIndexOf(cutoff);

          if (idx === 0) {
            return null;
          } else {
            return msg_dates[idx - 1];
          }
        },
        setScrollPosition: function setScrollPosition(message_el) {
          /* Given a newly inserted message, determine whether we
           * should keep the scrollbar in place (so as to not scroll
           * up when using infinite scroll).
           */
          if (this.model.get('scrolled')) {
            var next_msg_el = u.getNextElement(message_el, ".chat-msg");

            if (next_msg_el) {
              // The currently received message is not new, there
              // are newer messages after it. So let's see if we
              // should maintain our current scroll position.
              if (this.content.scrollTop === 0 || this.model.get('top_visible_message')) {
                var top_visible_message = this.model.get('top_visible_message') || next_msg_el;
                this.model.set('top_visible_message', top_visible_message);
                this.content.scrollTop = top_visible_message.offsetTop - 30;
              }
            }
          } else {
            this.scrollDown();
          }
        },
        showHelpMessages: function showHelpMessages(msgs, type, spinner) {
          var _this5 = this;

          _.each(msgs, function (msg) {
            _this5.content.insertAdjacentHTML('beforeend', tpl_help_message({
              'isodate': moment().format(),
              'type': type,
              'message': xss.filterXSS(msg, {
                'whiteList': {
                  'strong': []
                }
              })
            }));
          });

          if (spinner === true) {
            this.addSpinner();
          } else if (spinner === false) {
            this.clearSpinner();
          }

          return this.scrollDown();
        },
        clearChatStateNotification: function clearChatStateNotification(message, isodate) {
          if (isodate) {
            _.each(sizzle(".chat-state-notification[data-csn=\"".concat(message.get('from'), "\"][data-isodate=\"").concat(isodate, "\"]"), this.content), u.removeElement);
          } else {
            _.each(sizzle(".chat-state-notification[data-csn=\"".concat(message.get('from'), "\"]"), this.content), u.removeElement);
          }
        },
        shouldShowOnTextMessage: function shouldShowOnTextMessage() {
          return !u.isVisible(this.el);
        },
        insertMessage: function insertMessage(view) {
          /* Given a view representing a message, insert it into the
           * content area of the chat box.
           *
           * Parameters:
           *  (Backbone.View) message: The message Backbone.View
           */
          if (view.model.get('type') === 'error') {
            var previous_msg_el = this.content.querySelector("[data-msgid=\"".concat(view.model.get('msgid'), "\"]"));

            if (previous_msg_el) {
              return previous_msg_el.insertAdjacentElement('afterend', view.el);
            }
          }

          var current_msg_date = moment(view.model.get('time')) || moment,
              previous_msg_date = this.getLastMessageDate(current_msg_date);

          if (_.isNull(previous_msg_date)) {
            this.content.insertAdjacentElement('afterbegin', view.el);
          } else {
            var _previous_msg_el = sizzle("[data-isodate=\"".concat(previous_msg_date, "\"]:last"), this.content).pop();

            if (view.model.get('type') === 'error' && u.hasClass('chat-error', _previous_msg_el) && _previous_msg_el.textContent === view.model.get('message')) {
              // We don't show a duplicate error message
              return;
            }

            _previous_msg_el.insertAdjacentElement('afterend', view.el);

            this.markFollowups(view.el);
          }
        },
        markFollowups: function markFollowups(el) {
          /* Given a message element, determine wether it should be
           * marked as a followup message to the previous element.
           *
           * Also determine whether the element following it is a
           * followup message or not.
           *
           * Followup messages are subsequent ones written by the same
           * author with no other conversation elements inbetween and
           * posted within 10 minutes of one another.
           *
           * Parameters:
           *  (HTMLElement) el - The message element.
           */
          var from = el.getAttribute('data-from'),
              previous_el = el.previousElementSibling,
              date = moment(el.getAttribute('data-isodate')),
              next_el = el.nextElementSibling;

          if (!u.hasClass('chat-msg--action', el) && !u.hasClass('chat-msg--action', previous_el) && previous_el.getAttribute('data-from') === from && date.isBefore(moment(previous_el.getAttribute('data-isodate')).add(10, 'minutes')) && el.getAttribute('data-encrypted') === previous_el.getAttribute('data-encrypted')) {
            u.addClass('chat-msg--followup', el);
          }

          if (!next_el) {
            return;
          }

          if (!u.hasClass('chat-msg--action', 'el') && next_el.getAttribute('data-from') === from && moment(next_el.getAttribute('data-isodate')).isBefore(date.add(10, 'minutes')) && el.getAttribute('data-encrypted') === next_el.getAttribute('data-encrypted')) {
            u.addClass('chat-msg--followup', next_el);
          } else {
            u.removeClass('chat-msg--followup', next_el);
          }
        },
        showMessage: function showMessage(message) {
          /* Inserts a chat message into the content area of the chat box.
           *
           * Will also insert a new day indicator if the message is on a
           * different day.
           *
           * Parameters:
           *  (Backbone.Model) message: The message object
           */
          var view = new _converse.MessageView({
            'model': message
          });
          this.clearChatStateNotification(message);
          this.insertMessage(view);
          this.insertDayIndicator(view.el);
          this.setScrollPosition(view.el);

          if (u.isNewMessage(message)) {
            if (message.get('sender') === 'me') {
              // We remove the "scrolled" flag so that the chat area
              // gets scrolled down. We always want to scroll down
              // when the user writes a message as opposed to when a
              // message is received.
              this.model.set('scrolled', false);
            } else if (this.model.get('scrolled', true)) {
              this.showNewMessagesIndicator();
            }
          }

          if (this.shouldShowOnTextMessage()) {
            this.show();
          } else {
            this.scrollDown();
          }
        },
        onMessageAdded: function onMessageAdded(message) {
          /* Handler that gets called when a new message object is created.
           *
           * Parameters:
           *    (Object) message - The message Backbone object that was added.
           */
          this.showMessage(message);

          if (message.get('correcting')) {
            this.insertIntoTextArea(message.get('message'), true, true);
          }

          _converse.emit('messageAdded', {
            'message': message,
            'chatbox': this.model
          });
        },
        parseMessageForCommands: function parseMessageForCommands(text) {
          var match = text.replace(/^\s*/, "").match(/^\/(.*)\s*$/);

          if (match) {
            if (match[1] === "clear") {
              this.clearMessages();
              return true;
            } else if (match[1] === "help") {
              var msgs = ["<strong>/clear</strong>: ".concat(__('Remove messages')), "<strong>/me</strong>: ".concat(__('Write in the third person')), "<strong>/help</strong>: ".concat(__('Show this menu'))];
              this.showHelpMessages(msgs);
              return true;
            }
          }
        },
        onMessageSubmitted: function onMessageSubmitted(text, spoiler_hint) {
          /* This method gets called once the user has typed a message
           * and then pressed enter in a chat box.
           *
           *  Parameters:
           *    (String) text - The chat message text.
           *    (String) spoiler_hint - A hint in case the message
           *      text is a hidden/spoiler message. See XEP-0382
           */
          if (!_converse.connection.authenticated) {
            return this.showHelpMessages(['Sorry, the connection has been lost, ' + 'and your message could not be sent'], 'error');
          }

          if (this.parseMessageForCommands(text)) {
            return;
          }

          var attrs = this.model.getOutgoingMessageAttributes(text, spoiler_hint);
          this.model.sendMessage(attrs);
        },
        setChatState: function setChatState(state, options) {
          /* Mutator for setting the chat state of this chat session.
           * Handles clearing of any chat state notification timeouts and
           * setting new ones if necessary.
           * Timeouts are set when the  state being set is COMPOSING or PAUSED.
           * After the timeout, COMPOSING will become PAUSED and PAUSED will become INACTIVE.
           * See XEP-0085 Chat State Notifications.
           *
           *  Parameters:
           *    (string) state - The chat state (consts ACTIVE, COMPOSING, PAUSED, INACTIVE, GONE)
           */
          if (!_.isUndefined(this.chat_state_timeout)) {
            window.clearTimeout(this.chat_state_timeout);
            delete this.chat_state_timeout;
          }

          if (state === _converse.COMPOSING) {
            this.chat_state_timeout = window.setTimeout(this.setChatState.bind(this), _converse.TIMEOUTS.PAUSED, _converse.PAUSED);
          } else if (state === _converse.PAUSED) {
            this.chat_state_timeout = window.setTimeout(this.setChatState.bind(this), _converse.TIMEOUTS.INACTIVE, _converse.INACTIVE);
          }

          this.model.set('chat_state', state, options);
          return this;
        },
        onFormSubmitted: function onFormSubmitted(ev) {
          ev.preventDefault();
          var textarea = this.el.querySelector('.chat-textarea'),
              message = textarea.value;

          if (!message.replace(/\s/g, '').length) {
            return;
          }

          var spoiler_hint;

          if (this.model.get('composing_spoiler')) {
            var hint_el = this.el.querySelector('form.sendXMPPMessage input.spoiler-hint');
            spoiler_hint = hint_el.value;
            hint_el.value = '';
          }

          textarea.value = '';
          u.removeClass('correcting', textarea);
          textarea.focus(); // Trigger input event, so that the textarea resizes

          var event = document.createEvent('Event');
          event.initEvent('input', true, true);
          textarea.dispatchEvent(event);
          this.onMessageSubmitted(message, spoiler_hint);

          _converse.emit('messageSend', message); // Suppress events, otherwise superfluous CSN gets set
          // immediately after the message, causing rate-limiting issues.


          this.setChatState(_converse.ACTIVE, {
            'silent': true
          });
        },
        keyPressed: function keyPressed(ev) {
          /* Event handler for when a key is pressed in a chat box textarea.
           */
          if (ev.ctrlKey) {
            // When ctrl is pressed, no chars are entered into the textarea.
            return;
          }

          if (!ev.shiftKey && !ev.altKey) {
            if (ev.keyCode === _converse.keycodes.FORWARD_SLASH) {
              // Forward slash is used to run commands. Nothing to do here.
              return;
            } else if (ev.keyCode === _converse.keycodes.ESCAPE) {
              return this.onEscapePressed(ev);
            } else if (ev.keyCode === _converse.keycodes.ENTER) {
              _.invoke(this.emoji_dropdown, 'toggle');

              return this.onFormSubmitted(ev);
            } else if (ev.keyCode === _converse.keycodes.UP_ARROW && !ev.target.selectionEnd) {
              return this.editEarlierMessage();
            } else if (ev.keyCode === _converse.keycodes.DOWN_ARROW && ev.target.selectionEnd === ev.target.value.length) {
              return this.editLaterMessage();
            }
          }

          if (_.includes([_converse.keycodes.SHIFT, _converse.keycodes.META, _converse.keycodes.META_RIGHT, _converse.keycodes.ESCAPE, _converse.keycodes.ALT], ev.keyCode)) {
            return;
          }

          if (this.model.get('chat_state') !== _converse.COMPOSING) {
            // Set chat state to composing if keyCode is not a forward-slash
            // (which would imply an internal command and not a message).
            this.setChatState(_converse.COMPOSING);
          }
        },
        getOwnMessages: function getOwnMessages() {
          return f(this.model.messages.filter({
            'sender': 'me'
          }));
        },
        onEscapePressed: function onEscapePressed(ev) {
          ev.preventDefault();
          var idx = this.model.messages.findLastIndex('correcting'),
              message = idx >= 0 ? this.model.messages.at(idx) : null;

          if (message) {
            message.save('correcting', false);
          }

          this.insertIntoTextArea('', true, false);
        },
        onMessageEditButtonClicked: function onMessageEditButtonClicked(ev) {
          ev.preventDefault();
          var idx = this.model.messages.findLastIndex('correcting'),
              currently_correcting = idx >= 0 ? this.model.messages.at(idx) : null,
              message_el = u.ancestor(ev.target, '.chat-msg'),
              message = this.model.messages.findWhere({
            'msgid': message_el.getAttribute('data-msgid')
          });

          if (currently_correcting !== message) {
            if (!_.isNil(currently_correcting)) {
              currently_correcting.save('correcting', false);
            }

            message.save('correcting', true);
            this.insertIntoTextArea(u.prefixMentions(message), true, true);
          } else {
            message.save('correcting', false);
            this.insertIntoTextArea('', true, false);
          }
        },
        editLaterMessage: function editLaterMessage() {
          var message;
          var idx = this.model.messages.findLastIndex('correcting');

          if (idx >= 0) {
            this.model.messages.at(idx).save('correcting', false);

            while (idx < this.model.messages.length - 1) {
              idx += 1;
              var candidate = this.model.messages.at(idx);

              if (candidate.get('sender') === 'me' && candidate.get('message')) {
                message = candidate;
                break;
              }
            }
          }

          if (message) {
            this.insertIntoTextArea(message.get('message'), true, true);
            message.save('correcting', true);
          } else {
            this.insertIntoTextArea('', true, false);
          }
        },
        editEarlierMessage: function editEarlierMessage() {
          var message;
          var idx = this.model.messages.findLastIndex('correcting');

          if (idx >= 0) {
            this.model.messages.at(idx).save('correcting', false);

            while (idx > 0) {
              idx -= 1;
              var candidate = this.model.messages.at(idx);

              if (candidate.get('sender') === 'me' && candidate.get('message')) {
                message = candidate;
                break;
              }
            }
          }

          message = message || this.getOwnMessages().findLast(function (msg) {
            return msg.get('message');
          });

          if (message) {
            this.insertIntoTextArea(message.get('message'), true, true);
            message.save('correcting', true);
          }
        },
        inputChanged: function inputChanged(ev) {
          ev.target.style.height = 'auto'; // Fixes weirdness

          ev.target.style.height = ev.target.scrollHeight + 'px';
        },
        clearMessages: function clearMessages(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var result = confirm(__("Are you sure you want to clear the messages from this conversation?"));

          if (result === true) {
            this.content.innerHTML = '';
            this.model.messages.reset();

            this.model.messages.browserStorage._clear();
          }

          return this;
        },
        insertIntoTextArea: function insertIntoTextArea(value) {
          var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var correcting = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          var textarea = this.el.querySelector('.chat-textarea');

          if (correcting) {
            u.addClass('correcting', textarea);
          } else {
            u.removeClass('correcting', textarea);
          }

          if (replace) {
            textarea.value = '';
            textarea.value = value;
          } else {
            var existing = textarea.value;

            if (existing && existing[existing.length - 1] !== ' ') {
              existing = existing + ' ';
            }

            textarea.value = '';
            textarea.value = existing + value + ' ';
          }

          u.putCurserAtEnd(textarea);
        },
        createEmojiPicker: function createEmojiPicker() {
          if (_.isUndefined(_converse.emojipicker)) {
            var storage = _converse.config.get('storage'),
                id = "converse.emoji-".concat(_converse.bare_jid);

            _converse.emojipicker = new _converse.EmojiPicker({
              'id': id
            });
            _converse.emojipicker.browserStorage = new Backbone.BrowserStorage[storage](id);

            _converse.emojipicker.fetch();
          }

          this.emoji_picker_view = new _converse.EmojiPickerView({
            'model': _converse.emojipicker
          });
        },
        insertEmoji: function insertEmoji(ev) {
          ev.preventDefault();
          ev.stopPropagation();
          var target = ev.target.nodeName === 'IMG' ? ev.target.parentElement : ev.target;
          this.insertIntoTextArea(target.getAttribute('data-emoji'));
        },
        toggleEmojiMenu: function toggleEmojiMenu(ev) {
          if (_.isUndefined(this.emoji_dropdown)) {
            ev.stopPropagation();
            this.createEmojiPicker();
            this.insertEmojiPicker();
            this.renderEmojiPicker();
            var dropdown_el = this.el.querySelector('.toggle-smiley.dropup');
            this.emoji_dropdown = new bootstrap.Dropdown(dropdown_el, true);
            this.emoji_dropdown.toggle();
          }
        },
        toggleCall: function toggleCall(ev) {
          ev.stopPropagation();

          _converse.emit('callButtonClicked', {
            connection: _converse.connection,
            model: this.model
          });
        },
        toggleComposeSpoilerMessage: function toggleComposeSpoilerMessage() {
          this.model.set('composing_spoiler', !this.model.get('composing_spoiler'));
          this.renderMessageForm();
          this.focus();
        },
        toggleSpoilerMessage: function toggleSpoilerMessage(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var toggle_el = ev.target,
              icon_el = toggle_el.firstElementChild;
          u.slideToggleElement(toggle_el.parentElement.parentElement.querySelector('.spoiler'));

          if (toggle_el.getAttribute("data-toggle-state") == "closed") {
            toggle_el.textContent = 'Show less';
            icon_el.classList.remove("fa-eye");
            icon_el.classList.add("fa-eye-slash");
            toggle_el.insertAdjacentElement('afterBegin', icon_el);
            toggle_el.setAttribute("data-toggle-state", "open");
          } else {
            toggle_el.textContent = 'Show more';
            icon_el.classList.remove("fa-eye-slash");
            icon_el.classList.add("fa-eye");
            toggle_el.insertAdjacentElement('afterBegin', icon_el);
            toggle_el.setAttribute("data-toggle-state", "closed");
          }
        },
        onPresenceChanged: function onPresenceChanged(item) {
          var show = item.get('show'),
              fullname = this.model.getDisplayName();
          var text;

          if (u.isVisible(this.el)) {
            if (show === 'offline') {
              text = __('%1$s has gone offline', fullname);
            } else if (show === 'away') {
              text = __('%1$s has gone away', fullname);
            } else if (show === 'dnd') {
              text = __('%1$s is busy', fullname);
            } else if (show === 'online') {
              text = __('%1$s is online', fullname);
            }

            if (text) {
              this.content.insertAdjacentHTML('beforeend', tpl_status_message({
                'message': text,
                'isodate': moment().format()
              }));
              this.scrollDown();
            }
          }
        },
        close: function close(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (Backbone.history.getFragment() === "converse/chat?jid=" + this.model.get('jid')) {
            _converse.router.navigate('');
          }

          if (_converse.connection.connected) {
            // Immediately sending the chat state, because the
            // model is going to be destroyed afterwards.
            this.setChatState(_converse.INACTIVE);
            this.model.sendChatState();
          }

          try {
            this.model.destroy();
          } catch (e) {
            _converse.log(e, Strophe.LogLevel.ERROR);
          }

          this.remove();

          _converse.emit('chatBoxClosed', this);

          return this;
        },
        renderEmojiPicker: function renderEmojiPicker() {
          this.emoji_picker_view.render();
        },
        insertEmojiPicker: function insertEmojiPicker() {
          var picker_el = this.el.querySelector('.emoji-picker');

          if (!_.isNull(picker_el)) {
            picker_el.innerHTML = '';
            picker_el.appendChild(this.emoji_picker_view.el);
          }
        },
        focus: function focus() {
          var textarea_el = this.el.querySelector('.chat-textarea');

          if (!_.isNull(textarea_el)) {
            textarea_el.focus();

            _converse.emit('chatBoxFocused', this);
          }

          return this;
        },
        hide: function hide() {
          this.el.classList.add('hidden');
          return this;
        },
        afterShown: function afterShown() {
          this.model.clearUnreadMsgCounter();
          this.setChatState(_converse.ACTIVE);
          this.scrollDown();
          this.focus();
        },
        _show: function _show(f) {
          /* Inner show method that gets debounced */
          if (u.isVisible(this.el)) {
            this.focus();
            return;
          }

          u.fadeIn(this.el, _.bind(this.afterShown, this));
        },
        showNewMessagesIndicator: function showNewMessagesIndicator() {
          u.showElement(this.el.querySelector('.new-msgs-indicator'));
        },
        hideNewMessagesIndicator: function hideNewMessagesIndicator() {
          var new_msgs_indicator = this.el.querySelector('.new-msgs-indicator');

          if (!_.isNull(new_msgs_indicator)) {
            new_msgs_indicator.classList.add('hidden');
          }
        },
        _markScrolled: function _markScrolled(ev) {
          /* Called when the chat content is scrolled up or down.
           * We want to record when the user has scrolled away from
           * the bottom, so that we don't automatically scroll away
           * from what the user is reading when new messages are
           * received.
           */
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var scrolled = true;
          var is_at_bottom = this.content.scrollTop + this.content.clientHeight >= this.content.scrollHeight - 62; // sigh...

          if (is_at_bottom) {
            scrolled = false;
            this.onScrolledDown();
          }

          u.safeSave(this.model, {
            'scrolled': scrolled,
            'top_visible_message': null
          });
        },
        viewUnreadMessages: function viewUnreadMessages() {
          this.model.save({
            'scrolled': false,
            'top_visible_message': null
          });
          this.scrollDown();
        },
        _scrollDown: function _scrollDown() {
          /* Inner method that gets debounced */
          if (_.isUndefined(this.content)) {
            return;
          }

          if (u.isVisible(this.content) && !this.model.get('scrolled')) {
            this.content.scrollTop = this.content.scrollHeight;
          }
        },
        onScrolledDown: function onScrolledDown() {
          this.hideNewMessagesIndicator();

          if (_converse.windowState !== 'hidden') {
            this.model.clearUnreadMsgCounter();
          }

          _converse.emit('chatBoxScrolledDown', {
            'chatbox': this.model
          });
        },
        onWindowStateChanged: function onWindowStateChanged(state) {
          if (this.model.get('num_unread', 0) && !this.model.isHidden()) {
            this.model.clearUnreadMsgCounter();
          }
        }
      });

      _converse.on('chatBoxViewsInitialized', function () {
        var that = _converse.chatboxviews;

        _converse.chatboxes.on('add', function (item) {
          if (!that.get(item.get('id')) && item.get('type') === _converse.PRIVATE_CHAT_TYPE) {
            that.add(item.get('id'), new _converse.ChatBoxView({
              model: item
            }));
          }
        });
      });

      _converse.on('connected', function () {
        // Advertise that we support XEP-0382 Message Spoilers
        _converse.api.disco.own.features.add(Strophe.NS.SPOILER);
      });
      /************************ BEGIN API ************************/


      _.extend(_converse.api, {
        /**
         * The "chatview" namespace groups methods pertaining to views
         * for one-on-one chats.
         *
         * @namespace _converse.api.chatviews
         * @memberOf _converse.api
         */
        'chatviews': {
          /**
           * Get the view of an already open chat.
           *
           * @method _converse.api.chatviews.get
           * @returns {ChatBoxView} A [Backbone.View](http://backbonejs.org/#View) instance.
           *     The chat should already be open, otherwise `undefined` will be returned.
           * 
           * @example
           * // To return a single view, provide the JID of the contact:
           * _converse.api.chatviews.get('buddy@example.com')
           * 
           * @example
           * // To return an array of views, provide an array of JIDs:
           * _converse.api.chatviews.get(['buddy1@example.com', 'buddy2@example.com'])
           */
          'get': function get(jids) {
            if (_.isUndefined(jids)) {
              _converse.log("chats.create: You need to provide at least one JID", Strophe.LogLevel.ERROR);

              return null;
            }

            if (_.isString(jids)) {
              return _converse.chatboxviews.get(jids);
            }

            return _.map(jids, function (jid) {
              return _converse.chatboxviews.get(jids);
            });
          }
        }
      });
      /************************ END API ************************/

    }
  });
  return converse;
});

/***/ }),

/***/ "./src/converse-controlbox.js":
/*!************************************!*\
  !*** ./src/converse-controlbox.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js"), __webpack_require__(/*! lodash.fp */ "./src/lodash.fp.js"), __webpack_require__(/*! templates/converse_brand_heading.html */ "./src/templates/converse_brand_heading.html"), __webpack_require__(/*! templates/controlbox.html */ "./src/templates/controlbox.html"), __webpack_require__(/*! templates/controlbox_toggle.html */ "./src/templates/controlbox_toggle.html"), __webpack_require__(/*! templates/login_panel.html */ "./src/templates/login_panel.html"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js"), __webpack_require__(/*! converse-rosterview */ "./src/converse-rosterview.js"), __webpack_require__(/*! converse-profile */ "./src/converse-profile.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, bootstrap, fp, tpl_brand_heading, tpl_controlbox, tpl_controlbox_toggle, tpl_login_panel) {
  "use strict";

  var CHATBOX_TYPE = 'chatbox';
  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      _ = _converse$env._,
      moment = _converse$env.moment;
  var u = converse.env.utils;
  var CONNECTION_STATUS_CSS_CLASS = {
    'Error': 'error',
    'Connecting': 'info',
    'Connection failure': 'error',
    'Authenticating': 'info',
    'Authentication failure': 'error',
    'Connected': 'info',
    'Disconnected': 'error',
    'Disconnecting': 'warn',
    'Attached': 'info',
    'Redirect': 'info',
    'Reconnecting': 'warn'
  };
  var PRETTY_CONNECTION_STATUS = {
    0: 'Error',
    1: 'Connecting',
    2: 'Connection failure',
    3: 'Authenticating',
    4: 'Authentication failure',
    5: 'Connected',
    6: 'Disconnected',
    7: 'Disconnecting',
    8: 'Attached',
    9: 'Redirect',
    10: 'Reconnecting'
  };
  var REPORTABLE_STATUSES = [0, // ERROR'
  1, // CONNECTING
  2, // CONNFAIL
  3, // AUTHENTICATING
  4, // AUTHFAIL
  7, // DISCONNECTING
  10 // RECONNECTING
  ];
  converse.plugins.add('converse-controlbox', {
    /* Plugin dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin.
     *
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found. By default it's
     * false, which means these plugins are only loaded opportunistically.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-modal", "converse-chatboxes", "converse-rosterview", "converse-chatview"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      tearDown: function tearDown() {
        this.__super__.tearDown.apply(this, arguments);

        if (this.rosterview) {
          // Removes roster groups
          this.rosterview.model.off().reset();
          this.rosterview.each(function (groupview) {
            groupview.removeAll();
            groupview.remove();
          });
          this.rosterview.removeAll().remove();
        }
      },
      ChatBoxes: {
        chatBoxMayBeShown: function chatBoxMayBeShown(chatbox) {
          return this.__super__.chatBoxMayBeShown.apply(this, arguments) && chatbox.get('id') !== 'controlbox';
        }
      },
      ChatBoxViews: {
        closeAllChatBoxes: function closeAllChatBoxes() {
          var _converse = this.__super__._converse;
          this.each(function (view) {
            if (view.model.get('id') === 'controlbox' && (_converse.disconnection_cause !== _converse.LOGOUT || _converse.show_controlbox_by_default)) {
              return;
            }

            view.close();
          });
          return this;
        },
        getChatBoxWidth: function getChatBoxWidth(view) {
          var _converse = this.__super__._converse;
          var controlbox = this.get('controlbox');

          if (view.model.get('id') === 'controlbox') {
            /* We return the width of the controlbox or its toggle,
             * depending on which is visible.
             */
            if (!controlbox || !u.isVisible(controlbox.el)) {
              return u.getOuterWidth(_converse.controlboxtoggle.el, true);
            } else {
              return u.getOuterWidth(controlbox.el, true);
            }
          } else {
            return this.__super__.getChatBoxWidth.apply(this, arguments);
          }
        }
      },
      ChatBox: {
        initialize: function initialize() {
          if (this.get('id') === 'controlbox') {
            this.set({
              'time_opened': moment(0).valueOf()
            });
          } else {
            this.__super__.initialize.apply(this, arguments);
          }
        }
      },
      ChatBoxView: {
        insertIntoDOM: function insertIntoDOM() {
          var view = this.__super__._converse.chatboxviews.get("controlbox");

          if (view) {
            view.el.insertAdjacentElement('afterend', this.el);
          } else {
            this.__super__.insertIntoDOM.apply(this, arguments);
          }

          return this;
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.settings.update({
        allow_logout: true,
        default_domain: undefined,
        locked_domain: undefined,
        show_controlbox_by_default: false,
        sticky_controlbox: false
      });

      _converse.api.promises.add('controlboxInitialized');

      _converse.addControlBox = function () {
        return _converse.chatboxes.add({
          'id': 'controlbox',
          'box_id': 'controlbox',
          'type': _converse.CONTROLBOX_TYPE,
          'closed': !_converse.show_controlbox_by_default
        });
      };

      _converse.ControlBoxView = _converse.ChatBoxView.extend({
        tagName: 'div',
        className: 'chatbox',
        id: 'controlbox',
        events: {
          'click a.close-chatbox-button': 'close'
        },
        initialize: function initialize() {
          if (_.isUndefined(_converse.controlboxtoggle)) {
            _converse.controlboxtoggle = new _converse.ControlBoxToggle();
          }

          _converse.controlboxtoggle.el.insertAdjacentElement('afterend', this.el);

          this.model.on('change:connected', this.onConnected, this);
          this.model.on('destroy', this.hide, this);
          this.model.on('hide', this.hide, this);
          this.model.on('show', this.show, this);
          this.model.on('change:closed', this.ensureClosedState, this);
          this.render();

          if (this.model.get('connected')) {
            this.insertRoster();
          }

          _converse.emit('controlboxInitialized', this);
        },
        render: function render() {
          if (this.model.get('connected')) {
            if (_.isUndefined(this.model.get('closed'))) {
              this.model.set('closed', !_converse.show_controlbox_by_default);
            }
          }

          this.el.innerHTML = tpl_controlbox(_.extend(this.model.toJSON()));

          if (!this.model.get('closed')) {
            this.show();
          } else {
            this.hide();
          }

          if (!_converse.connection.connected || !_converse.connection.authenticated || _converse.connection.disconnecting) {
            this.renderLoginPanel();
          } else if (this.model.get('connected') && (!this.controlbox_pane || !u.isVisible(this.controlbox_pane.el))) {
            this.renderControlBoxPane();
          }

          return this;
        },
        onConnected: function onConnected() {
          if (this.model.get('connected')) {
            this.render();
            this.insertRoster();
          }
        },
        insertRoster: function insertRoster() {
          var _this = this;

          if (_converse.authentication === _converse.ANONYMOUS) {
            return;
          }
          /* Place the rosterview inside the "Contacts" panel. */


          _converse.api.waitUntil('rosterViewInitialized').then(function () {
            return _this.controlbox_pane.el.insertAdjacentElement('beforeEnd', _converse.rosterview.el);
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        createBrandHeadingHTML: function createBrandHeadingHTML() {
          return tpl_brand_heading({
            'sticky_controlbox': _converse.sticky_controlbox
          });
        },
        insertBrandHeading: function insertBrandHeading() {
          var heading_el = this.el.querySelector('.brand-heading-container');

          if (_.isNull(heading_el)) {
            var el = this.el.querySelector('.controlbox-head');
            el.insertAdjacentHTML('beforeend', this.createBrandHeadingHTML());
          } else {
            heading_el.outerHTML = this.createBrandHeadingHTML();
          }
        },
        renderLoginPanel: function renderLoginPanel() {
          this.el.classList.add("logged-out");

          if (_.isNil(this.loginpanel)) {
            this.loginpanel = new _converse.LoginPanel({
              'model': new _converse.LoginPanelModel()
            });
            var panes = this.el.querySelector('.controlbox-panes');
            panes.innerHTML = '';
            panes.appendChild(this.loginpanel.render().el);
            this.insertBrandHeading();
          } else {
            this.loginpanel.render();
          }

          return this;
        },
        renderControlBoxPane: function renderControlBoxPane() {
          /* Renders the "Contacts" panel of the controlbox.
           *
           * This will only be called after the user has already been
           * logged in.
           */
          if (this.loginpanel) {
            this.loginpanel.remove();
            delete this.loginpanel;
          }

          this.el.classList.remove("logged-out");
          this.controlbox_pane = new _converse.ControlBoxPane();
          this.el.querySelector('.controlbox-panes').insertAdjacentElement('afterBegin', this.controlbox_pane.el);
        },
        close: function close(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (_converse.sticky_controlbox) {
            return;
          }

          if (_converse.connection.connected && !_converse.connection.disconnecting) {
            this.model.save({
              'closed': true
            });
          } else {
            this.model.trigger('hide');
          }

          _converse.emit('controlBoxClosed', this);

          return this;
        },
        ensureClosedState: function ensureClosedState() {
          if (this.model.get('closed')) {
            this.hide();
          } else {
            this.show();
          }
        },
        hide: function hide(callback) {
          if (_converse.sticky_controlbox) {
            return;
          }

          u.addClass('hidden', this.el);

          _converse.emit('chatBoxClosed', this);

          if (!_converse.connection.connected) {
            _converse.controlboxtoggle.render();
          }

          _converse.controlboxtoggle.show(callback);

          return this;
        },
        onControlBoxToggleHidden: function onControlBoxToggleHidden() {
          this.model.set('closed', false);
          this.el.classList.remove('hidden');

          _converse.emit('controlBoxOpened', this);
        },
        show: function show() {
          _converse.controlboxtoggle.hide(this.onControlBoxToggleHidden.bind(this));

          return this;
        },
        showHelpMessages: function showHelpMessages() {
          /* Override showHelpMessages in ChatBoxView, for now do nothing.
           *
           * Parameters:
           *  (Array) msgs: Array of messages
           */
          return;
        }
      });
      _converse.LoginPanelModel = Backbone.Model.extend({
        defaults: {
          // Passed-by-reference. Fine in this case because there's
          // only one such model.
          'errors': []
        }
      });
      _converse.LoginPanel = Backbone.VDOMView.extend({
        tagName: 'div',
        id: "converse-login-panel",
        className: 'controlbox-pane fade-in',
        events: {
          'submit form#converse-login': 'authenticate',
          'change input': 'validate'
        },
        initialize: function initialize(cfg) {
          this.model.on('change', this.render, this);
          this.listenTo(_converse.connfeedback, 'change', this.render);
          this.render();

          _.forEach(this.el.querySelectorAll('[data-title]'), function (el) {
            var popover = new bootstrap.Popover(el, {
              'trigger': _converse.view_mode === 'mobile' && 'click' || 'hover',
              'dismissible': _converse.view_mode === 'mobile' && true || false,
              'container': _converse.chatboxviews.el
            });
          });
        },
        toHTML: function toHTML() {
          var connection_status = _converse.connfeedback.get('connection_status');

          var feedback_class, pretty_status;

          if (_.includes(REPORTABLE_STATUSES, connection_status)) {
            pretty_status = PRETTY_CONNECTION_STATUS[connection_status];
            feedback_class = CONNECTION_STATUS_CSS_CLASS[pretty_status];
          }

          return tpl_login_panel(_.extend(this.model.toJSON(), {
            '__': __,
            '_converse': _converse,
            'ANONYMOUS': _converse.ANONYMOUS,
            'EXTERNAL': _converse.EXTERNAL,
            'LOGIN': _converse.LOGIN,
            'PREBIND': _converse.PREBIND,
            'auto_login': _converse.auto_login,
            'authentication': _converse.authentication,
            'connection_status': connection_status,
            'conn_feedback_class': feedback_class,
            'conn_feedback_subject': pretty_status,
            'conn_feedback_message': _converse.connfeedback.get('message'),
            'placeholder_username': (_converse.locked_domain || _converse.default_domain) && __('Username') || __('user@domain')
          }));
        },
        validate: function validate() {
          var form = this.el.querySelector('form');
          var jid_element = form.querySelector('input[name=jid]');

          if (jid_element.value && !_converse.locked_domain && !_converse.default_domain && !u.isValidJID(jid_element.value)) {
            jid_element.setCustomValidity(__('Please enter a valid XMPP address'));
            return false;
          }

          jid_element.setCustomValidity('');
          return true;
        },
        authenticate: function authenticate(ev) {
          /* Authenticate the user based on a form submission event.
           */
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (_converse.authentication === _converse.ANONYMOUS) {
            this.connect(_converse.jid, null);
            return;
          }

          if (!this.validate()) {
            return;
          }

          var form_data = new FormData(ev.target);

          _converse.config.save({
            'trusted': form_data.get('trusted') && true || false,
            'storage': form_data.get('trusted') ? 'local' : 'session'
          });

          var jid = form_data.get('jid');

          if (_converse.locked_domain) {
            var last_part = '@' + _converse.locked_domain;

            if (jid.endsWith(last_part)) {
              jid = jid.substr(0, jid.length - last_part.length);
            }

            jid = Strophe.escapeNode(jid) + last_part;
          } else if (_converse.default_domain && !_.includes(jid, '@')) {
            jid = jid + '@' + _converse.default_domain;
          }

          this.connect(jid, form_data.get('password'));
        },
        connect: function connect(jid, password) {
          if (jid) {
            var resource = Strophe.getResourceFromJid(jid);

            if (!resource) {
              jid = jid.toLowerCase() + _converse.generateResource();
            } else {
              jid = Strophe.getBareJidFromJid(jid).toLowerCase() + '/' + resource;
            }
          }

          if (_.includes(["converse/login", "converse/register"], Backbone.history.getFragment())) {
            _converse.router.navigate('', {
              'replace': true
            });
          }

          _converse.connection.reset();

          _converse.connection.connect(jid, password, _converse.onConnectStatusChanged);
        }
      });
      _converse.ControlBoxPane = Backbone.NativeView.extend({
        tagName: 'div',
        className: 'controlbox-pane',
        initialize: function initialize() {
          _converse.xmppstatusview = new _converse.XMPPStatusView({
            'model': _converse.xmppstatus
          });
          this.el.insertAdjacentElement('afterBegin', _converse.xmppstatusview.render().el);
        }
      });
      _converse.ControlBoxToggle = Backbone.NativeView.extend({
        tagName: 'a',
        className: 'toggle-controlbox hidden',
        id: 'toggle-controlbox',
        events: {
          'click': 'onClick'
        },
        attributes: {
          'href': "#"
        },
        initialize: function initialize() {
          _converse.chatboxviews.insertRowColumn(this.render().el);

          _converse.api.waitUntil('initialized').then(this.render.bind(this)).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        render: function render() {
          // We let the render method of ControlBoxView decide whether
          // the ControlBox or the Toggle must be shown. This prevents
          // artifacts (i.e. on page load the toggle is shown only to then
          // seconds later be hidden in favor of the control box).
          this.el.innerHTML = tpl_controlbox_toggle({
            'label_toggle': _converse.connection.connected ? __('Chat Contacts') : __('Toggle chat')
          });
          return this;
        },
        hide: function hide(callback) {
          u.hideElement(this.el);
          callback();
        },
        show: function show(callback) {
          u.fadeIn(this.el, callback);
        },
        showControlBox: function showControlBox() {
          var controlbox = _converse.chatboxes.get('controlbox');

          if (!controlbox) {
            controlbox = _converse.addControlBox();
          }

          if (_converse.connection.connected) {
            controlbox.save({
              closed: false
            });
          } else {
            controlbox.trigger('show');
          }
        },
        onClick: function onClick(e) {
          e.preventDefault();

          if (u.isVisible(_converse.root.querySelector("#controlbox"))) {
            var controlbox = _converse.chatboxes.get('controlbox');

            if (_converse.connection.connected) {
              controlbox.save({
                closed: true
              });
            } else {
              controlbox.trigger('hide');
            }
          } else {
            this.showControlBox();
          }
        }
      });

      _converse.on('chatBoxViewsInitialized', function () {
        var that = _converse.chatboxviews;

        _converse.chatboxes.on('add', function (item) {
          if (item.get('type') === _converse.CONTROLBOX_TYPE) {
            var view = that.get(item.get('id'));

            if (view) {
              view.model = item;
              view.initialize();
            } else {
              that.add(item.get('id'), new _converse.ControlBoxView({
                model: item
              }));
            }
          }
        });
      });

      _converse.on('clearSession', function () {
        if (_converse.config.get('trusted')) {
          var chatboxes = _.get(_converse, 'chatboxes', null);

          if (!_.isNil(chatboxes)) {
            var controlbox = chatboxes.get('controlbox');

            if (controlbox && controlbox.collection && controlbox.collection.browserStorage) {
              controlbox.save({
                'connected': false
              });
            }
          }
        }
      });

      Promise.all([_converse.api.waitUntil('connectionInitialized'), _converse.api.waitUntil('chatBoxViewsInitialized')]).then(_converse.addControlBox).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));

      _converse.on('chatBoxesFetched', function () {
        var controlbox = _converse.chatboxes.get('controlbox') || _converse.addControlBox();

        controlbox.save({
          connected: true
        });
      });

      var disconnect = function disconnect() {
        /* Upon disconnection, set connected to `false`, so that if
         * we reconnect, "onConnected" will be called,
         * to fetch the roster again and to send out a presence stanza.
         */
        var view = _converse.chatboxviews.get('controlbox');

        view.model.set({
          'connected': false
        });
        return view;
      };

      _converse.on('disconnected', function () {
        return disconnect().renderLoginPanel();
      });

      _converse.on('will-reconnect', disconnect);
    }
  });
});

/***/ }),

/***/ "./src/converse-core.js":
/*!******************************!*\
  !*** ./src/converse-core.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

// Converse.js
// https://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! sizzle */ "./node_modules/sizzle/dist/sizzle.js"), __webpack_require__(/*! es6-promise */ "es6-promise"), __webpack_require__(/*! lodash.noconflict */ "lodash.noconflict"), __webpack_require__(/*! lodash.fp */ "./src/lodash.fp.js"), __webpack_require__(/*! polyfill */ "./src/polyfill.js"), __webpack_require__(/*! i18n */ "./src/i18n.js"), __webpack_require__(/*! utils/core */ "./src/utils/core.js"), __webpack_require__(/*! moment */ "moment"), __webpack_require__(/*! strophe */ "strophe"), __webpack_require__(/*! pluggable */ "./node_modules/pluggable.js/dist/pluggable.js"), __webpack_require__(/*! backbone.noconflict */ "./src/backbone.noconflict.js"), __webpack_require__(/*! backbone.nativeview */ "./node_modules/backbone.nativeview/backbone.nativeview.js"), __webpack_require__(/*! backbone.browserStorage */ "backbone.browserStorage")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (sizzle, Promise, _, f, polyfill, i18n, u, moment, Strophe, pluggable, Backbone) {
  "use strict"; // Strophe globals

  var _Strophe = Strophe,
      $build = _Strophe.$build,
      $iq = _Strophe.$iq,
      $msg = _Strophe.$msg,
      $pres = _Strophe.$pres;
  var b64_sha1 = Strophe.SHA1.b64_sha1;
  Strophe = Strophe.Strophe; // Add Strophe Namespaces

  Strophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');
  Strophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');
  Strophe.addNamespace('CSI', 'urn:xmpp:csi:0');
  Strophe.addNamespace('DELAY', 'urn:xmpp:delay');
  Strophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');
  Strophe.addNamespace('HINTS', 'urn:xmpp:hints');
  Strophe.addNamespace('HTTPUPLOAD', 'urn:xmpp:http:upload:0');
  Strophe.addNamespace('MAM', 'urn:xmpp:mam:2');
  Strophe.addNamespace('NICK', 'http://jabber.org/protocol/nick');
  Strophe.addNamespace('OUTOFBAND', 'jabber:x:oob');
  Strophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');
  Strophe.addNamespace('ROSTERX', 'http://jabber.org/protocol/rosterx');
  Strophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');
  Strophe.addNamespace('SID', 'urn:xmpp:sid:0');
  Strophe.addNamespace('SPOILER', 'urn:xmpp:spoiler:0');
  Strophe.addNamespace('VCARD', 'vcard-temp');
  Strophe.addNamespace('VCARDUPDATE', 'vcard-temp:x:update');
  Strophe.addNamespace('XFORM', 'jabber:x:data'); // Use Mustache style syntax for variable interpolation

  /* Configuration of Lodash templates (this config is distinct to the
   * config of requirejs-tpl in main.js). This one is for normal inline templates.
   */

  _.templateSettings = {
    'escape': /\{\{\{([\s\S]+?)\}\}\}/g,
    'evaluate': /\{\[([\s\S]+?)\]\}/g,
    'interpolate': /\{\{([\s\S]+?)\}\}/g,
    'imports': {
      '_': _
    }
  };
  /** 
   * A private, closured object containing the private api (via `_converse.api`)
   * as well as private methods and internal data-structures.
   *
   * @namespace _converse
   */

  var _converse = {
    'templates': {},
    'promises': {}
  };

  _.extend(_converse, Backbone.Events); // Core plugins are whitelisted automatically


  _converse.core_plugins = ['converse-autocomplete', 'converse-bookmarks', 'converse-caps', 'converse-chatboxes', 'converse-chatboxviews', 'converse-chatview', 'converse-controlbox', 'converse-core', 'converse-disco', 'converse-dragresize', 'converse-embedded', 'converse-fullscreen', 'converse-headline', 'converse-mam', 'converse-message-view', 'converse-minimize', 'converse-modal', 'converse-muc', 'converse-muc-views', 'converse-notification', 'converse-omemo', 'converse-ping', 'converse-profile', 'converse-push', 'converse-register', 'converse-roomslist', 'converse-roster', 'converse-rosterview', 'converse-singleton', 'converse-spoilers', 'converse-vcard']; // Setting wait to 59 instead of 60 to avoid timing conflicts with the
  // webserver, which is often also set to 60 and might therefore sometimes
  // return a 504 error page instead of passing through to the BOSH proxy.

  var BOSH_WAIT = 59; // Make converse pluggable

  pluggable.enable(_converse, '_converse', 'pluggable');
  _converse.keycodes = {
    TAB: 9,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESCAPE: 27,
    UP_ARROW: 38,
    DOWN_ARROW: 40,
    FORWARD_SLASH: 47,
    AT: 50,
    META: 91,
    META_RIGHT: 93
  }; // Module-level constants

  _converse.STATUS_WEIGHTS = {
    'offline': 6,
    'unavailable': 5,
    'xa': 4,
    'away': 3,
    'dnd': 2,
    'chat': 1,
    // We currently don't differentiate between "chat" and "online"
    'online': 1
  };
  _converse.PRETTY_CHAT_STATUS = {
    'offline': 'Offline',
    'unavailable': 'Unavailable',
    'xa': 'Extended Away',
    'away': 'Away',
    'dnd': 'Do not disturb',
    'chat': 'Chattty',
    'online': 'Online'
  };
  _converse.ANONYMOUS = "anonymous";
  _converse.CLOSED = 'closed';
  _converse.EXTERNAL = "external";
  _converse.LOGIN = "login";
  _converse.LOGOUT = "logout";
  _converse.OPENED = 'opened';
  _converse.PREBIND = "prebind";
  _converse.IQ_TIMEOUT = 20000;
  _converse.CONNECTION_STATUS = {
    0: 'ERROR',
    1: 'CONNECTING',
    2: 'CONNFAIL',
    3: 'AUTHENTICATING',
    4: 'AUTHFAIL',
    5: 'CONNECTED',
    6: 'DISCONNECTED',
    7: 'DISCONNECTING',
    8: 'ATTACHED',
    9: 'REDIRECT',
    10: 'RECONNECTING'
  };
  _converse.SUCCESS = 'success';
  _converse.FAILURE = 'failure';
  _converse.DEFAULT_IMAGE_TYPE = 'image/png';
  _converse.DEFAULT_IMAGE = "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAIAAABt+uBvAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH3gwHCy455JBsggAABkJJREFUeNrtnM1PE1sUwHvvTD8otWLHST/Gimi1CEgr6M6FEWuIBo2pujDVsNDEP8GN/4MbN7oxrlipG2OCgZgYlxAbkRYw1KqkIDRCSkM7nXvvW8x7vjyNeQ9m7p1p3z1LQk/v/Dhz7vkEXL161cHl9wI5Ag6IA+KAOCAOiAPigDggLhwQB2S+iNZ+PcYY/SWEEP2HAAAIoSAIoihCCP+ngDDGtVotGAz29/cfOXJEUZSOjg6n06lp2sbGRqlUWlhYyGazS0tLbrdbEASrzgksyeYJId3d3el0uqenRxRFAAAA4KdfIIRgjD9+/Pj8+fOpqSndslofEIQwHA6Pjo4mEon//qmFhYXHjx8vLi4ihBgDEnp7e9l8E0Jo165dQ0NDd+/eDYVC2/qsJElDQ0OEkKWlpa2tLZamxAhQo9EIBoOjo6MXL17csZLe3l5FUT59+lQul5l5JRaAVFWNRqN37tw5ceKEQVWRSOTw4cOFQuHbt2+iKLYCIISQLMu3b99OJpOmKAwEAgcPHszn8+vr6wzsiG6UQQhxuVyXLl0aGBgwUW0sFstkMl6v90fo1KyAMMYDAwPnzp0zXfPg4GAqlWo0Gk0MiBAiy/L58+edTqf5Aa4onj59OhaLYYybFRCEMBaL0fNxBw4cSCQStN0QRUBut3t4eJjq6U+dOiVJElVPRBFQIBDo6+ujCqirqyscDlONGykC2lYyYSR6pBoQQapHZwAoHo/TuARYAOrs7GQASFEUqn6aIiBJkhgA6ujooFpUo6iaTa7koFwnaoWadLNe81tbWwzoaJrWrICWl5cZAFpbW6OabVAEtLi4yABQsVjUNK0pAWWzWQaAcrlcswKanZ1VVZUqHYRQEwOq1Wpv3ryhCmh6erpcLjdrNl+v1ycnJ+l5UELI27dvv3//3qxxEADgy5cvExMT9Mznw4cPtFtAdAPFarU6Pj5eKpVM17yxsfHy5cvV1VXazXu62gVBKBQKT58+rdVqJqrFGL948eLdu3dU8/g/H4FBUaJYLAqC0NPTY9brMD4+PjY25mDSracOCABACJmZmXE6nUePHjWu8NWrV48ePSKEsGlAs7Agfd5nenq6Wq0mk0kjDzY2NvbkyRMIIbP2PLvhBUEQ8vl8NpuNx+M+n29bzhVjvLKycv/+/YmJCcazQuwA6YzW1tYmJyf1SY+2trZ/rRk1Go1SqfT69esHDx4UCgVmNaa/zZ/9ABUhRFXVYDB48uTJeDweiUQkSfL7/T9MA2NcqVTK5fLy8vL8/PzU1FSxWHS5XJaM4wGr9sUwxqqqer3eUCgkSZJuUBBCfTRvc3OzXC6vrKxUKhWn02nhCJ5lM4oQQo/HgxD6+vXr58+fHf8sDOp+HQDg8XgclorFU676dKLlo6yWRdItIBwQB8QBcUCtfosRQjRNQwhhjPUC4w46WXryBSHU1zgEQWBz99EFhDGu1+t+v//48ePxeFxRlD179ng8nh0Efgiher2+vr6ur3HMzMysrq7uTJVdACGEurq6Ll++nEgkPB7Pj9jPoDHqOxyqqubz+WfPnuVyuV9XPeyeagAAAoHArVu3BgcHab8CuVzu4cOHpVKJUnfA5GweY+xyuc6cOXPv3r1IJMLAR8iyPDw8XK/Xi8Wiqqqmm5KZgBBC7e3tN27cuHbtGuPVpf7+/lAoNDs7W61WzfVKpgHSSzw3b95MpVKW3MfRaDQSiczNzVUqFRMZmQOIEOL1eq9fv3727FlL1t50URRFluX5+flqtWpWEGAOIFEUU6nUlStXLKSjy759+xwOx9zcnKZpphzGHMzhcDiTydgk9r1w4YIp7RPTAAmCkMlk2FeLf/tIEKbTab/fbwtAhJBoNGrutpNx6e7uPnTokC1eMU3T0um0DZPMkZER6wERQnw+n/FFSxpy7Nix3bt3WwwIIcRgIWnHkkwmjecfRgGx7DtuV/r6+iwGhDHev3+/bQF1dnYaH6E2CkiWZdsC2rt3r8WAHA5HW1ubbQGZcjajgOwTH/4qNko1Wlg4IA6IA+KAOKBWBUQIsfNojyliKIoRRfH9+/dut9umf3wzpoUNNQ4BAJubmwz+ic+OxefzWWlBhJD29nbug7iT5sIBcUAcEAfEAXFAHBAHxOVn+QMrmWpuPZx12gAAAABJRU5ErkJggg==";
  _converse.TIMEOUTS = {
    // Set as module attr so that we can override in tests.
    'PAUSED': 10000,
    'INACTIVE': 90000
  }; // XEP-0085 Chat states
  // http://xmpp.org/extensions/xep-0085.html

  _converse.INACTIVE = 'inactive';
  _converse.ACTIVE = 'active';
  _converse.COMPOSING = 'composing';
  _converse.PAUSED = 'paused';
  _converse.GONE = 'gone'; // Chat types

  _converse.PRIVATE_CHAT_TYPE = 'chatbox';
  _converse.CHATROOMS_TYPE = 'chatroom';
  _converse.HEADLINES_TYPE = 'headline';
  _converse.CONTROLBOX_TYPE = 'controlbox'; // Default configuration values
  // ----------------------------

  _converse.default_settings = {
    allow_non_roster_messaging: false,
    animate: true,
    authentication: 'login',
    // Available values are "login", "prebind", "anonymous" and "external".
    auto_away: 0,
    // Seconds after which user status is set to 'away'
    auto_login: false,
    // Currently only used in connection with anonymous login
    auto_reconnect: true,
    auto_xa: 0,
    // Seconds after which user status is set to 'xa'
    blacklisted_plugins: [],
    bosh_service_url: undefined,
    connection_options: {},
    credentials_url: null,
    // URL from where login credentials can be fetched
    csi_waiting_time: 0,
    // Support for XEP-0352. Seconds before client is considered idle and CSI is sent out.
    debug: false,
    default_state: 'online',
    expose_rid_and_sid: false,
    geouri_regex: /https:\/\/www.openstreetmap.org\/.*#map=[0-9]+\/([\-0-9.]+)\/([\-0-9.]+)\S*/g,
    geouri_replacement: 'https://www.openstreetmap.org/?mlat=$1&mlon=$2#map=18/$1/$2',
    jid: undefined,
    keepalive: true,
    locales_url: 'locale/{{{locale}}}/LC_MESSAGES/converse.json',
    locales: ['af', 'ar', 'bg', 'ca', 'cs', 'de', 'es', 'eu', 'en', 'fr', 'he', 'hu', 'id', 'it', 'ja', 'nb', 'nl', 'pl', 'pt_BR', 'ru', 'tr', 'uk', 'zh_CN', 'zh_TW'],
    message_carbons: true,
    nickname: undefined,
    password: undefined,
    prebind_url: null,
    priority: 0,
    rid: undefined,
    root: window.document,
    sid: undefined,
    strict_plugin_dependencies: false,
    trusted: true,
    view_mode: 'overlayed',
    // Choices are 'overlayed', 'fullscreen', 'mobile'
    websocket_url: undefined,
    whitelisted_plugins: []
  };

  _converse.log = function (message, level) {
    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

    /* Logs messages to the browser's developer console.
     *
     * Parameters:
     *      (String) message - The message to be logged.
     *      (Integer) level - The loglevel which allows for filtering of log
     *                       messages.
     *
     *  Available loglevels are 0 for 'debug', 1 for 'info', 2 for 'warn',
     *  3 for 'error' and 4 for 'fatal'.
     *
     *  When using the 'error' or 'warn' loglevels, a full stacktrace will be
     *  logged as well.
     */
    if (level === Strophe.LogLevel.ERROR || level === Strophe.LogLevel.FATAL) {
      style = style || 'color: maroon';
    }

    if (_instanceof(message, Error)) {
      message = message.stack;
    } else if (_.isElement(message)) {
      message = message.outerHTML;
    }

    var prefix = style ? '%c' : '';

    var logger = _.assign({
      'debug': _.get(console, 'log') ? console.log.bind(console) : _.noop,
      'error': _.get(console, 'log') ? console.log.bind(console) : _.noop,
      'info': _.get(console, 'log') ? console.log.bind(console) : _.noop,
      'warn': _.get(console, 'log') ? console.log.bind(console) : _.noop
    }, console);

    if (level === Strophe.LogLevel.ERROR) {
      logger.error("".concat(prefix, " ERROR: ").concat(message), style);
    } else if (level === Strophe.LogLevel.WARN) {
      if (_converse.debug) {
        logger.warn("".concat(prefix, " ").concat(moment().format(), " WARNING: ").concat(message), style);
      }
    } else if (level === Strophe.LogLevel.FATAL) {
      logger.error("".concat(prefix, " FATAL: ").concat(message), style);
    } else if (_converse.debug) {
      if (level === Strophe.LogLevel.DEBUG) {
        logger.debug("".concat(prefix, " ").concat(moment().format(), " DEBUG: ").concat(message), style);
      } else {
        logger.info("".concat(prefix, " ").concat(moment().format(), " INFO: ").concat(message), style);
      }
    }
  };

  Strophe.log = function (level, msg) {
    _converse.log(level + ' ' + msg, level);
  };

  Strophe.error = function (msg) {
    _converse.log(msg, Strophe.LogLevel.ERROR);
  };

  _converse.__ = function (str) {
    /* Translate the given string based on the current locale.
     *
     * Parameters:
     *      (String) str - The string to translate.
     */
    if (_.isUndefined(i18n)) {
      return str;
    }

    return i18n.translate.apply(i18n, arguments);
  };

  var __ = _converse.__;
  var PROMISES = ['initialized', 'connectionInitialized', 'pluginsInitialized', 'statusInitialized'];

  function addPromise(promise) {
    /* Private function, used to add a new promise to the ones already
     * available via the `waitUntil` api method.
     */
    _converse.promises[promise] = u.getResolveablePromise();
  }

  _converse.emit = function (name) {
    /* Event emitter and promise resolver */
    _converse.trigger.apply(this, arguments);

    var promise = _converse.promises[name];

    if (!_.isUndefined(promise)) {
      promise.resolve();
    }
  };

  _converse.isSingleton = function () {
    return _.includes(['mobile', 'fullscreen', 'embedded'], _converse.view_mode);
  };

  _converse.router = new Backbone.Router();

  _converse.initialize = function (settings, callback) {
    var _this = this;

    settings = !_.isUndefined(settings) ? settings : {};
    var init_promise = u.getResolveablePromise();

    _.each(PROMISES, addPromise);

    if (!_.isUndefined(_converse.connection)) {
      // Looks like _converse.initialized was called again without logging
      // out or disconnecting in the previous session.
      // This happens in tests. We therefore first clean up.
      Backbone.history.stop();

      _converse.chatboxviews.closeAllChatBoxes();

      if (_converse.bookmarks) {
        _converse.bookmarks.reset();
      }

      delete _converse.controlboxtoggle;
      delete _converse.chatboxviews;

      _converse.connection.reset();

      _converse.stopListening();

      _converse.tearDown();

      delete _converse.config;

      _converse.initClientConfig();

      _converse.off();
    }

    if ('onpagehide' in window) {
      // Pagehide gets thrown in more cases than unload. Specifically it
      // gets thrown when the page is cached and not just
      // closed/destroyed. It's the only viable event on mobile Safari.
      // https://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/
      _converse.unloadevent = 'pagehide';
    } else if ('onbeforeunload' in window) {
      _converse.unloadevent = 'beforeunload';
    } else if ('onunload' in window) {
      _converse.unloadevent = 'unload';
    }

    _.assignIn(this, this.default_settings); // Allow only whitelisted configuration attributes to be overwritten


    _.assignIn(this, _.pick(settings, _.keys(this.default_settings)));

    if (this.authentication === _converse.ANONYMOUS) {
      if (this.auto_login && !this.jid) {
        throw new Error("Config Error: you need to provide the server's " + "domain via the 'jid' option when using anonymous " + "authentication with auto_login.");
      }
    }
    /* Localisation */


    if (!_.isUndefined(i18n)) {
      i18n.setLocales(settings.i18n, _converse);
    } else {
      _converse.locale = 'en';
    } // Module-level variables
    // ----------------------


    this.callback = callback || _.noop;
    /* When reloading the page:
     * For new sessions, we need to send out a presence stanza to notify
     * the server/network that we're online.
     * When re-attaching to an existing session (e.g. via the keepalive
     * option), we don't need to again send out a presence stanza, because
     * it's as if "we never left" (see onConnectStatusChanged).
     * https://github.com/jcbrand/converse.js/issues/521
     */

    this.send_initial_presence = true;
    this.msg_counter = 0;
    this.user_settings = settings; // Save the user settings so that they can be used by plugins
    // Module-level functions
    // ----------------------

    this.generateResource = function () {
      return "/converse.js-".concat(Math.floor(Math.random() * 139749528).toString());
    };

    this.sendCSI = function (stat) {
      /* Send out a Chat Status Notification (XEP-0352)
       *
       * Parameters:
       *  (String) stat: The user's chat status
       */

      /* Send out a Chat Status Notification (XEP-0352) */
      // XXX if (converse.features[Strophe.NS.CSI] || true) {
      _converse.connection.send($build(stat, {
        xmlns: Strophe.NS.CSI
      }));

      _converse.inactive = stat === _converse.INACTIVE ? true : false;
    };

    this.onUserActivity = function () {
      /* Resets counters and flags relating to CSI and auto_away/auto_xa */
      if (_converse.idle_seconds > 0) {
        _converse.idle_seconds = 0;
      }

      if (!_converse.connection.authenticated) {
        // We can't send out any stanzas when there's no authenticated connection.
        // converse can happen when the connection reconnects.
        return;
      }

      if (_converse.inactive) {
        _converse.sendCSI(_converse.ACTIVE);
      }

      if (_converse.auto_changed_status === true) {
        _converse.auto_changed_status = false; // XXX: we should really remember the original state here, and
        // then set it back to that...

        _converse.xmppstatus.set('status', _converse.default_state);
      }
    };

    this.onEverySecond = function () {
      /* An interval handler running every second.
       * Used for CSI and the auto_away and auto_xa features.
       */
      if (!_converse.connection.authenticated) {
        // We can't send out any stanzas when there's no authenticated connection.
        // This can happen when the connection reconnects.
        return;
      }

      var stat = _converse.xmppstatus.get('status');

      _converse.idle_seconds++;

      if (_converse.csi_waiting_time > 0 && _converse.idle_seconds > _converse.csi_waiting_time && !_converse.inactive) {
        _converse.sendCSI(_converse.INACTIVE);
      }

      if (_converse.auto_away > 0 && _converse.idle_seconds > _converse.auto_away && stat !== 'away' && stat !== 'xa' && stat !== 'dnd') {
        _converse.auto_changed_status = true;

        _converse.xmppstatus.set('status', 'away');
      } else if (_converse.auto_xa > 0 && _converse.idle_seconds > _converse.auto_xa && stat !== 'xa' && stat !== 'dnd') {
        _converse.auto_changed_status = true;

        _converse.xmppstatus.set('status', 'xa');
      }
    };

    this.registerIntervalHandler = function () {
      /* Set an interval of one second and register a handler for it.
       * Required for the auto_away, auto_xa and csi_waiting_time features.
       */
      if (_converse.auto_away < 1 && _converse.auto_xa < 1 && _converse.csi_waiting_time < 1) {
        // Waiting time of less then one second means features aren't used.
        return;
      }

      _converse.idle_seconds = 0;
      _converse.auto_changed_status = false; // Was the user's status changed by _converse.js?

      window.addEventListener('click', _converse.onUserActivity);
      window.addEventListener('focus', _converse.onUserActivity);
      window.addEventListener('keypress', _converse.onUserActivity);
      window.addEventListener('mousemove', _converse.onUserActivity);
      var options = {
        'once': true,
        'passive': true
      };
      window.addEventListener(_converse.unloadevent, _converse.onUserActivity, options);
      _converse.everySecondTrigger = window.setInterval(_converse.onEverySecond, 1000);
    };

    this.setConnectionStatus = function (connection_status, message) {
      _converse.connfeedback.set({
        'connection_status': connection_status,
        'message': message
      });
    };

    this.rejectPresenceSubscription = function (jid, message) {
      /* Reject or cancel another user's subscription to our presence updates.
       *
       *  Parameters:
       *    (String) jid - The Jabber ID of the user whose subscription
       *      is being canceled.
       *    (String) message - An optional message to the user
       */
      var pres = $pres({
        to: jid,
        type: "unsubscribed"
      });

      if (message && message !== "") {
        pres.c("status").t(message);
      }

      _converse.connection.send(pres);
    };

    this.reconnect = _.debounce(function () {
      _converse.log('RECONNECTING');

      _converse.log('The connection has dropped, attempting to reconnect.');

      _converse.setConnectionStatus(Strophe.Status.RECONNECTING, __('The connection has dropped, attempting to reconnect.'));

      _converse.connection.reconnecting = true;

      _converse.tearDown();

      _converse.logIn(null, true);
    }, 3000, {
      'leading': true
    });

    this.disconnect = function () {
      _converse.log('DISCONNECTED');

      delete _converse.connection.reconnecting;

      _converse.connection.reset();

      _converse.tearDown();

      _converse.clearSession();

      _converse.emit('disconnected');
    };

    this.onDisconnected = function () {
      /* Gets called once strophe's status reaches Strophe.Status.DISCONNECTED.
       * Will either start a teardown process for converse.js or attempt
       * to reconnect.
       */
      var reason = _converse.disconnection_reason;

      if (_converse.disconnection_cause === Strophe.Status.AUTHFAIL) {
        if (_converse.credentials_url && _converse.auto_reconnect) {
          /* In this case, we reconnect, because we might be receiving
           * expirable tokens from the credentials_url.
           */
          _converse.emit('will-reconnect');

          return _converse.reconnect();
        } else {
          return _converse.disconnect();
        }
      } else if (_converse.disconnection_cause === _converse.LOGOUT || !_.isUndefined(reason) && reason === _.get(Strophe, 'ErrorCondition.NO_AUTH_MECH') || reason === "host-unknown" || reason === "remote-connection-failed" || !_converse.auto_reconnect) {
        return _converse.disconnect();
      }

      _converse.emit('will-reconnect');

      _converse.reconnect();
    };

    this.setDisconnectionCause = function (cause, reason, override) {
      /* Used to keep track of why we got disconnected, so that we can
       * decide on what the next appropriate action is (in onDisconnected)
       */
      if (_.isUndefined(cause)) {
        delete _converse.disconnection_cause;
        delete _converse.disconnection_reason;
      } else if (_.isUndefined(_converse.disconnection_cause) || override) {
        _converse.disconnection_cause = cause;
        _converse.disconnection_reason = reason;
      }
    };

    this.onConnectStatusChanged = function (status, message) {
      /* Callback method called by Strophe as the Strophe.Connection goes
       * through various states while establishing or tearing down a
       * connection.
       */
      _converse.log("Status changed to: ".concat(_converse.CONNECTION_STATUS[status]));

      if (status === Strophe.Status.CONNECTED || status === Strophe.Status.ATTACHED) {
        _converse.setConnectionStatus(status); // By default we always want to send out an initial presence stanza.


        _converse.send_initial_presence = true;

        _converse.setDisconnectionCause();

        if (_converse.connection.reconnecting) {
          _converse.log(status === Strophe.Status.CONNECTED ? 'Reconnected' : 'Reattached');

          _converse.onConnected(true);
        } else {
          _converse.log(status === Strophe.Status.CONNECTED ? 'Connected' : 'Attached');

          if (_converse.connection.restored) {
            // No need to send an initial presence stanza when
            // we're restoring an existing session.
            _converse.send_initial_presence = false;
          }

          _converse.onConnected();
        }
      } else if (status === Strophe.Status.DISCONNECTED) {
        _converse.setDisconnectionCause(status, message);

        _converse.onDisconnected();
      } else if (status === Strophe.Status.ERROR) {
        _converse.setConnectionStatus(status, __('An error occurred while connecting to the chat server.'));
      } else if (status === Strophe.Status.CONNECTING) {
        _converse.setConnectionStatus(status);
      } else if (status === Strophe.Status.AUTHENTICATING) {
        _converse.setConnectionStatus(status);
      } else if (status === Strophe.Status.AUTHFAIL) {
        if (!message) {
          message = __('Your Jabber ID and/or password is incorrect. Please try again.');
        }

        _converse.setConnectionStatus(status, message);

        _converse.setDisconnectionCause(status, message, true);

        _converse.onDisconnected();
      } else if (status === Strophe.Status.CONNFAIL) {
        var feedback = message;

        if (message === "host-unknown" || message == "remote-connection-failed") {
          feedback = __("Sorry, we could not connect to the XMPP host with domain: %1$s", "\"".concat(Strophe.getDomainFromJid(_converse.connection.jid), "\""));
        } else if (!_.isUndefined(message) && message === _.get(Strophe, 'ErrorCondition.NO_AUTH_MECH')) {
          feedback = __("The XMPP server did not offer a supported authentication mechanism");
        }

        _converse.setConnectionStatus(status, feedback);

        _converse.setDisconnectionCause(status, message);
      } else if (status === Strophe.Status.DISCONNECTING) {
        _converse.setDisconnectionCause(status, message);
      }
    };

    this.incrementMsgCounter = function () {
      this.msg_counter += 1;
      var unreadMsgCount = this.msg_counter;
      var title = document.title;

      if (_.isNil(title)) {
        return;
      }

      if (title.search(/^Messages \(\d+\) /) === -1) {
        title = "Messages (".concat(unreadMsgCount, ") ").concat(title);
      } else {
        title = title.replace(/^Messages \(\d+\) /, "Messages (".concat(unreadMsgCount, ")"));
      }
    };

    this.clearMsgCounter = function () {
      this.msg_counter = 0;
      var title = document.title;

      if (_.isNil(title)) {
        return;
      }

      if (title.search(/^Messages \(\d+\) /) !== -1) {
        title = title.replace(/^Messages \(\d+\) /, "");
      }
    };

    this.initStatus = function (reconnecting) {
      // If there's no xmppstatus obj, then we were never connected to
      // begin with, so we set reconnecting to false.
      reconnecting = _.isUndefined(_converse.xmppstatus) ? false : reconnecting;

      if (reconnecting) {
        _converse.onStatusInitialized(reconnecting);
      } else {
        var id = "converse.xmppstatus-".concat(_converse.bare_jid);
        _this.xmppstatus = new _this.XMPPStatus({
          'id': id
        });
        _this.xmppstatus.browserStorage = new Backbone.BrowserStorage.session(id);

        _this.xmppstatus.fetch({
          'success': _.partial(_converse.onStatusInitialized, reconnecting),
          'error': _.partial(_converse.onStatusInitialized, reconnecting)
        });
      }
    };

    this.initClientConfig = function () {
      /* The client config refers to configuration of the client which is
       * independent of any particular user.
       * What this means is that config values need to persist across
       * user sessions.
       */
      var id = b64_sha1('converse.client-config');
      _converse.config = new Backbone.Model({
        'id': id,
        'trusted': _converse.trusted && true || false,
        'storage': _converse.trusted ? 'local' : 'session'
      });
      _converse.config.browserStorage = new Backbone.BrowserStorage.session(id);

      _converse.config.fetch();

      _converse.emit('clientConfigInitialized');
    };

    this.initSession = function () {
      var id = b64_sha1('converse.bosh-session');
      _converse.session = new Backbone.Model({
        'id': id
      });
      _converse.session.browserStorage = new Backbone.BrowserStorage.session(id);

      _converse.session.fetch();

      _converse.emit('sessionInitialized');
    };

    this.clearSession = function () {
      if (!_converse.config.get('trusted')) {
        window.localStorage.clear();
        window.sessionStorage.clear();
      } else if (!_.isUndefined(this.session) && this.session.browserStorage) {
        this.session.browserStorage._clear();
      }

      _converse.emit('clearSession');
    };

    this.logOut = function () {
      _converse.clearSession();

      _converse.setDisconnectionCause(_converse.LOGOUT, undefined, true);

      if (!_.isUndefined(_converse.connection)) {
        _converse.connection.disconnect();
      } else {
        _converse.tearDown();
      } // Recreate all the promises


      _.each(_.keys(_converse.promises), addPromise);

      _converse.emit('logout');
    };

    this.saveWindowState = function (ev, hidden) {
      // XXX: eventually we should be able to just use
      // document.visibilityState (when we drop support for older
      // browsers).
      var state;
      var event_map = {
        'focus': "visible",
        'focusin': "visible",
        'pageshow': "visible",
        'blur': "hidden",
        'focusout': "hidden",
        'pagehide': "hidden"
      };
      ev = ev || document.createEvent('Events');

      if (ev.type in event_map) {
        state = event_map[ev.type];
      } else {
        state = document[hidden] ? "hidden" : "visible";
      }

      if (state === 'visible') {
        _converse.clearMsgCounter();
      }

      _converse.windowState = state;

      _converse.emit('windowStateChanged', {
        state: state
      });
    };

    this.registerGlobalEventHandlers = function () {
      // Taken from:
      // http://stackoverflow.com/questions/1060008/is-there-a-way-to-detect-if-a-browser-window-is-not-currently-active
      var hidden = "hidden"; // Standards:

      if (hidden in document) {
        document.addEventListener("visibilitychange", _.partial(_converse.saveWindowState, _, hidden));
      } else if ((hidden = "mozHidden") in document) {
        document.addEventListener("mozvisibilitychange", _.partial(_converse.saveWindowState, _, hidden));
      } else if ((hidden = "webkitHidden") in document) {
        document.addEventListener("webkitvisibilitychange", _.partial(_converse.saveWindowState, _, hidden));
      } else if ((hidden = "msHidden") in document) {
        document.addEventListener("msvisibilitychange", _.partial(_converse.saveWindowState, _, hidden));
      } else if ("onfocusin" in document) {
        // IE 9 and lower:
        document.onfocusin = document.onfocusout = _.partial(_converse.saveWindowState, _, hidden);
      } else {
        // All others:
        window.onpageshow = window.onpagehide = window.onfocus = window.onblur = _.partial(_converse.saveWindowState, _, hidden);
      } // set the initial state (but only if browser supports the Page Visibility API)


      if (document[hidden] !== undefined) {
        _.partial(_converse.saveWindowState, _, hidden)({
          type: document[hidden] ? "blur" : "focus"
        });
      }

      _converse.emit('registeredGlobalEventHandlers');
    };

    this.enableCarbons = function () {
      var _this2 = this;

      /* Ask the XMPP server to enable Message Carbons
       * See XEP-0280 https://xmpp.org/extensions/xep-0280.html#enabling
       */
      if (!this.message_carbons || this.session.get('carbons_enabled')) {
        return;
      }

      var carbons_iq = new Strophe.Builder('iq', {
        'from': this.connection.jid,
        'id': 'enablecarbons',
        'type': 'set'
      }).c('enable', {
        xmlns: Strophe.NS.CARBONS
      });
      this.connection.addHandler(function (iq) {
        if (iq.querySelectorAll('error').length > 0) {
          _converse.log('An error occurred while trying to enable message carbons.', Strophe.LogLevel.WARN);
        } else {
          _this2.session.save({
            'carbons_enabled': true
          });

          _converse.log('Message carbons have been enabled.');
        }
      }, null, "iq", null, "enablecarbons");
      this.connection.send(carbons_iq);
    };

    this.sendInitialPresence = function () {
      if (_converse.send_initial_presence) {
        _converse.xmppstatus.sendPresence();
      }
    };

    this.onStatusInitialized = function (reconnecting) {
      _converse.emit('statusInitialized', reconnecting);

      if (reconnecting) {
        _converse.emit('reconnected');
      } else {
        init_promise.resolve();

        _converse.emit('initialized');

        _converse.emit('connected');
      }
    };

    this.setUserJID = function () {
      _converse.jid = _converse.connection.jid;
      _converse.bare_jid = Strophe.getBareJidFromJid(_converse.connection.jid);
      _converse.resource = Strophe.getResourceFromJid(_converse.connection.jid);
      _converse.domain = Strophe.getDomainFromJid(_converse.connection.jid);

      _converse.emit('setUserJID');
    };

    this.onConnected = function (reconnecting) {
      /* Called as soon as a new connection has been established, either
       * by logging in or by attaching to an existing BOSH session.
       */
      _converse.connection.flush(); // Solves problem of returned PubSub BOSH response not received by browser


      _converse.setUserJID();

      _converse.initSession();

      _converse.enableCarbons();

      _converse.initStatus(reconnecting);
    };

    this.ConnectionFeedback = Backbone.Model.extend({
      defaults: {
        'connection_status': Strophe.Status.DISCONNECTED,
        'message': ''
      },
      initialize: function initialize() {
        this.on('change', function () {
          _converse.emit('connfeedback', _converse.connfeedback);
        });
      }
    });
    this.connfeedback = new this.ConnectionFeedback();
    this.XMPPStatus = Backbone.Model.extend({
      defaults: function defaults() {
        return {
          "jid": _converse.bare_jid,
          "status": _converse.default_state
        };
      },
      initialize: function initialize() {
        var _this3 = this;

        this.vcard = _converse.vcards.findWhere({
          'jid': this.get('jid')
        });

        if (_.isNil(this.vcard)) {
          this.vcard = _converse.vcards.create({
            'jid': this.get('jid')
          });
        }

        this.on('change:status', function (item) {
          var status = _this3.get('status');

          _this3.sendPresence(status);

          _converse.emit('statusChanged', status);
        });
        this.on('change:status_message', function () {
          var status_message = _this3.get('status_message');

          _this3.sendPresence(_this3.get('status'), status_message);

          _converse.emit('statusMessageChanged', status_message);
        });
      },
      constructPresence: function constructPresence(type, status_message) {
        var presence;
        type = _.isString(type) ? type : this.get('status') || _converse.default_state;
        status_message = _.isString(status_message) ? status_message : this.get('status_message'); // Most of these presence types are actually not explicitly sent,
        // but I add all of them here for reference and future proofing.

        if (type === 'unavailable' || type === 'probe' || type === 'error' || type === 'unsubscribe' || type === 'unsubscribed' || type === 'subscribe' || type === 'subscribed') {
          presence = $pres({
            'type': type
          });
        } else if (type === 'offline') {
          presence = $pres({
            'type': 'unavailable'
          });
        } else if (type === 'online') {
          presence = $pres();
        } else {
          presence = $pres().c('show').t(type).up();
        }

        if (status_message) {
          presence.c('status').t(status_message).up();
        }

        presence.c('priority').t(_.isNaN(Number(_converse.priority)) ? 0 : _converse.priority);
        return presence;
      },
      sendPresence: function sendPresence(type, status_message) {
        _converse.connection.send(this.constructPresence(type, status_message));
      }
    });

    this.setUpXMLLogging = function () {
      Strophe.log = function (level, msg) {
        _converse.log(msg, level);
      };

      if (this.debug) {
        this.connection.xmlInput = function (body) {
          _converse.log(body.outerHTML, Strophe.LogLevel.DEBUG, 'color: darkgoldenrod');
        };

        this.connection.xmlOutput = function (body) {
          _converse.log(body.outerHTML, Strophe.LogLevel.DEBUG, 'color: darkcyan');
        };
      }
    };

    this.fetchLoginCredentials = function () {
      return new Promise(function (resolve, reject) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', _converse.credentials_url, true);
        xhr.setRequestHeader('Accept', "application/json, text/javascript");

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 400) {
            var data = JSON.parse(xhr.responseText);
            resolve({
              'jid': data.jid,
              'password': data.password
            });
          } else {
            xhr.onerror();
          }
        };

        xhr.onerror = function () {
          delete _converse.connection;

          _converse.emit('noResumeableSession', this);

          reject(xhr.responseText);
        };

        xhr.send();
      });
    };

    this.startNewBOSHSession = function () {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', _converse.prebind_url, true);
      xhr.setRequestHeader('Accept', "application/json, text/javascript");

      xhr.onload = function () {
        if (xhr.status >= 200 && xhr.status < 400) {
          var data = JSON.parse(xhr.responseText);

          _converse.connection.attach(data.jid, data.sid, data.rid, _converse.onConnectStatusChanged);
        } else {
          xhr.onerror();
        }
      };

      xhr.onerror = function () {
        delete _converse.connection;

        _converse.emit('noResumeableSession', this);
      };

      xhr.send();
    };

    this.restoreBOSHSession = function (jid_is_required) {
      /* Tries to restore a cached BOSH session. */
      if (!this.jid) {
        var msg = "restoreBOSHSession: tried to restore a \"keepalive\" session " + "but we don't have the JID for the user!";

        if (jid_is_required) {
          throw new Error(msg);
        } else {
          _converse.log(msg);
        }
      }

      try {
        this.connection.restore(this.jid, this.onConnectStatusChanged);
        return true;
      } catch (e) {
        _converse.log("Could not restore session for jid: " + this.jid + " Error message: " + e.message, Strophe.LogLevel.WARN);

        this.clearSession(); // We want to clear presences (see #555)

        return false;
      }
    };

    this.attemptPreboundSession = function (reconnecting) {
      /* Handle session resumption or initialization when prebind is
       * being used.
       */
      if (!reconnecting) {
        if (this.keepalive && this.restoreBOSHSession(true)) {
          return;
        } // No keepalive, or session resumption has failed.


        if (this.jid && this.sid && this.rid) {
          return this.connection.attach(this.jid, this.sid, this.rid, this.onConnectStatusChanged);
        }
      }

      if (this.prebind_url) {
        return this.startNewBOSHSession();
      } else {
        throw new Error("attemptPreboundSession: If you use prebind and not keepalive, " + "then you MUST supply JID, RID and SID values or a prebind_url.");
      }
    };

    this.attemptNonPreboundSession = function (credentials, reconnecting) {
      /* Handle session resumption or initialization when prebind is not being used.
       *
       * Two potential options exist and are handled in this method:
       *  1. keepalive
       *  2. auto_login
       */
      if (!reconnecting && this.keepalive && this.restoreBOSHSession()) {
        return;
      }

      if (credentials) {
        // When credentials are passed in, they override prebinding
        // or credentials fetching via HTTP
        this.autoLogin(credentials);
      } else if (this.auto_login) {
        if (this.credentials_url) {
          this.fetchLoginCredentials().then(this.autoLogin.bind(this), this.autoLogin.bind(this));
        } else if (!this.jid) {
          throw new Error("attemptNonPreboundSession: If you use auto_login, " + "you also need to give either a jid value (and if " + "applicable a password) or you need to pass in a URL " + "from where the username and password can be fetched " + "(via credentials_url).");
        } else {
          this.autoLogin(); // Could be ANONYMOUS or EXTERNAL
        }
      } else if (reconnecting) {
        this.autoLogin();
      }
    };

    this.autoLogin = function (credentials) {
      if (credentials) {
        // If passed in, the credentials come from credentials_url,
        // so we set them on the converse object.
        this.jid = credentials.jid;
      }

      if (this.authentication === _converse.ANONYMOUS || this.authentication === _converse.EXTERNAL) {
        if (!this.jid) {
          throw new Error("Config Error: when using anonymous login " + "you need to provide the server's domain via the 'jid' option. " + "Either when calling converse.initialize, or when calling " + "_converse.api.user.login.");
        }

        if (!this.connection.reconnecting) {
          this.connection.reset();
        }

        this.connection.connect(this.jid.toLowerCase(), null, this.onConnectStatusChanged, BOSH_WAIT);
      } else if (this.authentication === _converse.LOGIN) {
        var password = _.isNil(credentials) ? _converse.connection.pass || this.password : credentials.password;

        if (!password) {
          if (this.auto_login) {
            throw new Error("initConnection: If you use auto_login and " + "authentication='login' then you also need to provide a password.");
          }

          _converse.setDisconnectionCause(Strophe.Status.AUTHFAIL, undefined, true);

          _converse.disconnect();

          return;
        }

        var resource = Strophe.getResourceFromJid(this.jid);

        if (!resource) {
          this.jid = this.jid.toLowerCase() + _converse.generateResource();
        } else {
          this.jid = Strophe.getBareJidFromJid(this.jid).toLowerCase() + '/' + resource;
        }

        if (!this.connection.reconnecting) {
          this.connection.reset();
        }

        this.connection.connect(this.jid, password, this.onConnectStatusChanged, BOSH_WAIT);
      }
    };

    this.logIn = function (credentials, reconnecting) {
      // We now try to resume or automatically set up a new session.
      // Otherwise the user will be shown a login form.
      if (this.authentication === _converse.PREBIND) {
        this.attemptPreboundSession(reconnecting);
      } else {
        this.attemptNonPreboundSession(credentials, reconnecting);
      }
    };

    this.initConnection = function () {
      /* Creates a new Strophe.Connection instance if we don't already have one.
       */
      if (!this.connection) {
        if (!this.bosh_service_url && !this.websocket_url) {
          throw new Error("initConnection: you must supply a value for either the bosh_service_url or websocket_url or both.");
        }

        if (('WebSocket' in window || 'MozWebSocket' in window) && this.websocket_url) {
          this.connection = new Strophe.Connection(this.websocket_url, this.connection_options);
        } else if (this.bosh_service_url) {
          this.connection = new Strophe.Connection(this.bosh_service_url, _.assignIn(this.connection_options, {
            'keepalive': this.keepalive
          }));
        } else {
          throw new Error("initConnection: this browser does not support websockets and bosh_service_url wasn't specified.");
        }
      }

      _converse.emit('connectionInitialized');
    };

    this.tearDown = function () {
      /* Remove those views which are only allowed with a valid
       * connection.
       */
      _converse.emit('beforeTearDown');

      if (!_.isUndefined(_converse.session)) {
        _converse.session.destroy();
      }

      window.removeEventListener('click', _converse.onUserActivity);
      window.removeEventListener('focus', _converse.onUserActivity);
      window.removeEventListener('keypress', _converse.onUserActivity);
      window.removeEventListener('mousemove', _converse.onUserActivity);
      window.removeEventListener(_converse.unloadevent, _converse.onUserActivity);
      window.clearInterval(_converse.everySecondTrigger);

      _converse.emit('afterTearDown');

      return _converse;
    };

    this.initPlugins = function () {
      // If initialize gets called a second time (e.g. during tests), then we
      // need to re-apply all plugins (for a new converse instance), and we
      // therefore need to clear this array that prevents plugins from being
      // initialized twice.
      // If initialize is called for the first time, then this array is empty
      // in any case.
      _converse.pluggable.initialized_plugins = [];

      var whitelist = _converse.core_plugins.concat(_converse.whitelisted_plugins);

      if (_converse.view_mode === 'embedded') {
        _.forEach([// eslint-disable-line lodash/prefer-map
        "converse-bookmarks", "converse-controlbox", "converse-headline", "converse-register"], function (name) {
          _converse.blacklisted_plugins.push(name);
        });
      }

      _converse.pluggable.initializePlugins({
        'updateSettings': function updateSettings() {
          _converse.log("(DEPRECATION) " + "The `updateSettings` method has been deprecated. " + "Please use `_converse.api.settings.update` instead.", Strophe.LogLevel.WARN);

          _converse.api.settings.update.apply(_converse, arguments);
        },
        '_converse': _converse
      }, whitelist, _converse.blacklisted_plugins);

      _converse.emit('pluginsInitialized');
    }; // Initialization
    // --------------
    // This is the end of the initialize method.


    if (settings.connection) {
      this.connection = settings.connection;
    }

    function finishInitialization() {
      _converse.initPlugins();

      _converse.initClientConfig();

      _converse.initConnection();

      _converse.setUpXMLLogging();

      _converse.logIn();

      _converse.registerGlobalEventHandlers();

      if (!Backbone.history.started) {
        Backbone.history.start();
      }
    }

    if (!_.isUndefined(_converse.connection) && _converse.connection.service === 'jasmine tests') {
      finishInitialization();
      return _converse;
    } else if (_.isUndefined(i18n)) {
      finishInitialization();
    } else {
      i18n.fetchTranslations(_converse.locale, _converse.locales, u.interpolate(_converse.locales_url, {
        'locale': _converse.locale
      })).catch(function (e) {
        return _converse.log(e.message, Strophe.LogLevel.FATAL);
      }).then(finishInitialization).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
    }

    return init_promise;
  };
  /** 
   * ### The private API
   *
   * The private API methods are only accessible via the closured {@link _converse}
   * object, which is only available to plugins.
   * 
   * These methods are kept private (i.e. not global) because they may return
   * sensitive data which should be kept off-limits to other 3rd-party scripts
   * that might be running in the page.
   *
   * @namespace _converse.api
   * @memberOf _converse
   */


  _converse.api = {
    /**
     * This grouping collects API functions related to the XMPP connection.
     *
     * @namespace _converse.api.connection
     * @memberOf _converse.api
     */
    'connection': {
      /**
       * @method _converse.api.connection.connected
       * @memberOf _converse.api.connection
       * @returns {boolean} Whether there is an established connection or not.
       */
      'connected': function connected() {
        return _converse.connection && _converse.connection.connected || false;
      },

      /**
       * Terminates the connection.
       *
       * @method _converse.api.connection.disconnect
       * @memberOf _converse.api.connection
       */
      'disconnect': function disconnect() {
        _converse.connection.disconnect();
      }
    },

    /**
     * Lets you emit (i.e. trigger) events, which can be listened to via
     * {@link _converse.api.listen.on} or {@link _converse.api.listen.once}
     * (see [_converse.api.listen](http://localhost:8000/docs/html/api/-_converse.api.listen.html)).
     *
     * @method _converse.api.emit
     */
    'emit': function emit() {
      _converse.emit.apply(_converse, arguments);
    },

    /**
     * This grouping collects API functions related to the current logged in user.
     *
     * @namespace _converse.api.user
     * @memberOf _converse.api
     */
    'user': {
      /**
       * @method _converse.api.user.jid
       * @returns {string} The current user's full JID (Jabber ID)
       * @example _converse.api.user.jid())
       */
      'jid': function jid() {
        return _converse.connection.jid;
      },

      /**
       * Logs the user in.
       *
       * If called without any parameters, Converse will try
       * to log the user in by calling the `prebind_url` or `credentials_url` depending
       * on whether prebinding is used or not.
       *
       * @method _converse.api.user.login
       * @param {object} [credentials] An object with the credentials.
       * @example
       * converse.plugins.add('myplugin', {
       *     initialize: function () {
       *
       *         this._converse.api.user.login({
       *             'jid': 'dummy@example.com',
       *             'password': 'secret'
       *         });
       *
       *     }
       * });
       */
      'login': function login(credentials) {
        _converse.logIn(credentials);
      },

      /**
       * Logs the user out of the current XMPP session.
       *
       * @method _converse.api.user.logout
       * @example _converse.api.user.logout();
       */
      'logout': function logout() {
        _converse.logOut();
      },

      /**
       * Set and get the user's chat status, also called their *availability*.
       *
       * @namespace _converse.api.user.status
       * @memberOf _converse.api.user
       */
      'status': {
        /** Return the current user's availability status.
         * 
         * @method _converse.api.user.status.get
         * @example _converse.api.user.status.get();
         */
        'get': function get() {
          return _converse.xmppstatus.get('status');
        },

        /** 
         * The user's status can be set to one of the following values:
         *
         * @method _converse.api.user.status.set
         * @param {string} value The user's chat status (e.g. 'away', 'dnd', 'offline', 'online', 'unavailable' or 'xa')
         * @param {string} [message] A custom status message
         *
         * @example this._converse.api.user.status.set('dnd');
         * @example this._converse.api.user.status.set('dnd', 'In a meeting');
         */
        'set': function set(value, message) {
          var data = {
            'status': value
          };

          if (!_.includes(_.keys(_converse.STATUS_WEIGHTS), value)) {
            throw new Error('Invalid availability value. See https://xmpp.org/rfcs/rfc3921.html#rfc.section.2.2.2.1');
          }

          if (_.isString(message)) {
            data.status_message = message;
          }

          _converse.xmppstatus.sendPresence(value);

          _converse.xmppstatus.save(data);
        },

        /**
         * Set and retrieve the user's custom status message.
         *
         * @namespace _converse.api.user.status.message
         * @memberOf _converse.api.user.status
         */
        'message': {
          /**
           * @method _converse.api.user.status.message.get
           * @returns {string} The status message
           * @example const message = _converse.api.user.status.message.get()
           */
          'get': function get() {
            return _converse.xmppstatus.get('status_message');
          },

          /**
           * @method _converse.api.user.status.message.set
           * @param {string} status The status message
           * @example _converse.api.user.status.message.set('In a meeting');
           */
          'set': function set(status) {
            _converse.xmppstatus.save({
              'status_message': status
            });
          }
        }
      }
    },

    /**
     * This grouping allows access to the
     * [configuration settings](/docs/html/configuration.html#configuration-settings)
     * of Converse.
     *
     * @namespace _converse.api.settings
     * @memberOf _converse.api
     */
    'settings': {
      /**
       * Allows new configuration settings to be specified, or new default values for
       * existing configuration settings to be specified.
       *
       * @method _converse.api.settings.update
       * @param {object} settings The configuration settings
       * @example 
       * _converse.api.settings.update({
       *    'enable_foo': true
       * });
       *
       * // The user can then override the default value of the configuration setting when
       * // calling `converse.initialize`.
       * converse.initialize({
       *     'enable_foo': false
       * });
       */
      'update': function update(settings) {
        u.merge(_converse.default_settings, settings);
        u.merge(_converse, settings);
        u.applyUserSettings(_converse, settings, _converse.user_settings);
      },

      /**
       * @method _converse.api.settings.get
       * @returns {*} Value of the particular configuration setting.
       * @example _converse.api.settings.get("play_sounds");
       */
      'get': function get(key) {
        if (_.includes(_.keys(_converse.default_settings), key)) {
          return _converse[key];
        }
      },

      /**
       * Set one or many configuration settings.
       *
       * Note, this is not an alternative to calling {@link converse.initialize}, which still needs
       * to be called. Generally, you'd use this method after Converse is already
       * running and you want to change the configuration on-the-fly.
       *
       * @method _converse.api.settings.set
       * @param {Object} [settings] An object containing configuration settings.
       * @param {string} [key] Alternatively to passing in an object, you can pass in a key and a value.
       * @param {string} [value]
       * @example _converse.api.settings.set("play_sounds", true);
       * @example
       * _converse.api.settings.set({
       *     "play_sounds", true,
       *     "hide_offline_users" true
       * });
       */
      'set': function set(key, val) {
        var o = {};

        if (_.isObject(key)) {
          _.assignIn(_converse, _.pick(key, _.keys(_converse.default_settings)));
        } else if (_.isString("string")) {
          o[key] = val;

          _.assignIn(_converse, _.pick(o, _.keys(_converse.default_settings)));
        }
      }
    },

    /**
     * Converse and its plugins emit various events which you can listen to via the
     * {@link _converse.api.listen} namespace.
     * 
     * Some of these events are also available as [ES2015 Promises](http://es6-features.org/#PromiseUsage)
     * although not all of them could logically act as promises, since some events
     * might be fired multpile times whereas promises are to be resolved (or
     * rejected) only once.
     * 
     * Events which are also promises include:
     * 
     * * [cachedRoster](/docs/html/events.html#cachedroster)
     * * [chatBoxesFetched](/docs/html/events.html#chatBoxesFetched)
     * * [pluginsInitialized](/docs/html/events.html#pluginsInitialized)
     * * [roster](/docs/html/events.html#roster)
     * * [rosterContactsFetched](/docs/html/events.html#rosterContactsFetched)
     * * [rosterGroupsFetched](/docs/html/events.html#rosterGroupsFetched)
     * * [rosterInitialized](/docs/html/events.html#rosterInitialized)
     * * [statusInitialized](/docs/html/events.html#statusInitialized)
     * * [roomsPanelRendered](/docs/html/events.html#roomsPanelRendered)
     * 
     * The various plugins might also provide promises, and they do this by using the
     * `promises.add` api method.
     *
     * @namespace _converse.api.promises
     * @memberOf _converse.api
     */
    'promises': {
      /**
       * By calling `promises.add`, a new [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)
       * is made available for other code or plugins to depend on via the
       * {@link _converse.api.waitUntil} method.
       * 
       * Generally, it's the responsibility of the plugin which adds the promise to
       * also resolve it.
       * 
       * This is done by calling {@link _converse.api.emit}, which not only resolves the
       * promise, but also emits an event with the same name (which can be listened to
       * via {@link _converse.api.listen}).
       * 
       * @method _converse.api.promises.add
       * @param {string|array} [name|names] The name or an array of names for the promise(s) to be added
       * @example _converse.api.promises.add('foo-completed');
       */
      'add': function add(promises) {
        promises = _.isArray(promises) ? promises : [promises];

        _.each(promises, addPromise);
      }
    },

    /**
     * This namespace lets you access the BOSH tokens
     *
     * @namespace _converse.api.tokens
     * @memberOf _converse.api
     */
    'tokens': {
      /**
       * @method _converse.api.tokens.get
       * @param {string} [id] The type of token to return ('rid' or 'sid').
       * @returns 'string' A token, either the RID or SID token depending on what's asked for.
       * @example _converse.api.tokens.get('rid');
       */
      'get': function get(id) {
        if (!_converse.expose_rid_and_sid || _.isUndefined(_converse.connection)) {
          return null;
        }

        if (id.toLowerCase() === 'rid') {
          return _converse.connection.rid || _converse.connection._proto.rid;
        } else if (id.toLowerCase() === 'sid') {
          return _converse.connection.sid || _converse.connection._proto.sid;
        }
      }
    },

    /**
     * Converse emits events to which you can subscribe to.
     * 
     * The `listen` namespace exposes methods for creating event listeners
     * (aka handlers) for these events.
     *
     * @namespace _converse.api.listen
     * @memberOf _converse
     */
    'listen': {
      /**
       * Lets you listen to an event exactly once.
       *
       * @method _converse.api.listen.once
       * @param {string} name The event's name
       * @param {function} callback The callback method to be called when the event is emitted.
       * @param {object} [context] The value of the `this` parameter for the callback.
       * @example _converse.api.listen.once('message', function (messageXML) { ... });
       */
      'once': _converse.once.bind(_converse),

      /**
       * Lets you subscribe to an event.
       *
       * Every time the event fires, the callback method specified by `callback` will be called.
       *
       * @method _converse.api.listen.on
       * @param {string} name The event's name
       * @param {function} callback The callback method to be called when the event is emitted.
       * @param {object} [context] The value of the `this` parameter for the callback.
       * @example _converse.api.listen.on('message', function (messageXML) { ... });
       */
      'on': _converse.on.bind(_converse),

      /**
       * To stop listening to an event, you can use the `not` method.
       *
       * Every time the event fires, the callback method specified by `callback` will be called.
       *
       * @method _converse.api.listen.not
       * @param {string} name The event's name
       * @param {function} callback The callback method that is to no longer be called when the event fires
       * @example _converse.api.listen.not('message', function (messageXML);
       */
      'not': _converse.off.bind(_converse),

      /**
       * Subscribe to an incoming stanza
       *
       * Every a matched stanza is received, the callback method specified by `callback` will be called.
       *
       * @method _converse.api.listen.stanza
       * @param {string} name The stanza's name
       * @param {object} options Matching options
       * (e.g. 'ns' for namespace, 'type' for stanza type, also 'id' and 'from');
       * @param {function} handler The callback method to be called when the stanza appears
       */
      'stanza': function stanza(name, options, handler) {
        if (_.isFunction(options)) {
          handler = options;
          options = {};
        } else {
          options = options || {};
        }

        _converse.connection.addHandler(handler, options.ns, name, options.type, options.id, options.from, options);
      }
    },

    /**
     * Wait until a promise is resolved
     *
     * @method _converse.api.waitUntil
     * @param {string} name The name of the promise
     * @returns {Promise}
     */
    'waitUntil': function waitUntil(name) {
      var promise = _converse.promises[name];

      if (_.isUndefined(promise)) {
        return null;
      }

      return promise;
    },

    /**
     * Allows you to send XML stanzas.
     * 
     * @method _converse.api.send
     * @example
     * const msg = converse.env.$msg({
     *     'from': 'juliet@example.com/balcony',
     *     'to': 'romeo@example.net',
     *     'type':'chat'
     * });
     * _converse.api.send(msg);
     */
    'send': function send(stanza) {
      _converse.connection.send(stanza);
    },

    /**
     * Send an IQ stanza and receive a promise
     *
     * @method _converse.api.sendIQ
     * @returns {Promise} A promise which resolves when we receive a `result` stanza
     * or is rejected when we receive an `error` stanza.
     */
    'sendIQ': function sendIQ(stanza) {
      return new Promise(function (resolve, reject) {
        _converse.connection.sendIQ(stanza, resolve, reject, _converse.IQ_TIMEOUT);
      });
    }
  };
  /**
   * ### The Public API
   *
   * This namespace contains public API methods which are are
   * accessible on the global `converse` object.
   * They are public, because any JavaScript in the
   * page can call them. Public methods therefore don’t expose any sensitive
   * or closured data. To do that, you’ll need to create a plugin, which has
   * access to the private API method.
   *
   * @namespace converse
   */

  var converse = {
    /**
     * Public API method which initializes Converse.
     * This method must always be called when using Converse. 
     *
     * @memberOf converse
     * @method initialize
     * @param {object} config A map of [configuration-settings](https://conversejs.org/docs/html/configuration.html#configuration-settings).
     *
     * @example
     * converse.initialize({
     *     allow_otr: true,
     *     auto_list_rooms: false,
     *     auto_subscribe: false,
     *     bosh_service_url: 'https://bind.example.com',
     *     hide_muc_server: false,
     *     i18n: locales['en'],
     *     keepalive: true,
     *     play_sounds: true,
     *     prebind: false,
     *     show_controlbox_by_default: true,
     *     debug: false,
     *     roster_groups: true
     * });
     */
    'initialize': function initialize(settings, callback) {
      return _converse.initialize(settings, callback);
    },

    /**
     * Exposes methods for adding and removing plugins. You'll need to write a plugin
     * if you want to have access to the private API methods defined further down below.
     * 
     * For more information on plugins, read the documentation on [writing a plugin](/docs/html/plugin_development.html).
     *
     * @namespace plugins
     * @memberOf converse
     */
    'plugins': {
      /** Registers a new plugin.
       * 
       * @method converse.plugins.add
       * @param {string} name The name of the plugin
       * @param {object} plugin The plugin object
       *
       * @example
       * 
       *  const plugin = {
       *      initialize: function () {
       *          // Gets called as soon as the plugin has been loaded.
       * 
       *          // Inside this method, you have access to the private
       *          // API via `_covnerse.api`.
       *
       *          // The private _converse object contains the core logic
       *          // and data-structures of Converse.
       *      }
       *  }
       *  converse.plugins.add('myplugin', plugin);
       */
      'add': function add(name, plugin) {
        plugin.__name__ = name;

        if (!_.isUndefined(_converse.pluggable.plugins[name])) {
          throw new TypeError("Error: plugin with name \"".concat(name, "\" has already been ") + 'registered!');
        } else {
          _converse.pluggable.plugins[name] = plugin;
        }
      }
    },

    /**
     * Utility methods and globals from bundled 3rd party libraries.
     * @memberOf converse
     *
     * @property {function} converse.env.$build    - Creates a Strophe.Builder, for creating stanza objects.
     * @property {function} converse.env.$iq       - Creates a Strophe.Builder with an <iq/> element as the root.
     * @property {function} converse.env.$msg      - Creates a Strophe.Builder with an <message/> element as the root.
     * @property {function} converse.env.$pres     - Creates a Strophe.Builder with an <presence/> element as the root.
     * @property {object} converse.env.Backbone    - The [Backbone](http://backbonejs.org) object used by Converse to create models and views.
     * @property {function} converse.env.Promise   - The Promise implementation used by Converse.
     * @property {function} converse.env.Strophe   - The [Strophe](http://strophe.im/strophejs) XMPP library used by Converse.
     * @property {object} converse.env._           - The instance of [lodash](http://lodash.com) used by Converse.
     * @property {function} converse.env.f         - And instance of Lodash with its methods wrapped to produce immutable auto-curried iteratee-first data-last methods.
     * @property {function} converse.env.b64_sha1  - Utility method from Strophe for creating base64 encoded sha1 hashes.
     * @property {object} converse.env.moment      - [Moment](https://momentjs.com) date manipulation library.
     * @property {function} converse.env.sizzle    - [Sizzle](https://sizzlejs.com) CSS selector engine.
     * @property {object} converse.env.utils       - Module containing common utility methods used by Converse.
     */
    'env': {
      '$build': $build,
      '$iq': $iq,
      '$msg': $msg,
      '$pres': $pres,
      'Backbone': Backbone,
      'Promise': Promise,
      'Strophe': Strophe,
      '_': _,
      'f': f,
      'b64_sha1': b64_sha1,
      'moment': moment,
      'sizzle': sizzle,
      'utils': u
    }
  };
  window.converse = converse;
  window.dispatchEvent(new CustomEvent('converse-loaded'));
  return converse;
});

/***/ }),

/***/ "./src/converse-disco.js":
/*!*******************************!*\
  !*** ./src/converse-disco.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse developers
// Licensed under the Mozilla Public License (MPLv2)

/* This is a Converse plugin which add support for XEP-0030: Service Discovery */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! sizzle */ "./node_modules/sizzle/dist/sizzle.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, sizzle) {
  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      b64_sha1 = _converse$env.b64_sha1,
      utils = _converse$env.utils,
      _ = _converse$env._,
      f = _converse$env.f;
  converse.plugins.add('converse-disco', {
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse; // Promises exposed by this plugin

      _converse.api.promises.add('discoInitialized');

      _converse.DiscoEntity = Backbone.Model.extend({
        /* A Disco Entity is a JID addressable entity that can be queried
         * for features.
         *
         * See XEP-0030: https://xmpp.org/extensions/xep-0030.html
         */
        idAttribute: 'jid',
        initialize: function initialize() {
          this.waitUntilFeaturesDiscovered = utils.getResolveablePromise();
          this.dataforms = new Backbone.Collection();
          this.dataforms.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.dataforms-{this.get('jid')}"));
          this.features = new Backbone.Collection();
          this.features.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.features-".concat(this.get('jid'))));
          this.features.on('add', this.onFeatureAdded, this);
          this.identities = new Backbone.Collection();
          this.identities.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.identities-".concat(this.get('jid'))));
          this.fetchFeatures();
          this.items = new _converse.DiscoEntities();
          this.items.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.disco-items-".concat(this.get('jid'))));
          this.items.fetch();
        },
        getIdentity: function getIdentity(category, type) {
          /* Returns a Promise which resolves with a map indicating
           * whether a given identity is provided.
           *
           * Parameters:
           *    (String) category - The identity category
           *    (String) type - The identity type
           */
          var entity = this;
          return new Promise(function (resolve, reject) {
            function fulfillPromise() {
              var model = entity.identities.findWhere({
                'category': category,
                'type': type
              });
              resolve(model);
            }

            entity.waitUntilFeaturesDiscovered.then(fulfillPromise).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
          });
        },
        hasFeature: function hasFeature(feature) {
          /* Returns a Promise which resolves with a map indicating
           * whether a given feature is supported.
           *
           * Parameters:
           *    (String) feature - The feature that might be supported.
           */
          var entity = this;
          return new Promise(function (resolve, reject) {
            function fulfillPromise() {
              if (entity.features.findWhere({
                'var': feature
              })) {
                resolve(entity);
              } else {
                resolve();
              }
            }

            entity.waitUntilFeaturesDiscovered.then(fulfillPromise).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
          });
        },
        onFeatureAdded: function onFeatureAdded(feature) {
          feature.entity = this;

          _converse.emit('serviceDiscovered', feature);
        },
        fetchFeatures: function fetchFeatures() {
          var _this = this;

          if (this.features.browserStorage.records.length === 0) {
            this.queryInfo();
          } else {
            this.features.fetch({
              add: true,
              success: function success() {
                _this.waitUntilFeaturesDiscovered.resolve(_this);

                _this.trigger('featuresDiscovered');
              }
            });
            this.identities.fetch({
              add: true
            });
          }
        },
        queryInfo: function queryInfo() {
          var _this2 = this;

          _converse.api.disco.info(this.get('jid'), null).then(function (stanza) {
            return _this2.onInfo(stanza);
          }).catch(function (iq) {
            _this2.waitUntilFeaturesDiscovered.resolve(_this2);

            _converse.log(iq, Strophe.LogLevel.ERROR);
          });
        },
        onDiscoItems: function onDiscoItems(stanza) {
          var _this3 = this;

          _.each(sizzle("query[xmlns=\"".concat(Strophe.NS.DISCO_ITEMS, "\"] item"), stanza), function (item) {
            if (item.getAttribute("node")) {
              // XXX: ignore nodes for now.
              // See: https://xmpp.org/extensions/xep-0030.html#items-nodes
              return;
            }

            var jid = item.getAttribute('jid');

            if (_.isUndefined(_this3.items.get(jid))) {
              var entity = _converse.disco_entities.get(jid);

              if (entity) {
                _this3.items.add(entity);
              } else {
                _this3.items.create({
                  'jid': jid
                });
              }
            }
          });
        },
        queryForItems: function queryForItems() {
          var _this4 = this;

          if (_.isEmpty(this.identities.where({
            'category': 'server'
          }))) {
            // Don't fetch features and items if this is not a
            // server or a conference component.
            return;
          }

          _converse.api.disco.items(this.get('jid')).then(function (stanza) {
            return _this4.onDiscoItems(stanza);
          });
        },
        onInfo: function onInfo(stanza) {
          var _this5 = this;

          _.forEach(stanza.querySelectorAll('identity'), function (identity) {
            _this5.identities.create({
              'category': identity.getAttribute('category'),
              'type': identity.getAttribute('type'),
              'name': identity.getAttribute('name')
            });
          });

          _.each(sizzle("x[type=\"result\"][xmlns=\"".concat(Strophe.NS.XFORM, "\"]"), stanza), function (form) {
            var data = {};

            _.each(form.querySelectorAll('field'), function (field) {
              data[field.getAttribute('var')] = {
                'value': _.get(field.querySelector('value'), 'textContent'),
                'type': field.getAttribute('type')
              };
            });

            _this5.dataforms.create(data);
          });

          if (stanza.querySelector("feature[var=\"".concat(Strophe.NS.DISCO_ITEMS, "\"]"))) {
            this.queryForItems();
          }

          _.forEach(stanza.querySelectorAll('feature'), function (feature) {
            _this5.features.create({
              'var': feature.getAttribute('var'),
              'from': stanza.getAttribute('from')
            });
          });

          this.waitUntilFeaturesDiscovered.resolve(this);
          this.trigger('featuresDiscovered');
        }
      });
      _converse.DiscoEntities = Backbone.Collection.extend({
        model: _converse.DiscoEntity,
        fetchEntities: function fetchEntities() {
          var _this6 = this;

          return new Promise(function (resolve, reject) {
            _this6.fetch({
              add: true,
              success: resolve,
              error: function error() {
                reject(new Error("Could not fetch disco entities"));
              }
            });
          });
        }
      });

      function addClientFeatures() {
        // See http://xmpp.org/registrar/disco-categories.html
        _converse.api.disco.own.identities.add('client', 'web', 'Converse');

        _converse.api.disco.own.features.add(Strophe.NS.BOSH);

        _converse.api.disco.own.features.add(Strophe.NS.CHATSTATES);

        _converse.api.disco.own.features.add(Strophe.NS.DISCO_INFO);

        _converse.api.disco.own.features.add(Strophe.NS.ROSTERX); // Limited support


        if (_converse.message_carbons) {
          _converse.api.disco.own.features.add(Strophe.NS.CARBONS);
        }

        _converse.emit('addClientFeatures');

        return this;
      }

      function initStreamFeatures() {
        _converse.stream_features = new Backbone.Collection();
        _converse.stream_features.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.stream-features-".concat(_converse.bare_jid)));

        _converse.stream_features.fetch({
          success: function success(collection) {
            if (collection.length === 0 && _converse.connection.features) {
              _.forEach(_converse.connection.features.childNodes, function (feature) {
                _converse.stream_features.create({
                  'name': feature.nodeName,
                  'xmlns': feature.getAttribute('xmlns')
                });
              });
            }
          }
        });

        _converse.emit('streamFeaturesAdded');
      }

      function initializeDisco() {
        addClientFeatures();

        _converse.connection.addHandler(onDiscoInfoRequest, Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);

        _converse.disco_entities = new _converse.DiscoEntities();
        _converse.disco_entities.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.disco-entities-".concat(_converse.bare_jid)));

        _converse.disco_entities.fetchEntities().then(function (collection) {
          if (collection.length === 0 || !collection.get(_converse.domain)) {
            // If we don't have an entity for our own XMPP server,
            // create one.
            _converse.disco_entities.create({
              'jid': _converse.domain
            });
          }

          _converse.emit('discoInitialized');
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
      }

      _converse.api.listen.on('sessionInitialized', initStreamFeatures);

      _converse.api.listen.on('reconnected', initializeDisco);

      _converse.api.listen.on('connected', initializeDisco);

      _converse.api.listen.on('beforeTearDown', function () {
        if (_converse.disco_entities) {
          _converse.disco_entities.each(function (entity) {
            entity.features.reset();

            entity.features.browserStorage._clear();
          });

          _converse.disco_entities.reset();

          _converse.disco_entities.browserStorage._clear();
        }
      });

      var plugin = this;
      plugin._identities = [];
      plugin._features = [];

      function onDiscoInfoRequest(stanza) {
        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');
        var attrs = {
          xmlns: Strophe.NS.DISCO_INFO
        };

        if (node) {
          attrs.node = node;
        }

        var iqresult = $iq({
          'type': 'result',
          'id': stanza.getAttribute('id')
        });
        var from = stanza.getAttribute('from');

        if (from !== null) {
          iqresult.attrs({
            'to': from
          });
        }

        iqresult.c('query', attrs);

        _.each(plugin._identities, function (identity) {
          var attrs = {
            'category': identity.category,
            'type': identity.type
          };

          if (identity.name) {
            attrs.name = identity.name;
          }

          if (identity.lang) {
            attrs['xml:lang'] = identity.lang;
          }

          iqresult.c('identity', attrs).up();
        });

        _.each(plugin._features, function (feature) {
          iqresult.c('feature', {
            'var': feature
          }).up();
        });

        _converse.connection.send(iqresult.tree());

        return true;
      }

      _.extend(_converse.api, {
        /**
         * The XEP-0030 service discovery API
         *
         * This API lets you discover information about entities on the
         * XMPP network.
         *
         * @namespace _converse.api.disco
         * @memberOf _converse.api
         */
        'disco': {
          /**
           * @namespace _converse.api.disco.stream
           * @memberOf _converse.api.disco
           */
          'stream': {
            /**
             * @method _converse.api.disco.stream.getFeature
             * @param {String} name The feature name
             * @param {String} xmlns The XML namespace
             * @example _converse.api.disco.stream.getFeature('ver', 'urn:xmpp:features:rosterver')
             */
            'getFeature': function getFeature(name, xmlns) {
              if (_.isNil(name) || _.isNil(xmlns)) {
                throw new Error("name and xmlns need to be provided when calling disco.stream.getFeature");
              }

              return _converse.stream_features.findWhere({
                'name': name,
                'xmlns': xmlns
              });
            }
          },

          /**
           * @namespace _converse.api.disco.own
           * @memberOf _converse.api.disco
           */
          'own': {
            /**
             * @namespace _converse.api.disco.own.identities
             * @memberOf _converse.api.disco.own
             */
            'identities': {
              /**
               * Lets you add new identities for this client (i.e. instance of Converse)
               * @method _converse.api.disco.own.identities.add
               *
               * @param {String} category - server, client, gateway, directory, etc.
               * @param {String} type - phone, pc, web, etc.
               * @param {String} name - "Converse"
               * @param {String} lang - en, el, de, etc.
               *
               * @example _converse.api.disco.own.identities.clear();
               */
              add: function add(category, type, name, lang) {
                for (var i = 0; i < plugin._identities.length; i++) {
                  if (plugin._identities[i].category == category && plugin._identities[i].type == type && plugin._identities[i].name == name && plugin._identities[i].lang == lang) {
                    return false;
                  }
                }

                plugin._identities.push({
                  category: category,
                  type: type,
                  name: name,
                  lang: lang
                });
              },

              /**
               * Clears all previously registered identities.
               * @method _converse.api.disco.own.identities.clear
               * @example _converse.api.disco.own.identities.clear();
               */
              clear: function clear() {
                plugin._identities = [];
              },

              /**
               * Returns all of the identities registered for this client
               * (i.e. instance of Converse).
               * @method _converse.api.disco.identities.get
               * @example const identities = _converse.api.disco.own.identities.get();
               */
              get: function get() {
                return plugin._identities;
              }
            },

            /**
             * @namespace _converse.api.disco.own.features
             * @memberOf _converse.api.disco.own
             */
            'features': {
              /**
               * Lets you register new disco features for this client (i.e. instance of Converse)
               * @method _converse.api.disco.own.features.add
               * @param {String} name - e.g. http://jabber.org/protocol/caps
               * @example _converse.api.disco.own.features.add("http://jabber.org/protocol/caps");
               */
              add: function add(name) {
                for (var i = 0; i < plugin._features.length; i++) {
                  if (plugin._features[i] == name) {
                    return false;
                  }
                }

                plugin._features.push(name);
              },

              /**
               * Clears all previously registered features.
               * @method _converse.api.disco.own.features.clear
               * @example _converse.api.disco.own.features.clear();
               */
              clear: function clear() {
                plugin._features = [];
              },

              /**
               * Returns all of the features registered for this client (i.e. instance of Converse).
               * @method _converse.api.disco.own.features.get
               * @example const features = _converse.api.disco.own.features.get();
               */
              get: function get() {
                return plugin._features;
              }
            }
          },

          /**
           * Query for information about an XMPP entity
           *
           * @method _converse.api.disco.info
           * @param {string} jid The Jabber ID of the entity to query
           * @param {string} [node] A specific node identifier associated with the JID
           * @returns {promise} Promise which resolves once we have a result from the server.
           */
          'info': function info(jid, node) {
            var attrs = {
              xmlns: Strophe.NS.DISCO_INFO
            };

            if (node) {
              attrs.node = node;
            }

            var info = $iq({
              'from': _converse.connection.jid,
              'to': jid,
              'type': 'get'
            }).c('query', attrs);
            return _converse.api.sendIQ(info);
          },

          /**
           * Query for items associated with an XMPP entity
           *
           * @method _converse.api.disco.items
           * @param {string} jid The Jabber ID of the entity to query for items
           * @param {string} [node] A specific node identifier associated with the JID
           * @returns {promise} Promise which resolves once we have a result from the server.
           */
          'items': function items(jid, node) {
            var attrs = {
              'xmlns': Strophe.NS.DISCO_ITEMS
            };

            if (node) {
              attrs.node = node;
            }

            return _converse.api.sendIQ($iq({
              'from': _converse.connection.jid,
              'to': jid,
              'type': 'get'
            }).c('query', attrs));
          },

          /**
           * Namespace for methods associated with disco entities
           *
           * @namespace _converse.api.disco.entities
           * @memberOf _converse.api.disco
           */
          'entities': {
            /**
             * Get the the corresponding `DiscoEntity` instance.
             * 
             * @method _converse.api.disco.entities.get
             * @param {string} jid The Jabber ID of the entity
             * @param {boolean} [create] Whether the entity should be created if it doesn't exist.
             * @example _converse.api.disco.entities.get(jid);
             */
            'get': function get(jid) {
              var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
              return _converse.api.waitUntil('discoInitialized').then(function () {
                if (_.isNil(jid)) {
                  return _converse.disco_entities;
                }

                var entity = _converse.disco_entities.get(jid);

                if (entity || !create) {
                  return entity;
                }

                return _converse.disco_entities.create({
                  'jid': jid
                });
              });
            }
          },

          /**
           * Used to determine whether an entity supports a given feature.
           *
           * @method _converse.api.disco.supports
           * @param {string} feature The feature that might be
           *     supported. In the XML stanza, this is the `var`
           *     attribute of the `<feature>` element. For
           *     example: `http://jabber.org/protocol/muc`
           * @param {string} jid The JID of the entity
           *     (and its associated items) which should be queried
           * @returns {promise} A promise which resolves with a list containing
           *     _converse.Entity instances representing the entity
           *     itself or those items associated with the entity if
           *     they support the given feature.
           *
           * @example
           * _converse.api.disco.supports(Strophe.NS.MAM, _converse.bare_jid)
           * .then(value => {
           *     // `value` is a map with two keys, `supported` and `feature`.
           *     if (value.supported) {
           *         // The feature is supported
           *     } else {
           *         // The feature is not supported
           *     }
           * }).catch(() => {
           *     _converse.log(
           *         "Error or timeout while checking for feature support",
           *         Strophe.LogLevel.ERROR
           *     );
           * });
           */
          'supports': function supports(feature, jid) {
            if (_.isNil(jid)) {
              throw new TypeError('disco.supports: You need to provide an entity JID');
            }

            return _converse.api.waitUntil('discoInitialized').then(function () {
              return _converse.api.disco.entities.get(jid, true);
            }).then(function (entity) {
              return entity.waitUntilFeaturesDiscovered;
            }).then(function (entity) {
              var promises = _.concat(entity.items.map(function (item) {
                return item.hasFeature(feature);
              }), entity.hasFeature(feature));

              return Promise.all(promises);
            }).then(function (result) {
              return f.filter(f.isObject, result);
            });
          },

          /**
           * Get the identity (with the given category and type) for a given disco entity.
           *
           * For example, when determining support for PEP (personal eventing protocol), you
           * want to know whether the user's own JID has an identity with
           * `category='pubsub'` and `type='pep'` as explained in this section of
           * XEP-0163: https://xmpp.org/extensions/xep-0163.html#support
           * 
           * @method _converse.api.disco.getIdentity
           * @param {string} The identity category.
           *     In the XML stanza, this is the `category`
           *     attribute of the `<identity>` element.
           *     For example: 'pubsub'
           * @param {string} type The identity type.
           *     In the XML stanza, this is the `type`
           *     attribute of the `<identity>` element.
           *     For example: 'pep'
           * @param {string} jid The JID of the entity which might have the identity
           * @returns {promise} A promise which resolves with a map indicating
           *     whether an identity with a given type is provided by the entity.
           * @example
           * _converse.api.disco.getIdentity('pubsub', 'pep', _converse.bare_jid).then(
           *     function (identity) {
           *         if (_.isNil(identity)) {
           *             // The entity DOES NOT have this identity
           *         } else {
           *             // The entity DOES have this identity
           *         }
           *     }
           * ).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
           */
          'getIdentity': function getIdentity(category, type, jid) {
            return _converse.api.disco.entities.get(jid, true).then(function (e) {
              return e.getIdentity(category, type);
            });
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-dragresize.js":
/*!************************************!*\
  !*** ./src/converse-dragresize.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define, window, document */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/dragresize.html */ "./src/templates/dragresize.html"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js"), __webpack_require__(/*! converse-controlbox */ "./src/converse-controlbox.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_dragresize) {
  "use strict";

  var _ = converse.env._;

  function renderDragResizeHandles(_converse, view) {
    var flyout = view.el.querySelector('.box-flyout');
    var div = document.createElement('div');
    div.innerHTML = tpl_dragresize();
    flyout.insertBefore(div, flyout.firstChild);
  }

  converse.plugins.add('converse-dragresize', {
    /* Plugin dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin.
     *
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found. By default it's
     * false, which means these plugins are only loaded opportunistically.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatview", "converse-headline", "converse-muc-views"],
    enabled: function enabled(_converse) {
      return _converse.view_mode == 'overlayed';
    },
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      registerGlobalEventHandlers: function registerGlobalEventHandlers() {
        var that = this;
        document.addEventListener('mousemove', function (ev) {
          if (!that.resizing || !that.allow_dragresize) {
            return true;
          }

          ev.preventDefault();
          that.resizing.chatbox.resizeChatBox(ev);
        });
        document.addEventListener('mouseup', function (ev) {
          if (!that.resizing || !that.allow_dragresize) {
            return true;
          }

          ev.preventDefault();
          var height = that.applyDragResistance(that.resizing.chatbox.height, that.resizing.chatbox.model.get('default_height'));
          var width = that.applyDragResistance(that.resizing.chatbox.width, that.resizing.chatbox.model.get('default_width'));

          if (that.connection.connected) {
            that.resizing.chatbox.model.save({
              'height': height
            });
            that.resizing.chatbox.model.save({
              'width': width
            });
          } else {
            that.resizing.chatbox.model.set({
              'height': height
            });
            that.resizing.chatbox.model.set({
              'width': width
            });
          }

          that.resizing = null;
        });
        return this.__super__.registerGlobalEventHandlers.apply(this, arguments);
      },
      ChatBox: {
        initialize: function initialize() {
          var _converse = this.__super__._converse;

          var result = this.__super__.initialize.apply(this, arguments),
              height = this.get('height'),
              width = this.get('width'),
              save = this.get('id') === 'controlbox' ? this.set.bind(this) : this.save.bind(this);

          save({
            'height': _converse.applyDragResistance(height, this.get('default_height')),
            'width': _converse.applyDragResistance(width, this.get('default_width'))
          });
          return result;
        }
      },
      ChatBoxView: {
        events: {
          'mousedown .dragresize-top': 'onStartVerticalResize',
          'mousedown .dragresize-left': 'onStartHorizontalResize',
          'mousedown .dragresize-topleft': 'onStartDiagonalResize'
        },
        initialize: function initialize() {
          window.addEventListener('resize', _.debounce(this.setDimensions.bind(this), 100));

          this.__super__.initialize.apply(this, arguments);
        },
        render: function render() {
          var result = this.__super__.render.apply(this, arguments);

          renderDragResizeHandles(this.__super__._converse, this);
          this.setWidth();
          return result;
        },
        setWidth: function setWidth() {
          // If a custom width is applied (due to drag-resizing),
          // then we need to set the width of the .chatbox element as well.
          if (this.model.get('width')) {
            this.el.style.width = this.model.get('width');
          }
        },
        _show: function _show() {
          this.initDragResize().setDimensions();

          this.__super__._show.apply(this, arguments);
        },
        initDragResize: function initDragResize() {
          /* Determine and store the default box size.
           * We need this information for the drag-resizing feature.
           */
          var _converse = this.__super__._converse,
              flyout = this.el.querySelector('.box-flyout'),
              style = window.getComputedStyle(flyout);

          if (_.isUndefined(this.model.get('height'))) {
            var height = parseInt(style.height.replace(/px$/, ''), 10),
                width = parseInt(style.width.replace(/px$/, ''), 10);
            this.model.set('height', height);
            this.model.set('default_height', height);
            this.model.set('width', width);
            this.model.set('default_width', width);
          }

          var min_width = style['min-width'];
          var min_height = style['min-height'];
          this.model.set('min_width', min_width.endsWith('px') ? Number(min_width.replace(/px$/, '')) : 0);
          this.model.set('min_height', min_height.endsWith('px') ? Number(min_height.replace(/px$/, '')) : 0); // Initialize last known mouse position

          this.prev_pageY = 0;
          this.prev_pageX = 0;

          if (_converse.connection.connected) {
            this.height = this.model.get('height');
            this.width = this.model.get('width');
          }

          return this;
        },
        setDimensions: function setDimensions() {
          // Make sure the chat box has the right height and width.
          this.adjustToViewport();
          this.setChatBoxHeight(this.model.get('height'));
          this.setChatBoxWidth(this.model.get('width'));
        },
        setChatBoxHeight: function setChatBoxHeight(height) {
          var _converse = this.__super__._converse;

          if (height) {
            height = _converse.applyDragResistance(height, this.model.get('default_height')) + 'px';
          } else {
            height = "";
          }

          var flyout_el = this.el.querySelector('.box-flyout');

          if (!_.isNull(flyout_el)) {
            flyout_el.style.height = height;
          }
        },
        setChatBoxWidth: function setChatBoxWidth(width) {
          var _converse = this.__super__._converse;

          if (width) {
            width = _converse.applyDragResistance(width, this.model.get('default_width')) + 'px';
          } else {
            width = "";
          }

          this.el.style.width = width;
          var flyout_el = this.el.querySelector('.box-flyout');

          if (!_.isNull(flyout_el)) {
            flyout_el.style.width = width;
          }
        },
        adjustToViewport: function adjustToViewport() {
          /* Event handler called when viewport gets resized. We remove
           * custom width/height from chat boxes.
           */
          var viewport_width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
          var viewport_height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);

          if (viewport_width <= 480) {
            this.model.set('height', undefined);
            this.model.set('width', undefined);
          } else if (viewport_width <= this.model.get('width')) {
            this.model.set('width', undefined);
          } else if (viewport_height <= this.model.get('height')) {
            this.model.set('height', undefined);
          }
        },
        onStartVerticalResize: function onStartVerticalResize(ev) {
          var _converse = this.__super__._converse;

          if (!_converse.allow_dragresize) {
            return true;
          } // Record element attributes for mouseMove().


          var flyout = this.el.querySelector('.box-flyout'),
              style = window.getComputedStyle(flyout);
          this.height = parseInt(style.height.replace(/px$/, ''), 10);
          _converse.resizing = {
            'chatbox': this,
            'direction': 'top'
          };
          this.prev_pageY = ev.pageY;
        },
        onStartHorizontalResize: function onStartHorizontalResize(ev) {
          var _converse = this.__super__._converse;

          if (!_converse.allow_dragresize) {
            return true;
          }

          var flyout = this.el.querySelector('.box-flyout'),
              style = window.getComputedStyle(flyout);
          this.width = parseInt(style.width.replace(/px$/, ''), 10);
          _converse.resizing = {
            'chatbox': this,
            'direction': 'left'
          };
          this.prev_pageX = ev.pageX;
        },
        onStartDiagonalResize: function onStartDiagonalResize(ev) {
          var _converse = this.__super__._converse;
          this.onStartHorizontalResize(ev);
          this.onStartVerticalResize(ev);
          _converse.resizing.direction = 'topleft';
        },
        resizeChatBox: function resizeChatBox(ev) {
          var diff;
          var _converse = this.__super__._converse;

          if (_converse.resizing.direction.indexOf('top') === 0) {
            diff = ev.pageY - this.prev_pageY;

            if (diff) {
              this.height = this.height - diff > (this.model.get('min_height') || 0) ? this.height - diff : this.model.get('min_height');
              this.prev_pageY = ev.pageY;
              this.setChatBoxHeight(this.height);
            }
          }

          if (_.includes(_converse.resizing.direction, 'left')) {
            diff = this.prev_pageX - ev.pageX;

            if (diff) {
              this.width = this.width + diff > (this.model.get('min_width') || 0) ? this.width + diff : this.model.get('min_width');
              this.prev_pageX = ev.pageX;
              this.setChatBoxWidth(this.width);
            }
          }
        }
      },
      HeadlinesBoxView: {
        events: {
          'mousedown .dragresize-top': 'onStartVerticalResize',
          'mousedown .dragresize-left': 'onStartHorizontalResize',
          'mousedown .dragresize-topleft': 'onStartDiagonalResize'
        },
        initialize: function initialize() {
          window.addEventListener('resize', _.debounce(this.setDimensions.bind(this), 100));
          return this.__super__.initialize.apply(this, arguments);
        },
        render: function render() {
          var result = this.__super__.render.apply(this, arguments);

          renderDragResizeHandles(this.__super__._converse, this);
          this.setWidth();
          return result;
        }
      },
      ControlBoxView: {
        events: {
          'mousedown .dragresize-top': 'onStartVerticalResize',
          'mousedown .dragresize-left': 'onStartHorizontalResize',
          'mousedown .dragresize-topleft': 'onStartDiagonalResize'
        },
        initialize: function initialize() {
          window.addEventListener('resize', _.debounce(this.setDimensions.bind(this), 100));

          this.__super__.initialize.apply(this, arguments);
        },
        render: function render() {
          var result = this.__super__.render.apply(this, arguments);

          renderDragResizeHandles(this.__super__._converse, this);
          this.setWidth();
          return result;
        },
        renderLoginPanel: function renderLoginPanel() {
          var result = this.__super__.renderLoginPanel.apply(this, arguments);

          this.initDragResize().setDimensions();
          return result;
        },
        renderControlBoxPane: function renderControlBoxPane() {
          var result = this.__super__.renderControlBoxPane.apply(this, arguments);

          this.initDragResize().setDimensions();
          return result;
        }
      },
      ChatRoomView: {
        events: {
          'mousedown .dragresize-top': 'onStartVerticalResize',
          'mousedown .dragresize-left': 'onStartHorizontalResize',
          'mousedown .dragresize-topleft': 'onStartDiagonalResize'
        },
        initialize: function initialize() {
          window.addEventListener('resize', _.debounce(this.setDimensions.bind(this), 100));

          this.__super__.initialize.apply(this, arguments);
        },
        render: function render() {
          var result = this.__super__.render.apply(this, arguments);

          renderDragResizeHandles(this.__super__._converse, this);
          this.setWidth();
          return result;
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse;

      _converse.api.settings.update({
        allow_dragresize: true
      });

      _converse.applyDragResistance = function (value, default_value) {
        /* This method applies some resistance around the
        * default_value. If value is close enough to
        * default_value, then default_value is returned instead.
        */
        if (_.isUndefined(value)) {
          return undefined;
        } else if (_.isUndefined(default_value)) {
          return value;
        }

        var resistance = 10;

        if (value !== default_value && Math.abs(value - default_value) < resistance) {
          return default_value;
        }

        return value;
      };
    }
  });
});

/***/ }),

/***/ "./src/converse-embedded.js":
/*!**********************************!*\
  !*** ./src/converse-embedded.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-muc */ "./src/converse-muc.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      _ = _converse$env._;
  converse.plugins.add('converse-embedded', {
    enabled: function enabled(_converse) {
      return _converse.view_mode === 'embedded';
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      this._converse.api.settings.update({
        'allow_logout': false,
        // No point in logging out when we have auto_login as true.
        'allow_muc_invitations': false,
        // Doesn't make sense to allow because only
        // roster contacts can be invited
        'hide_muc_server': true
      });

      var _converse = this._converse;

      if (!_.isArray(_converse.auto_join_rooms) && !_.isArray(_converse.auto_join_private_chats)) {
        throw new Error("converse-embedded: auto_join_rooms must be an Array");
      }

      if (_converse.auto_join_rooms.length > 1 && _converse.auto_join_private_chats.length > 1) {
        throw new Error("converse-embedded: It doesn't make " + "sense to have the auto_join_rooms setting more then one, " + "since only one chat room can be open at any time.");
      }
    }
  });
});

/***/ }),

/***/ "./src/converse-fullscreen.js":
/*!************************************!*\
  !*** ./src/converse-fullscreen.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) JC Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/inverse_brand_heading.html */ "./src/templates/inverse_brand_heading.html"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js"), __webpack_require__(/*! converse-controlbox */ "./src/converse-controlbox.js"), __webpack_require__(/*! converse-muc */ "./src/converse-muc.js"), __webpack_require__(/*! converse-singleton */ "./src/converse-singleton.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_brand_heading) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      _ = _converse$env._;
  converse.plugins.add('converse-fullscreen', {
    enabled: function enabled(_converse) {
      return _.includes(['fullscreen', 'embedded'], _converse.view_mode);
    },
    overrides: {
      // overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // new functions which don't exist yet can also be added.
      ControlBoxView: {
        createBrandHeadingHTML: function createBrandHeadingHTML() {
          return tpl_brand_heading();
        },
        insertBrandHeading: function insertBrandHeading() {
          var _converse = this.__super__._converse;

          var el = _converse.root.getElementById('converse-login-panel');

          el.parentNode.insertAdjacentHTML('afterbegin', this.createBrandHeadingHTML());
        }
      }
    },
    initialize: function initialize() {
      this._converse.api.settings.update({
        chatview_avatar_height: 50,
        chatview_avatar_width: 50,
        hide_open_bookmarks: true,
        show_controlbox_by_default: true,
        sticky_controlbox: true
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-headline.js":
/*!**********************************!*\
  !*** ./src/converse-headline.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/chatbox.html */ "./src/templates/chatbox.html"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_chatbox) {
  "use strict";

  var _converse$env = converse.env,
      _ = _converse$env._,
      utils = _converse$env.utils;
  converse.plugins.add('converse-headline', {
    /* Plugin dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin.
     *
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found. By default it's
     * false, which means these plugins are only loaded opportunistically.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatview"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      ChatBoxes: {
        model: function model(attrs, options) {
          var _converse = this.__super__._converse;

          if (attrs.type == _converse.HEADLINES_TYPE) {
            return new _converse.HeadlinesBox(attrs, options);
          } else {
            return this.__super__.model.apply(this, arguments);
          }
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;
      _converse.HeadlinesBox = _converse.ChatBox.extend({
        defaults: {
          'type': _converse.HEADLINES_TYPE,
          'bookmarked': false,
          'chat_state': undefined,
          'num_unread': 0,
          'url': ''
        }
      });
      _converse.HeadlinesBoxView = _converse.ChatBoxView.extend({
        className: 'chatbox headlines',
        events: {
          'click .close-chatbox-button': 'close',
          'click .toggle-chatbox-button': 'minimize',
          'keypress textarea.chat-textarea': 'keyPressed'
        },
        initialize: function initialize() {
          this.initDebounced();
          this.disable_mam = true; // Don't do MAM queries for this box

          this.model.messages.on('add', this.onMessageAdded, this);
          this.model.on('show', this.show, this);
          this.model.on('destroy', this.hide, this);
          this.model.on('change:minimized', this.onMinimizedChanged, this);
          this.render().insertHeading().fetchMessages().insertIntoDOM().hide();

          _converse.emit('chatBoxOpened', this);

          _converse.emit('chatBoxInitialized', this);
        },
        render: function render() {
          this.el.setAttribute('id', this.model.get('box_id'));
          this.el.innerHTML = tpl_chatbox(_.extend(this.model.toJSON(), {
            info_close: '',
            label_personal_message: '',
            show_send_button: false,
            show_toolbar: false,
            unread_msgs: ''
          }));
          this.content = this.el.querySelector('.chat-content');
          return this;
        },
        // Override to avoid the methods in converse-chatview.js
        'renderMessageForm': _.noop,
        'afterShown': _.noop
      });

      function onHeadlineMessage(message) {
        /* Handler method for all incoming messages of type "headline". */
        var from_jid = message.getAttribute('from');

        if (utils.isHeadlineMessage(_converse, message)) {
          if (_.includes(from_jid, '@') && !_converse.allow_non_roster_messaging) {
            return;
          }

          var chatbox = _converse.chatboxes.create({
            'id': from_jid,
            'jid': from_jid,
            'type': _converse.HEADLINES_TYPE,
            'from': from_jid
          });

          chatbox.createMessage(message, message);

          _converse.emit('message', {
            'chatbox': chatbox,
            'stanza': message
          });
        }

        return true;
      }

      function registerHeadlineHandler() {
        _converse.connection.addHandler(onHeadlineMessage, null, 'message');
      }

      _converse.on('connected', registerHeadlineHandler);

      _converse.on('reconnected', registerHeadlineHandler);

      _converse.on('chatBoxViewsInitialized', function () {
        var that = _converse.chatboxviews;

        _converse.chatboxes.on('add', function (item) {
          if (!that.get(item.get('id')) && item.get('type') === _converse.HEADLINES_TYPE) {
            that.add(item.get('id'), new _converse.HeadlinesBoxView({
              model: item
            }));
          }
        });
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-mam.js":
/*!*****************************!*\
  !*** ./src/converse-mam.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
// XEP-0059 Result Set Management
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! sizzle */ "./node_modules/sizzle/dist/sizzle.js"), __webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-disco */ "./src/converse-disco.js"), __webpack_require__(/*! strophe.rsm */ "strophe.rsm")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (sizzle, converse) {
  "use strict";

  var CHATROOMS_TYPE = 'chatroom';
  var _converse$env = converse.env,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      _ = _converse$env._,
      moment = _converse$env.moment;
  var u = converse.env.utils;
  var RSM_ATTRIBUTES = ['max', 'first', 'last', 'after', 'before', 'index', 'count']; // XEP-0313 Message Archive Management

  var MAM_ATTRIBUTES = ['with', 'start', 'end'];

  function getMessageArchiveID(stanza) {
    var result = sizzle("result[xmlns=\"".concat(Strophe.NS.MAM, "\"]"), stanza).pop();

    if (!_.isUndefined(result)) {
      return result.getAttribute('id');
    }

    var stanza_id = sizzle("stanza-id[xmlns=\"".concat(Strophe.NS.SID, "\"]"), stanza).pop();

    if (!_.isUndefined(stanza_id)) {
      return stanza_id.getAttribute('id');
    }
  }

  function queryForArchivedMessages(_converse, options, callback, errback) {
    /* Internal function, called by the "archive.query" API method.
     */
    var date;

    if (_.isFunction(options)) {
      callback = options;
      errback = callback;
      options = null;
    }

    var queryid = _converse.connection.getUniqueId();

    var attrs = {
      'type': 'set'
    };

    if (options && options.groupchat) {
      if (!options['with']) {
        // eslint-disable-line dot-notation
        throw new Error('You need to specify a "with" value containing ' + 'the chat room JID, when querying groupchat messages.');
      }

      attrs.to = options['with']; // eslint-disable-line dot-notation
    }

    var stanza = $iq(attrs).c('query', {
      'xmlns': Strophe.NS.MAM,
      'queryid': queryid
    });

    if (options) {
      stanza.c('x', {
        'xmlns': Strophe.NS.XFORM,
        'type': 'submit'
      }).c('field', {
        'var': 'FORM_TYPE',
        'type': 'hidden'
      }).c('value').t(Strophe.NS.MAM).up().up();

      if (options['with'] && !options.groupchat) {
        // eslint-disable-line dot-notation
        stanza.c('field', {
          'var': 'with'
        }).c('value').t(options['with']).up().up(); // eslint-disable-line dot-notation
      }

      _.each(['start', 'end'], function (t) {
        if (options[t]) {
          date = moment(options[t]);

          if (date.isValid()) {
            stanza.c('field', {
              'var': t
            }).c('value').t(date.format()).up().up();
          } else {
            throw new TypeError("archive.query: invalid date provided for: ".concat(t));
          }
        }
      });

      stanza.up();

      if (_instanceof(options, Strophe.RSM)) {
        stanza.cnode(options.toXML());
      } else if (_.intersection(RSM_ATTRIBUTES, _.keys(options)).length) {
        stanza.cnode(new Strophe.RSM(options).toXML());
      }
    }

    var messages = [];

    var message_handler = _converse.connection.addHandler(function (message) {
      if (options.groupchat && message.getAttribute('from') !== options['with']) {
        // eslint-disable-line dot-notation
        return true;
      }

      var result = message.querySelector('result');

      if (!_.isNull(result) && result.getAttribute('queryid') === queryid) {
        messages.push(message);
      }

      return true;
    }, Strophe.NS.MAM);

    _converse.connection.sendIQ(stanza, function (iq) {
      _converse.connection.deleteHandler(message_handler);

      if (_.isFunction(callback)) {
        var set = iq.querySelector('set');
        var rsm;

        if (!_.isUndefined(set)) {
          rsm = new Strophe.RSM({
            xml: set
          });

          _.extend(rsm, _.pick(options, _.concat(MAM_ATTRIBUTES, ['max'])));
        }

        callback(messages, rsm);
      }
    }, function () {
      _converse.connection.deleteHandler(message_handler);

      if (_.isFunction(errback)) {
        errback.apply(this, arguments);
      }
    }, _converse.message_archiving_timeout);
  }

  converse.plugins.add('converse-mam', {
    dependencies: ['converse-chatview', 'converse-muc', 'converse-muc-views'],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      ChatBox: {
        getMessageAttributesFromStanza: function getMessageAttributesFromStanza(message, original_stanza) {
          function _process(attrs) {
            var archive_id = getMessageArchiveID(original_stanza);

            if (archive_id) {
              attrs.archive_id = archive_id;
            }

            return attrs;
          }

          var result = this.__super__.getMessageAttributesFromStanza.apply(this, arguments);

          if (_instanceof(result, Promise)) {
            return new Promise(function (resolve, reject) {
              return result.then(function (attrs) {
                return resolve(_process(attrs));
              }).catch(reject);
            });
          } else {
            return _process(result);
          }
        }
      },
      ChatBoxView: {
        render: function render() {
          var result = this.__super__.render.apply(this, arguments);

          if (!this.disable_mam) {
            this.content.addEventListener('scroll', _.debounce(this.onScroll.bind(this), 100));
          }

          return result;
        },
        fetchNewestMessages: function fetchNewestMessages() {
          /* Fetches messages that might have been archived *after*
           * the last archived message in our local cache.
           */
          if (this.disable_mam) {
            return;
          }

          var _converse = this.__super__._converse,
              most_recent_msg = u.getMostRecentMessage(this.model);

          if (_.isNil(most_recent_msg)) {
            this.fetchArchivedMessages();
          } else {
            var archive_id = most_recent_msg.get('archive_id');

            if (archive_id) {
              this.fetchArchivedMessages({
                'after': most_recent_msg.get('archive_id')
              });
            } else {
              this.fetchArchivedMessages({
                'start': most_recent_msg.get('time')
              });
            }
          }
        },
        fetchArchivedMessagesIfNecessary: function fetchArchivedMessagesIfNecessary() {
          var _this = this;

          /* Check if archived messages should be fetched, and if so, do so. */
          if (this.disable_mam || this.model.get('mam_initialized')) {
            return;
          }

          var _converse = this.__super__._converse;

          _converse.api.disco.supports(Strophe.NS.MAM, _converse.bare_jid).then(function (result) {
            // Success
            if (result.length) {
              _this.fetchArchivedMessages();
            }

            _this.model.save({
              'mam_initialized': true
            });
          }, function () {
            // Error
            _converse.log("Error or timeout while checking for MAM support", Strophe.LogLevel.ERROR);
          }).catch(function (msg) {
            _this.clearSpinner();

            _converse.log(msg, Strophe.LogLevel.FATAL);
          });
        },
        fetchArchivedMessages: function fetchArchivedMessages(options) {
          var _this2 = this;

          var _converse = this.__super__._converse;

          if (this.disable_mam) {
            return;
          }

          var is_groupchat = this.model.get('type') === CHATROOMS_TYPE;
          var mam_jid, message_handler;

          if (is_groupchat) {
            mam_jid = this.model.get('jid');
            message_handler = this.model.onMessage.bind(this.model);
          } else {
            mam_jid = _converse.bare_jid;
            message_handler = _converse.chatboxes.onMessage.bind(_converse.chatboxes);
          }

          _converse.api.disco.supports(Strophe.NS.MAM, mam_jid).then(function (results) {
            // Success
            if (!results.length) {
              return;
            }

            _this2.addSpinner();

            _converse.api.archive.query(_.extend({
              'groupchat': is_groupchat,
              'before': '',
              // Page backwards from the most recent message
              'max': _converse.archived_messages_page_size,
              'with': _this2.model.get('jid')
            }, options), function (messages) {
              // Success
              _this2.clearSpinner();

              _.each(messages, message_handler);
            }, function () {
              // Error
              _this2.clearSpinner();

              _converse.log("Error or timeout while trying to fetch " + "archived messages", Strophe.LogLevel.ERROR);
            });
          }, function () {
            // Error
            _converse.log("Error or timeout while checking for MAM support", Strophe.LogLevel.ERROR);
          }).catch(function (msg) {
            _this2.clearSpinner();

            _converse.log(msg, Strophe.LogLevel.FATAL);
          });
        },
        onScroll: function onScroll(ev) {
          var _converse = this.__super__._converse;

          if (this.content.scrollTop === 0 && this.model.messages.length) {
            var oldest_message = this.model.messages.at(0);
            var archive_id = oldest_message.get('archive_id');

            if (archive_id) {
              this.fetchArchivedMessages({
                'before': archive_id
              });
            } else {
              this.fetchArchivedMessages({
                'end': oldest_message.get('time')
              });
            }
          }
        }
      },
      ChatRoom: {
        isDuplicate: function isDuplicate(message, original_stanza) {
          var result = this.__super__.isDuplicate.apply(this, arguments);

          if (result) {
            return result;
          }

          var archive_id = getMessageArchiveID(original_stanza);

          if (archive_id) {
            return this.messages.filter({
              'archive_id': archive_id
            }).length > 0;
          }
        }
      },
      ChatRoomView: {
        initialize: function initialize() {
          var _converse = this.__super__._converse;

          this.__super__.initialize.apply(this, arguments);

          this.model.on('change:mam_enabled', this.fetchArchivedMessagesIfNecessary, this);
          this.model.on('change:connection_status', this.fetchArchivedMessagesIfNecessary, this);
        },
        renderChatArea: function renderChatArea() {
          var result = this.__super__.renderChatArea.apply(this, arguments);

          if (!this.disable_mam) {
            this.content.addEventListener('scroll', _.debounce(this.onScroll.bind(this), 100));
          }

          return result;
        },
        fetchArchivedMessagesIfNecessary: function fetchArchivedMessagesIfNecessary() {
          if (this.model.get('connection_status') !== converse.ROOMSTATUS.ENTERED || !this.model.get('mam_enabled') || this.model.get('mam_initialized')) {
            return;
          }

          this.fetchArchivedMessages();
          this.model.save({
            'mam_initialized': true
          });
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by Converse.js's plugin machinery.
       */
      var _converse = this._converse;

      _converse.api.settings.update({
        archived_messages_page_size: '50',
        message_archiving: undefined,
        // Supported values are 'always', 'never', 'roster' (https://xmpp.org/extensions/xep-0313.html#prefs)
        message_archiving_timeout: 8000 // Time (in milliseconds) to wait before aborting MAM request

      });

      _converse.onMAMError = function (model, iq) {
        if (iq.querySelectorAll('feature-not-implemented').length) {
          _converse.log("Message Archive Management (XEP-0313) not supported by this server", Strophe.LogLevel.WARN);
        } else {
          _converse.log("An error occured while trying to set archiving preferences.", Strophe.LogLevel.ERROR);

          _converse.log(iq);
        }
      };

      _converse.onMAMPreferences = function (feature, iq) {
        /* Handle returned IQ stanza containing Message Archive
         * Management (XEP-0313) preferences.
         *
         * XXX: For now we only handle the global default preference.
         * The XEP also provides for per-JID preferences, which is
         * currently not supported in converse.js.
         *
         * Per JID preferences will be set in chat boxes, so it'll
         * probbaly be handled elsewhere in any case.
         */
        var preference = sizzle("prefs[xmlns=\"".concat(Strophe.NS.MAM, "\"]"), iq).pop();
        var default_pref = preference.getAttribute('default');

        if (default_pref !== _converse.message_archiving) {
          var stanza = $iq({
            'type': 'set'
          }).c('prefs', {
            'xmlns': Strophe.NS.MAM,
            'default': _converse.message_archiving
          });

          _.each(preference.children, function (child) {
            stanza.cnode(child).up();
          });

          _converse.connection.sendIQ(stanza, _.partial(function (feature, iq) {
            // XXX: Strictly speaking, the server should respond with the updated prefs
            // (see example 18: https://xmpp.org/extensions/xep-0313.html#config)
            // but Prosody doesn't do this, so we don't rely on it.
            feature.save({
              'preferences': {
                'default': _converse.message_archiving
              }
            });
          }, feature), _converse.onMAMError);
        } else {
          feature.save({
            'preferences': {
              'default': _converse.message_archiving
            }
          });
        }
      };
      /* Event handlers */


      _converse.on('serviceDiscovered', function (feature) {
        var prefs = feature.get('preferences') || {};

        if (feature.get('var') === Strophe.NS.MAM && prefs['default'] !== _converse.message_archiving && // eslint-disable-line dot-notation
        !_.isUndefined(_converse.message_archiving)) {
          // Ask the server for archiving preferences
          _converse.connection.sendIQ($iq({
            'type': 'get'
          }).c('prefs', {
            'xmlns': Strophe.NS.MAM
          }), _.partial(_converse.onMAMPreferences, feature), _.partial(_converse.onMAMError, feature));
        }
      });

      _converse.on('addClientFeatures', function () {
        _converse.api.disco.own.features.add(Strophe.NS.MAM);
      });

      _converse.on('afterMessagesFetched', function (chatboxview) {
        chatboxview.fetchNewestMessages();
      });

      _converse.on('reconnected', function () {
        var private_chats = _converse.chatboxviews.filter(function (view) {
          return _.at(view, 'model.attributes.type')[0] === 'chatbox';
        });

        _.each(private_chats, function (view) {
          return view.fetchNewestMessages();
        });
      });

      _.extend(_converse.api, {
        /**
         * The [XEP-0313](https://xmpp.org/extensions/xep-0313.html) Message Archive Management API
         *
         * Enables you to query an XMPP server for archived messages.
         *
         * See also the [message-archiving](/docs/html/configuration.html#message-archiving)
         * option in the configuration settings section, which you'll
         * usually want to use in conjunction with this API.
         *
         * @namespace _converse.api.archive
         * @memberOf _converse.api
         */
        'archive': {
          /**
           * Query for archived messages.
           *
           * The options parameter can also be an instance of
           * Strophe.RSM to enable easy querying between results pages.
           *
           * @method _converse.api.archive.query
           * @param {(Object|Strophe.RSM)} options Query parameters, either
           *      MAM-specific or also for Result Set Management.
           *      Can be either an object or an instance of Strophe.RSM.
           *      Valid query parameters are:
           * * `with`
           * * `start`
           * * `end`
           * * `first`
           * * `last`
           * * `after`
           * * `before`
           * * `index`
           * * `count`
           * @param {Function} callback A function to call whenever
           *      we receive query-relevant stanza.
           *      When the callback is called, a Strophe.RSM object is
           *      returned on which "next" or "previous" can be called
           *      before passing it in again to this method, to
           *      get the next or previous page in the result set.
           * @param {Function} errback A function to call when an
           *      error stanza is received, for example when it
           *      doesn't support message archiving.
           *
           * @example
           * // Requesting all archived messages
           * // ================================
           * //
           * // The simplest query that can be made is to simply not pass in any parameters.
           * // Such a query will return all archived messages for the current user.
           * //
           * // Generally, you'll however always want to pass in a callback method, to receive
           * // the returned messages.
           *
           * this._converse.api.archive.query(
           *     (messages) => {
           *         // Do something with the messages, like showing them in your webpage.
           *     },
           *     (iq) => {
           *         // The query was not successful, perhaps inform the user?
           *         // The IQ stanza returned by the XMPP server is passed in, so that you
           *         // may inspect it and determine what the problem was.
           *     }
           * )
           * @example
           * // Waiting until server support has been determined
           * // ================================================
           * //
           * // The query method will only work if Converse has been able to determine that
           * // the server supports MAM queries, otherwise the following error will be raised:
           * //
           * // "This server does not support XEP-0313, Message Archive Management"
           * //
           * // The very first time Converse loads in a browser tab, if you call the query
           * // API too quickly, the above error might appear because service discovery has not
           * // yet been completed.
           * //
           * // To work solve this problem, you can first listen for the `serviceDiscovered` event,
           * // through which you can be informed once support for MAM has been determined.
           *
           *  _converse.api.listen.on('serviceDiscovered', function (feature) {
           *      if (feature.get('var') === converse.env.Strophe.NS.MAM) {
           *          _converse.api.archive.query()
           *      }
           *  });
           *
           * @example
           * // Requesting all archived messages for a particular contact or room
           * // =================================================================
           * //
           * // To query for messages sent between the current user and another user or room,
           * // the query options need to contain the the JID (Jabber ID) of the user or
           * // room under the  `with` key.
           *
           * // For a particular user
           * this._converse.api.archive.query({'with': 'john@doe.net'}, callback, errback);)
           *
           * // For a particular room
           * this._converse.api.archive.query({'with': 'discuss@conference.doglovers.net'}, callback, errback);)
           *
           * @example
           * // Requesting all archived messages before or after a certain date
           * // ===============================================================
           * //
           * // The `start` and `end` parameters are used to query for messages
           * // within a certain timeframe. The passed in date values may either be ISO8601
           * // formatted date strings, or JavaScript Date objects.
           *
           *  const options = {
           *      'with': 'john@doe.net',
           *      'start': '2010-06-07T00:00:00Z',
           *      'end': '2010-07-07T13:23:54Z'
           *  };
           *  this._converse.api.archive.query(options, callback, errback);
           *
           * @example
           * // Limiting the amount of messages returned
           * // ========================================
           * //
           * // The amount of returned messages may be limited with the `max` parameter.
           * // By default, the messages are returned from oldest to newest.
           *
           * // Return maximum 10 archived messages
           * this._converse.api.archive.query({'with': 'john@doe.net', 'max':10}, callback, errback);
           *
           * @example
           * // Paging forwards through a set of archived messages
           * // ==================================================
           * //
           * // When limiting the amount of messages returned per query, you might want to
           * // repeatedly make a further query to fetch the next batch of messages.
           * //
           * // To simplify this usecase for you, the callback method receives not only an array
           * // with the returned archived messages, but also a special RSM (*Result Set
           * // Management*) object which contains the query parameters you passed in, as well
           * // as two utility methods `next`, and `previous`.
           * //
           * // When you call one of these utility methods on the returned RSM object, and then
           * // pass the result into a new query, you'll receive the next or previous batch of
           * // archived messages. Please note, when calling these methods, pass in an integer
           * // to limit your results.
           *
           * const callback = function (messages, rsm) {
           *     // Do something with the messages, like showing them in your webpage.
           *     // ...
           *     // You can now use the returned "rsm" object, to fetch the next batch of messages:
           *     _converse.api.archive.query(rsm.next(10), callback, errback))
           *
           * }
           * _converse.api.archive.query({'with': 'john@doe.net', 'max':10}, callback, errback);
           *
           * @example
           * // Paging backwards through a set of archived messages
           * // ===================================================
           * //
           * // To page backwards through the archive, you need to know the UID of the message
           * // which you'd like to page backwards from and then pass that as value for the
           * // `before` parameter. If you simply want to page backwards from the most recent
           * // message, pass in the `before` parameter with an empty string value `''`.
           *
           * _converse.api.archive.query({'before': '', 'max':5}, function (message, rsm) {
           *     // Do something with the messages, like showing them in your webpage.
           *     // ...
           *     // You can now use the returned "rsm" object, to fetch the previous batch of messages:
           *     rsm.previous(5); // Call previous method, to update the object's parameters,
           *                      // passing in a limit value of 5.
           *     // Now we query again, to get the previous batch.
           *     _converse.api.archive.query(rsm, callback, errback);
           * }
           */
          'query': function query(options, callback, errback) {
            if (!_converse.api.connection.connected()) {
              throw new Error('Can\'t call `api.archive.query` before having established an XMPP session');
            }

            return queryForArchivedMessages(_converse, options, callback, errback);
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-message-view.js":
/*!**************************************!*\
  !*** ./src/converse-message-view.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// https://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! utils/emoji */ "./src/utils/emoji.js"), __webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! xss */ "./node_modules/xss/dist/xss.js"), __webpack_require__(/*! filesize */ "./node_modules/filesize/lib/filesize.js"), __webpack_require__(/*! templates/csn.html */ "./src/templates/csn.html"), __webpack_require__(/*! templates/file_progress.html */ "./src/templates/file_progress.html"), __webpack_require__(/*! templates/info.html */ "./src/templates/info.html"), __webpack_require__(/*! templates/message.html */ "./src/templates/message.html"), __webpack_require__(/*! templates/message_versions_modal.html */ "./src/templates/message_versions_modal.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (u, converse, xss, filesize, tpl_csn, tpl_file_progress, tpl_info, tpl_message, tpl_message_versions_modal) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      _ = _converse$env._,
      moment = _converse$env.moment;
  converse.plugins.add('converse-message-view', {
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;
      _converse.MessageVersionsModal = _converse.BootstrapModal.extend({
        toHTML: function toHTML() {
          return tpl_message_versions_modal(_.extend(this.model.toJSON(), {
            '__': __
          }));
        }
      });
      _converse.MessageView = _converse.ViewWithAvatar.extend({
        events: {
          'click .chat-msg__edit-modal': 'showMessageVersionsModal'
        },
        initialize: function initialize() {
          this.model.vcard.on('change', this.render, this);
          this.model.on('change:correcting', this.onMessageCorrection, this);
          this.model.on('change:message', this.render, this);
          this.model.on('change:progress', this.renderFileUploadProgresBar, this);
          this.model.on('change:type', this.render, this);
          this.model.on('change:upload', this.render, this);
          this.model.on('destroy', this.remove, this);
          this.render();
        },
        render: function render() {
          var is_followup = u.hasClass('chat-msg--followup', this.el);
          var msg;

          if (this.model.isOnlyChatStateNotification()) {
            this.renderChatStateNotification();
          } else if (this.model.get('file') && !this.model.get('oob_url')) {
            this.renderFileUploadProgresBar();
          } else if (this.model.get('type') === 'error') {
            this.renderErrorMessage();
          } else {
            this.renderChatMessage();
          }

          if (is_followup) {
            u.addClass('chat-msg--followup', this.el);
          }

          return this.el;
        },
        onMessageCorrection: function onMessageCorrection() {
          var _this = this;

          this.render();

          if (!this.model.get('correcting') && this.model.changed.message) {
            this.el.addEventListener('animationend', function () {
              return u.removeClass('onload', _this.el);
            });
            u.addClass('onload', this.el);
          }
        },
        replaceElement: function replaceElement(msg) {
          if (!_.isNil(this.el.parentElement)) {
            this.el.parentElement.replaceChild(msg, this.el);
          }

          this.setElement(msg);
          return this.el;
        },
        renderChatMessage: function renderChatMessage() {
          var _this2 = this;

          var is_me_message = this.isMeCommand(),
              moment_time = moment(this.model.get('time')),
              role = this.model.vcard.get('role'),
              roles = role ? role.split(',') : [];
          var msg = u.stringToElement(tpl_message(_.extend(this.model.toJSON(), {
            '__': __,
            'is_me_message': is_me_message,
            'roles': roles,
            'pretty_time': moment_time.format(_converse.time_format),
            'time': moment_time.format(),
            'extra_classes': this.getExtraMessageClasses(),
            'label_show': __('Show more'),
            'username': this.model.getDisplayName()
          })));
          var url = this.model.get('oob_url');

          if (url) {
            msg.querySelector('.chat-msg__media').innerHTML = _.flow(_.partial(u.renderFileURL, _converse), _.partial(u.renderMovieURL, _converse), _.partial(u.renderAudioURL, _converse), _.partial(u.renderImageURL, _converse))(url);
          }

          var text = this.getMessageText();
          var msg_content = msg.querySelector('.chat-msg__text');

          if (text && text !== url) {
            if (is_me_message) {
              text = text.replace(/^\/me/, '');
            }

            text = xss.filterXSS(text, {
              'whiteList': {}
            });
            msg_content.innerHTML = _.flow(_.partial(u.geoUriToHttp, _, _converse.geouri_replacement), _.partial(u.addMentionsMarkup, _, this.model.get('references'), this.model.collection.chatbox), u.addHyperlinks, u.renderNewLines, _.partial(u.addEmoji, _converse, _))(text);
          }

          u.renderImageURLs(_converse, msg_content).then(function () {
            _this2.model.collection.trigger('rendered');
          });
          this.replaceElement(msg);

          if (this.model.get('type') !== 'headline') {
            this.renderAvatar();
          }
        },
        renderErrorMessage: function renderErrorMessage() {
          var moment_time = moment(this.model.get('time')),
              msg = u.stringToElement(tpl_info(_.extend(this.model.toJSON(), {
            'extra_classes': 'chat-error',
            'isodate': moment_time.format(),
            'data': ''
          })));
          return this.replaceElement(msg);
        },
        renderChatStateNotification: function renderChatStateNotification() {
          var text;
          var from = this.model.get('from'),
              name = this.model.getDisplayName();

          if (this.model.get('chat_state') === _converse.COMPOSING) {
            if (this.model.get('sender') === 'me') {
              text = __('Typing from another device');
            } else {
              text = __('%1$s is typing', name);
            }
          } else if (this.model.get('chat_state') === _converse.PAUSED) {
            if (this.model.get('sender') === 'me') {
              text = __('Stopped typing on the other device');
            } else {
              text = __('%1$s has stopped typing', name);
            }
          } else if (this.model.get('chat_state') === _converse.GONE) {
            text = __('%1$s has gone away', name);
          } else {
            return;
          }

          var isodate = moment().format();
          this.replaceElement(u.stringToElement(tpl_csn({
            'message': text,
            'from': from,
            'isodate': isodate
          })));
        },
        renderFileUploadProgresBar: function renderFileUploadProgresBar() {
          var msg = u.stringToElement(tpl_file_progress(_.extend(this.model.toJSON(), {
            'filesize': filesize(this.model.get('file').size)
          })));
          this.replaceElement(msg);
          this.renderAvatar();
        },
        showMessageVersionsModal: function showMessageVersionsModal(ev) {
          ev.preventDefault();

          if (_.isUndefined(this.model.message_versions_modal)) {
            this.model.message_versions_modal = new _converse.MessageVersionsModal({
              'model': this.model
            });
          }

          this.model.message_versions_modal.show(ev);
        },
        getMessageText: function getMessageText() {
          if (this.model.get('is_encrypted')) {
            return this.model.get('plaintext') || (_converse.debug ? __('Unencryptable OMEMO message') : null);
          }

          return this.model.get('message');
        },
        isMeCommand: function isMeCommand() {
          var text = this.getMessageText();

          if (!text) {
            return false;
          }

          var match = text.match(/^\/(.*?)(?: (.*))?$/);
          return match && match[1] === 'me';
        },
        processMessageText: function processMessageText() {
          var text = this.get('message');
          text = u.geoUriToHttp(text, _converse.geouri_replacement);
        },
        getExtraMessageClasses: function getExtraMessageClasses() {
          var extra_classes = this.model.get('is_delayed') && 'delayed' || '';

          if (this.model.get('type') === 'groupchat' && this.model.get('sender') === 'them') {
            if (this.model.collection.chatbox.isUserMentioned(this.model)) {
              // Add special class to mark groupchat messages
              // in which we are mentioned.
              extra_classes += ' mentioned';
            }
          }

          if (this.model.get('correcting')) {
            extra_classes += ' correcting';
          }

          return extra_classes;
        }
      });
    }
  });
  return converse;
});

/***/ }),

/***/ "./src/converse-minimize.js":
/*!**********************************!*\
  !*** ./src/converse-minimize.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define, window, document */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/chatbox_minimize.html */ "./src/templates/chatbox_minimize.html"), __webpack_require__(/*! templates/toggle_chats.html */ "./src/templates/toggle_chats.html"), __webpack_require__(/*! templates/trimmed_chat.html */ "./src/templates/trimmed_chat.html"), __webpack_require__(/*! templates/chats_panel.html */ "./src/templates/chats_panel.html"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_chatbox_minimize, tpl_toggle_chats, tpl_trimmed_chat, tpl_chats_panel) {
  "use strict";

  var _converse$env = converse.env,
      _ = _converse$env._,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      b64_sha1 = _converse$env.b64_sha1,
      moment = _converse$env.moment;
  var u = converse.env.utils;
  converse.plugins.add('converse-minimize', {
    /* Optional dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin. They are called "optional" because they might not be
     * available, in which case any overrides applicable to them will be
     * ignored.
     *
     * It's possible however to make optional dependencies non-optional.
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatview", "converse-controlbox", "converse-muc", "converse-muc-views", "converse-headline"],
    enabled: function enabled(_converse) {
      return _converse.view_mode == 'overlayed';
    },
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      ChatBox: {
        initialize: function initialize() {
          this.__super__.initialize.apply(this, arguments);

          this.on('show', this.maximize, this);

          if (this.get('id') === 'controlbox') {
            return;
          }

          this.save({
            'minimized': this.get('minimized') || false,
            'time_minimized': this.get('time_minimized') || moment()
          });
        },
        maximize: function maximize() {
          u.safeSave(this, {
            'minimized': false,
            'time_opened': moment().valueOf()
          });
        },
        minimize: function minimize() {
          u.safeSave(this, {
            'minimized': true,
            'time_minimized': moment().format()
          });
        }
      },
      ChatBoxView: {
        events: {
          'click .toggle-chatbox-button': 'minimize'
        },
        initialize: function initialize() {
          this.model.on('change:minimized', this.onMinimizedChanged, this);
          return this.__super__.initialize.apply(this, arguments);
        },
        _show: function _show() {
          var _converse = this.__super__._converse;

          if (!this.model.get('minimized')) {
            this.__super__._show.apply(this, arguments);

            _converse.chatboxviews.trimChats(this);
          } else {
            this.minimize();
          }
        },
        isNewMessageHidden: function isNewMessageHidden() {
          return this.model.get('minimized') || this.__super__.isNewMessageHidden.apply(this, arguments);
        },
        shouldShowOnTextMessage: function shouldShowOnTextMessage() {
          return !this.model.get('minimized') && this.__super__.shouldShowOnTextMessage.apply(this, arguments);
        },
        setChatBoxHeight: function setChatBoxHeight(height) {
          if (!this.model.get('minimized')) {
            return this.__super__.setChatBoxHeight.apply(this, arguments);
          }
        },
        setChatBoxWidth: function setChatBoxWidth(width) {
          if (!this.model.get('minimized')) {
            return this.__super__.setChatBoxWidth.apply(this, arguments);
          }
        },
        onMinimizedChanged: function onMinimizedChanged(item) {
          if (item.get('minimized')) {
            this.minimize();
          } else {
            this.maximize();
          }
        },
        maximize: function maximize() {
          // Restores a minimized chat box
          var _converse = this.__super__._converse;
          this.insertIntoDOM();

          if (!this.model.isScrolledUp()) {
            this.model.clearUnreadMsgCounter();
          }

          this.show();

          this.__super__._converse.emit('chatBoxMaximized', this);

          return this;
        },
        minimize: function minimize(ev) {
          var _converse = this.__super__._converse;

          if (ev && ev.preventDefault) {
            ev.preventDefault();
          } // save the scroll position to restore it on maximize


          if (this.model.collection && this.model.collection.browserStorage) {
            this.model.save({
              'scroll': this.content.scrollTop
            });
          } else {
            this.model.set({
              'scroll': this.content.scrollTop
            });
          }

          this.setChatState(_converse.INACTIVE).model.minimize();
          this.hide();

          _converse.emit('chatBoxMinimized', this);
        }
      },
      ChatBoxHeading: {
        render: function render() {
          var _converse = this.__super__._converse,
              __ = _converse.__;

          var result = this.__super__.render.apply(this, arguments);

          var new_html = tpl_chatbox_minimize({
            info_minimize: __('Minimize this chat box')
          });
          var el = this.el.querySelector('.toggle-chatbox-button');

          if (el) {
            el.outerHTML = new_html;
          } else {
            var button = this.el.querySelector('.close-chatbox-button');
            button.insertAdjacentHTML('afterEnd', new_html);
          }
        }
      },
      ChatRoomView: {
        events: {
          'click .toggle-chatbox-button': 'minimize'
        },
        initialize: function initialize() {
          this.model.on('change:minimized', function (item) {
            if (item.get('minimized')) {
              this.hide();
            } else {
              this.maximize();
            }
          }, this);

          var result = this.__super__.initialize.apply(this, arguments);

          if (this.model.get('minimized')) {
            this.hide();
          }

          return result;
        },
        generateHeadingHTML: function generateHeadingHTML() {
          var _converse = this.__super__._converse,
              __ = _converse.__;

          var html = this.__super__.generateHeadingHTML.apply(this, arguments);

          var div = document.createElement('div');
          div.innerHTML = html;
          var button = div.querySelector('.close-chatbox-button');
          button.insertAdjacentHTML('afterend', tpl_chatbox_minimize({
            'info_minimize': __('Minimize this chat box')
          }));
          return div.innerHTML;
        }
      },
      ChatBoxes: {
        chatBoxMayBeShown: function chatBoxMayBeShown(chatbox) {
          return this.__super__.chatBoxMayBeShown.apply(this, arguments) && !chatbox.get('minimized');
        }
      },
      ChatBoxViews: {
        getChatBoxWidth: function getChatBoxWidth(view) {
          if (!view.model.get('minimized') && u.isVisible(view.el)) {
            return u.getOuterWidth(view.el, true);
          }

          return 0;
        },
        getShownChats: function getShownChats() {
          return this.filter(function (view) {
            return (// The controlbox can take a while to close,
              // so we need to check its state. That's why we checked
              // the 'closed' state.
              !view.model.get('minimized') && !view.model.get('closed') && u.isVisible(view.el)
            );
          });
        },
        trimChats: function trimChats(newchat) {
          var _this = this;

          /* This method is called when a newly created chat box will
           * be shown.
           *
           * It checks whether there is enough space on the page to show
           * another chat box. Otherwise it minimizes the oldest chat box
           * to create space.
           */
          var _converse = this.__super__._converse,
              shown_chats = this.getShownChats(),
              body_width = u.getOuterWidth(document.querySelector('body'), true);

          if (_converse.no_trimming || shown_chats.length <= 1) {
            return;
          }

          if (this.getChatBoxWidth(shown_chats[0]) === body_width) {
            // If the chats shown are the same width as the body,
            // then we're in responsive mode and the chats are
            // fullscreen. In this case we don't trim.
            return;
          }

          _converse.api.waitUntil('minimizedChatsInitialized').then(function () {
            var minimized_el = _.get(_converse.minimized_chats, 'el'),
                new_id = newchat ? newchat.model.get('id') : null;

            if (minimized_el) {
              var minimized_width = _.includes(_this.model.pluck('minimized'), true) ? u.getOuterWidth(minimized_el, true) : 0;

              var boxes_width = _.reduce(_this.xget(new_id), function (memo, view) {
                return memo + _this.getChatBoxWidth(view);
              }, newchat ? u.getOuterWidth(newchat.el, true) : 0);

              if (minimized_width + boxes_width > body_width) {
                var oldest_chat = _this.getOldestMaximizedChat([new_id]);

                if (oldest_chat) {
                  // We hide the chat immediately, because waiting
                  // for the event to fire (and letting the
                  // ChatBoxView hide it then) causes race
                  // conditions.
                  var view = _this.get(oldest_chat.get('id'));

                  if (view) {
                    view.hide();
                  }

                  oldest_chat.minimize();
                }
              }
            }
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        },
        getOldestMaximizedChat: function getOldestMaximizedChat(exclude_ids) {
          // Get oldest view (if its id is not excluded)
          exclude_ids.push('controlbox');
          var i = 0;
          var model = this.model.sort().at(i);

          while (_.includes(exclude_ids, model.get('id')) || model.get('minimized') === true) {
            i++;
            model = this.model.at(i);

            if (!model) {
              return null;
            }
          }

          return model;
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by Converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__; // Add new HTML templates.

      _converse.templates.chatbox_minimize = tpl_chatbox_minimize;
      _converse.templates.toggle_chats = tpl_toggle_chats;
      _converse.templates.trimmed_chat = tpl_trimmed_chat;
      _converse.templates.chats_panel = tpl_chats_panel;

      _converse.api.settings.update({
        no_trimming: false // Set to true for phantomjs tests (where browser apparently has no width)

      });

      _converse.api.promises.add('minimizedChatsInitialized');

      _converse.MinimizedChatBoxView = Backbone.NativeView.extend({
        tagName: 'div',
        className: 'chat-head row no-gutters',
        events: {
          'click .close-chatbox-button': 'close',
          'click .restore-chat': 'restore'
        },
        initialize: function initialize() {
          this.model.on('change:num_unread', this.render, this);
        },
        render: function render() {
          var data = _.extend(this.model.toJSON(), {
            'tooltip': __('Click to restore this chat')
          });

          if (this.model.get('type') === 'chatroom') {
            data.title = this.model.get('name');
            u.addClass('chat-head-chatroom', this.el);
          } else {
            data.title = this.model.get('fullname');
            u.addClass('chat-head-chatbox', this.el);
          }

          this.el.innerHTML = tpl_trimmed_chat(data);
          return this.el;
        },
        close: function close(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          this.remove();

          var view = _converse.chatboxviews.get(this.model.get('id'));

          if (view) {
            // This will call model.destroy(), removing it from the
            // collection and will also emit 'chatBoxClosed'
            view.close();
          } else {
            this.model.destroy();

            _converse.emit('chatBoxClosed', this);
          }

          return this;
        },
        restore: _.debounce(function (ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          this.model.off('change:num_unread', null, this);
          this.remove();
          this.model.maximize();
        }, 200, {
          'leading': true
        })
      });
      _converse.MinimizedChats = Backbone.Overview.extend({
        tagName: 'div',
        id: "minimized-chats",
        className: 'hidden',
        events: {
          "click #toggle-minimized-chats": "toggle"
        },
        initialize: function initialize() {
          this.render();
          this.initToggle();
          this.addMultipleChats(this.model.where({
            'minimized': true
          }));
          this.model.on("add", this.onChanged, this);
          this.model.on("destroy", this.removeChat, this);
          this.model.on("change:minimized", this.onChanged, this);
          this.model.on('change:num_unread', this.updateUnreadMessagesCounter, this);
        },
        render: function render() {
          if (!this.el.parentElement) {
            this.el.innerHTML = tpl_chats_panel();

            _converse.chatboxviews.insertRowColumn(this.el);
          }

          if (this.keys().length === 0) {
            this.el.classList.add('hidden');
          } else if (this.keys().length > 0 && !u.isVisible(this.el)) {
            this.el.classList.remove('hidden');

            _converse.chatboxviews.trimChats();
          }

          return this.el;
        },
        tearDown: function tearDown() {
          this.model.off("add", this.onChanged);
          this.model.off("destroy", this.removeChat);
          this.model.off("change:minimized", this.onChanged);
          this.model.off('change:num_unread', this.updateUnreadMessagesCounter);
          return this;
        },
        initToggle: function initToggle() {
          var storage = _converse.config.get('storage'),
              id = b64_sha1("converse.minchatstoggle".concat(_converse.bare_jid));

          this.toggleview = new _converse.MinimizedChatsToggleView({
            'model': new _converse.MinimizedChatsToggle({
              'id': id
            })
          });
          this.toggleview.model.browserStorage = new Backbone.BrowserStorage[storage](id);
          this.toggleview.model.fetch();
        },
        toggle: function toggle(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          this.toggleview.model.save({
            'collapsed': !this.toggleview.model.get('collapsed')
          });
          u.slideToggleElement(this.el.querySelector('.minimized-chats-flyout'), 200);
        },
        onChanged: function onChanged(item) {
          if (item.get('id') === 'controlbox') {
            // The ControlBox has it's own minimize toggle
            return;
          }

          if (item.get('minimized')) {
            this.addChat(item);
          } else if (this.get(item.get('id'))) {
            this.removeChat(item);
          }
        },
        addChatView: function addChatView(item) {
          var existing = this.get(item.get('id'));

          if (existing && existing.el.parentNode) {
            return;
          }

          var view = new _converse.MinimizedChatBoxView({
            model: item
          });
          this.el.querySelector('.minimized-chats-flyout').insertAdjacentElement('beforeEnd', view.render());
          this.add(item.get('id'), view);
        },
        addMultipleChats: function addMultipleChats(items) {
          _.each(items, this.addChatView.bind(this));

          this.toggleview.model.set({
            'num_minimized': this.keys().length
          });
          this.render();
        },
        addChat: function addChat(item) {
          this.addChatView(item);
          this.toggleview.model.set({
            'num_minimized': this.keys().length
          });
          this.render();
        },
        removeChat: function removeChat(item) {
          this.remove(item.get('id'));
          this.toggleview.model.set({
            'num_minimized': this.keys().length
          });
          this.render();
        },
        updateUnreadMessagesCounter: function updateUnreadMessagesCounter() {
          var ls = this.model.pluck('num_unread');
          var count = 0,
              i;

          for (i = 0; i < ls.length; i++) {
            count += ls[i];
          }

          this.toggleview.model.save({
            'num_unread': count
          });
          this.render();
        }
      });
      _converse.MinimizedChatsToggle = Backbone.Model.extend({
        defaults: {
          'collapsed': false,
          'num_minimized': 0,
          'num_unread': 0
        }
      });
      _converse.MinimizedChatsToggleView = Backbone.NativeView.extend({
        el: '#toggle-minimized-chats',
        initialize: function initialize() {
          this.model.on('change:num_minimized', this.render, this);
          this.model.on('change:num_unread', this.render, this);
          this.flyout = this.el.parentElement.querySelector('.minimized-chats-flyout');
        },
        render: function render() {
          this.el.innerHTML = tpl_toggle_chats(_.extend(this.model.toJSON(), {
            'Minimized': __('Minimized')
          }));

          if (this.model.get('collapsed')) {
            u.hideElement(this.flyout);
          } else {
            u.showElement(this.flyout);
          }

          return this.el;
        }
      });
      Promise.all([_converse.api.waitUntil('connectionInitialized'), _converse.api.waitUntil('chatBoxViewsInitialized')]).then(function () {
        _converse.minimized_chats = new _converse.MinimizedChats({
          model: _converse.chatboxes
        });

        _converse.emit('minimizedChatsInitialized');
      }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));

      _converse.on('registeredGlobalEventHandlers', function () {
        window.addEventListener("resize", _.debounce(function (ev) {
          if (_converse.connection.connected) {
            _converse.chatboxviews.trimChats();
          }
        }, 200));
      });

      _converse.on('controlBoxOpened', function (chatbox) {
        // Wrapped in anon method because at scan time, chatboxviews
        // attr not set yet.
        if (_converse.connection.connected) {
          _converse.chatboxviews.trimChats(chatbox);
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-modal.js":
/*!*******************************!*\
  !*** ./src/converse-modal.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/alert_modal.html */ "./src/templates/alert_modal.html"), __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js"), __webpack_require__(/*! backbone.vdomview */ "./node_modules/backbone.vdomview/backbone.vdomview.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
})(void 0, function (converse, tpl_alert_modal, bootstrap) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      Backbone = _converse$env.Backbone,
      _ = _converse$env._;
  converse.plugins.add('converse-modal', {
    initialize: function initialize() {
      var _converse = this._converse;
      _converse.BootstrapModal = Backbone.VDOMView.extend({
        initialize: function initialize() {
          var _this = this;

          this.render().insertIntoDOM();
          this.modal = new bootstrap.Modal(this.el, {
            backdrop: 'static',
            keyboard: true
          });
          this.el.addEventListener('hide.bs.modal', function (event) {
            if (!_.isNil(_this.trigger_el)) {
              _this.trigger_el.classList.remove('selected');
            }
          }, false);
        },
        insertIntoDOM: function insertIntoDOM() {
          var container_el = _converse.chatboxviews.el.querySelector("#converse-modals");

          container_el.insertAdjacentElement('beforeEnd', this.el);
        },
        show: function show(ev) {
          if (ev) {
            ev.preventDefault();
            this.trigger_el = ev.target;
            this.trigger_el.classList.add('selected');
          }

          this.modal.show();
        }
      });
      _converse.Alert = _converse.BootstrapModal.extend({
        initialize: function initialize() {
          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          this.model.on('change', this.render, this);
        },
        toHTML: function toHTML() {
          return tpl_alert_modal(this.model.toJSON());
        }
      });

      _converse.api.listen.on('afterTearDown', function () {
        if (!_converse.chatboxviews) {
          return;
        }

        var container = _converse.chatboxviews.el.querySelector("#converse-modals");

        if (container) {
          container.innerHTML = '';
        }
      });
      /************************ BEGIN API ************************/
      // We extend the default converse.js API to add methods specific to MUC chat rooms.


      var alert;

      _.extend(_converse.api, {
        'alert': {
          'show': function show(type, title, messages) {
            if (_.isString(messages)) {
              messages = [messages];
            }

            if (type === Strophe.LogLevel.ERROR) {
              type = 'alert-danger';
            } else if (type === Strophe.LogLevel.INFO) {
              type = 'alert-info';
            } else if (type === Strophe.LogLevel.WARN) {
              type = 'alert-warning';
            }

            if (_.isUndefined(alert)) {
              var model = new Backbone.Model({
                'title': title,
                'messages': messages,
                'type': type
              });
              alert = new _converse.Alert({
                'model': model
              });
            } else {
              alert.model.set({
                'title': title,
                'messages': messages,
                'type': type
              });
            }

            alert.show();
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-muc-views.js":
/*!***********************************!*\
  !*** ./src/converse-muc-views.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! utils/muc */ "./src/utils/muc.js"), __webpack_require__(/*! xss */ "./node_modules/xss/dist/xss.js"), __webpack_require__(/*! templates/add_chatroom_modal.html */ "./src/templates/add_chatroom_modal.html"), __webpack_require__(/*! templates/chatarea.html */ "./src/templates/chatarea.html"), __webpack_require__(/*! templates/chatroom.html */ "./src/templates/chatroom.html"), __webpack_require__(/*! templates/chatroom_details_modal.html */ "./src/templates/chatroom_details_modal.html"), __webpack_require__(/*! templates/chatroom_disconnect.html */ "./src/templates/chatroom_disconnect.html"), __webpack_require__(/*! templates/chatroom_features.html */ "./src/templates/chatroom_features.html"), __webpack_require__(/*! templates/chatroom_form.html */ "./src/templates/chatroom_form.html"), __webpack_require__(/*! templates/chatroom_head.html */ "./src/templates/chatroom_head.html"), __webpack_require__(/*! templates/chatroom_invite.html */ "./src/templates/chatroom_invite.html"), __webpack_require__(/*! templates/chatroom_nickname_form.html */ "./src/templates/chatroom_nickname_form.html"), __webpack_require__(/*! templates/chatroom_password_form.html */ "./src/templates/chatroom_password_form.html"), __webpack_require__(/*! templates/chatroom_sidebar.html */ "./src/templates/chatroom_sidebar.html"), __webpack_require__(/*! templates/info.html */ "./src/templates/info.html"), __webpack_require__(/*! templates/list_chatrooms_modal.html */ "./src/templates/list_chatrooms_modal.html"), __webpack_require__(/*! templates/occupant.html */ "./src/templates/occupant.html"), __webpack_require__(/*! templates/room_description.html */ "./src/templates/room_description.html"), __webpack_require__(/*! templates/room_item.html */ "./src/templates/room_item.html"), __webpack_require__(/*! templates/room_panel.html */ "./src/templates/room_panel.html"), __webpack_require__(/*! templates/rooms_results.html */ "./src/templates/rooms_results.html"), __webpack_require__(/*! templates/spinner.html */ "./src/templates/spinner.html"), __webpack_require__(/*! awesomplete */ "awesomplete"), __webpack_require__(/*! converse-modal */ "./src/converse-modal.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, muc_utils, xss, tpl_add_chatroom_modal, tpl_chatarea, tpl_chatroom, tpl_chatroom_details_modal, tpl_chatroom_disconnect, tpl_chatroom_features, tpl_chatroom_form, tpl_chatroom_head, tpl_chatroom_invite, tpl_chatroom_nickname_form, tpl_chatroom_password_form, tpl_chatroom_sidebar, tpl_info, tpl_list_chatrooms_modal, tpl_occupant, tpl_room_description, tpl_room_item, tpl_room_panel, tpl_rooms_results, tpl_spinner, Awesomplete) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      b64_sha1 = _converse$env.b64_sha1,
      moment = _converse$env.moment,
      f = _converse$env.f,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._,
      $build = _converse$env.$build,
      $iq = _converse$env.$iq,
      $msg = _converse$env.$msg,
      $pres = _converse$env.$pres;
  var u = converse.env.utils;
  var ROOM_FEATURES_MAP = {
    'passwordprotected': 'unsecured',
    'unsecured': 'passwordprotected',
    'hidden': 'publicroom',
    'publicroom': 'hidden',
    'membersonly': 'open',
    'open': 'membersonly',
    'persistent': 'temporary',
    'temporary': 'persistent',
    'nonanonymous': 'semianonymous',
    'semianonymous': 'nonanonymous',
    'moderated': 'unmoderated',
    'unmoderated': 'moderated'
  };
  converse.plugins.add('converse-muc-views', {
    /* Dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin. They are "optional" because they might not be
     * available, in which case any overrides applicable to them will be
     * ignored.
     *
     * NB: These plugins need to have already been loaded via require.js.
     *
     * It's possible to make these dependencies "non-optional".
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found.
     */
    dependencies: ["converse-autocomplete", "converse-modal", "converse-controlbox", "converse-chatview"],
    overrides: {
      ControlBoxView: {
        renderRoomsPanel: function renderRoomsPanel() {
          var _converse = this.__super__._converse;
          this.roomspanel = new _converse.RoomsPanel({
            'model': new (_converse.RoomsPanelModel.extend({
              'id': b64_sha1("converse.roomspanel".concat(_converse.bare_jid)),
              // Required by sessionStorage
              'browserStorage': new Backbone.BrowserStorage[_converse.config.get('storage')](b64_sha1("converse.roomspanel".concat(_converse.bare_jid)))
            }))()
          });
          this.roomspanel.model.fetch();
          this.el.querySelector('.controlbox-pane').insertAdjacentElement('beforeEnd', this.roomspanel.render().el);

          if (!this.roomspanel.model.get('nick')) {
            this.roomspanel.model.save({
              nick: _converse.xmppstatus.vcard.get('nickname') || Strophe.getNodeFromJid(_converse.bare_jid)
            });
          }

          _converse.emit('roomsPanelRendered');
        },
        renderControlBoxPane: function renderControlBoxPane() {
          var _converse = this.__super__._converse;

          this.__super__.renderControlBoxPane.apply(this, arguments);

          if (_converse.allow_muc) {
            this.renderRoomsPanel();
          }
        }
      }
    },
    initialize: function initialize() {
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.promises.add(['roomsPanelRendered']); // Configuration values for this plugin
      // ====================================
      // Refer to docs/source/configuration.rst for explanations of these
      // configuration settings.


      _converse.api.settings.update({
        'auto_list_rooms': false,
        'hide_muc_server': false,
        // TODO: no longer implemented...
        'muc_disable_moderator_commands': false,
        'visible_toolbar_buttons': {
          'toggle_occupants': true
        }
      });

      function ___(str) {
        /* This is part of a hack to get gettext to scan strings to be
        * translated. Strings we cannot send to the function above because
        * they require variable interpolation and we don't yet have the
        * variables at scan time.
        *
        * See actionInfoMessages further below.
        */
        return str;
      }
      /* http://xmpp.org/extensions/xep-0045.html
       * ----------------------------------------
       * 100 message      Entering a groupchat         Inform user that any occupant is allowed to see the user's full JID
       * 101 message (out of band)                     Affiliation change  Inform user that his or her affiliation changed while not in the groupchat
       * 102 message      Configuration change         Inform occupants that groupchat now shows unavailable members
       * 103 message      Configuration change         Inform occupants that groupchat now does not show unavailable members
       * 104 message      Configuration change         Inform occupants that a non-privacy-related groupchat configuration change has occurred
       * 110 presence     Any groupchat presence       Inform user that presence refers to one of its own groupchat occupants
       * 170 message or initial presence               Configuration change    Inform occupants that groupchat logging is now enabled
       * 171 message      Configuration change         Inform occupants that groupchat logging is now disabled
       * 172 message      Configuration change         Inform occupants that the groupchat is now non-anonymous
       * 173 message      Configuration change         Inform occupants that the groupchat is now semi-anonymous
       * 174 message      Configuration change         Inform occupants that the groupchat is now fully-anonymous
       * 201 presence     Entering a groupchat         Inform user that a new groupchat has been created
       * 210 presence     Entering a groupchat         Inform user that the service has assigned or modified the occupant's roomnick
       * 301 presence     Removal from groupchat       Inform user that he or she has been banned from the groupchat
       * 303 presence     Exiting a groupchat          Inform all occupants of new groupchat nickname
       * 307 presence     Removal from groupchat       Inform user that he or she has been kicked from the groupchat
       * 321 presence     Removal from groupchat       Inform user that he or she is being removed from the groupchat because of an affiliation change
       * 322 presence     Removal from groupchat       Inform user that he or she is being removed from the groupchat because the groupchat has been changed to members-only and the user is not a member
       * 332 presence     Removal from groupchat       Inform user that he or she is being removed from the groupchat because of a system shutdown
       */


      _converse.muc = {
        info_messages: {
          100: __('This groupchat is not anonymous'),
          102: __('This groupchat now shows unavailable members'),
          103: __('This groupchat does not show unavailable members'),
          104: __('The groupchat configuration has changed'),
          170: __('groupchat logging is now enabled'),
          171: __('groupchat logging is now disabled'),
          172: __('This groupchat is now no longer anonymous'),
          173: __('This groupchat is now semi-anonymous'),
          174: __('This groupchat is now fully-anonymous'),
          201: __('A new groupchat has been created')
        },
        disconnect_messages: {
          301: __('You have been banned from this groupchat'),
          307: __('You have been kicked from this groupchat'),
          321: __("You have been removed from this groupchat because of an affiliation change"),
          322: __("You have been removed from this groupchat because the groupchat has changed to members-only and you're not a member"),
          332: __("You have been removed from this groupchat because the service hosting it is being shut down")
        },
        action_info_messages: {
          /* XXX: Note the triple underscore function and not double
          * underscore.
          *
          * This is a hack. We can't pass the strings to __ because we
          * don't yet know what the variable to interpolate is.
          *
          * Triple underscore will just return the string again, but we
          * can then at least tell gettext to scan for it so that these
          * strings are picked up by the translation machinery.
          */
          301: ___("%1$s has been banned"),
          303: ___("%1$s's nickname has changed"),
          307: ___("%1$s has been kicked out"),
          321: ___("%1$s has been removed because of an affiliation change"),
          322: ___("%1$s has been removed for not being a member")
        },
        new_nickname_messages: {
          210: ___('Your nickname has been automatically set to %1$s'),
          303: ___('Your nickname has been changed to %1$s')
        }
      };

      function insertRoomInfo(el, stanza) {
        /* Insert groupchat info (based on returned #disco IQ stanza)
         *
         * Parameters:
         *  (HTMLElement) el: The HTML DOM element that should
         *      contain the info.
         *  (XMLElement) stanza: The IQ stanza containing the groupchat
         *      info.
         */
        // All MUC features found here: http://xmpp.org/registrar/disco-features.html
        el.querySelector('span.spinner').remove();
        el.querySelector('a.room-info').classList.add('selected');
        el.insertAdjacentHTML('beforeEnd', tpl_room_description({
          'jid': stanza.getAttribute('from'),
          'desc': _.get(_.head(sizzle('field[var="muc#roominfo_description"] value', stanza)), 'textContent'),
          'occ': _.get(_.head(sizzle('field[var="muc#roominfo_occupants"] value', stanza)), 'textContent'),
          'hidden': sizzle('feature[var="muc_hidden"]', stanza).length,
          'membersonly': sizzle('feature[var="muc_membersonly"]', stanza).length,
          'moderated': sizzle('feature[var="muc_moderated"]', stanza).length,
          'nonanonymous': sizzle('feature[var="muc_nonanonymous"]', stanza).length,
          'open': sizzle('feature[var="muc_open"]', stanza).length,
          'passwordprotected': sizzle('feature[var="muc_passwordprotected"]', stanza).length,
          'persistent': sizzle('feature[var="muc_persistent"]', stanza).length,
          'publicroom': sizzle('feature[var="muc_publicroom"]', stanza).length,
          'semianonymous': sizzle('feature[var="muc_semianonymous"]', stanza).length,
          'temporary': sizzle('feature[var="muc_temporary"]', stanza).length,
          'unmoderated': sizzle('feature[var="muc_unmoderated"]', stanza).length,
          'label_desc': __('Description:'),
          'label_jid': __('Groupchat Address (JID):'),
          'label_occ': __('Participants:'),
          'label_features': __('Features:'),
          'label_requires_auth': __('Requires authentication'),
          'label_hidden': __('Hidden'),
          'label_requires_invite': __('Requires an invitation'),
          'label_moderated': __('Moderated'),
          'label_non_anon': __('Non-anonymous'),
          'label_open_room': __('Open'),
          'label_permanent_room': __('Permanent'),
          'label_public': __('Public'),
          'label_semi_anon': __('Semi-anonymous'),
          'label_temp_room': __('Temporary'),
          'label_unmoderated': __('Unmoderated')
        }));
      }

      function _toggleRoomInfo(ev) {
        /* Show/hide extra information about a groupchat in a listing. */
        var parent_el = u.ancestor(ev.target, '.room-item'),
            div_el = parent_el.querySelector('div.room-info');

        if (div_el) {
          u.slideIn(div_el).then(u.removeElement);
          parent_el.querySelector('a.room-info').classList.remove('selected');
        } else {
          parent_el.insertAdjacentHTML('beforeend', tpl_spinner());

          _converse.api.disco.info(ev.target.getAttribute('data-room-jid'), null).then(function (stanza) {
            return insertRoomInfo(parent_el, stanza);
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        }
      }

      _converse.ListChatRoomsModal = _converse.BootstrapModal.extend({
        events: {
          'submit form': 'showRooms',
          'click a.room-info': 'toggleRoomInfo',
          'change input[name=nick]': 'setNick',
          'change input[name=server]': 'setDomain',
          'click .open-room': 'openRoom'
        },
        initialize: function initialize() {
          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          this.model.on('change:muc_domain', this.onDomainChange, this);
        },
        toHTML: function toHTML() {
          return tpl_list_chatrooms_modal(_.extend(this.model.toJSON(), {
            'heading_list_chatrooms': __('Query for Groupchats'),
            'label_server_address': __('Server address'),
            'label_query': __('Show groupchats'),
            'server_placeholder': __('conference.example.org')
          }));
        },
        afterRender: function afterRender() {
          var _this = this;

          this.el.addEventListener('shown.bs.modal', function () {
            _this.el.querySelector('input[name="server"]').focus();
          }, false);
        },
        openRoom: function openRoom(ev) {
          ev.preventDefault();
          var jid = ev.target.getAttribute('data-room-jid');
          var name = ev.target.getAttribute('data-room-name');
          this.modal.hide();

          _converse.api.rooms.open(jid, {
            'name': name
          });
        },
        toggleRoomInfo: function toggleRoomInfo(ev) {
          ev.preventDefault();

          _toggleRoomInfo(ev);
        },
        onDomainChange: function onDomainChange(model) {
          if (_converse.auto_list_rooms) {
            this.updateRoomsList();
          }
        },
        roomStanzaItemToHTMLElement: function roomStanzaItemToHTMLElement(groupchat) {
          var name = Strophe.unescapeNode(groupchat.getAttribute('name') || groupchat.getAttribute('jid'));
          var div = document.createElement('div');
          div.innerHTML = tpl_room_item({
            'name': Strophe.xmlunescape(name),
            'jid': groupchat.getAttribute('jid'),
            'open_title': __('Click to open this groupchat'),
            'info_title': __('Show more information on this groupchat')
          });
          return div.firstElementChild;
        },
        removeSpinner: function removeSpinner() {
          _.each(this.el.querySelectorAll('span.spinner'), function (el) {
            return el.parentNode.removeChild(el);
          });
        },
        informNoRoomsFound: function informNoRoomsFound() {
          var chatrooms_el = this.el.querySelector('.available-chatrooms');
          chatrooms_el.innerHTML = tpl_rooms_results({
            'feedback_text': __('No groupchats found')
          });
          var input_el = this.el.querySelector('input[name="server"]');
          input_el.classList.remove('hidden');
          this.removeSpinner();
        },
        onRoomsFound: function onRoomsFound(iq) {
          /* Handle the IQ stanza returned from the server, containing
           * all its public groupchats.
           */
          var available_chatrooms = this.el.querySelector('.available-chatrooms');
          this.rooms = iq.querySelectorAll('query item');

          if (this.rooms.length) {
            // For translators: %1$s is a variable and will be
            // replaced with the XMPP server name
            available_chatrooms.innerHTML = tpl_rooms_results({
              'feedback_text': __('Groupchats found:')
            });
            var fragment = document.createDocumentFragment();

            var children = _.reject(_.map(this.rooms, this.roomStanzaItemToHTMLElement), _.isNil);

            _.each(children, function (child) {
              return fragment.appendChild(child);
            });

            available_chatrooms.appendChild(fragment);
            this.removeSpinner();
          } else {
            this.informNoRoomsFound();
          }

          return true;
        },
        updateRoomsList: function updateRoomsList() {
          /* Send an IQ stanza to the server asking for all groupchats
           */
          _converse.connection.sendIQ($iq({
            'to': this.model.get('muc_domain'),
            'from': _converse.connection.jid,
            'type': "get"
          }).c("query", {
            xmlns: Strophe.NS.DISCO_ITEMS
          }), this.onRoomsFound.bind(this), this.informNoRoomsFound.bind(this), 5000);
        },
        showRooms: function showRooms(ev) {
          ev.preventDefault();
          var data = new FormData(ev.target);
          this.model.save('muc_domain', data.get('server'));
          this.updateRoomsList();
        },
        setDomain: function setDomain(ev) {
          this.model.save({
            'muc_domain': ev.target.value
          });
        },
        setNick: function setNick(ev) {
          this.model.save({
            nick: ev.target.value
          });
        }
      });
      _converse.AddChatRoomModal = _converse.BootstrapModal.extend({
        events: {
          'submit form.add-chatroom': 'openChatRoom'
        },
        toHTML: function toHTML() {
          return tpl_add_chatroom_modal(_.extend(this.model.toJSON(), {
            'heading_new_chatroom': __('Enter a new Groupchat'),
            'label_room_address': __('Groupchat address'),
            'label_nickname': __('Optional nickname'),
            'chatroom_placeholder': __('name@conference.example.org'),
            'label_join': __('Join')
          }));
        },
        afterRender: function afterRender() {
          var _this2 = this;

          this.el.addEventListener('shown.bs.modal', function () {
            _this2.el.querySelector('input[name="chatroom"]').focus();
          }, false);
        },
        parseRoomDataFromEvent: function parseRoomDataFromEvent(form) {
          var data = new FormData(form);
          var jid = data.get('chatroom');
          this.model.save('muc_domain', Strophe.getDomainFromJid(jid));
          return {
            'jid': jid,
            'nick': data.get('nickname')
          };
        },
        openChatRoom: function openChatRoom(ev) {
          ev.preventDefault();
          var data = this.parseRoomDataFromEvent(ev.target);

          if (data.nick === "") {
            // Make sure defaults apply if no nick is provided.
            data.nick = undefined;
          }

          _converse.api.rooms.open(data.jid, data);

          this.modal.hide();
          ev.target.reset();
        }
      });
      _converse.RoomDetailsModal = _converse.BootstrapModal.extend({
        initialize: function initialize() {
          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          this.model.on('change', this.render, this);
          this.model.occupants.on('change', this.render, this);
        },
        toHTML: function toHTML() {
          return tpl_chatroom_details_modal(_.extend(this.model.toJSON(), {
            '_': _,
            '__': __,
            'topic': u.addHyperlinks(xss.filterXSS(_.get(this.model.get('subject'), 'text'), {
              'whiteList': {}
            })),
            'display_name': __('Groupchat info for %1$s', this.model.getDisplayName()),
            'num_occupants': this.model.occupants.length
          }));
        }
      });
      _converse.ChatRoomView = _converse.ChatBoxView.extend({
        /* Backbone.NativeView which renders a groupchat, based upon the view
         * for normal one-on-one chat boxes.
         */
        length: 300,
        tagName: 'div',
        className: 'chatbox chatroom hidden',
        is_chatroom: true,
        events: {
          'change input.fileupload': 'onFileSelection',
          'click .chat-msg__action-edit': 'onMessageEditButtonClicked',
          'click .chatbox-navback': 'showControlBox',
          'click .close-chatbox-button': 'close',
          'click .configure-chatroom-button': 'getAndRenderConfigurationForm',
          'click .show-room-details-modal': 'showRoomDetailsModal',
          'click .hide-occupants': 'hideOccupants',
          'click .new-msgs-indicator': 'viewUnreadMessages',
          'click .occupant-nick': 'onOccupantClicked',
          'click .send-button': 'onFormSubmitted',
          'click .toggle-call': 'toggleCall',
          'click .toggle-occupants': 'toggleOccupants',
          'click .toggle-smiley ul.emoji-picker li': 'insertEmoji',
          'click .toggle-smiley': 'toggleEmojiMenu',
          'click .upload-file': 'toggleFileUpload',
          'keydown .chat-textarea': 'keyPressed',
          'keyup .chat-textarea': 'keyUp',
          'input .chat-textarea': 'inputChanged'
        },
        initialize: function initialize() {
          var _this3 = this;

          this.initDebounced();
          this.model.messages.on('add', this.onMessageAdded, this);
          this.model.messages.on('rendered', this.scrollDown, this);
          this.model.on('change:affiliation', this.renderHeading, this);
          this.model.on('change:connection_status', this.afterConnected, this);
          this.model.on('change:name', this.renderHeading, this);
          this.model.on('change:subject', this.renderHeading, this);
          this.model.on('change:subject', this.setChatRoomSubject, this);
          this.model.on('configurationNeeded', this.getAndRenderConfigurationForm, this);
          this.model.on('destroy', this.hide, this);
          this.model.on('show', this.show, this);
          this.model.occupants.on('add', this.showJoinNotification, this);
          this.model.occupants.on('remove', this.showLeaveNotification, this);
          this.model.occupants.on('change:show', this.showJoinOrLeaveNotification, this);
          this.model.occupants.on('change:role', this.informOfOccupantsRoleChange, this);
          this.model.occupants.on('change:affiliation', this.informOfOccupantsAffiliationChange, this);
          this.createEmojiPicker();
          this.createOccupantsView();
          this.render().insertIntoDOM();
          this.registerHandlers();

          if (this.model.get('connection_status') !== converse.ROOMSTATUS.ENTERED) {
            var handler = function handler() {
              if (!u.isPersistableModel(_this3.model)) {
                // Happens during tests, nothing to do if this
                // is a hanging chatbox (i.e. not in the collection anymore).
                return;
              }

              _this3.populateAndJoin();

              _converse.emit('chatRoomOpened', _this3);
            };

            this.model.getRoomFeatures().then(handler, handler);
          } else {
            this.fetchMessages();

            _converse.emit('chatRoomOpened', this);
          }
        },
        render: function render() {
          this.el.setAttribute('id', this.model.get('box_id'));
          this.el.innerHTML = tpl_chatroom();
          this.renderHeading();
          this.renderChatArea();
          this.renderMessageForm();
          this.initAutoComplete();

          if (this.model.get('connection_status') !== converse.ROOMSTATUS.ENTERED) {
            this.showSpinner();
          }

          return this;
        },
        renderHeading: function renderHeading() {
          /* Render the heading UI of the groupchat. */
          this.el.querySelector('.chat-head-chatroom').innerHTML = this.generateHeadingHTML();
        },
        renderChatArea: function renderChatArea() {
          /* Render the UI container in which groupchat messages will appear.
           */
          if (_.isNull(this.el.querySelector('.chat-area'))) {
            var container_el = this.el.querySelector('.chatroom-body');
            container_el.insertAdjacentHTML('beforeend', tpl_chatarea({
              'show_send_button': _converse.show_send_button
            }));
            container_el.insertAdjacentElement('beforeend', this.occupantsview.el);
            this.content = this.el.querySelector('.chat-content');
            this.toggleOccupants(null, true);
          }

          return this;
        },
        initAutoComplete: function initAutoComplete() {
          var _this4 = this;

          this.auto_complete = new _converse.AutoComplete(this.el, {
            'auto_first': true,
            'auto_evaluate': false,
            'min_chars': 1,
            'match_current_word': true,
            'match_on_tab': true,
            'list': function list() {
              return _this4.model.occupants.map(function (o) {
                return {
                  'label': o.getDisplayName(),
                  'value': "@".concat(o.getDisplayName())
                };
              });
            },
            'filter': _converse.FILTER_STARTSWITH,
            'trigger_on_at': true
          });
          this.auto_complete.on('suggestion-box-selectcomplete', function () {
            return _this4.auto_completing = false;
          });
        },
        keyPressed: function keyPressed(ev) {
          if (this.auto_complete.keyPressed(ev)) {
            return;
          }

          return _converse.ChatBoxView.prototype.keyPressed.apply(this, arguments);
        },
        keyUp: function keyUp(ev) {
          this.auto_complete.evaluate(ev);
        },
        showRoomDetailsModal: function showRoomDetailsModal(ev) {
          ev.preventDefault();

          if (_.isUndefined(this.model.room_details_modal)) {
            this.model.room_details_modal = new _converse.RoomDetailsModal({
              'model': this.model
            });
          }

          this.model.room_details_modal.show(ev);
        },
        showChatStateNotification: function showChatStateNotification(message) {
          if (message.get('sender') === 'me') {
            return;
          }

          return _converse.ChatBoxView.prototype.showChatStateNotification.apply(this, arguments);
        },
        createOccupantsView: function createOccupantsView() {
          /* Create the ChatRoomOccupantsView Backbone.NativeView
           */
          this.model.occupants.chatroomview = this;
          this.occupantsview = new _converse.ChatRoomOccupantsView({
            'model': this.model.occupants
          });
          return this;
        },
        informOfOccupantsAffiliationChange: function informOfOccupantsAffiliationChange(occupant, changed) {
          var previous_affiliation = occupant._previousAttributes.affiliation,
              current_affiliation = occupant.get('affiliation');

          if (previous_affiliation === 'admin') {
            this.showChatEvent(__("%1$s is no longer an admin of this groupchat", occupant.get('nick')));
          } else if (previous_affiliation === 'owner') {
            this.showChatEvent(__("%1$s is no longer an owner of this groupchat", occupant.get('nick')));
          } else if (previous_affiliation === 'outcast') {
            this.showChatEvent(__("%1$s is no longer banned from this groupchat", occupant.get('nick')));
          }

          if (current_affiliation === 'none' && previous_affiliation === 'member') {
            this.showChatEvent(__("%1$s is no longer a permanent member of this groupchat", occupant.get('nick')));
          }

          if (current_affiliation === 'member') {
            this.showChatEvent(__("%1$s is now a permanent member of this groupchat", occupant.get('nick')));
          } else if (current_affiliation === 'outcast') {
            this.showChatEvent(__("%1$s has been banned from this groupchat", occupant.get('nick')));
          } else if (current_affiliation === 'admin' || current_affiliation == 'owner') {
            this.showChatEvent(__("%1$s is now an ".concat(current_affiliation, " of this groupchat"), occupant.get('nick')));
          }
        },
        informOfOccupantsRoleChange: function informOfOccupantsRoleChange(occupant, changed) {
          var previous_role = occupant._previousAttributes.role;

          if (previous_role === 'moderator') {
            this.showChatEvent(__("%1$s is no longer a moderator", occupant.get('nick')));
          }

          if (previous_role === 'visitor') {
            this.showChatEvent(__("%1$s has been given a voice again", occupant.get('nick')));
          }

          if (occupant.get('role') === 'visitor') {
            this.showChatEvent(__("%1$s has been muted", occupant.get('nick')));
          }

          if (occupant.get('role') === 'moderator') {
            this.showChatEvent(__("%1$s is now a moderator", occupant.get('nick')));
          }
        },
        generateHeadingHTML: function generateHeadingHTML() {
          /* Returns the heading HTML to be rendered.
           */
          return tpl_chatroom_head(_.extend(this.model.toJSON(), {
            'Strophe': Strophe,
            'info_close': __('Close and leave this groupchat'),
            'info_configure': __('Configure this groupchat'),
            'info_details': __('Show more details about this groupchat'),
            'description': _.get(this.model.get('subject'), 'text') || ''
          }));
        },
        afterShown: function afterShown() {
          /* Override from converse-chatview, specifically to avoid
           * the 'active' chat state from being sent out prematurely.
           *
           * This is instead done in `afterConnected` below.
           */
          if (u.isPersistableModel(this.model)) {
            this.model.clearUnreadMsgCounter();
            this.model.save();
          }

          this.occupantsview.setOccupantsHeight();
          this.scrollDown();
          this.renderEmojiPicker();
        },
        show: function show() {
          if (u.isVisible(this.el)) {
            this.focus();
            return;
          } // Override from converse-chatview in order to not use
          // "fadeIn", which causes flashing.


          u.showElement(this.el);
          this.afterShown();
        },
        afterConnected: function afterConnected() {
          if (this.model.get('connection_status') === converse.ROOMSTATUS.ENTERED) {
            this.hideSpinner();
            this.setChatState(_converse.ACTIVE);
            this.scrollDown();
            this.focus();
          }
        },
        getToolbarOptions: function getToolbarOptions() {
          return _.extend(_converse.ChatBoxView.prototype.getToolbarOptions.apply(this, arguments), {
            'label_hide_occupants': __('Hide the list of participants'),
            'show_occupants_toggle': this.is_chatroom && _converse.visible_toolbar_buttons.toggle_occupants
          });
        },
        close: function close(ev) {
          /* Close this chat box, which implies leaving the groupchat as
           * well.
           */
          this.hide();

          if (Backbone.history.getFragment() === "converse/room?jid=" + this.model.get('jid')) {
            _converse.router.navigate('');
          }

          this.model.leave();

          _converse.ChatBoxView.prototype.close.apply(this, arguments);
        },
        setOccupantsVisibility: function setOccupantsVisibility() {
          var icon_el = this.el.querySelector('.toggle-occupants');

          if (this.model.get('hidden_occupants')) {
            u.removeClass('fa-angle-double-right', icon_el);
            u.addClass('fa-angle-double-left', icon_el);
            u.addClass('full', this.el.querySelector('.chat-area'));
            u.hideElement(this.el.querySelector('.occupants'));
          } else {
            u.addClass('fa-angle-double-right', icon_el);
            u.removeClass('fa-angle-double-left', icon_el);
            u.removeClass('full', this.el.querySelector('.chat-area'));
            u.removeClass('hidden', this.el.querySelector('.occupants'));
          }

          this.occupantsview.setOccupantsHeight();
        },
        hideOccupants: function hideOccupants(ev, preserve_state) {
          /* Show or hide the right sidebar containing the chat
           * occupants (and the invite widget).
           */
          if (ev) {
            ev.preventDefault();
            ev.stopPropagation();
          }

          this.model.save({
            'hidden_occupants': true
          });
          this.setOccupantsVisibility();
          this.scrollDown();
        },
        toggleOccupants: function toggleOccupants(ev, preserve_state) {
          /* Show or hide the right sidebar containing the chat
           * occupants (and the invite widget).
           */
          if (ev) {
            ev.preventDefault();
            ev.stopPropagation();
          }

          if (!preserve_state) {
            this.model.set({
              'hidden_occupants': !this.model.get('hidden_occupants')
            });
          }

          this.setOccupantsVisibility();
          this.scrollDown();
        },
        onOccupantClicked: function onOccupantClicked(ev) {
          /* When an occupant is clicked, insert their nickname into
           * the chat textarea input.
           */
          this.insertIntoTextArea(ev.target.textContent);
        },
        handleChatStateNotification: function handleChatStateNotification(message) {
          /* Override the method on the ChatBoxView base class to
           * ignore <gone/> notifications in groupchats.
           *
           * As laid out in the business rules in XEP-0085
           * http://xmpp.org/extensions/xep-0085.html#bizrules-groupchat
           */
          if (message.get('fullname') === this.model.get('nick')) {
            // Don't know about other servers, but OpenFire sends
            // back to you your own chat state notifications.
            // We ignore them here...
            return;
          }

          if (message.get('chat_state') !== _converse.GONE) {
            _converse.ChatBoxView.prototype.handleChatStateNotification.apply(this, arguments);
          }
        },
        modifyRole: function modifyRole(groupchat, nick, role, reason, onSuccess, onError) {
          var item = $build("item", {
            nick: nick,
            role: role
          });
          var iq = $iq({
            to: groupchat,
            type: "set"
          }).c("query", {
            xmlns: Strophe.NS.MUC_ADMIN
          }).cnode(item.node);

          if (reason !== null) {
            iq.c("reason", reason);
          }

          return _converse.connection.sendIQ(iq, onSuccess, onError);
        },
        verifyRoles: function verifyRoles(roles) {
          var me = this.model.occupants.findWhere({
            'jid': _converse.bare_jid
          });

          if (!_.includes(roles, me.get('role'))) {
            this.showErrorMessage(__("Forbidden: you do not have the necessary role in order to do that."));
            return false;
          }

          return true;
        },
        verifyAffiliations: function verifyAffiliations(affiliations) {
          var me = this.model.occupants.findWhere({
            'jid': _converse.bare_jid
          });

          if (!_.includes(affiliations, me.get('affiliation'))) {
            this.showErrorMessage(__("Forbidden: you do not have the necessary affiliation in order to do that."));
            return false;
          }

          return true;
        },
        validateRoleChangeCommand: function validateRoleChangeCommand(command, args) {
          /* Check that a command to change a groupchat user's role or
           * affiliation has anough arguments.
           */
          if (args.length < 1 || args.length > 2) {
            this.showErrorMessage(__('Error: the "%1$s" command takes two arguments, the user\'s nickname and optionally a reason.', command));
            return false;
          }

          if (!this.model.occupants.findWhere({
            'nick': args[0]
          }) && !this.model.occupants.findWhere({
            'jid': args[0]
          })) {
            this.showErrorMessage(__('Error: couldn\'t find a groupchat participant "%1$s"', args[0]));
            return false;
          }

          return true;
        },
        onCommandError: function onCommandError(err) {
          _converse.log(err, Strophe.LogLevel.FATAL);

          this.showErrorMessage(__("Sorry, an error happened while running the command. Check your browser's developer console for details."));
        },
        parseMessageForCommands: function parseMessageForCommands(text) {
          var _this5 = this;

          if (_converse.ChatBoxView.prototype.parseMessageForCommands.apply(this, arguments)) {
            return true;
          }

          if (_converse.muc_disable_moderator_commands) {
            return false;
          }

          var match = text.replace(/^\s*/, "").match(/^\/(.*?)(?: (.*))?$/) || [false, '', ''],
              args = match[2] && match[2].splitOnce(' ') || [],
              command = match[1].toLowerCase();

          switch (command) {
            case 'admin':
              if (!this.verifyAffiliations(['owner']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.model.setAffiliation('admin', [{
                'jid': args[0],
                'reason': args[1]
              }]).then(function () {
                return _this5.model.occupants.fetchMembers();
              }, function (err) {
                return _this5.onCommandError(err);
              });
              break;

            case 'ban':
              if (!this.verifyAffiliations(['owner', 'admin']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.model.setAffiliation('outcast', [{
                'jid': args[0],
                'reason': args[1]
              }]).then(function () {
                return _this5.model.occupants.fetchMembers();
              }, function (err) {
                return _this5.onCommandError(err);
              });
              break;

            case 'deop':
              if (!this.verifyAffiliations(['admin', 'owner']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.modifyRole(this.model.get('jid'), args[0], 'participant', args[1], undefined, this.onCommandError.bind(this));
              break;

            case 'help':
              this.showHelpMessages(["<strong>/admin</strong>: ".concat(__("Change user's affiliation to admin")), "<strong>/ban</strong>: ".concat(__('Ban user from groupchat')), "<strong>/clear</strong>: ".concat(__('Remove messages')), "<strong>/deop</strong>: ".concat(__('Change user role to participant')), "<strong>/help</strong>: ".concat(__('Show this menu')), "<strong>/kick</strong>: ".concat(__('Kick user from groupchat')), "<strong>/me</strong>: ".concat(__('Write in 3rd person')), "<strong>/member</strong>: ".concat(__('Grant membership to a user')), "<strong>/mute</strong>: ".concat(__("Remove user's ability to post messages")), "<strong>/nick</strong>: ".concat(__('Change your nickname')), "<strong>/op</strong>: ".concat(__('Grant moderator role to user')), "<strong>/owner</strong>: ".concat(__('Grant ownership of this groupchat')), "<strong>/revoke</strong>: ".concat(__("Revoke user's membership")), "<strong>/subject</strong>: ".concat(__('Set groupchat subject')), "<strong>/topic</strong>: ".concat(__('Set groupchat subject (alias for /subject)')), "<strong>/voice</strong>: ".concat(__('Allow muted user to post messages'))]);
              break;

            case 'kick':
              if (!this.verifyRoles(['moderator']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.modifyRole(this.model.get('jid'), args[0], 'none', args[1], undefined, this.onCommandError.bind(this));
              break;

            case 'mute':
              if (!this.verifyRoles(['moderator']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.modifyRole(this.model.get('jid'), args[0], 'visitor', args[1], undefined, this.onCommandError.bind(this));
              break;

            case 'member':
              {
                if (!this.verifyAffiliations(['admin', 'owner']) || !this.validateRoleChangeCommand(command, args)) {
                  break;
                }

                var occupant = this.model.occupants.findWhere({
                  'nick': args[0]
                }) || this.model.occupants.findWhere({
                  'jid': args[0]
                });
                this.model.setAffiliation('member', [{
                  'jid': occupant.get('jid'),
                  'reason': args[1]
                }]).then(function () {
                  return _this5.model.occupants.fetchMembers();
                }, function (err) {
                  return _this5.onCommandError(err);
                });
                break;
              }

            case 'nick':
              if (!this.verifyRoles(['visitor', 'participant', 'moderator'])) {
                break;
              }

              _converse.connection.send($pres({
                from: _converse.connection.jid,
                to: this.model.getRoomJIDAndNick(match[2]),
                id: _converse.connection.getUniqueId()
              }).tree());

              break;

            case 'owner':
              if (!this.verifyAffiliations(['owner']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.model.setAffiliation('owner', [{
                'jid': args[0],
                'reason': args[1]
              }]).then(function () {
                return _this5.model.occupants.fetchMembers();
              }, function (err) {
                return _this5.onCommandError(err);
              });
              break;

            case 'op':
              if (!this.verifyAffiliations(['admin', 'owner']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.modifyRole(this.model.get('jid'), args[0], 'moderator', args[1], undefined, this.onCommandError.bind(this));
              break;

            case 'revoke':
              if (!this.verifyAffiliations(['admin', 'owner']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.model.setAffiliation('none', [{
                'jid': args[0],
                'reason': args[1]
              }]).then(function () {
                return _this5.model.occupants.fetchMembers();
              }, function (err) {
                return _this5.onCommandError(err);
              });
              break;

            case 'topic':
            case 'subject':
              // TODO: should be done via API call to _converse.api.rooms
              _converse.connection.send($msg({
                to: this.model.get('jid'),
                from: _converse.connection.jid,
                type: "groupchat"
              }).c("subject", {
                xmlns: "jabber:client"
              }).t(match[2] || "").tree());

              break;

            case 'voice':
              if (!this.verifyRoles(['moderator']) || !this.validateRoleChangeCommand(command, args)) {
                break;
              }

              this.modifyRole(this.model.get('jid'), args[0], 'participant', args[1], undefined, this.onCommandError.bind(this));
              break;

            default:
              return false;
          }

          return true;
        },
        registerHandlers: function registerHandlers() {
          /* Register presence and message handlers for this chat
           * groupchat
           */
          // XXX: Ideally this can be refactored out so that we don't
          // need to do stanza processing inside the views in this
          // module. See the comment in "onPresence" for more info.
          this.model.addHandler('presence', 'ChatRoomView.onPresence', this.onPresence.bind(this)); // XXX instead of having a method showStatusMessages, we could instead
          // create message models in converse-muc.js and then give them views in this module.

          this.model.addHandler('message', 'ChatRoomView.showStatusMessages', this.showStatusMessages.bind(this));
        },
        onPresence: function onPresence(pres) {
          /* Handles all MUC presence stanzas.
           *
           * Parameters:
           *  (XMLElement) pres: The stanza
           */
          // XXX: Current thinking is that excessive stanza
          // processing inside a view is a "code smell".
          // Instead stanza processing should happen inside the
          // models/collections.
          if (pres.getAttribute('type') === 'error') {
            this.showErrorMessageFromPresence(pres);
          } else {
            // Instead of doing it this way, we could perhaps rather
            // create StatusMessage objects inside the messages
            // Collection and then simply render those. Then stanza
            // processing is done on the model and rendering in the
            // view(s).
            this.showStatusMessages(pres);
          }
        },
        populateAndJoin: function populateAndJoin() {
          this.model.occupants.fetchMembers();
          this.join();
          this.fetchMessages();
        },
        join: function join(nick, password) {
          /* Join the groupchat.
           *
           * Parameters:
           *  (String) nick: The user's nickname
           *  (String) password: Optional password, if required by
           *      the groupchat.
           */
          if (!nick && !this.model.get('nick')) {
            this.checkForReservedNick();
            return this;
          }

          this.model.join(nick, password);
          return this;
        },
        renderConfigurationForm: function renderConfigurationForm(stanza) {
          var _this6 = this;

          /* Renders a form given an IQ stanza containing the current
           * groupchat configuration.
           *
           * Returns a promise which resolves once the user has
           * either submitted the form, or canceled it.
           *
           * Parameters:
           *  (XMLElement) stanza: The IQ stanza containing the groupchat
           *      config.
           */
          var container_el = this.el.querySelector('.chatroom-body');

          _.each(container_el.querySelectorAll('.chatroom-form-container'), u.removeElement);

          _.each(container_el.children, u.hideElement);

          container_el.insertAdjacentHTML('beforeend', tpl_chatroom_form());

          var form_el = container_el.querySelector('form.chatroom-form'),
              fieldset_el = form_el.querySelector('fieldset'),
              fields = stanza.querySelectorAll('field'),
              title = _.get(stanza.querySelector('title'), 'textContent'),
              instructions = _.get(stanza.querySelector('instructions'), 'textContent');

          u.removeElement(fieldset_el.querySelector('span.spinner'));
          fieldset_el.insertAdjacentHTML('beforeend', "<legend>".concat(title, "</legend>"));

          if (instructions && instructions !== title) {
            fieldset_el.insertAdjacentHTML('beforeend', "<p class=\"form-help\">".concat(instructions, "</p>"));
          }

          _.each(fields, function (field) {
            fieldset_el.insertAdjacentHTML('beforeend', u.xForm2webForm(field, stanza));
          }); // Render save/cancel buttons


          var last_fieldset_el = document.createElement('fieldset');
          last_fieldset_el.insertAdjacentHTML('beforeend', "<input type=\"submit\" class=\"btn btn-primary\" value=\"".concat(__('Save'), "\"/>"));
          last_fieldset_el.insertAdjacentHTML('beforeend', "<input type=\"button\" class=\"btn btn-secondary\" value=\"".concat(__('Cancel'), "\"/>"));
          form_el.insertAdjacentElement('beforeend', last_fieldset_el);
          last_fieldset_el.querySelector('input[type=button]').addEventListener('click', function (ev) {
            ev.preventDefault();

            _this6.closeForm();
          });
          form_el.addEventListener('submit', function (ev) {
            ev.preventDefault();

            _this6.model.saveConfiguration(ev.target).then(_this6.model.getRoomFeatures.bind(_this6.model));

            _this6.closeForm();
          }, false);
        },
        closeForm: function closeForm() {
          /* Remove the configuration form without submitting and
           * return to the chat view.
           */
          u.removeElement(this.el.querySelector('.chatroom-form-container'));
          this.renderAfterTransition();
        },
        getAndRenderConfigurationForm: function getAndRenderConfigurationForm(ev) {
          /* Start the process of configuring a groupchat, either by
           * rendering a configuration form, or by auto-configuring
           * based on the "roomconfig" data stored on the
           * Backbone.Model.
           *
           * Stores the new configuration on the Backbone.Model once
           * completed.
           *
           * Paremeters:
           *  (Event) ev: DOM event that might be passed in if this
           *      method is called due to a user action. In this
           *      case, auto-configure won't happen, regardless of
           *      the settings.
           */
          this.showSpinner();
          this.model.fetchRoomConfiguration().then(this.renderConfigurationForm.bind(this)).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        },
        submitNickname: function submitNickname(ev) {
          /* Get the nickname value from the form and then join the
           * groupchat with it.
           */
          ev.preventDefault();
          var nick_el = ev.target.nick;
          var nick = nick_el.value;

          if (!nick) {
            nick_el.classList.add('error');
            return;
          } else {
            nick_el.classList.remove('error');
          }

          this.el.querySelector('.chatroom-form-container').outerHTML = tpl_spinner();
          this.join(nick);
        },
        checkForReservedNick: function checkForReservedNick() {
          /* User service-discovery to ask the XMPP server whether
           * this user has a reserved nickname for this groupchat.
           * If so, we'll use that, otherwise we render the nickname form.
           */
          this.showSpinner();
          this.model.checkForReservedNick(this.onNickNameFound.bind(this), this.onNickNameNotFound.bind(this));
        },
        onNickNameFound: function onNickNameFound(iq) {
          /* We've received an IQ response from the server which
           * might contain the user's reserved nickname.
           * If no nickname is found we either render a form for
           * them to specify one, or we try to join the groupchat with the
           * node of the user's JID.
           *
           * Parameters:
           *  (XMLElement) iq: The received IQ stanza
           */
          var identity_el = iq.querySelector('query[node="x-roomuser-item"] identity'),
              nick = identity_el ? identity_el.getAttribute('name') : null;

          if (!nick) {
            this.onNickNameNotFound();
          } else {
            this.join(nick);
          }
        },
        onNickNameNotFound: function onNickNameNotFound(message) {
          var nick = this.getDefaultNickName();

          if (nick) {
            this.join(nick);
          } else {
            this.renderNicknameForm(message);
          }
        },
        getDefaultNickName: function getDefaultNickName() {
          /* The default nickname (used when muc_nickname_from_jid is true)
           * is the node part of the user's JID.
           * We put this in a separate method so that it can be
           * overridden by plugins.
           */
          var nick = _converse.xmppstatus.vcard.get('nickname');

          if (nick) {
            return nick;
          } else if (_converse.muc_nickname_from_jid) {
            return Strophe.unescapeNode(Strophe.getNodeFromJid(_converse.bare_jid));
          }
        },
        onNicknameClash: function onNicknameClash(presence) {
          /* When the nickname is already taken, we either render a
           * form for the user to choose a new nickname, or we
           * try to make the nickname unique by adding an integer to
           * it. So john will become john-2, and then john-3 and so on.
           *
           * Which option is take depends on the value of
           * muc_nickname_from_jid.
           */
          if (_converse.muc_nickname_from_jid) {
            var nick = presence.getAttribute('from').split('/')[1];

            if (nick === this.getDefaultNickName()) {
              this.join(nick + '-2');
            } else {
              var del = nick.lastIndexOf("-");
              var num = nick.substring(del + 1, nick.length);
              this.join(nick.substring(0, del + 1) + String(Number(num) + 1));
            }
          } else {
            this.renderNicknameForm(__("The nickname you chose is reserved or " + "currently in use, please choose a different one."));
          }
        },
        hideChatRoomContents: function hideChatRoomContents() {
          var container_el = this.el.querySelector('.chatroom-body');

          if (!_.isNull(container_el)) {
            _.each(container_el.children, function (child) {
              child.classList.add('hidden');
            });
          }
        },
        renderNicknameForm: function renderNicknameForm(message) {
          /* Render a form which allows the user to choose their
           * nickname.
           */
          this.hideChatRoomContents();

          _.each(this.el.querySelectorAll('span.centered.spinner'), u.removeElement);

          if (!_.isString(message)) {
            message = '';
          }

          var container_el = this.el.querySelector('.chatroom-body');
          container_el.insertAdjacentHTML('beforeend', tpl_chatroom_nickname_form({
            heading: __('Please choose your nickname'),
            label_nickname: __('Nickname'),
            label_join: __('Enter groupchat'),
            validation_message: message
          }));
          this.model.save('connection_status', converse.ROOMSTATUS.NICKNAME_REQUIRED);
          var form_el = this.el.querySelector('.chatroom-form');
          form_el.addEventListener('submit', this.submitNickname.bind(this), false);
        },
        submitPassword: function submitPassword(ev) {
          ev.preventDefault();
          var password = this.el.querySelector('.chatroom-form input[type=password]').value;
          this.showSpinner();
          this.join(this.model.get('nick'), password);
        },
        renderPasswordForm: function renderPasswordForm() {
          var container_el = this.el.querySelector('.chatroom-body');

          _.each(container_el.children, u.hideElement);

          _.each(this.el.querySelectorAll('.spinner'), u.removeElement);

          container_el.insertAdjacentHTML('beforeend', tpl_chatroom_password_form({
            heading: __('This groupchat requires a password'),
            label_password: __('Password: '),
            label_submit: __('Submit')
          }));
          this.model.save('connection_status', converse.ROOMSTATUS.PASSWORD_REQUIRED);
          this.el.querySelector('.chatroom-form').addEventListener('submit', this.submitPassword.bind(this), false);
        },
        showDisconnectMessages: function showDisconnectMessages(msgs) {
          if (_.isString(msgs)) {
            msgs = [msgs];
          }

          u.hideElement(this.el.querySelector('.chat-area'));
          u.hideElement(this.el.querySelector('.occupants'));

          _.each(this.el.querySelectorAll('.spinner'), u.removeElement);

          var container = this.el.querySelector('.disconnect-container');
          container.innerHTML = tpl_chatroom_disconnect({
            '_': _,
            'disconnect_messages': msgs
          });
          u.showElement(container);
        },
        getMessageFromStatus: function getMessageFromStatus(stat, stanza, is_self) {
          /* Parameters:
           *  (XMLElement) stat: A <status> element.
           *  (Boolean) is_self: Whether the element refers to the
           *                     current user.
           *  (XMLElement) stanza: The original stanza received.
           */
          var code = stat.getAttribute('code');

          if (code === '110' || code === '100' && !is_self) {
            return;
          }

          if (code in _converse.muc.info_messages) {
            return _converse.muc.info_messages[code];
          }

          var nick;

          if (!is_self) {
            if (code in _converse.muc.action_info_messages) {
              nick = Strophe.getResourceFromJid(stanza.getAttribute('from'));
              return __(_converse.muc.action_info_messages[code], nick);
            }
          } else if (code in _converse.muc.new_nickname_messages) {
            if (is_self && code === "210") {
              nick = Strophe.getResourceFromJid(stanza.getAttribute('from'));
            } else if (is_self && code === "303") {
              nick = stanza.querySelector('x item').getAttribute('nick');
            }

            return __(_converse.muc.new_nickname_messages[code], nick);
          }

          return;
        },
        parseXUserElement: function parseXUserElement(x, stanza, is_self) {
          /* Parse the passed-in <x xmlns='http://jabber.org/protocol/muc#user'>
           * element and construct a map containing relevant
           * information.
           */
          // 1. Get notification messages based on the <status> elements.
          var statuses = x.querySelectorAll('status');

          var mapper = _.partial(this.getMessageFromStatus, _, stanza, is_self);

          var notification = {};

          var messages = _.reject(_.map(statuses, mapper), _.isUndefined);

          if (messages.length) {
            notification.messages = messages;
          } // 2. Get disconnection messages based on the <status> elements


          var codes = _.invokeMap(statuses, Element.prototype.getAttribute, 'code');

          var disconnection_codes = _.intersection(codes, _.keys(_converse.muc.disconnect_messages));

          var disconnected = is_self && disconnection_codes.length > 0;

          if (disconnected) {
            notification.disconnected = true;
            notification.disconnection_message = _converse.muc.disconnect_messages[disconnection_codes[0]];
          } // 3. Find the reason and actor from the <item> element


          var item = x.querySelector('item'); // By using querySelector above, we assume here there is
          // one <item> per <x xmlns='http://jabber.org/protocol/muc#user'>
          // element. This appears to be a safe assumption, since
          // each <x/> element pertains to a single user.

          if (!_.isNull(item)) {
            var reason = item.querySelector('reason');

            if (reason) {
              notification.reason = reason ? reason.textContent : undefined;
            }

            var actor = item.querySelector('actor');

            if (actor) {
              notification.actor = actor ? actor.getAttribute('nick') : undefined;
            }
          }

          return notification;
        },
        showNotificationsforUser: function showNotificationsforUser(notification) {
          var _this7 = this;

          /* Given the notification object generated by
           * parseXUserElement, display any relevant messages and
           * information to the user.
           */
          if (notification.disconnected) {
            var messages = [];
            messages.push(notification.disconnection_message);

            if (notification.actor) {
              messages.push(__('This action was done by %1$s.', notification.actor));
            }

            if (notification.reason) {
              messages.push(__('The reason given is: "%1$s".', notification.reason));
            }

            this.showDisconnectMessages(messages);
            this.model.save('connection_status', converse.ROOMSTATUS.DISCONNECTED);
            return;
          }

          _.each(notification.messages, function (message) {
            _this7.content.insertAdjacentHTML('beforeend', tpl_info({
              'data': '',
              'isodate': moment().format(),
              'extra_classes': 'chat-event',
              'message': message
            }));
          });

          if (notification.reason) {
            this.showChatEvent(__('The reason given is: "%1$s".', notification.reason));
          }

          if (_.get(notification.messages, 'length')) {
            this.scrollDown();
          }
        },
        showJoinOrLeaveNotification: function showJoinOrLeaveNotification(occupant) {
          if (!occupant.isMember() || _.includes(occupant.get('states'), '303')) {
            return;
          }

          if (occupant.get('show') === 'offline') {
            this.showLeaveNotification(occupant);
          } else if (occupant.get('show') === 'online') {
            this.showJoinNotification(occupant);
          }
        },
        showJoinNotification: function showJoinNotification(occupant) {
          if (this.model.get('connection_status') !== converse.ROOMSTATUS.ENTERED) {
            return;
          }

          var nick = occupant.get('nick'),
              stat = occupant.get('status'),
              last_el = this.content.lastElementChild;

          if (_.includes(_.get(last_el, 'classList', []), 'chat-info') && _.get(last_el, 'dataset', {}).leave === "\"".concat(nick, "\"")) {
            last_el.outerHTML = tpl_info({
              'data': "data-leavejoin=\"".concat(nick, "\""),
              'isodate': moment().format(),
              'extra_classes': 'chat-event',
              'message': __('%1$s has left and re-entered the groupchat', nick)
            });
            var el = this.content.lastElementChild;
            setTimeout(function () {
              return u.addClass('fade-out', el);
            }, 5000);
            setTimeout(function () {
              return el.parentElement && el.parentElement.removeChild(el);
            }, 5250);
          } else {
            var message;

            if (_.isNil(stat)) {
              message = __('%1$s has entered the groupchat', nick);
            } else {
              message = __('%1$s has entered the groupchat. "%2$s"', nick, stat);
            }

            var data = {
              'data': "data-join=\"".concat(nick, "\""),
              'isodate': moment().format(),
              'extra_classes': 'chat-event',
              'message': message
            };

            if (_.includes(_.get(last_el, 'classList', []), 'chat-info') && _.get(last_el, 'dataset', {}).joinleave === "\"".concat(nick, "\"")) {
              last_el.outerHTML = tpl_info(data);
            } else {
              var _el = u.stringToElement(tpl_info(data));

              this.content.insertAdjacentElement('beforeend', _el);
              this.insertDayIndicator(_el);
            }
          }

          this.scrollDown();
        },
        showLeaveNotification: function showLeaveNotification(occupant) {
          if (_.includes(occupant.get('states'), '303') || _.includes(occupant.get('states'), '307')) {
            return;
          }

          var nick = occupant.get('nick'),
              stat = occupant.get('status'),
              last_el = this.content.lastElementChild;

          if (last_el && _.includes(_.get(last_el, 'classList', []), 'chat-info') && moment(last_el.getAttribute('data-isodate')).isSame(new Date(), "day") && _.get(last_el, 'dataset', {}).join === "\"".concat(nick, "\"")) {
            var message;

            if (_.isNil(stat)) {
              message = __('%1$s has entered and left the groupchat', nick);
            } else {
              message = __('%1$s has entered and left the groupchat. "%2$s"', nick, stat);
            }

            last_el.outerHTML = tpl_info({
              'data': "data-joinleave=\"".concat(nick, "\""),
              'isodate': moment().format(),
              'extra_classes': 'chat-event',
              'message': message
            });
            var el = this.content.lastElementChild;
            setTimeout(function () {
              return u.addClass('fade-out', el);
            }, 5000);
            setTimeout(function () {
              return el.parentElement && el.parentElement.removeChild(el);
            }, 5250);
          } else {
            var _message;

            if (_.isNil(stat)) {
              _message = __('%1$s has left the groupchat', nick);
            } else {
              _message = __('%1$s has left the groupchat. "%2$s"', nick, stat);
            }

            var data = {
              'message': _message,
              'isodate': moment().format(),
              'extra_classes': 'chat-event',
              'data': "data-leave=\"".concat(nick, "\"")
            };

            if (last_el && _.includes(_.get(last_el, 'classList', []), 'chat-info') && _.get(last_el, 'dataset', {}).leavejoin === "\"".concat(nick, "\"")) {
              last_el.outerHTML = tpl_info(data);
            } else {
              var _el2 = u.stringToElement(tpl_info(data));

              this.content.insertAdjacentElement('beforeend', _el2);
              this.insertDayIndicator(_el2);
            }
          }

          this.scrollDown();
        },
        showStatusMessages: function showStatusMessages(stanza) {
          /* Check for status codes and communicate their purpose to the user.
           * See: http://xmpp.org/registrar/mucstatus.html
           *
           * Parameters:
           *  (XMLElement) stanza: The message or presence stanza
           *      containing the status codes.
           */
          var elements = sizzle("x[xmlns=\"".concat(Strophe.NS.MUC_USER, "\"]"), stanza);
          var is_self = stanza.querySelectorAll("status[code='110']").length;

          var iteratee = _.partial(this.parseXUserElement.bind(this), _, stanza, is_self);

          var notifications = _.reject(_.map(elements, iteratee), _.isEmpty);

          _.each(notifications, this.showNotificationsforUser.bind(this));
        },
        showErrorMessageFromPresence: function showErrorMessageFromPresence(presence) {
          // We didn't enter the groupchat, so we must remove it from the MUC add-on
          var error = presence.querySelector('error');

          if (error.getAttribute('type') === 'auth') {
            if (!_.isNull(error.querySelector('not-authorized'))) {
              this.renderPasswordForm();
            } else if (!_.isNull(error.querySelector('registration-required'))) {
              this.showDisconnectMessages(__('You are not on the member list of this groupchat.'));
            } else if (!_.isNull(error.querySelector('forbidden'))) {
              this.showDisconnectMessages(__('You have been banned from this groupchat.'));
            }
          } else if (error.getAttribute('type') === 'modify') {
            if (!_.isNull(error.querySelector('jid-malformed'))) {
              this.showDisconnectMessages(__('No nickname was specified.'));
            }
          } else if (error.getAttribute('type') === 'cancel') {
            if (!_.isNull(error.querySelector('not-allowed'))) {
              this.showDisconnectMessages(__('You are not allowed to create new groupchats.'));
            } else if (!_.isNull(error.querySelector('not-acceptable'))) {
              this.showDisconnectMessages(__("Your nickname doesn't conform to this groupchat's policies."));
            } else if (!_.isNull(error.querySelector('conflict'))) {
              this.onNicknameClash(presence);
            } else if (!_.isNull(error.querySelector('item-not-found'))) {
              this.showDisconnectMessages(__("This groupchat does not (yet) exist."));
            } else if (!_.isNull(error.querySelector('service-unavailable'))) {
              this.showDisconnectMessages(__("This groupchat has reached its maximum number of participants."));
            } else if (!_.isNull(error.querySelector('remote-server-not-found'))) {
              var messages = [__("Remote server not found")];

              var reason = _.get(error.querySelector('text'), 'textContent');

              if (reason) {
                messages.push(__('The explanation given is: "%1$s".', reason));
              }

              this.showDisconnectMessages(messages);
            }
          }
        },
        renderAfterTransition: function renderAfterTransition() {
          /* Rerender the groupchat after some kind of transition. For
           * example after the spinner has been removed or after a
           * form has been submitted and removed.
           */
          if (this.model.get('connection_status') == converse.ROOMSTATUS.NICKNAME_REQUIRED) {
            this.renderNicknameForm();
          } else if (this.model.get('connection_status') == converse.ROOMSTATUS.PASSWORD_REQUIRED) {
            this.renderPasswordForm();
          } else {
            this.el.querySelector('.chat-area').classList.remove('hidden');
            this.setOccupantsVisibility();
            this.scrollDown();
          }
        },
        showSpinner: function showSpinner() {
          u.removeElement(this.el.querySelector('.spinner'));
          var container_el = this.el.querySelector('.chatroom-body');
          var children = Array.prototype.slice.call(container_el.children, 0);
          container_el.insertAdjacentHTML('afterbegin', tpl_spinner());

          _.each(children, u.hideElement);
        },
        hideSpinner: function hideSpinner() {
          /* Check if the spinner is being shown and if so, hide it.
           * Also make sure then that the chat area and occupants
           * list are both visible.
           */
          var spinner = this.el.querySelector('.spinner');

          if (!_.isNull(spinner)) {
            u.removeElement(spinner);
            this.renderAfterTransition();
          }

          return this;
        },
        setChatRoomSubject: function setChatRoomSubject() {
          // For translators: the %1$s and %2$s parts will get
          // replaced by the user and topic text respectively
          // Example: Topic set by JC Brand to: Hello World!
          var subject = this.model.get('subject'),
              message = subject.text ? __('Topic set by %1$s', subject.author) : __('Topic cleared by %1$s', subject.author),
              date = moment().format();
          this.content.insertAdjacentHTML('beforeend', tpl_info({
            'data': '',
            'isodate': date,
            'extra_classes': 'chat-event',
            'message': message
          }));

          if (subject.text) {
            this.content.insertAdjacentHTML('beforeend', tpl_info({
              'data': '',
              'isodate': date,
              'extra_classes': 'chat-topic',
              'message': subject.text
            }));
          }

          this.scrollDown();
        }
      });
      _converse.RoomsPanel = Backbone.NativeView.extend({
        /* Backbone.NativeView which renders MUC section of the control box.
         */
        tagName: 'div',
        className: 'controlbox-section',
        id: 'chatrooms',
        events: {
          'click a.chatbox-btn.show-add-muc-modal': 'showAddRoomModal',
          'click a.chatbox-btn.show-list-muc-modal': 'showListRoomsModal'
        },
        render: function render() {
          this.el.innerHTML = tpl_room_panel({
            'heading_chatrooms': __('Groupchats'),
            'title_new_room': __('Add a new groupchat'),
            'title_list_rooms': __('Query for groupchats')
          });
          return this;
        },
        showAddRoomModal: function showAddRoomModal(ev) {
          if (_.isUndefined(this.add_room_modal)) {
            this.add_room_modal = new _converse.AddChatRoomModal({
              'model': this.model
            });
          }

          this.add_room_modal.show(ev);
        },
        showListRoomsModal: function showListRoomsModal(ev) {
          if (_.isUndefined(this.list_rooms_modal)) {
            this.list_rooms_modal = new _converse.ListChatRoomsModal({
              'model': this.model
            });
          }

          this.list_rooms_modal.show(ev);
        }
      });
      _converse.ChatRoomOccupantView = Backbone.VDOMView.extend({
        tagName: 'li',
        initialize: function initialize() {
          this.model.on('change', this.render, this);
        },
        toHTML: function toHTML() {
          var show = this.model.get('show');
          return tpl_occupant(_.extend({
            '_': _,
            // XXX Normally this should already be included,
            // but with the current webpack build,
            // we only get a subset of the _ methods.
            'jid': '',
            'show': show,
            'hint_show': _converse.PRETTY_CHAT_STATUS[show],
            'hint_occupant': __('Click to mention %1$s in your message.', this.model.get('nick')),
            'desc_moderator': __('This user is a moderator.'),
            'desc_participant': __('This user can send messages in this groupchat.'),
            'desc_visitor': __('This user can NOT send messages in this groupchat.'),
            'label_moderator': __('Moderator'),
            'label_visitor': __('Visitor'),
            'label_owner': __('Owner'),
            'label_member': __('Member'),
            'label_admin': __('Admin')
          }, this.model.toJSON()));
        },
        destroy: function destroy() {
          this.el.parentElement.removeChild(this.el);
        }
      });
      _converse.ChatRoomOccupantsView = Backbone.OrderedListView.extend({
        tagName: 'div',
        className: 'occupants col-md-3 col-4',
        listItems: 'model',
        sortEvent: 'change:role',
        listSelector: '.occupant-list',
        ItemView: _converse.ChatRoomOccupantView,
        initialize: function initialize() {
          Backbone.OrderedListView.prototype.initialize.apply(this, arguments);
          this.chatroomview = this.model.chatroomview;
          this.chatroomview.model.on('change:open', this.renderInviteWidget, this);
          this.chatroomview.model.on('change:affiliation', this.renderInviteWidget, this);
          this.chatroomview.model.on('change:hidden', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:mam_enabled', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:membersonly', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:moderated', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:nonanonymous', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:open', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:passwordprotected', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:persistent', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:publicroom', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:semianonymous', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:temporary', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:unmoderated', this.onFeatureChanged, this);
          this.chatroomview.model.on('change:unsecured', this.onFeatureChanged, this);
          this.render();
          this.model.fetch({
            'add': true,
            'silent': true,
            'success': this.sortAndPositionAllItems.bind(this)
          });
        },
        render: function render() {
          this.el.innerHTML = tpl_chatroom_sidebar(_.extend(this.chatroomview.model.toJSON(), {
            'allow_muc_invitations': _converse.allow_muc_invitations,
            'label_occupants': __('Participants')
          }));

          if (_converse.allow_muc_invitations) {
            _converse.api.waitUntil('rosterContactsFetched').then(this.renderInviteWidget.bind(this));
          }

          return this.renderRoomFeatures();
        },
        renderInviteWidget: function renderInviteWidget() {
          var form = this.el.querySelector('form.room-invite');

          if (this.shouldInviteWidgetBeShown()) {
            if (_.isNull(form)) {
              var heading = this.el.querySelector('.occupants-heading');
              heading.insertAdjacentHTML('afterend', tpl_chatroom_invite({
                'error_message': null,
                'label_invitation': __('Invite')
              }));
              this.initInviteWidget();
            }
          } else if (!_.isNull(form)) {
            form.remove();
          }

          return this;
        },
        renderRoomFeatures: function renderRoomFeatures() {
          var picks = _.pick(this.chatroomview.model.attributes, converse.ROOM_FEATURES),
              iteratee = function iteratee(a, v) {
            return a || v;
          },
              el = this.el.querySelector('.chatroom-features');

          el.innerHTML = tpl_chatroom_features(_.extend(this.chatroomview.model.toJSON(), {
            '__': __,
            'has_features': _.reduce(_.values(picks), iteratee)
          }));
          this.setOccupantsHeight();
          return this;
        },
        onFeatureChanged: function onFeatureChanged(model) {
          /* When a feature has been changed, it's logical opposite
           * must be set to the opposite value.
           *
           * So for example, if "temporary" was set to "false", then
           * "persistent" will be set to "true" in this method.
           *
           * Additionally a debounced render method is called to make
           * sure the features widget gets updated.
           */
          if (_.isUndefined(this.debouncedRenderRoomFeatures)) {
            this.debouncedRenderRoomFeatures = _.debounce(this.renderRoomFeatures, 100, {
              'leading': false
            });
          }

          var changed_features = {};

          _.each(_.keys(model.changed), function (k) {
            if (!_.isNil(ROOM_FEATURES_MAP[k])) {
              changed_features[ROOM_FEATURES_MAP[k]] = !model.changed[k];
            }
          });

          this.chatroomview.model.save(changed_features, {
            'silent': true
          });
          this.debouncedRenderRoomFeatures();
        },
        setOccupantsHeight: function setOccupantsHeight() {
          var el = this.el.querySelector('.chatroom-features');
          this.el.querySelector('.occupant-list').style.cssText = "height: calc(100% - ".concat(el.offsetHeight, "px - 5em);");
        },
        promptForInvite: function promptForInvite(suggestion) {
          var reason = prompt(__('You are about to invite %1$s to the groupchat "%2$s". ' + 'You may optionally include a message, explaining the reason for the invitation.', suggestion.text.label, this.model.get('id')));

          if (reason !== null) {
            this.chatroomview.model.directInvite(suggestion.text.value, reason);
          }

          var form = suggestion.target.form,
              error = form.querySelector('.pure-form-message.error');

          if (!_.isNull(error)) {
            error.parentNode.removeChild(error);
          }

          suggestion.target.value = '';
        },
        inviteFormSubmitted: function inviteFormSubmitted(evt) {
          evt.preventDefault();
          var el = evt.target.querySelector('input.invited-contact'),
              jid = el.value;

          if (!jid || _.compact(jid.split('@')).length < 2) {
            evt.target.outerHTML = tpl_chatroom_invite({
              'error_message': __('Please enter a valid XMPP username'),
              'label_invitation': __('Invite')
            });
            this.initInviteWidget();
            return;
          }

          this.promptForInvite({
            'target': el,
            'text': {
              'label': jid,
              'value': jid
            }
          });
        },
        shouldInviteWidgetBeShown: function shouldInviteWidgetBeShown() {
          return _converse.allow_muc_invitations && (this.chatroomview.model.get('open') || this.chatroomview.model.get('affiliation') === "owner");
        },
        initInviteWidget: function initInviteWidget() {
          var form = this.el.querySelector('form.room-invite');

          if (_.isNull(form)) {
            return;
          }

          form.addEventListener('submit', this.inviteFormSubmitted.bind(this), false);
          var el = this.el.querySelector('input.invited-contact');

          var list = _converse.roster.map(function (item) {
            var label = item.get('fullname') || item.get('jid');
            return {
              'label': label,
              'value': item.get('jid')
            };
          });

          var awesomplete = new Awesomplete(el, {
            'minChars': 1,
            'list': list
          });
          el.addEventListener('awesomplete-selectcomplete', this.promptForInvite.bind(this));
        }
      });

      function setMUCDomain(domain, controlboxview) {
        _converse.muc_domain = domain;
        controlboxview.roomspanel.model.save({
          'muc_domain': domain
        });
      }

      function setMUCDomainFromDisco(controlboxview) {
        /* Check whether service discovery for the user's domain
         * returned MUC information and use that to automatically
         * set the MUC domain in the "Add groupchat" modal.
         */
        function featureAdded(feature) {
          if (!feature) {
            return;
          }

          if (feature.get('var') === Strophe.NS.MUC) {
            feature.entity.getIdentity('conference', 'text').then(function (identity) {
              if (identity) {
                setMUCDomain(feature.get('from'), controlboxview);
              }
            });
          }
        }

        _converse.api.waitUntil('discoInitialized').then(function () {
          _converse.api.listen.on('serviceDiscovered', featureAdded); // Features could have been added before the controlbox was
          // initialized. We're only interested in MUC


          _converse.disco_entities.each(function (entity) {
            return featureAdded(entity.features.findWhere({
              'var': Strophe.NS.MUC
            }));
          });
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
      }

      function fetchAndSetMUCDomain(controlboxview) {
        if (controlboxview.model.get('connected')) {
          if (!controlboxview.roomspanel.model.get('muc_domain')) {
            if (_.isUndefined(_converse.muc_domain)) {
              setMUCDomainFromDisco(controlboxview);
            } else {
              setMUCDomain(_converse.muc_domain, controlboxview);
            }
          }
        }
      }
      /************************ BEGIN Event Handlers ************************/


      _converse.on('chatBoxViewsInitialized', function () {
        var that = _converse.chatboxviews;

        _converse.chatboxes.on('add', function (item) {
          if (!that.get(item.get('id')) && item.get('type') === _converse.CHATROOMS_TYPE) {
            return that.add(item.get('id'), new _converse.ChatRoomView({
              'model': item
            }));
          }
        });
      });

      _converse.on('controlboxInitialized', function (view) {
        if (!_converse.allow_muc) {
          return;
        }

        fetchAndSetMUCDomain(view);
        view.model.on('change:connected', _.partial(fetchAndSetMUCDomain, view));
      });

      function reconnectToChatRooms() {
        /* Upon a reconnection event from converse, join again
         * all the open groupchats.
         */
        _converse.chatboxviews.each(function (view) {
          if (view.model.get('type') === _converse.CHATROOMS_TYPE) {
            view.model.save('connection_status', converse.ROOMSTATUS.DISCONNECTED);
            view.model.registerHandlers();
            view.populateAndJoin();
          }
        });
      }

      _converse.on('reconnected', reconnectToChatRooms);
      /************************ END Event Handlers ************************/

      /************************ BEGIN API ************************/


      _.extend(_converse.api, {
        /**
         * The "roomviews" namespace groups methods relevant to chatroom
         * (aka groupchats) views.
         *
         * @namespace _converse.api.roomviews
         * @memberOf _converse.api
         */
        'roomviews': {
          /**
           * Lets you close open chatrooms.
           *
           * You can call this method without any arguments to close
           * all open chatrooms, or you can specify a single JID or
           * an array of JIDs.
           *
           * @method _converse.api.roomviews.close
           * @param {(String[]|String)} jids The JID or array of JIDs of the chatroom(s)
           */
          'close': function close(jids) {
            if (_.isUndefined(jids)) {
              _converse.chatboxviews.each(function (view) {
                if (view.is_chatroom && view.model) {
                  view.close();
                }
              });
            } else if (_.isString(jids)) {
              var view = _converse.chatboxviews.get(jids);

              if (view) {
                view.close();
              }
            } else {
              _.each(jids, function (jid) {
                var view = _converse.chatboxviews.get(jid);

                if (view) {
                  view.close();
                }
              });
            }
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-muc.js":
/*!*****************************!*\
  !*** ./src/converse-muc.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! utils/form */ "./src/utils/form.js"), __webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-disco */ "./src/converse-disco.js"), __webpack_require__(/*! backbone.overview */ "backbone.overview"), __webpack_require__(/*! backbone.orderedlistview */ "./node_modules/backbone.overview/backbone.orderedlistview.js"), __webpack_require__(/*! backbone.vdomview */ "./node_modules/backbone.vdomview/backbone.vdomview.js"), __webpack_require__(/*! utils/muc */ "./src/utils/muc.js"), __webpack_require__(/*! utils/emoji */ "./src/utils/emoji.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (u, converse) {
  "use strict";

  var MUC_ROLE_WEIGHTS = {
    'moderator': 1,
    'participant': 2,
    'visitor': 3,
    'none': 2
  };
  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      $iq = _converse$env.$iq,
      $build = _converse$env.$build,
      $msg = _converse$env.$msg,
      $pres = _converse$env.$pres,
      b64_sha1 = _converse$env.b64_sha1,
      sizzle = _converse$env.sizzle,
      f = _converse$env.f,
      moment = _converse$env.moment,
      _ = _converse$env._; // Add Strophe Namespaces

  Strophe.addNamespace('MUC_ADMIN', Strophe.NS.MUC + "#admin");
  Strophe.addNamespace('MUC_OWNER', Strophe.NS.MUC + "#owner");
  Strophe.addNamespace('MUC_REGISTER', "jabber:iq:register");
  Strophe.addNamespace('MUC_ROOMCONF', Strophe.NS.MUC + "#roomconfig");
  Strophe.addNamespace('MUC_USER', Strophe.NS.MUC + "#user");
  converse.MUC_NICK_CHANGED_CODE = "303";
  converse.ROOM_FEATURES = ['passwordprotected', 'unsecured', 'hidden', 'publicroom', 'membersonly', 'open', 'persistent', 'temporary', 'nonanonymous', 'semianonymous', 'moderated', 'unmoderated', 'mam_enabled'];
  converse.ROOMSTATUS = {
    CONNECTED: 0,
    CONNECTING: 1,
    NICKNAME_REQUIRED: 2,
    PASSWORD_REQUIRED: 3,
    DISCONNECTED: 4,
    ENTERED: 5
  };
  converse.plugins.add('converse-muc', {
    /* Optional dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin. They are called "optional" because they might not be
     * available, in which case any overrides applicable to them will be
     * ignored.
     *
     * It's possible however to make optional dependencies non-optional.
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-chatboxes", "converse-disco", "converse-controlbox"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      tearDown: function tearDown() {
        var _converse = this.__super__._converse,
            groupchats = this.chatboxes.where({
          'type': _converse.CHATROOMS_TYPE
        });

        _.each(groupchats, function (groupchat) {
          u.safeSave(groupchat, {
            'connection_status': converse.ROOMSTATUS.DISCONNECTED
          });
        });

        this.__super__.tearDown.call(this, arguments);
      },
      ChatBoxes: {
        model: function model(attrs, options) {
          var _converse = this.__super__._converse;

          if (attrs.type == _converse.CHATROOMS_TYPE) {
            return new _converse.ChatRoom(attrs, options);
          } else {
            return this.__super__.model.apply(this, arguments);
          }
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__; // Configuration values for this plugin
      // ====================================
      // Refer to docs/source/configuration.rst for explanations of these
      // configuration settings.

      _converse.api.settings.update({
        allow_muc: true,
        allow_muc_invitations: true,
        auto_join_on_invite: false,
        auto_join_rooms: [],
        muc_domain: undefined,
        muc_history_max_stanzas: undefined,
        muc_instant_rooms: true,
        muc_nickname_from_jid: false
      });

      _converse.api.promises.add(['roomsAutoJoined']);

      function openRoom(jid) {
        if (!u.isValidMUCJID(jid)) {
          return _converse.log("Invalid JID \"".concat(jid, "\" provided in URL fragment"), Strophe.LogLevel.WARN);
        }

        var promises = [_converse.api.waitUntil('roomsAutoJoined')];

        if (_converse.allow_bookmarks) {
          promises.push(_converse.api.waitUntil('bookmarksInitialized'));
        }

        Promise.all(promises).then(function () {
          _converse.api.rooms.open(jid);
        });
      }

      _converse.router.route('converse/room?jid=:jid', openRoom);

      _converse.openChatRoom = function (jid, settings, bring_to_foreground) {
        /* Opens a groupchat, making sure that certain attributes
         * are correct, for example that the "type" is set to
         * "chatroom".
         */
        settings.type = _converse.CHATROOMS_TYPE;
        settings.id = jid;
        settings.box_id = b64_sha1(jid);

        var chatbox = _converse.chatboxes.getChatBox(jid, settings, true);

        chatbox.trigger('show', true);
        return chatbox;
      };

      _converse.ChatRoom = _converse.ChatBox.extend({
        defaults: function defaults() {
          return _.assign(_.clone(_converse.ChatBox.prototype.defaults), _.zipObject(converse.ROOM_FEATURES, _.map(converse.ROOM_FEATURES, _.stubFalse)), {
            // For group chats, we distinguish between generally unread
            // messages and those ones that specifically mention the
            // user.
            //
            // To keep things simple, we reuse `num_unread` from
            // _converse.ChatBox to indicate unread messages which
            // mention the user and `num_unread_general` to indicate
            // generally unread messages (which *includes* mentions!).
            'num_unread_general': 0,
            'affiliation': null,
            'connection_status': converse.ROOMSTATUS.DISCONNECTED,
            'name': '',
            'nick': _converse.xmppstatus.get('nickname') || _converse.nickname,
            'description': '',
            'features_fetched': false,
            'roomconfig': {},
            'type': _converse.CHATROOMS_TYPE,
            'message_type': 'groupchat'
          });
        },
        initialize: function initialize() {
          this.constructor.__super__.initialize.apply(this, arguments);

          this.occupants = new _converse.ChatRoomOccupants();
          this.occupants.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.occupants-".concat(_converse.bare_jid).concat(this.get('jid'))));
          this.occupants.chatroom = this;
          this.registerHandlers();
        },
        registerHandlers: function registerHandlers() {
          var _this = this;

          /* Register presence and message handlers for this chat
           * groupchat
           */
          var room_jid = this.get('jid');
          this.removeHandlers();
          this.presence_handler = _converse.connection.addHandler(function (stanza) {
            _.each(_.values(_this.handlers.presence), function (callback) {
              return callback(stanza);
            });

            _this.onPresence(stanza);

            return true;
          }, null, 'presence', null, null, room_jid, {
            'ignoreNamespaceFragment': true,
            'matchBareFromJid': true
          });
          this.message_handler = _converse.connection.addHandler(function (stanza) {
            _.each(_.values(_this.handlers.message), function (callback) {
              return callback(stanza);
            });

            _this.onMessage(stanza);

            return true;
          }, null, 'message', 'groupchat', null, room_jid, {
            'matchBareFromJid': true
          });
        },
        removeHandlers: function removeHandlers() {
          /* Remove the presence and message handlers that were
           * registered for this groupchat.
           */
          if (this.message_handler) {
            _converse.connection.deleteHandler(this.message_handler);

            delete this.message_handler;
          }

          if (this.presence_handler) {
            _converse.connection.deleteHandler(this.presence_handler);

            delete this.presence_handler;
          }

          return this;
        },
        addHandler: function addHandler(type, name, callback) {
          /* Allows 'presence' and 'message' handlers to be
           * registered. These will be executed once presence or
           * message stanzas are received, and *before* this model's
           * own handlers are executed.
           */
          if (_.isNil(this.handlers)) {
            this.handlers = {};
          }

          if (_.isNil(this.handlers[type])) {
            this.handlers[type] = {};
          }

          this.handlers[type][name] = callback;
        },
        getDisplayName: function getDisplayName() {
          return this.get('name') || this.get('jid');
        },
        join: function join(nick, password) {
          /* Join the groupchat.
           *
           * Parameters:
           *  (String) nick: The user's nickname
           *  (String) password: Optional password, if required by
           *      the groupchat.
           */
          nick = nick ? nick : this.get('nick');

          if (!nick) {
            throw new TypeError('join: You need to provide a valid nickname');
          }

          if (this.get('connection_status') === converse.ROOMSTATUS.ENTERED) {
            // We have restored a groupchat from session storage,
            // so we don't send out a presence stanza again.
            return this;
          }

          var stanza = $pres({
            'from': _converse.connection.jid,
            'to': this.getRoomJIDAndNick(nick)
          }).c("x", {
            'xmlns': Strophe.NS.MUC
          }).c("history", {
            'maxstanzas': this.get('mam_enabled') ? 0 : _converse.muc_history_max_stanzas
          }).up();

          if (password) {
            stanza.cnode(Strophe.xmlElement("password", [], password));
          }

          this.save('connection_status', converse.ROOMSTATUS.CONNECTING);

          _converse.connection.send(stanza);

          return this;
        },
        leave: function leave(exit_msg) {
          /* Leave the groupchat.
           *
           * Parameters:
           *  (String) exit_msg: Optional message to indicate your
           *      reason for leaving.
           */
          this.occupants.browserStorage._clear();

          this.occupants.reset();

          if (_converse.connection.connected) {
            this.sendUnavailablePresence(exit_msg);
          }

          u.safeSave(this, {
            'connection_status': converse.ROOMSTATUS.DISCONNECTED
          });
          this.removeHandlers();
        },
        sendUnavailablePresence: function sendUnavailablePresence(exit_msg) {
          var presence = $pres({
            type: "unavailable",
            from: _converse.connection.jid,
            to: this.getRoomJIDAndNick()
          });

          if (exit_msg !== null) {
            presence.c("status", exit_msg);
          }

          _converse.connection.sendPresence(presence);
        },
        getReferenceForMention: function getReferenceForMention(mention, index) {
          var longest_match = u.getLongestSubstring(mention, this.occupants.map(function (o) {
            return o.getDisplayName();
          }));

          if (!longest_match) {
            return null;
          }

          if ((mention[longest_match.length] || '').match(/[A-Za-zäëïöüâêîôûáéíóúàèìòùÄËÏÖÜÂÊÎÔÛÁÉÍÓÚÀÈÌÒÙ]/i)) {
            // avoid false positives, i.e. mentions that have
            // further alphabetical characters than our longest
            // match.
            return null;
          }

          var occupant = this.occupants.findOccupant({
            'nick': longest_match
          }) || this.occupants.findOccupant({
            'jid': longest_match
          });

          if (!occupant) {
            return null;
          }

          var obj = {
            'begin': index,
            'end': index + longest_match.length,
            'value': longest_match,
            'type': 'mention'
          };

          if (occupant.get('jid')) {
            obj.uri = "xmpp:".concat(occupant.get('jid'));
          }

          return obj;
        },
        extractReference: function extractReference(text, index) {
          for (var i = index; i < text.length; i++) {
            if (text[i] !== '@') {
              continue;
            } else {
              var match = text.slice(i + 1),
                  ref = this.getReferenceForMention(match, i);

              if (ref) {
                return [text.slice(0, i) + match, ref, i];
              }
            }
          }

          return;
        },
        parseTextForReferences: function parseTextForReferences(text) {
          var refs = [];
          var index = 0;

          while (index < (text || '').length) {
            var result = this.extractReference(text, index);

            if (result) {
              text = result[0]; // @ gets filtered out

              refs.push(result[1]);
              index = result[2];
            } else {
              break;
            }
          }

          return [text, refs];
        },
        getOutgoingMessageAttributes: function getOutgoingMessageAttributes(text, spoiler_hint) {
          var is_spoiler = this.get('composing_spoiler');
          var references;

          var _this$parseTextForRef = this.parseTextForReferences(text);

          var _this$parseTextForRef2 = _slicedToArray(_this$parseTextForRef, 2);

          text = _this$parseTextForRef2[0];
          references = _this$parseTextForRef2[1];
          return {
            'from': "".concat(this.get('jid'), "/").concat(this.get('nick')),
            'fullname': this.get('nick'),
            'is_spoiler': is_spoiler,
            'message': text ? u.httpToGeoUri(u.shortnameToUnicode(text), _converse) : undefined,
            'nick': this.get('nick'),
            'references': references,
            'sender': 'me',
            'spoiler_hint': is_spoiler ? spoiler_hint : undefined,
            'type': 'groupchat'
          };
        },
        getRoomFeatures: function getRoomFeatures() {
          var _this2 = this;

          /* Fetch the groupchat disco info, parse it and then save it.
           */
          return new Promise(function (resolve, reject) {
            _converse.api.disco.info(_this2.get('jid'), null).then(function (stanza) {
              _this2.parseRoomFeatures(stanza);

              resolve();
            }).catch(function (err) {
              _converse.log("Could not parse the groupchat features", Strophe.LogLevel.WARN);

              _converse.log(err, Strophe.LogLevel.WARN);

              reject(err);
            });
          });
        },
        getRoomJIDAndNick: function getRoomJIDAndNick(nick) {
          /* Utility method to construct the JID for the current user
           * as occupant of the groupchat.
           *
           * This is the groupchat JID, with the user's nick added at the
           * end.
           *
           * For example: groupchat@conference.example.org/nickname
           */
          if (nick) {
            this.save({
              'nick': nick
            });
          } else {
            nick = this.get('nick');
          }

          var groupchat = this.get('jid');
          var jid = Strophe.getBareJidFromJid(groupchat);
          return jid + (nick !== null ? "/".concat(nick) : "");
        },
        sendChatState: function sendChatState() {
          /* Sends a message with the status of the user in this chat session
           * as taken from the 'chat_state' attribute of the chat box.
           * See XEP-0085 Chat State Notifications.
           */
          if (this.get('connection_status') !== converse.ROOMSTATUS.ENTERED) {
            return;
          }

          var chat_state = this.get('chat_state');

          if (chat_state === _converse.GONE) {
            // <gone/> is not applicable within MUC context
            return;
          }

          _converse.connection.send($msg({
            'to': this.get('jid'),
            'type': 'groupchat'
          }).c(chat_state, {
            'xmlns': Strophe.NS.CHATSTATES
          }).up().c('no-store', {
            'xmlns': Strophe.NS.HINTS
          }).up().c('no-permanent-store', {
            'xmlns': Strophe.NS.HINTS
          }));
        },
        directInvite: function directInvite(recipient, reason) {
          /* Send a direct invitation as per XEP-0249
           *
           * Parameters:
           *    (String) recipient - JID of the person being invited
           *    (String) reason - Optional reason for the invitation
           */
          if (this.get('membersonly')) {
            // When inviting to a members-only groupchat, we first add
            // the person to the member list by giving them an
            // affiliation of 'member' (if they're not affiliated
            // already), otherwise they won't be able to join.
            var map = {};
            map[recipient] = 'member';

            var deltaFunc = _.partial(u.computeAffiliationsDelta, true, false);

            this.updateMemberLists([{
              'jid': recipient,
              'affiliation': 'member',
              'reason': reason
            }], ['member', 'owner', 'admin'], deltaFunc);
          }

          var attrs = {
            'xmlns': 'jabber:x:conference',
            'jid': this.get('jid')
          };

          if (reason !== null) {
            attrs.reason = reason;
          }

          if (this.get('password')) {
            attrs.password = this.get('password');
          }

          var invitation = $msg({
            from: _converse.connection.jid,
            to: recipient,
            id: _converse.connection.getUniqueId()
          }).c('x', attrs);

          _converse.connection.send(invitation);

          _converse.emit('roomInviteSent', {
            'room': this,
            'recipient': recipient,
            'reason': reason
          });
        },
        parseRoomFeatures: function parseRoomFeatures(iq) {
          /* Parses an IQ stanza containing the groupchat's features.
           *
           * See http://xmpp.org/extensions/xep-0045.html#disco-roominfo
           *
           *  <identity
           *      category='conference'
           *      name='A Dark Cave'
           *      type='text'/>
           *  <feature var='http://jabber.org/protocol/muc'/>
           *  <feature var='muc_passwordprotected'/>
           *  <feature var='muc_hidden'/>
           *  <feature var='muc_temporary'/>
           *  <feature var='muc_open'/>
           *  <feature var='muc_unmoderated'/>
           *  <feature var='muc_nonanonymous'/>
           *  <feature var='urn:xmpp:mam:0'/>
           */
          var features = {
            'features_fetched': moment().format(),
            'name': iq.querySelector('identity').getAttribute('name')
          };

          _.each(iq.querySelectorAll('feature'), function (field) {
            var fieldname = field.getAttribute('var');

            if (!fieldname.startsWith('muc_')) {
              if (fieldname === Strophe.NS.MAM) {
                features.mam_enabled = true;
              }

              return;
            }

            features[fieldname.replace('muc_', '')] = true;
          });

          var desc_field = iq.querySelector('field[var="muc#roominfo_description"] value');

          if (!_.isNull(desc_field)) {
            features.description = desc_field.textContent;
          }

          this.save(features);
        },
        requestMemberList: function requestMemberList(affiliation) {
          /* Send an IQ stanza to the server, asking it for the
           * member-list of this groupchat.
           *
           * See: http://xmpp.org/extensions/xep-0045.html#modifymember
           *
           * Parameters:
           *  (String) affiliation: The specific member list to
           *      fetch. 'admin', 'owner' or 'member'.
           *
           * Returns:
           *  A promise which resolves once the list has been
           *  retrieved.
           */
          affiliation = affiliation || 'member';
          var iq = $iq({
            to: this.get('jid'),
            type: "get"
          }).c("query", {
            xmlns: Strophe.NS.MUC_ADMIN
          }).c("item", {
            'affiliation': affiliation
          });
          return _converse.api.sendIQ(iq);
        },
        setAffiliation: function setAffiliation(affiliation, members) {
          /* Send IQ stanzas to the server to set an affiliation for
           * the provided JIDs.
           *
           * See: http://xmpp.org/extensions/xep-0045.html#modifymember
           *
           * XXX: Prosody doesn't accept multiple JIDs' affiliations
           * being set in one IQ stanza, so as a workaround we send
           * a separate stanza for each JID.
           * Related ticket: https://prosody.im/issues/issue/795
           *
           * Parameters:
           *  (String) affiliation: The affiliation
           *  (Object) members: A map of jids, affiliations and
           *      optionally reasons. Only those entries with the
           *      same affiliation as being currently set will be
           *      considered.
           *
           * Returns:
           *  A promise which resolves and fails depending on the
           *  XMPP server response.
           */
          members = _.filter(members, function (member) {
            return (// We only want those members who have the right
              // affiliation (or none, which implies the provided one).
              _.isUndefined(member.affiliation) || member.affiliation === affiliation
            );
          });

          var promises = _.map(members, _.bind(this.sendAffiliationIQ, this, affiliation));

          return Promise.all(promises);
        },
        saveConfiguration: function saveConfiguration(form) {
          var _this3 = this;

          /* Submit the groupchat configuration form by sending an IQ
           * stanza to the server.
           *
           * Returns a promise which resolves once the XMPP server
           * has return a response IQ.
           *
           * Parameters:
           *  (HTMLElement) form: The configuration form DOM element.
           *      If no form is provided, the default configuration
           *      values will be used.
           */
          return new Promise(function (resolve, reject) {
            var inputs = form ? sizzle(':input:not([type=button]):not([type=submit])', form) : [],
                configArray = _.map(inputs, u.webForm2xForm);

            _this3.sendConfiguration(configArray, resolve, reject);
          });
        },
        autoConfigureChatRoom: function autoConfigureChatRoom() {
          var _this4 = this;

          /* Automatically configure groupchat based on this model's
           * 'roomconfig' data.
           *
           * Returns a promise which resolves once a response IQ has
           * been received.
           */
          return new Promise(function (resolve, reject) {
            _this4.fetchRoomConfiguration().then(function (stanza) {
              var configArray = [],
                  fields = stanza.querySelectorAll('field'),
                  config = _this4.get('roomconfig');

              var count = fields.length;

              _.each(fields, function (field) {
                var fieldname = field.getAttribute('var').replace('muc#roomconfig_', ''),
                    type = field.getAttribute('type');
                var value;

                if (fieldname in config) {
                  switch (type) {
                    case 'boolean':
                      value = config[fieldname] ? 1 : 0;
                      break;

                    case 'list-multi':
                      // TODO: we don't yet handle "list-multi" types
                      value = field.innerHTML;
                      break;

                    default:
                      value = config[fieldname];
                  }

                  field.innerHTML = $build('value').t(value);
                }

                configArray.push(field);

                if (! --count) {
                  _this4.sendConfiguration(configArray, resolve, reject);
                }
              });
            });
          });
        },
        fetchRoomConfiguration: function fetchRoomConfiguration() {
          var _this5 = this;

          /* Send an IQ stanza to fetch the groupchat configuration data.
           * Returns a promise which resolves once the response IQ
           * has been received.
           */
          return new Promise(function (resolve, reject) {
            _converse.connection.sendIQ($iq({
              'to': _this5.get('jid'),
              'type': "get"
            }).c("query", {
              xmlns: Strophe.NS.MUC_OWNER
            }), resolve, reject);
          });
        },
        sendConfiguration: function sendConfiguration(config, callback, errback) {
          /* Send an IQ stanza with the groupchat configuration.
           *
           * Parameters:
           *  (Array) config: The groupchat configuration
           *  (Function) callback: Callback upon succesful IQ response
           *      The first parameter passed in is IQ containing the
           *      groupchat configuration.
           *      The second is the response IQ from the server.
           *  (Function) errback: Callback upon error IQ response
           *      The first parameter passed in is IQ containing the
           *      groupchat configuration.
           *      The second is the response IQ from the server.
           */
          var iq = $iq({
            to: this.get('jid'),
            type: "set"
          }).c("query", {
            xmlns: Strophe.NS.MUC_OWNER
          }).c("x", {
            xmlns: Strophe.NS.XFORM,
            type: "submit"
          });

          _.each(config || [], function (node) {
            iq.cnode(node).up();
          });

          callback = _.isUndefined(callback) ? _.noop : _.partial(callback, iq.nodeTree);
          errback = _.isUndefined(errback) ? _.noop : _.partial(errback, iq.nodeTree);
          return _converse.connection.sendIQ(iq, callback, errback);
        },
        saveAffiliationAndRole: function saveAffiliationAndRole(pres) {
          /* Parse the presence stanza for the current user's
           * affiliation.
           *
           * Parameters:
           *  (XMLElement) pres: A <presence> stanza.
           */
          var item = sizzle("x[xmlns=\"".concat(Strophe.NS.MUC_USER, "\"] item"), pres).pop();
          var is_self = pres.querySelector("status[code='110']");

          if (is_self && !_.isNil(item)) {
            var affiliation = item.getAttribute('affiliation');
            var role = item.getAttribute('role');

            if (affiliation) {
              this.save({
                'affiliation': affiliation
              });
            }

            if (role) {
              this.save({
                'role': role
              });
            }
          }
        },
        sendAffiliationIQ: function sendAffiliationIQ(affiliation, member) {
          var _this6 = this;

          /* Send an IQ stanza specifying an affiliation change.
           *
           * Paremeters:
           *  (String) affiliation: affiliation (could also be stored
           *      on the member object).
           *  (Object) member: Map containing the member's jid and
           *      optionally a reason and affiliation.
           */
          return new Promise(function (resolve, reject) {
            var iq = $iq({
              to: _this6.get('jid'),
              type: "set"
            }).c("query", {
              xmlns: Strophe.NS.MUC_ADMIN
            }).c("item", {
              'affiliation': member.affiliation || affiliation,
              'jid': member.jid
            });

            if (!_.isUndefined(member.reason)) {
              iq.c("reason", member.reason);
            }

            _converse.connection.sendIQ(iq, resolve, reject);
          });
        },
        setAffiliations: function setAffiliations(members) {
          /* Send IQ stanzas to the server to modify the
           * affiliations in this groupchat.
           *
           * See: http://xmpp.org/extensions/xep-0045.html#modifymember
           *
           * Parameters:
           *  (Object) members: A map of jids, affiliations and optionally reasons
           *  (Function) onSuccess: callback for a succesful response
           *  (Function) onError: callback for an error response
           */
          var affiliations = _.uniq(_.map(members, 'affiliation'));

          return Promise.all(_.map(affiliations, _.partial(this.setAffiliation.bind(this), _, members)));
        },
        getJidsWithAffiliations: function getJidsWithAffiliations(affiliations) {
          /* Returns a map of JIDs that have the affiliations
           * as provided.
           */
          if (_.isString(affiliations)) {
            affiliations = [affiliations];
          }

          var promises = _.map(affiliations, _.partial(this.requestMemberList.bind(this)));

          return Promise.all(promises).then(function (iq) {
            return u.marshallAffiliationIQs(iq);
          }, function (iq) {
            return u.marshallAffiliationIQs(iq);
          });
        },
        updateMemberLists: function updateMemberLists(members, affiliations, deltaFunc) {
          var _this7 = this;

          /* Fetch the lists of users with the given affiliations.
           * Then compute the delta between those users and
           * the passed in members, and if it exists, send the delta
           * to the XMPP server to update the member list.
           *
           * Parameters:
           *  (Object) members: Map of member jids and affiliations.
           *  (String|Array) affiliation: An array of affiliations or
           *      a string if only one affiliation.
           *  (Function) deltaFunc: The function to compute the delta
           *      between old and new member lists.
           *
           * Returns:
           *  A promise which is resolved once the list has been
           *  updated or once it's been established there's no need
           *  to update the list.
           */
          this.getJidsWithAffiliations(affiliations).then(function (old_members) {
            return _this7.setAffiliations(deltaFunc(members, old_members));
          }).then(function () {
            return _this7.occupants.fetchMembers();
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        },
        checkForReservedNick: function checkForReservedNick(callback, errback) {
          /* Use service-discovery to ask the XMPP server whether
           * this user has a reserved nickname for this groupchat.
           * If so, we'll use that, otherwise we render the nickname form.
           *
           * Parameters:
           *  (Function) callback: Callback upon succesful IQ response
           *  (Function) errback: Callback upon error IQ response
           */
          _converse.connection.sendIQ($iq({
            'to': this.get('jid'),
            'from': _converse.connection.jid,
            'type': "get"
          }).c("query", {
            'xmlns': Strophe.NS.DISCO_INFO,
            'node': 'x-roomuser-item'
          }), callback, errback);

          return this;
        },
        updateOccupantsOnPresence: function updateOccupantsOnPresence(pres) {
          /* Given a presence stanza, update the occupant model
           * based on its contents.
           *
           * Parameters:
           *  (XMLElement) pres: The presence stanza
           */
          var data = this.parsePresence(pres);

          if (data.type === 'error') {
            return true;
          }

          var occupant = this.occupants.findOccupant(data);

          if (data.type === 'unavailable' && occupant) {
            if (!_.includes(data.states, converse.MUC_NICK_CHANGED_CODE) && !occupant.isMember()) {
              // We only destroy the occupant if this is not a nickname change operation.
              // and if they're not on the member lists.
              // Before destroying we set the new data, so
              // that we can show the disconnection message.
              occupant.set(data);
              occupant.destroy();
              return;
            }
          }

          var jid = Strophe.getBareJidFromJid(data.jid);

          var attributes = _.extend(data, {
            'jid': jid ? jid : undefined,
            'resource': data.jid ? Strophe.getResourceFromJid(data.jid) : undefined
          });

          if (occupant) {
            occupant.save(attributes);
          } else {
            this.occupants.create(attributes);
          }
        },
        parsePresence: function parsePresence(pres) {
          var from = pres.getAttribute("from"),
              type = pres.getAttribute("type"),
              data = {
            'from': from,
            'nick': Strophe.getResourceFromJid(from),
            'type': type,
            'states': [],
            'show': type !== 'unavailable' ? 'online' : 'offline'
          };

          _.each(pres.childNodes, function (child) {
            switch (child.nodeName) {
              case "status":
                data.status = child.textContent || null;
                break;

              case "show":
                data.show = child.textContent || 'online';
                break;

              case "x":
                if (child.getAttribute("xmlns") === Strophe.NS.MUC_USER) {
                  _.each(child.childNodes, function (item) {
                    switch (item.nodeName) {
                      case "item":
                        data.affiliation = item.getAttribute("affiliation");
                        data.role = item.getAttribute("role");
                        data.jid = item.getAttribute("jid");
                        data.nick = item.getAttribute("nick") || data.nick;
                        break;

                      case "status":
                        if (item.getAttribute("code")) {
                          data.states.push(item.getAttribute("code"));
                        }

                    }
                  });
                } else if (child.getAttribute("xmlns") === Strophe.NS.VCARDUPDATE) {
                  data.image_hash = _.get(child.querySelector('photo'), 'textContent');
                }

            }
          });

          return data;
        },
        isDuplicate: function isDuplicate(message, original_stanza) {
          var msgid = message.getAttribute('id'),
              jid = message.getAttribute('from');

          if (msgid) {
            return this.messages.where({
              'msgid': msgid,
              'from': jid
            }).length;
          }

          return false;
        },
        fetchFeaturesIfConfigurationChanged: function fetchFeaturesIfConfigurationChanged(stanza) {
          var configuration_changed = stanza.querySelector("status[code='104']"),
              logging_enabled = stanza.querySelector("status[code='170']"),
              logging_disabled = stanza.querySelector("status[code='171']"),
              room_no_longer_anon = stanza.querySelector("status[code='172']"),
              room_now_semi_anon = stanza.querySelector("status[code='173']"),
              room_now_fully_anon = stanza.querySelector("status[code='173']");

          if (configuration_changed || logging_enabled || logging_disabled || room_no_longer_anon || room_now_semi_anon || room_now_fully_anon) {
            this.getRoomFeatures();
          }
        },
        onMessage: function onMessage(stanza) {
          var _this8 = this;

          /* Handler for all MUC messages sent to this groupchat.
           *
           * Parameters:
           *  (XMLElement) stanza: The message stanza.
           */
          this.fetchFeaturesIfConfigurationChanged(stanza);
          var original_stanza = stanza,
              forwarded = stanza.querySelector('forwarded');

          if (!_.isNull(forwarded)) {
            stanza = forwarded.querySelector('message');
          }

          if (this.isDuplicate(stanza, original_stanza)) {
            return;
          }

          var jid = stanza.getAttribute('from'),
              resource = Strophe.getResourceFromJid(jid),
              sender = resource && Strophe.unescapeNode(resource) || '';

          if (!this.handleMessageCorrection(stanza)) {
            if (sender === '') {
              return;
            }

            var subject_el = stanza.querySelector('subject');

            if (subject_el) {
              var subject = _.propertyOf(subject_el)('textContent') || '';
              u.safeSave(this, {
                'subject': {
                  'author': sender,
                  'text': subject
                }
              });
            }

            this.createMessage(stanza, original_stanza).then(function (msg) {
              return _this8.incrementUnreadMsgCounter(msg);
            }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
          }

          if (sender !== this.get('nick')) {
            // We only emit an event if it's not our own message
            _converse.emit('message', {
              'stanza': original_stanza,
              'chatbox': this
            });
          }
        },
        onPresence: function onPresence(pres) {
          /* Handles all MUC presence stanzas.
           *
           * Parameters:
           *  (XMLElement) pres: The stanza
           */
          if (pres.getAttribute('type') === 'error') {
            this.save('connection_status', converse.ROOMSTATUS.DISCONNECTED);
            return;
          }

          var is_self = pres.querySelector("status[code='110']");

          if (is_self && pres.getAttribute('type') !== 'unavailable') {
            this.onOwnPresence(pres);
          }

          this.updateOccupantsOnPresence(pres);

          if (this.get('role') !== 'none' && this.get('connection_status') === converse.ROOMSTATUS.CONNECTING) {
            this.save('connection_status', converse.ROOMSTATUS.CONNECTED);
          }
        },
        onOwnPresence: function onOwnPresence(pres) {
          /* Handles a received presence relating to the current
           * user.
           *
           * For locked groupchats (which are by definition "new"), the
           * groupchat will either be auto-configured or created instantly
           * (with default config) or a configuration groupchat will be
           * rendered.
           *
           * If the groupchat is not locked, then the groupchat will be
           * auto-configured only if applicable and if the current
           * user is the groupchat's owner.
           *
           * Parameters:
           *  (XMLElement) pres: The stanza
           */
          this.saveAffiliationAndRole(pres);
          var locked_room = pres.querySelector("status[code='201']");

          if (locked_room) {
            if (this.get('auto_configure')) {
              this.autoConfigureChatRoom().then(this.getRoomFeatures.bind(this));
            } else if (_converse.muc_instant_rooms) {
              // Accept default configuration
              this.saveConfiguration().then(this.getRoomFeatures.bind(this));
            } else {
              this.trigger('configurationNeeded');
              return; // We haven't yet entered the groupchat, so bail here.
            }
          } else if (!this.get('features_fetched')) {
            // The features for this groupchat weren't fetched.
            // That must mean it's a new groupchat without locking
            // (in which case Prosody doesn't send a 201 status),
            // otherwise the features would have been fetched in
            // the "initialize" method already.
            if (this.get('affiliation') === 'owner' && this.get('auto_configure')) {
              this.autoConfigureChatRoom().then(this.getRoomFeatures.bind(this));
            } else {
              this.getRoomFeatures();
            }
          }

          this.save('connection_status', converse.ROOMSTATUS.ENTERED);
        },
        isUserMentioned: function isUserMentioned(message) {
          /* Returns a boolean to indicate whether the current user
           * was mentioned in a message.
           *
           * Parameters:
           *  (String): The text message
           */
          var nick = this.get('nick');

          if (message.get('references').length) {
            var mentions = message.get('references').filter(function (ref) {
              return ref.type === 'mention';
            }).map(function (ref) {
              return ref.value;
            });
            return _.includes(mentions, nick);
          } else {
            return new RegExp("\\b".concat(nick, "\\b")).test(message.get('message'));
          }
        },
        incrementUnreadMsgCounter: function incrementUnreadMsgCounter(message) {
          /* Given a newly received message, update the unread counter if
           * necessary.
           *
           * Parameters:
           *  (XMLElement): The <messsage> stanza
           */
          if (!message) {
            return;
          }

          var body = message.get('message');

          if (_.isNil(body)) {
            return;
          }

          if (u.isNewMessage(message) && this.isHidden()) {
            var settings = {
              'num_unread_general': this.get('num_unread_general') + 1
            };

            if (this.isUserMentioned(message)) {
              settings.num_unread = this.get('num_unread') + 1;

              _converse.incrementMsgCounter();
            }

            this.save(settings);
          }
        },
        clearUnreadMsgCounter: function clearUnreadMsgCounter() {
          u.safeSave(this, {
            'num_unread': 0,
            'num_unread_general': 0
          });
        }
      });
      _converse.ChatRoomOccupant = Backbone.Model.extend({
        defaults: {
          'show': 'offline'
        },
        initialize: function initialize(attributes) {
          this.set(_.extend({
            'id': _converse.connection.getUniqueId()
          }, attributes));
          this.on('change:image_hash', this.onAvatarChanged, this);
        },
        onAvatarChanged: function onAvatarChanged() {
          var hash = this.get('image_hash');
          var vcards = [];

          if (this.get('jid')) {
            vcards.push(_converse.vcards.findWhere({
              'jid': this.get('jid')
            }));
          }

          vcards.push(_converse.vcards.findWhere({
            'jid': this.get('from')
          }));

          _.forEach(_.filter(vcards, undefined), function (vcard) {
            if (hash && vcard.get('image_hash') !== hash) {
              _converse.api.vcard.update(vcard);
            }
          });
        },
        getDisplayName: function getDisplayName() {
          return this.get('nick') || this.get('jid');
        },
        isMember: function isMember() {
          return _.includes(['admin', 'owner', 'member'], this.get('affiliation'));
        }
      });
      _converse.ChatRoomOccupants = Backbone.Collection.extend({
        model: _converse.ChatRoomOccupant,
        comparator: function comparator(occupant1, occupant2) {
          var role1 = occupant1.get('role') || 'none';
          var role2 = occupant2.get('role') || 'none';

          if (MUC_ROLE_WEIGHTS[role1] === MUC_ROLE_WEIGHTS[role2]) {
            var nick1 = occupant1.getDisplayName().toLowerCase();
            var nick2 = occupant2.getDisplayName().toLowerCase();
            return nick1 < nick2 ? -1 : nick1 > nick2 ? 1 : 0;
          } else {
            return MUC_ROLE_WEIGHTS[role1] < MUC_ROLE_WEIGHTS[role2] ? -1 : 1;
          }
        },
        fetchMembers: function fetchMembers() {
          var _this9 = this;

          this.chatroom.getJidsWithAffiliations(['member', 'owner', 'admin']).then(function (new_members) {
            var new_jids = new_members.map(function (m) {
              return m.jid;
            }).filter(function (m) {
              return !_.isUndefined(m);
            }),
                new_nicks = new_members.map(function (m) {
              return !m.jid && m.nick || undefined;
            }).filter(function (m) {
              return !_.isUndefined(m);
            }),
                removed_members = _this9.filter(function (m) {
              return f.includes(m.get('affiliation'), ['admin', 'member', 'owner']) && !f.includes(m.get('nick'), new_nicks) && !f.includes(m.get('jid'), new_jids);
            });

            _.each(removed_members, function (occupant) {
              if (occupant.get('jid') === _converse.bare_jid) {
                return;
              }

              if (occupant.get('show') === 'offline') {
                occupant.destroy();
              }
            });

            _.each(new_members, function (attrs) {
              var occupant;

              if (attrs.jid) {
                occupant = _this9.findOccupant({
                  'jid': attrs.jid
                });
              } else {
                occupant = _this9.findOccupant({
                  'nick': attrs.nick
                });
              }

              if (occupant) {
                occupant.save(attrs);
              } else {
                _this9.create(attrs);
              }
            });
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        },
        findOccupant: function findOccupant(data) {
          /* Try to find an existing occupant based on the passed in
           * data object.
           *
           * If we have a JID, we use that as lookup variable,
           * otherwise we use the nick. We don't always have both,
           * but should have at least one or the other.
           */
          var jid = Strophe.getBareJidFromJid(data.jid);

          if (jid !== null) {
            return this.where({
              'jid': jid
            }).pop();
          } else {
            return this.where({
              'nick': data.nick
            }).pop();
          }
        }
      });
      _converse.RoomsPanelModel = Backbone.Model.extend({
        defaults: {
          'muc_domain': ''
        }
      });

      _converse.onDirectMUCInvitation = function (message) {
        /* A direct MUC invitation to join a groupchat has been received
         * See XEP-0249: Direct MUC invitations.
         *
         * Parameters:
         *  (XMLElement) message: The message stanza containing the
         *        invitation.
         */
        var x_el = sizzle('x[xmlns="jabber:x:conference"]', message).pop(),
            from = Strophe.getBareJidFromJid(message.getAttribute('from')),
            room_jid = x_el.getAttribute('jid'),
            reason = x_el.getAttribute('reason');

        var contact = _converse.roster.get(from),
            result;

        if (_converse.auto_join_on_invite) {
          result = true;
        } else {
          // Invite request might come from someone not your roster list
          contact = contact ? contact.get('fullname') : Strophe.getNodeFromJid(from);

          if (!reason) {
            result = confirm(__("%1$s has invited you to join a groupchat: %2$s", contact, room_jid));
          } else {
            result = confirm(__('%1$s has invited you to join a groupchat: %2$s, and left the following reason: "%3$s"', contact, room_jid, reason));
          }
        }

        if (result === true) {
          var chatroom = _converse.openChatRoom(room_jid, {
            'password': x_el.getAttribute('password')
          });

          if (chatroom.get('connection_status') === converse.ROOMSTATUS.DISCONNECTED) {
            _converse.chatboxviews.get(room_jid).join();
          }
        }
      };

      if (_converse.allow_muc_invitations) {
        var registerDirectInvitationHandler = function registerDirectInvitationHandler() {
          _converse.connection.addHandler(function (message) {
            _converse.onDirectMUCInvitation(message);

            return true;
          }, 'jabber:x:conference', 'message');
        };

        _converse.on('connected', registerDirectInvitationHandler);

        _converse.on('reconnected', registerDirectInvitationHandler);
      }

      var getChatRoom = function getChatRoom(jid, attrs, create) {
        jid = jid.toLowerCase();
        attrs.type = _converse.CHATROOMS_TYPE;
        attrs.id = jid;
        attrs.box_id = b64_sha1(jid);
        return _converse.chatboxes.getChatBox(jid, attrs, create);
      };

      var createChatRoom = function createChatRoom(jid, attrs) {
        return getChatRoom(jid, attrs, true);
      };

      function autoJoinRooms() {
        /* Automatically join groupchats, based on the
         * "auto_join_rooms" configuration setting, which is an array
         * of strings (groupchat JIDs) or objects (with groupchat JID and other
         * settings).
         */
        _.each(_converse.auto_join_rooms, function (groupchat) {
          if (_converse.chatboxes.where({
            'jid': groupchat
          }).length) {
            return;
          }

          if (_.isString(groupchat)) {
            _converse.api.rooms.open(groupchat);
          } else if (_.isObject(groupchat)) {
            _converse.api.rooms.open(groupchat.jid, groupchat.nick);
          } else {
            _converse.log('Invalid groupchat criteria specified for "auto_join_rooms"', Strophe.LogLevel.ERROR);
          }
        });

        _converse.emit('roomsAutoJoined');
      }

      function disconnectChatRooms() {
        /* When disconnecting, mark all groupchats as
         * disconnected, so that they will be properly entered again
         * when fetched from session storage.
         */
        _converse.chatboxes.each(function (model) {
          if (model.get('type') === _converse.CHATROOMS_TYPE) {
            model.save('connection_status', converse.ROOMSTATUS.DISCONNECTED);
          }
        });
      }
      /************************ BEGIN Event Handlers ************************/


      _converse.on('addClientFeatures', function () {
        if (_converse.allow_muc) {
          _converse.api.disco.own.features.add(Strophe.NS.MUC);
        }

        if (_converse.allow_muc_invitations) {
          _converse.api.disco.own.features.add('jabber:x:conference'); // Invites

        }
      });

      _converse.api.listen.on('chatBoxesFetched', autoJoinRooms);

      _converse.api.listen.on('disconnecting', disconnectChatRooms);

      _converse.api.listen.on('statusInitialized', function () {
        // XXX: For websocket connections, we disconnect from all
        // chatrooms when the page reloads. This is a workaround for
        // issue #1111 and should be removed once we support XEP-0198
        var options = {
          'once': true,
          'passive': true
        };
        window.addEventListener(_converse.unloadevent, function () {
          if (_instanceof(_converse.connection._proto, Strophe.Websocket)) {
            disconnectChatRooms();
          }
        });
      });
      /************************ END Event Handlers ************************/

      /************************ BEGIN API ************************/
      // We extend the default converse.js API to add methods specific to MUC groupchats.


      _.extend(_converse.api, {
        /**
         * The "rooms" namespace groups methods relevant to chatrooms
         * (aka groupchats).
         *
         * @namespace _converse.api.rooms
         * @memberOf _converse.api
         */
        'rooms': {
          /**
           * Creates a new MUC chatroom (aka groupchat)
           *
           * Similar to {@link _converse.api.rooms.open}, but creates
           * the chatroom in the background (i.e. doesn't cause a
           * view to open).
           *
           * @method _converse.api.rooms.create
           * @param {(string[]|string)} jid|jids The JID or array of
           *     JIDs of the chatroom(s) to create
           * @param {object} [attrs] attrs The room attributes
           */
          'create': function create(jids, attrs) {
            if (_.isString(attrs)) {
              attrs = {
                'nick': attrs
              };
            } else if (_.isUndefined(attrs)) {
              attrs = {};
            }

            if (_.isUndefined(attrs.maximize)) {
              attrs.maximize = false;
            }

            if (!attrs.nick && _converse.muc_nickname_from_jid) {
              attrs.nick = Strophe.getNodeFromJid(_converse.bare_jid);
            }

            if (_.isUndefined(jids)) {
              throw new TypeError('rooms.create: You need to provide at least one JID');
            } else if (_.isString(jids)) {
              return createChatRoom(jids, attrs);
            }

            return _.map(jids, _.partial(createChatRoom, _, attrs));
          },

          /**
           * Opens a MUC chatroom (aka groupchat)
           *
           * Similar to {@link _converse.api.chats.open}, but for groupchats.
           *
           * @method _converse.api.rooms.open
           * @param {string} jid The room JID or JIDs (if not specified, all
           *     currently open rooms will be returned).
           * @param {string} attrs A map  containing any extra room attributes.
           * @param {string} [attrs.nick] The current user's nickname for the MUC
           * @param {boolean} [attrs.auto_configure] A boolean, indicating
           *     whether the room should be configured automatically or not.
           *     If set to `true`, then it makes sense to pass in configuration settings.
           * @param {object} [attrs.roomconfig] A map of configuration settings to be used when the room gets
           *     configured automatically. Currently it doesn't make sense to specify
           *     `roomconfig` values if `auto_configure` is set to `false`.
           *     For a list of configuration values that can be passed in, refer to these values
           *     in the [XEP-0045 MUC specification](http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner).
           *     The values should be named without the `muc#roomconfig_` prefix.
           * @param {boolean} [attrs.maximize] A boolean, indicating whether minimized rooms should also be
           *     maximized, when opened. Set to `false` by default.
           * @param {boolean} [attrs.bring_to_foreground] A boolean indicating whether the room should be
           *     brought to the foreground and therefore replace the currently shown chat.
           *     If there is no chat currently open, then this option is ineffective.
           *
           * @example
           * this._converse.api.rooms.open('group@muc.example.com')
           *
           * @example
           * // To return an array of rooms, provide an array of room JIDs:
           * _converse.api.rooms.open(['group1@muc.example.com', 'group2@muc.example.com'])
           *
           * @example
           * // To setup a custom nickname when joining the room, provide the optional nick argument:
           * _converse.api.rooms.open('group@muc.example.com', {'nick': 'mycustomnick'})
           *
           * @example
           * // For example, opening a room with a specific default configuration:
           * _converse.api.rooms.open(
           *     'myroom@conference.example.org',
           *     { 'nick': 'coolguy69',
           *       'auto_configure': true,
           *       'roomconfig': {
           *           'changesubject': false,
           *           'membersonly': true,
           *           'persistentroom': true,
           *           'publicroom': true,
           *           'roomdesc': 'Comfy room for hanging out',
           *           'whois': 'anyone'
           *       }
           *     },
           *     true
           * );
           */
          'open': function open(jids, attrs) {
            return new Promise(function (resolve, reject) {
              _converse.api.waitUntil('chatBoxesFetched').then(function () {
                if (_.isUndefined(jids)) {
                  var err_msg = 'rooms.open: You need to provide at least one JID';

                  _converse.log(err_msg, Strophe.LogLevel.ERROR);

                  reject(new TypeError(err_msg));
                } else if (_.isString(jids)) {
                  resolve(_converse.api.rooms.create(jids, attrs).trigger('show'));
                } else {
                  resolve(_.map(jids, function (jid) {
                    return _converse.api.rooms.create(jid, attrs).trigger('show');
                  }));
                }
              });
            });
          },

          /**
           * Returns an object representing a MUC chatroom (aka groupchat)
           *
           * @method _converse.api.rooms.get
           * @param {string} [jid] The room JID (if not specified, all rooms will be returned).
           * @param {object} attrs A map containing any extra room attributes For example, if you want
           *     to specify the nickname, use `{'nick': 'bloodninja'}`. Previously (before
           *     version 1.0.7, the second parameter only accepted the nickname (as a string
           *     value). This is currently still accepted, but then you can't pass in any
           *     other room attributes. If the nickname is not specified then the node part of
           *     the user's JID will be used.
           * @param {boolean} create A boolean indicating whether the room should be created
           *     if not found (default: `false`)
           * @example
           * _converse.api.waitUntil('roomsAutoJoined').then(() => {
           *     const create_if_not_found = true;
           *     _converse.api.rooms.get(
           *         'group@muc.example.com',
           *         {'nick': 'dread-pirate-roberts'},
           *         create_if_not_found
           *     )
           * });
           */
          'get': function get(jids, attrs, create) {
            if (_.isString(attrs)) {
              attrs = {
                'nick': attrs
              };
            } else if (_.isUndefined(attrs)) {
              attrs = {};
            }

            if (_.isUndefined(jids)) {
              var result = [];

              _converse.chatboxes.each(function (chatbox) {
                if (chatbox.get('type') === _converse.CHATROOMS_TYPE) {
                  result.push(chatbox);
                }
              });

              return result;
            }

            if (!attrs.nick) {
              attrs.nick = Strophe.getNodeFromJid(_converse.bare_jid);
            }

            if (_.isString(jids)) {
              return getChatRoom(jids, attrs);
            }

            return _.map(jids, _.partial(getChatRoom, _, attrs));
          }
        }
      });
      /************************ END API ************************/

    }
  });
});

/***/ }),

/***/ "./src/converse-notification.js":
/*!**************************************!*\
  !*** ./src/converse-notification.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2013-2018, JC Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      _ = _converse$env._,
      sizzle = _converse$env.sizzle,
      u = converse.env.utils;
  converse.plugins.add('converse-notification', {
    dependencies: ["converse-chatboxes"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse;
      var __ = _converse.__;
      _converse.supports_html5_notification = "Notification" in window;

      _converse.api.settings.update({
        notify_all_room_messages: false,
        show_desktop_notifications: true,
        show_chatstate_notifications: false,
        chatstate_notification_blacklist: [],
        // ^ a list of JIDs to ignore concerning chat state notifications
        play_sounds: true,
        sounds_path: '/sounds/',
        notification_icon: '/logo/conversejs-filled.svg'
      });

      _converse.isOnlyChatStateNotification = function (msg) {
        return (// See XEP-0085 Chat State Notification
          _.isNull(msg.querySelector('body')) && (_.isNull(msg.querySelector(_converse.ACTIVE)) || _.isNull(msg.querySelector(_converse.COMPOSING)) || _.isNull(msg.querySelector(_converse.INACTIVE)) || _.isNull(msg.querySelector(_converse.PAUSED)) || _.isNull(msg.querySelector(_converse.GONE)))
        );
      };

      _converse.shouldNotifyOfGroupMessage = function (message) {
        /* Is this a group message worthy of notification?
         */
        var notify_all = _converse.notify_all_room_messages;
        var jid = message.getAttribute('from'),
            resource = Strophe.getResourceFromJid(jid),
            room_jid = Strophe.getBareJidFromJid(jid),
            sender = resource && Strophe.unescapeNode(resource) || '';

        if (sender === '' || message.querySelectorAll('delay').length > 0) {
          return false;
        }

        var room = _converse.chatboxes.get(room_jid);

        var body = message.querySelector('body');

        if (_.isNull(body)) {
          return false;
        }

        var mentioned = new RegExp("\\b".concat(room.get('nick'), "\\b")).test(body.textContent);
        notify_all = notify_all === true || _.isArray(notify_all) && _.includes(notify_all, room_jid);

        if (sender === room.get('nick') || !notify_all && !mentioned) {
          return false;
        }

        return true;
      };

      _converse.isMessageToHiddenChat = function (message) {
        if (_.includes(['mobile', 'fullscreen', 'embedded'], _converse.view_mode)) {
          var jid = Strophe.getBareJidFromJid(message.getAttribute('from')),
              view = _converse.chatboxviews.get(jid);

          if (!_.isNil(view)) {
            return view.model.get('hidden') || _converse.windowState === 'hidden' || !u.isVisible(view.el);
          }

          return true;
        }

        return _converse.windowState === 'hidden';
      };

      _converse.shouldNotifyOfMessage = function (message) {
        var forwarded = message.querySelector('forwarded');

        if (!_.isNull(forwarded)) {
          return false;
        } else if (message.getAttribute('type') === 'groupchat') {
          return _converse.shouldNotifyOfGroupMessage(message);
        } else if (u.isHeadlineMessage(_converse, message)) {
          // We want to show notifications for headline messages.
          return _converse.isMessageToHiddenChat(message);
        }

        var is_me = Strophe.getBareJidFromJid(message.getAttribute('from')) === _converse.bare_jid;

        return !_converse.isOnlyChatStateNotification(message) && !is_me && _converse.isMessageToHiddenChat(message);
      };

      _converse.playSoundNotification = function () {
        /* Plays a sound to notify that a new message was recieved.
         */
        // XXX Eventually this can be refactored to use Notification's sound
        // feature, but no browser currently supports it.
        // https://developer.mozilla.org/en-US/docs/Web/API/notification/sound
        var audio;

        if (_converse.play_sounds && !_.isUndefined(window.Audio)) {
          audio = new Audio(_converse.sounds_path + "msg_received.ogg");

          if (audio.canPlayType('audio/ogg')) {
            audio.play();
          } else {
            audio = new Audio(_converse.sounds_path + "msg_received.mp3");

            if (audio.canPlayType('audio/mp3')) {
              audio.play();
            }
          }
        }
      };

      _converse.areDesktopNotificationsEnabled = function () {
        return _converse.supports_html5_notification && _converse.show_desktop_notifications && Notification.permission === "granted";
      };

      _converse.showMessageNotification = function (message) {
        /* Shows an HTML5 Notification to indicate that a new chat
         * message was received.
         */
        var title, roster_item;
        var full_from_jid = message.getAttribute('from'),
            from_jid = Strophe.getBareJidFromJid(full_from_jid);

        if (message.getAttribute('type') === 'headline') {
          if (!_.includes(from_jid, '@') || _converse.allow_non_roster_messaging) {
            title = __("Notification from %1$s", from_jid);
          } else {
            return;
          }
        } else if (!_.includes(from_jid, '@')) {
          // workaround for Prosody which doesn't give type "headline"
          title = __("Notification from %1$s", from_jid);
        } else if (message.getAttribute('type') === 'groupchat') {
          title = __("%1$s says", Strophe.getResourceFromJid(full_from_jid));
        } else {
          if (_.isUndefined(_converse.roster)) {
            _converse.log("Could not send notification, because roster is undefined", Strophe.LogLevel.ERROR);

            return;
          }

          roster_item = _converse.roster.get(from_jid);

          if (!_.isUndefined(roster_item)) {
            title = __("%1$s says", roster_item.getDisplayName());
          } else {
            if (_converse.allow_non_roster_messaging) {
              title = __("%1$s says", from_jid);
            } else {
              return;
            }
          }
        } // TODO: we should suppress notifications if we cannot decrypt
        // the message...


        var body = sizzle("encrypted[xmlns=\"".concat(Strophe.NS.OMEMO, "\"]"), message).length ? __('OMEMO Message received') : message.querySelector('body').textContent;
        var n = new Notification(title, {
          body: body,
          lang: _converse.locale,
          icon: _converse.notification_icon
        });
        setTimeout(n.close.bind(n), 5000);
      };

      _converse.showChatStateNotification = function (contact) {
        /* Creates an HTML5 Notification to inform of a change in a
         * contact's chat state.
         */
        if (_.includes(_converse.chatstate_notification_blacklist, contact.jid)) {
          // Don't notify if the user is being ignored.
          return;
        }

        var chat_state = contact.chat_status;
        var message = null;

        if (chat_state === 'offline') {
          message = __('has gone offline');
        } else if (chat_state === 'away') {
          message = __('has gone away');
        } else if (chat_state === 'dnd') {
          message = __('is busy');
        } else if (chat_state === 'online') {
          message = __('has come online');
        }

        if (message === null) {
          return;
        }

        var n = new Notification(contact.getDisplayName(), {
          body: message,
          lang: _converse.locale,
          icon: _converse.notification_icon
        });
        setTimeout(n.close.bind(n), 5000);
      };

      _converse.showContactRequestNotification = function (contact) {
        var n = new Notification(contact.getDisplayName(), {
          body: __('wants to be your contact'),
          lang: _converse.locale,
          icon: _converse.notification_icon
        });
        setTimeout(n.close.bind(n), 5000);
      };

      _converse.showFeedbackNotification = function (data) {
        if (data.klass === 'error' || data.klass === 'warn') {
          var n = new Notification(data.subject, {
            body: data.message,
            lang: _converse.locale,
            icon: _converse.notification_icon
          });
          setTimeout(n.close.bind(n), 5000);
        }
      };

      _converse.handleChatStateNotification = function (contact) {
        /* Event handler for on('contactPresenceChanged').
         * Will show an HTML5 notification to indicate that the chat
         * status has changed.
         */
        if (_converse.areDesktopNotificationsEnabled() && _converse.show_chatstate_notifications) {
          _converse.showChatStateNotification(contact);
        }
      };

      _converse.handleMessageNotification = function (data) {
        /* Event handler for the on('message') event. Will call methods
         * to play sounds and show HTML5 notifications.
         */
        var message = data.stanza;

        if (!_converse.shouldNotifyOfMessage(message)) {
          return false;
        }

        _converse.playSoundNotification();

        if (_converse.areDesktopNotificationsEnabled()) {
          _converse.showMessageNotification(message);
        }
      };

      _converse.handleContactRequestNotification = function (contact) {
        if (_converse.areDesktopNotificationsEnabled(true)) {
          _converse.showContactRequestNotification(contact);
        }
      };

      _converse.handleFeedback = function (data) {
        if (_converse.areDesktopNotificationsEnabled(true)) {
          _converse.showFeedbackNotification(data);
        }
      };

      _converse.requestPermission = function () {
        if (_converse.supports_html5_notification && !_.includes(['denied', 'granted'], Notification.permission)) {
          // Ask user to enable HTML5 notifications
          Notification.requestPermission();
        }
      };

      _converse.on('pluginsInitialized', function () {
        // We only register event handlers after all plugins are
        // registered, because other plugins might override some of our
        // handlers.
        _converse.on('contactRequest', _converse.handleContactRequestNotification);

        _converse.on('contactPresenceChanged', _converse.handleChatStateNotification);

        _converse.on('message', _converse.handleMessageNotification);

        _converse.on('feedback', _converse.handleFeedback);

        _converse.on('connected', _converse.requestPermission);
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-omemo.js":
/*!*******************************!*\
  !*** ./src/converse-omemo.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)

/* global libsignal, ArrayBuffer, parseInt, crypto */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/toolbar_omemo.html */ "./src/templates/toolbar_omemo.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_toolbar_omemo) {
  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      moment = _converse$env.moment,
      sizzle = _converse$env.sizzle,
      $iq = _converse$env.$iq,
      $msg = _converse$env.$msg,
      _ = _converse$env._,
      f = _converse$env.f,
      b64_sha1 = _converse$env.b64_sha1;
  var u = converse.env.utils;
  Strophe.addNamespace('OMEMO', "eu.siacs.conversations.axolotl");
  Strophe.addNamespace('OMEMO_DEVICELIST', Strophe.NS.OMEMO + ".devicelist");
  Strophe.addNamespace('OMEMO_VERIFICATION', Strophe.NS.OMEMO + ".verification");
  Strophe.addNamespace('OMEMO_WHITELISTED', Strophe.NS.OMEMO + ".whitelisted");
  Strophe.addNamespace('OMEMO_BUNDLES', Strophe.NS.OMEMO + ".bundles");
  var UNDECIDED = 0;
  var TRUSTED = 1;
  var UNTRUSTED = -1;
  var TAG_LENGTH = 128;
  var KEY_ALGO = {
    'name': "AES-GCM",
    'length': 128
  };

  function parseBundle(bundle_el) {
    /* Given an XML element representing a user's OMEMO bundle, parse it
     * and return a map.
     */
    var signed_prekey_public_el = bundle_el.querySelector('signedPreKeyPublic'),
        signed_prekey_signature_el = bundle_el.querySelector('signedPreKeySignature'),
        identity_key_el = bundle_el.querySelector('identityKey');

    var prekeys = _.map(sizzle("prekeys > preKeyPublic", bundle_el), function (el) {
      return {
        'id': parseInt(el.getAttribute('preKeyId'), 10),
        'key': el.textContent
      };
    });

    return {
      'identity_key': bundle_el.querySelector('identityKey').textContent.trim(),
      'signed_prekey': {
        'id': parseInt(signed_prekey_public_el.getAttribute('signedPreKeyId'), 10),
        'public_key': signed_prekey_public_el.textContent,
        'signature': signed_prekey_signature_el.textContent
      },
      'prekeys': prekeys
    };
  }

  converse.plugins.add('converse-omemo', {
    enabled: function enabled(_converse) {
      return !_.isNil(window.libsignal) && !f.includes('converse-omemo', _converse.blacklisted_plugins);
    },
    dependencies: ["converse-chatview"],
    overrides: {
      ProfileModal: {
        events: {
          'change input.select-all': 'selectAll',
          'submit .fingerprint-removal': 'removeSelectedFingerprints'
        },
        initialize: function initialize() {
          var _converse = this.__super__._converse;
          this.debouncedRender = _.debounce(this.render, 50);
          this.devicelist = _converse.devicelists.get(_converse.bare_jid);
          this.devicelist.devices.on('change:bundle', this.debouncedRender, this);
          this.devicelist.devices.on('reset', this.debouncedRender, this);
          this.devicelist.devices.on('remove', this.debouncedRender, this);
          this.devicelist.devices.on('add', this.debouncedRender, this);
          return this.__super__.initialize.apply(this, arguments);
        },
        beforeRender: function beforeRender() {
          var _converse = this.__super__._converse,
              device_id = _converse.omemo_store.get('device_id');

          this.current_device = this.devicelist.devices.get(device_id);
          this.other_devices = this.devicelist.devices.filter(function (d) {
            return d.get('id') !== device_id;
          });

          if (this.__super__.beforeRender) {
            return this.__super__.beforeRender.apply(this, arguments);
          }
        },
        selectAll: function selectAll(ev) {
          var sibling = u.ancestor(ev.target, 'li');

          while (sibling) {
            sibling.querySelector('input[type="checkbox"]').checked = ev.target.checked;
            sibling = sibling.nextElementSibling;
          }
        },
        removeSelectedFingerprints: function removeSelectedFingerprints(ev) {
          var _this = this;

          ev.preventDefault();
          ev.stopPropagation();
          ev.target.querySelector('.select-all').checked = false;

          var checkboxes = ev.target.querySelectorAll('.fingerprint-removal-item input[type="checkbox"]:checked'),
              device_ids = _.map(checkboxes, 'value');

          this.devicelist.removeOwnDevices(device_ids).then(this.modal.hide).catch(function (err) {
            var _converse = _this.__super__._converse,
                __ = _converse.__;

            _converse.log(err, Strophe.LogLevel.ERROR);

            _converse.api.alert.show(Strophe.LogLevel.ERROR, __('Error'), [__('Sorry, an error occurred while trying to remove the devices.')]);
          });
        }
      },
      UserDetailsModal: {
        events: {
          'click .fingerprint-trust .btn input': 'toggleDeviceTrust'
        },
        initialize: function initialize() {
          var _converse = this.__super__._converse;
          var jid = this.model.get('jid');
          this.devicelist = _converse.devicelists.get(jid) || _converse.devicelists.create({
            'jid': jid
          });
          this.devicelist.devices.on('change:bundle', this.render, this);
          this.devicelist.devices.on('change:trusted', this.render, this);
          this.devicelist.devices.on('remove', this.render, this);
          this.devicelist.devices.on('add', this.render, this);
          this.devicelist.devices.on('reset', this.render, this);
          return this.__super__.initialize.apply(this, arguments);
        },
        toggleDeviceTrust: function toggleDeviceTrust(ev) {
          var radio = ev.target;
          var device = this.devicelist.devices.get(radio.getAttribute('name'));
          device.save('trusted', parseInt(radio.value, 10));
        }
      },
      ChatBox: {
        getBundlesAndBuildSessions: function getBundlesAndBuildSessions() {
          var _this2 = this;

          var _converse = this.__super__._converse;
          var devices;
          return _converse.getDevicesForContact(this.get('jid')).then(function (their_devices) {
            var device_id = _converse.omemo_store.get('device_id'),
                devicelist = _converse.devicelists.get(_converse.bare_jid),
                own_devices = devicelist.devices.filter(function (device) {
              return device.get('id') !== device_id;
            });

            devices = _.concat(own_devices, their_devices.models);
            return Promise.all(devices.map(function (device) {
              return device.getBundle();
            }));
          }).then(function () {
            return _this2.buildSessions(devices);
          });
        },
        buildSession: function buildSession(device) {
          var _converse = this.__super__._converse,
              address = new libsignal.SignalProtocolAddress(device.get('jid'), device.get('id')),
              sessionBuilder = new libsignal.SessionBuilder(_converse.omemo_store, address),
              prekey = device.getRandomPreKey();
          return device.getBundle().then(function (bundle) {
            return sessionBuilder.processPreKey({
              'registrationId': parseInt(device.get('id'), 10),
              'identityKey': u.base64ToArrayBuffer(bundle.identity_key),
              'signedPreKey': {
                'keyId': bundle.signed_prekey.id,
                // <Number>
                'publicKey': u.base64ToArrayBuffer(bundle.signed_prekey.public_key),
                'signature': u.base64ToArrayBuffer(bundle.signed_prekey.signature)
              },
              'preKey': {
                'keyId': prekey.id,
                // <Number>
                'publicKey': u.base64ToArrayBuffer(prekey.key)
              }
            });
          });
        },
        getSession: function getSession(device) {
          var _this3 = this;

          var _converse = this.__super__._converse,
              address = new libsignal.SignalProtocolAddress(device.get('jid'), device.get('id'));
          return _converse.omemo_store.loadSession(address.toString()).then(function (session) {
            if (session) {
              return Promise.resolve();
            } else {
              return _this3.buildSession(device);
            }
          });
        },
        encryptMessage: async function encryptMessage(plaintext) {
          // The client MUST use fresh, randomly generated key/IV pairs
          // with AES-128 in Galois/Counter Mode (GCM).
          var iv = crypto.getRandomValues(new window.Uint8Array(16)),
              key = await crypto.subtle.generateKey(KEY_ALGO, true, ["encrypt", "decrypt"]),
              algo = {
            'name': 'AES-GCM',
            'iv': iv,
            'tagLength': TAG_LENGTH
          },
              encrypted = await crypto.subtle.encrypt(algo, key, u.stringToArrayBuffer(plaintext)),
              length = encrypted.byteLength - (128 + 7 >> 3),
              ciphertext = encrypted.slice(0, length),
              tag = encrypted.slice(length),
              exported_key = await crypto.subtle.exportKey("raw", key);
          return Promise.resolve({
            'key': exported_key,
            'tag': tag,
            'key_and_tag': u.appendArrayBuffer(exported_key, tag),
            'payload': u.arrayBufferToBase64(ciphertext),
            'iv': u.arrayBufferToBase64(iv)
          });
        },
        decryptMessage: async function decryptMessage(obj) {
          var key_obj = await crypto.subtle.importKey('raw', obj.key, KEY_ALGO, true, ['encrypt', 'decrypt']),
              cipher = u.appendArrayBuffer(u.base64ToArrayBuffer(obj.payload), obj.tag),
              algo = {
            'name': "AES-GCM",
            'iv': u.base64ToArrayBuffer(obj.iv),
            'tagLength': TAG_LENGTH
          };
          return u.arrayBufferToString((await crypto.subtle.decrypt(algo, key_obj, cipher)));
        },
        reportDecryptionError: function reportDecryptionError(e) {
          var _converse = this.__super__._converse;

          if (_converse.debug) {
            var __ = _converse.__;
            this.messages.create({
              'message': __("Sorry, could not decrypt a received OMEMO message due to an error.") + " ".concat(e.name, " ").concat(e.message),
              'type': 'error'
            });
          }

          _converse.log("".concat(e.name, " ").concat(e.message), Strophe.LogLevel.ERROR);
        },
        decrypt: function decrypt(attrs) {
          var _this4 = this;

          var _converse = this.__super__._converse,
              session_cipher = this.getSessionCipher(attrs.from, parseInt(attrs.encrypted.device_id, 10)); // https://xmpp.org/extensions/xep-0384.html#usecases-receiving

          if (attrs.encrypted.prekey === 'true') {
            var plaintext;
            return session_cipher.decryptPreKeyWhisperMessage(u.base64ToArrayBuffer(attrs.encrypted.key), 'binary').then(function (key_and_tag) {
              if (attrs.encrypted.payload) {
                var key = key_and_tag.slice(0, 16),
                    tag = key_and_tag.slice(16);
                return _this4.decryptMessage(_.extend(attrs.encrypted, {
                  'key': key,
                  'tag': tag
                }));
              }

              return Promise.resolve();
            }).then(function (pt) {
              plaintext = pt;
              return _converse.omemo_store.generateMissingPreKeys();
            }).then(function () {
              return _converse.omemo_store.publishBundle();
            }).then(function () {
              if (plaintext) {
                return _.extend(attrs, {
                  'plaintext': plaintext
                });
              } else {
                return _.extend(attrs, {
                  'is_only_key': true
                });
              }
            }).catch(function (e) {
              _this4.reportDecryptionError(e);

              return attrs;
            });
          } else {
            return session_cipher.decryptWhisperMessage(u.base64ToArrayBuffer(attrs.encrypted.key), 'binary').then(function (key_and_tag) {
              var key = key_and_tag.slice(0, 16),
                  tag = key_and_tag.slice(16);
              return _this4.decryptMessage(_.extend(attrs.encrypted, {
                'key': key,
                'tag': tag
              }));
            }).then(function (plaintext) {
              return _.extend(attrs, {
                'plaintext': plaintext
              });
            }).catch(function (e) {
              _this4.reportDecryptionError(e);

              return attrs;
            });
          }
        },
        getEncryptionAttributesfromStanza: function getEncryptionAttributesfromStanza(stanza, original_stanza, attrs) {
          var _converse = this.__super__._converse,
              encrypted = sizzle("encrypted[xmlns=\"".concat(Strophe.NS.OMEMO, "\"]"), original_stanza).pop(),
              header = encrypted.querySelector('header'),
              key = sizzle("key[rid=\"".concat(_converse.omemo_store.get('device_id'), "\"]"), encrypted).pop();

          if (key) {
            attrs['is_encrypted'] = true;
            attrs['encrypted'] = {
              'device_id': header.getAttribute('sid'),
              'iv': header.querySelector('iv').textContent,
              'key': key.textContent,
              'payload': _.get(encrypted.querySelector('payload'), 'textContent', null),
              'prekey': key.getAttribute('prekey')
            };
            return this.decrypt(attrs);
          } else {
            return Promise.resolve(attrs);
          }
        },
        getMessageAttributesFromStanza: function getMessageAttributesFromStanza(stanza, original_stanza) {
          var encrypted = sizzle("encrypted[xmlns=\"".concat(Strophe.NS.OMEMO, "\"]"), original_stanza).pop();

          var attrs = this.__super__.getMessageAttributesFromStanza.apply(this, arguments);

          if (!encrypted) {
            return attrs;
          } else {
            return this.getEncryptionAttributesfromStanza(stanza, original_stanza, attrs);
          }
        },
        buildSessions: function buildSessions(devices) {
          var _this5 = this;

          return Promise.all(devices.map(function (device) {
            return _this5.getSession(device);
          })).then(function () {
            return devices;
          });
        },
        getSessionCipher: function getSessionCipher(jid, id) {
          var _converse = this.__super__._converse,
              address = new libsignal.SignalProtocolAddress(jid, id);
          this.session_cipher = new window.libsignal.SessionCipher(_converse.omemo_store, address);
          return this.session_cipher;
        },
        encryptKey: function encryptKey(plaintext, device) {
          return this.getSessionCipher(device.get('jid'), device.get('id')).encrypt(plaintext).then(function (payload) {
            return {
              'payload': payload,
              'device': device
            };
          });
        },
        addKeysToMessageStanza: function addKeysToMessageStanza(stanza, dicts, iv) {
          for (var i in dicts) {
            if (Object.prototype.hasOwnProperty.call(dicts, i)) {
              var payload = dicts[i].payload,
                  device = dicts[i].device,
                  prekey = 3 == parseInt(payload.type, 10);
              stanza.c('key', {
                'rid': device.get('id')
              }).t(btoa(payload.body));

              if (prekey) {
                stanza.attrs({
                  'prekey': prekey
                });
              }

              stanza.up();

              if (i == dicts.length - 1) {
                stanza.c('iv').t(iv).up().up();
              }
            }
          }

          return Promise.resolve(stanza);
        },
        createOMEMOMessageStanza: function createOMEMOMessageStanza(message, devices) {
          var _this6 = this;

          var _converse = this.__super__._converse,
              __ = _converse.__;

          var body = __("This is an OMEMO encrypted message which your client doesn’t seem to support. " + "Find more information on https://conversations.im/omemo");

          if (!message.get('message')) {
            throw new Error("No message body to encrypt!");
          }

          var stanza = $msg({
            'from': _converse.connection.jid,
            'to': this.get('jid'),
            'type': this.get('message_type'),
            'id': message.get('msgid')
          }).c('body').t(body).up() // An encrypted header is added to the message for
          // each device that is supposed to receive it.
          // These headers simply contain the key that the
          // payload message is encrypted with,
          // and they are separately encrypted using the
          // session corresponding to the counterpart device.
          .c('encrypted', {
            'xmlns': Strophe.NS.OMEMO
          }).c('header', {
            'sid': _converse.omemo_store.get('device_id')
          });
          return this.encryptMessage(message.get('message')).then(function (obj) {
            // The 16 bytes key and the GCM authentication tag (The tag
            // SHOULD have at least 128 bit) are concatenated and for each
            // intended recipient device, i.e. both own devices as well as
            // devices associated with the contact, the result of this
            // concatenation is encrypted using the corresponding
            // long-standing SignalProtocol session.
            var promises = devices.filter(function (device) {
              return device.get('trusted') != UNTRUSTED;
            }).map(function (device) {
              return _this6.encryptKey(obj.key_and_tag, device);
            });
            return Promise.all(promises).then(function (dicts) {
              return _this6.addKeysToMessageStanza(stanza, dicts, obj.iv);
            }).then(function (stanza) {
              stanza.c('payload').t(obj.payload).up().up();
              stanza.c('store', {
                'xmlns': Strophe.NS.HINTS
              });
              return stanza;
            });
          });
        },
        sendMessage: function sendMessage(attrs) {
          var _this7 = this;

          var _converse = this.__super__._converse,
              __ = _converse.__;

          if (this.get('omemo_active') && attrs.message) {
            attrs['is_encrypted'] = true;
            attrs['plaintext'] = attrs.message;
            var message = this.messages.create(attrs);
            this.getBundlesAndBuildSessions().then(function (devices) {
              return _this7.createOMEMOMessageStanza(message, devices);
            }).then(function (stanza) {
              return _this7.sendMessageStanza(stanza);
            }).catch(function (e) {
              _this7.messages.create({
                'message': __("Sorry, could not send the message due to an error.") + " ".concat(e.message),
                'type': 'error'
              });

              _converse.log(e, Strophe.LogLevel.ERROR);
            });
          } else {
            return this.__super__.sendMessage.apply(this, arguments);
          }
        }
      },
      ChatBoxView: {
        events: {
          'click .toggle-omemo': 'toggleOMEMO'
        },
        showMessage: function showMessage(message) {
          // We don't show a message if it's only keying material
          if (!message.get('is_only_key')) {
            return this.__super__.showMessage.apply(this, arguments);
          }
        },
        renderOMEMOToolbarButton: function renderOMEMOToolbarButton() {
          var _this8 = this;

          var _converse = this.__super__._converse,
              __ = _converse.__;

          _converse.contactHasOMEMOSupport(this.model.get('jid')).then(function (support) {
            if (support) {
              var icon = _this8.el.querySelector('.toggle-omemo'),
                  html = tpl_toolbar_omemo(_.extend(_this8.model.toJSON(), {
                '__': __
              }));

              if (icon) {
                icon.outerHTML = html;
              } else {
                _this8.el.querySelector('.chat-toolbar').insertAdjacentHTML('beforeend', html);
              }
            }
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        },
        toggleOMEMO: function toggleOMEMO(ev) {
          ev.preventDefault();
          this.model.save({
            'omemo_active': !this.model.get('omemo_active')
          });
          this.renderOMEMOToolbarButton();
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by Converse.js's plugin machinery.
       */
      var _converse = this._converse;

      _converse.api.promises.add(['OMEMOInitialized']);

      _converse.NUM_PREKEYS = 100; // Set here so that tests can override

      function generateFingerprint(device) {
        if (_.get(device.get('bundle'), 'fingerprint')) {
          return;
        }

        return device.getBundle().then(function (bundle) {
          bundle['fingerprint'] = u.arrayBufferToHex(u.base64ToArrayBuffer(bundle['identity_key']));
          device.save('bundle', bundle);
          device.trigger('change:bundle'); // Doesn't get triggered automatically due to pass-by-reference
        });
      }

      _converse.generateFingerprints = function (jid) {
        return _converse.getDevicesForContact(jid).then(function (devices) {
          return Promise.all(devices.map(function (d) {
            return generateFingerprint(d);
          }));
        });
      };

      _converse.getDeviceForContact = function (jid, device_id) {
        return _converse.getDevicesForContact(jid).then(function (devices) {
          return devices.get(device_id);
        });
      };

      _converse.getDevicesForContact = function (jid) {
        var devicelist;
        return _converse.api.waitUntil('OMEMOInitialized').then(function () {
          devicelist = _converse.devicelists.get(jid) || _converse.devicelists.create({
            'jid': jid
          });
          return devicelist.fetchDevices();
        }).then(function () {
          return devicelist.devices;
        });
      };

      _converse.contactHasOMEMOSupport = function (jid) {
        /* Checks whether the contact advertises any OMEMO-compatible devices. */
        return new Promise(function (resolve, reject) {
          _converse.getDevicesForContact(jid).then(function (devices) {
            return resolve(devices.length > 0);
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
        });
      };

      function generateDeviceID() {
        /* Generates a device ID, making sure that it's unique */
        var existing_ids = _converse.devicelists.get(_converse.bare_jid).devices.pluck('id');

        var device_id = libsignal.KeyHelper.generateRegistrationId();
        var i = 0;

        while (_.includes(existing_ids, device_id)) {
          device_id = libsignal.KeyHelper.generateRegistrationId();
          i++;

          if (i == 10) {
            throw new Error("Unable to generate a unique device ID");
          }
        }

        return device_id.toString();
      }

      _converse.OMEMOStore = Backbone.Model.extend({
        Direction: {
          SENDING: 1,
          RECEIVING: 2
        },
        getIdentityKeyPair: function getIdentityKeyPair() {
          var keypair = this.get('identity_keypair');
          return Promise.resolve({
            'privKey': u.base64ToArrayBuffer(keypair.privKey),
            'pubKey': u.base64ToArrayBuffer(keypair.pubKey)
          });
        },
        getLocalRegistrationId: function getLocalRegistrationId() {
          return Promise.resolve(parseInt(this.get('device_id'), 10));
        },
        isTrustedIdentity: function isTrustedIdentity(identifier, identity_key, direction) {
          if (_.isNil(identifier)) {
            throw new Error("Can't check identity key for invalid key");
          }

          if (!_instanceof(identity_key, ArrayBuffer)) {
            throw new Error("Expected identity_key to be an ArrayBuffer");
          }

          var trusted = this.get('identity_key' + identifier);

          if (trusted === undefined) {
            return Promise.resolve(true);
          }

          return Promise.resolve(u.arrayBufferToBase64(identity_key) === trusted);
        },
        loadIdentityKey: function loadIdentityKey(identifier) {
          if (_.isNil(identifier)) {
            throw new Error("Can't load identity_key for invalid identifier");
          }

          return Promise.resolve(u.base64ToArrayBuffer(this.get('identity_key' + identifier)));
        },
        saveIdentity: function saveIdentity(identifier, identity_key) {
          if (_.isNil(identifier)) {
            throw new Error("Can't save identity_key for invalid identifier");
          }

          var address = new libsignal.SignalProtocolAddress.fromString(identifier),
              existing = this.get('identity_key' + address.getName());
          var b64_idkey = u.arrayBufferToBase64(identity_key);
          this.save('identity_key' + address.getName(), b64_idkey);

          if (existing && b64_idkey !== existing) {
            return Promise.resolve(true);
          } else {
            return Promise.resolve(false);
          }
        },
        getPreKeys: function getPreKeys() {
          return this.get('prekeys') || {};
        },
        loadPreKey: function loadPreKey(key_id) {
          var res = this.getPreKeys()[key_id];

          if (res) {
            return Promise.resolve({
              'privKey': u.base64ToArrayBuffer(res.privKey),
              'pubKey': u.base64ToArrayBuffer(res.pubKey)
            });
          }

          return Promise.resolve();
        },
        storePreKey: function storePreKey(key_id, key_pair) {
          var prekey = {};
          prekey[key_id] = {
            'pubKey': u.arrayBufferToBase64(key_pair.pubKey),
            'privKey': u.arrayBufferToBase64(key_pair.privKey)
          };
          this.save('prekeys', _.extend(this.getPreKeys(), prekey));
          return Promise.resolve();
        },
        removePreKey: function removePreKey(key_id) {
          this.save('prekeys', _.omit(this.getPreKeys(), key_id));
          return Promise.resolve();
        },
        loadSignedPreKey: function loadSignedPreKey(keyId) {
          var res = this.get('signed_prekey');

          if (res) {
            return Promise.resolve({
              'privKey': u.base64ToArrayBuffer(res.privKey),
              'pubKey': u.base64ToArrayBuffer(res.pubKey)
            });
          }

          return Promise.resolve();
        },
        storeSignedPreKey: function storeSignedPreKey(spk) {
          if (_typeof(spk) !== "object") {
            // XXX: We've changed the signature of this method from the
            // example given in InMemorySignalProtocolStore.
            // Should be fine because the libsignal code doesn't
            // actually call this method.
            throw new Error("storeSignedPreKey: expected an object");
          }

          this.save('signed_prekey', {
            'id': spk.keyId,
            'privKey': u.arrayBufferToBase64(spk.keyPair.privKey),
            'pubKey': u.arrayBufferToBase64(spk.keyPair.pubKey),
            // XXX: The InMemorySignalProtocolStore does not pass
            // in or store the signature, but we need it when we
            // publish out bundle and this method isn't called from
            // within libsignal code, so we modify it to also store
            // the signature.
            'signature': u.arrayBufferToBase64(spk.signature)
          });
          return Promise.resolve();
        },
        removeSignedPreKey: function removeSignedPreKey(key_id) {
          if (this.get('signed_prekey')['id'] === key_id) {
            this.unset('signed_prekey');
            this.save();
          }

          return Promise.resolve();
        },
        loadSession: function loadSession(identifier) {
          return Promise.resolve(this.get('session' + identifier));
        },
        storeSession: function storeSession(identifier, record) {
          return Promise.resolve(this.save('session' + identifier, record));
        },
        removeSession: function removeSession(identifier) {
          return Promise.resolve(this.unset('session' + identifier));
        },
        removeAllSessions: function removeAllSessions(identifier) {
          var keys = _.filter(_.keys(this.attributes), function (key) {
            if (key.startsWith('session' + identifier)) {
              return key;
            }
          });

          var attrs = {};

          _.forEach(keys, function (key) {
            attrs[key] = undefined;
          });

          this.save(attrs);
          return Promise.resolve();
        },
        publishBundle: function publishBundle() {
          var signed_prekey = this.get('signed_prekey');
          var stanza = $iq({
            'from': _converse.bare_jid,
            'type': 'set'
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('publish', {
            'node': "".concat(Strophe.NS.OMEMO_BUNDLES, ":").concat(this.get('device_id'))
          }).c('item').c('bundle', {
            'xmlns': Strophe.NS.OMEMO
          }).c('signedPreKeyPublic', {
            'signedPreKeyId': signed_prekey.id
          }).t(signed_prekey.pubKey).up().c('signedPreKeySignature').t(signed_prekey.signature).up().c('identityKey').t(this.get('identity_keypair').pubKey).up().c('prekeys');

          _.forEach(this.get('prekeys'), function (prekey, id) {
            return stanza.c('preKeyPublic', {
              'preKeyId': id
            }).t(prekey.pubKey).up();
          });

          return _converse.api.sendIQ(stanza);
        },
        generateMissingPreKeys: function generateMissingPreKeys() {
          var _this9 = this;

          var current_keys = this.getPreKeys(),
              missing_keys = _.difference(_.invokeMap(_.range(0, _converse.NUM_PREKEYS), Number.prototype.toString), _.keys(current_keys));

          if (missing_keys.length < 1) {
            _converse.log("No missing prekeys to generate for our own device", Strophe.LogLevel.WARN);

            return Promise.resolve();
          }

          return Promise.all(_.map(missing_keys, function (id) {
            return libsignal.KeyHelper.generatePreKey(parseInt(id, 10));
          })).then(function (keys) {
            _.forEach(keys, function (k) {
              return _this9.storePreKey(k.keyId, k.keyPair);
            });

            var marshalled_keys = _.map(_this9.getPreKeys(), function (k) {
              return {
                'id': k.keyId,
                'key': u.arrayBufferToBase64(k.pubKey)
              };
            }),
                devicelist = _converse.devicelists.get(_converse.bare_jid),
                device = devicelist.devices.get(_this9.get('device_id'));

            return device.getBundle().then(function (bundle) {
              return device.save('bundle', _.extend(bundle, {
                'prekeys': marshalled_keys
              }));
            });
          });
        },
        generateBundle: function generateBundle() {
          var _this10 = this;

          /* The first thing that needs to happen if a client wants to
           * start using OMEMO is they need to generate an IdentityKey
           * and a Device ID. The IdentityKey is a Curve25519 [6]
           * public/private Key pair. The Device ID is a randomly
           * generated integer between 1 and 2^31 - 1.
           */
          var bundle = {};
          return libsignal.KeyHelper.generateIdentityKeyPair().then(function (identity_keypair) {
            var identity_key = u.arrayBufferToBase64(identity_keypair.pubKey),
                device_id = generateDeviceID();
            bundle['identity_key'] = identity_key;
            bundle['device_id'] = device_id;

            _this10.save({
              'device_id': device_id,
              'identity_keypair': {
                'privKey': u.arrayBufferToBase64(identity_keypair.privKey),
                'pubKey': identity_key
              },
              'identity_key': identity_key
            });

            return libsignal.KeyHelper.generateSignedPreKey(identity_keypair, 0);
          }).then(function (signed_prekey) {
            _converse.omemo_store.storeSignedPreKey(signed_prekey);

            bundle['signed_prekey'] = {
              'id': signed_prekey.keyId,
              'public_key': u.arrayBufferToBase64(signed_prekey.keyPair.privKey),
              'signature': u.arrayBufferToBase64(signed_prekey.signature)
            };
            return Promise.all(_.map(_.range(0, _converse.NUM_PREKEYS), function (id) {
              return libsignal.KeyHelper.generatePreKey(id);
            }));
          }).then(function (keys) {
            _.forEach(keys, function (k) {
              return _converse.omemo_store.storePreKey(k.keyId, k.keyPair);
            });

            var devicelist = _converse.devicelists.get(_converse.bare_jid),
                device = devicelist.devices.create({
              'id': bundle.device_id,
              'jid': _converse.bare_jid
            }),
                marshalled_keys = _.map(keys, function (k) {
              return {
                'id': k.keyId,
                'key': u.arrayBufferToBase64(k.keyPair.pubKey)
              };
            });

            bundle['prekeys'] = marshalled_keys;
            device.save('bundle', bundle);
          });
        },
        fetchSession: function fetchSession() {
          var _this11 = this;

          if (_.isUndefined(this._setup_promise)) {
            this._setup_promise = new Promise(function (resolve, reject) {
              _this11.fetch({
                'success': function success() {
                  if (!_converse.omemo_store.get('device_id')) {
                    _this11.generateBundle().then(resolve).catch(resolve);
                  } else {
                    resolve();
                  }
                },
                'error': function error() {
                  _this11.generateBundle().then(resolve).catch(resolve);
                }
              });
            });
          }

          return this._setup_promise;
        }
      });
      _converse.Device = Backbone.Model.extend({
        defaults: {
          'trusted': UNDECIDED
        },
        getRandomPreKey: function getRandomPreKey() {
          // XXX: assumes that the bundle has already been fetched
          var bundle = this.get('bundle');
          return bundle.prekeys[u.getRandomInt(bundle.prekeys.length)];
        },
        fetchBundleFromServer: function fetchBundleFromServer() {
          var _this12 = this;

          var stanza = $iq({
            'type': 'get',
            'from': _converse.bare_jid,
            'to': this.get('jid')
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('items', {
            'node': "".concat(Strophe.NS.OMEMO_BUNDLES, ":").concat(this.get('id'))
          });
          return _converse.api.sendIQ(stanza).then(function (iq) {
            var publish_el = sizzle("items[node=\"".concat(Strophe.NS.OMEMO_BUNDLES, ":").concat(_this12.get('id'), "\"]"), iq).pop(),
                bundle_el = sizzle("bundle[xmlns=\"".concat(Strophe.NS.OMEMO, "\"]"), publish_el).pop(),
                bundle = parseBundle(bundle_el);

            _this12.save('bundle', bundle);

            return bundle;
          }).catch(function (iq) {
            _converse.log(iq.outerHTML, Strophe.LogLevel.ERROR);
          });
        },
        getBundle: function getBundle() {
          /* Fetch and save the bundle information associated with
           * this device, if the information is not at hand already.
           */
          if (this.get('bundle')) {
            return Promise.resolve(this.get('bundle'), this);
          } else {
            return this.fetchBundleFromServer();
          }
        }
      });
      _converse.Devices = Backbone.Collection.extend({
        model: _converse.Device
      });
      _converse.DeviceList = Backbone.Model.extend({
        idAttribute: 'jid',
        initialize: function initialize() {
          this.devices = new _converse.Devices();
          var id = "converse.devicelist-".concat(_converse.bare_jid, "-").concat(this.get('jid'));
          this.devices.browserStorage = new Backbone.BrowserStorage.session(id);
          this.fetchDevices();
        },
        fetchDevices: function fetchDevices() {
          var _this13 = this;

          if (_.isUndefined(this._devices_promise)) {
            this._devices_promise = new Promise(function (resolve, reject) {
              _this13.devices.fetch({
                'success': function success(collection) {
                  if (collection.length === 0) {
                    _this13.fetchDevicesFromServer().then(function (ids) {
                      return _this13.publishCurrentDevice(ids);
                    }).then(resolve).catch(resolve);
                  } else {
                    resolve();
                  }
                }
              });
            });
          }

          return this._devices_promise;
        },
        publishCurrentDevice: function publishCurrentDevice(device_ids) {
          var _this14 = this;

          if (this.get('jid') !== _converse.bare_jid) {
            // We only publish for ourselves.
            return Promise.resolve();
          }

          return restoreOMEMOSession().then(function () {
            var device_id = _converse.omemo_store.get('device_id'),
                own_device = _this14.devices.findWhere({
              'id': device_id
            });

            if (!_.includes(device_ids, device_id)) {
              return _this14.publishDevices();
            }
          });
        },
        fetchDevicesFromServer: function fetchDevicesFromServer() {
          var _this15 = this;

          var stanza = $iq({
            'type': 'get',
            'from': _converse.bare_jid,
            'to': this.get('jid')
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('items', {
            'node': Strophe.NS.OMEMO_DEVICELIST
          });
          return _converse.api.sendIQ(stanza).then(function (iq) {
            var device_ids = _.map(sizzle("list[xmlns=\"".concat(Strophe.NS.OMEMO, "\"] device"), iq), function (dev) {
              return dev.getAttribute('id');
            });

            _.forEach(device_ids, function (id) {
              return _this15.devices.create({
                'id': id,
                'jid': _this15.get('jid')
              });
            });

            return device_ids;
          });
        },
        publishDevices: function publishDevices() {
          var stanza = $iq({
            'from': _converse.bare_jid,
            'type': 'set'
          }).c('pubsub', {
            'xmlns': Strophe.NS.PUBSUB
          }).c('publish', {
            'node': Strophe.NS.OMEMO_DEVICELIST
          }).c('item').c('list', {
            'xmlns': Strophe.NS.OMEMO
          });
          this.devices.each(function (device) {
            return stanza.c('device', {
              'id': device.get('id')
            }).up();
          });
          return _converse.api.sendIQ(stanza);
        },
        removeOwnDevices: function removeOwnDevices(device_ids) {
          var _this16 = this;

          if (this.get('jid') !== _converse.bare_jid) {
            throw new Error("Cannot remove devices from someone else's device list");
          }

          _.forEach(device_ids, function (device_id) {
            return _this16.devices.get(device_id).destroy();
          });

          return this.publishDevices();
        }
      });
      _converse.DeviceLists = Backbone.Collection.extend({
        model: _converse.DeviceList
      });
      _converse.omemo = {};

      function fetchDeviceLists() {
        return new Promise(function (resolve, reject) {
          return _converse.devicelists.fetch({
            'success': resolve
          });
        });
      }

      function fetchOwnDevices() {
        return fetchDeviceLists().then(function () {
          var own_devicelist = _converse.devicelists.get(_converse.bare_jid);

          if (_.isNil(own_devicelist)) {
            own_devicelist = _converse.devicelists.create({
              'jid': _converse.bare_jid
            });
          }

          return own_devicelist.fetchDevices();
        });
      }

      function updateBundleFromStanza(stanza) {
        var items_el = sizzle("items", stanza).pop();

        if (!items_el || !items_el.getAttribute('node').startsWith(Strophe.NS.OMEMO_BUNDLES)) {
          return;
        }

        var device_id = items_el.getAttribute('node').split(':')[1],
            jid = stanza.getAttribute('from'),
            bundle_el = sizzle("item > bundle", items_el).pop(),
            devicelist = _converse.devicelists.get(jid) || _converse.devicelists.create({
          'jid': jid
        }),
            device = devicelist.devices.get(device_id) || devicelist.devices.create({
          'id': device_id,
          'jid': jid
        });

        device.save({
          'bundle': parseBundle(bundle_el)
        });
      }

      function updateDevicesFromStanza(stanza) {
        var items_el = sizzle("items[node=\"".concat(Strophe.NS.OMEMO_DEVICELIST, "\"]"), stanza).pop();

        if (!items_el) {
          return;
        }

        var device_ids = _.map(sizzle("item list[xmlns=\"".concat(Strophe.NS.OMEMO, "\"] device"), items_el), function (device) {
          return device.getAttribute('id');
        });

        var jid = stanza.getAttribute('from'),
            devicelist = _converse.devicelists.get(jid) || _converse.devicelists.create({
          'jid': jid
        }),
            devices = devicelist.devices,
            removed_ids = _.difference(devices.pluck('id'), device_ids);

        _.forEach(removed_ids, function (id) {
          if (jid === _converse.bare_jid && id === _converse.omemo_store.get('device_id')) {
            // We don't remove the current device
            return;
          }

          devices.get(id).destroy();
        });

        _.forEach(device_ids, function (device_id) {
          if (!devices.get(device_id)) {
            devices.create({
              'id': device_id,
              'jid': jid
            });
          }
        });

        if (Strophe.getBareJidFromJid(jid) === _converse.bare_jid) {
          // Make sure our own device is on the list (i.e. if it was
          // removed, add it again.
          _converse.devicelists.get(_converse.bare_jid).publishCurrentDevice(device_ids);
        }
      }

      function registerPEPPushHandler() {
        // Add a handler for devices pushed from other connected clients
        _converse.connection.addHandler(function (message) {
          try {
            if (sizzle("event[xmlns=\"".concat(Strophe.NS.PUBSUB, "#event\"]"), message).length) {
              updateDevicesFromStanza(message);
              updateBundleFromStanza(message);
            }
          } catch (e) {
            _converse.log(e.message, Strophe.LogLevel.ERROR);
          }

          return true;
        }, null, 'message', 'headline');
      }

      function restoreOMEMOSession() {
        if (_.isUndefined(_converse.omemo_store)) {
          var storage = _converse.config.get('storage'),
              id = "converse.omemosession-".concat(_converse.bare_jid);

          _converse.omemo_store = new _converse.OMEMOStore({
            'id': id
          });
          _converse.omemo_store.browserStorage = new Backbone.BrowserStorage[storage](id);
        }

        return _converse.omemo_store.fetchSession();
      }

      function initOMEMO() {
        _converse.devicelists = new _converse.DeviceLists();

        var storage = _converse.config.get('storage'),
            id = "converse.devicelists-".concat(_converse.bare_jid);

        _converse.devicelists.browserStorage = new Backbone.BrowserStorage[storage](id);
        fetchOwnDevices().then(function () {
          return restoreOMEMOSession();
        }).then(function () {
          return _converse.omemo_store.publishBundle();
        }).then(function () {
          return _converse.emit('OMEMOInitialized');
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
      }

      _converse.api.listen.on('afterTearDown', function () {
        if (_converse.devicelists) {
          _converse.devicelists.reset();
        }

        delete _converse.omemo_store;
      });

      _converse.api.listen.on('connected', registerPEPPushHandler);

      _converse.api.listen.on('renderToolbar', function (view) {
        return view.renderOMEMOToolbarButton();
      });

      _converse.api.listen.on('statusInitialized', initOMEMO);

      _converse.api.listen.on('addClientFeatures', function () {
        return _converse.api.disco.own.features.add("".concat(Strophe.NS.OMEMO_DEVICELIST, "+notify"));
      });

      _converse.api.listen.on('userDetailsModalInitialized', function (contact) {
        var jid = contact.get('jid');

        _converse.generateFingerprints(jid).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
      });

      _converse.api.listen.on('profileModalInitialized', function (contact) {
        _converse.generateFingerprints(_converse.bare_jid).catch(_.partial(_converse.log, _, Strophe.LogLevel.ERROR));
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-ping.js":
/*!******************************!*\
  !*** ./src/converse-ping.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// https://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)

/* This is a Converse.js plugin which add support for application-level pings
 * as specified in XEP-0199 XMPP Ping.
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! strophe.ping */ "strophe.ping")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict"; // Strophe methods for building stanzas

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      _ = _converse$env._;
  converse.plugins.add('converse-ping', {
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse;

      _converse.api.settings.update({
        ping_interval: 180 //in seconds

      });

      _converse.ping = function (jid, success, error, timeout) {
        // XXX: We could first check here if the server advertised that
        // it supports PING.
        // However, some servers don't advertise while still keeping the
        // connection option due to pings.
        //
        // var feature = _converse.disco_entities[_converse.domain].features.findWhere({'var': Strophe.NS.PING});
        _converse.lastStanzaDate = new Date();

        if (_.isNil(jid)) {
          jid = Strophe.getDomainFromJid(_converse.bare_jid);
        }

        if (_.isUndefined(timeout)) {
          timeout = null;
        }

        if (_.isUndefined(success)) {
          success = null;
        }

        if (_.isUndefined(error)) {
          error = null;
        }

        if (_converse.connection) {
          _converse.connection.ping.ping(jid, success, error, timeout);

          return true;
        }

        return false;
      };

      _converse.pong = function (ping) {
        _converse.lastStanzaDate = new Date();

        _converse.connection.ping.pong(ping);

        return true;
      };

      _converse.registerPongHandler = function () {
        if (!_.isUndefined(_converse.connection.disco)) {
          _converse.api.disco.own.features.add(Strophe.NS.PING);
        }

        _converse.connection.ping.addPingHandler(_converse.pong);
      };

      _converse.registerPingHandler = function () {
        _converse.registerPongHandler();

        if (_converse.ping_interval > 0) {
          _converse.connection.addHandler(function () {
            /* Handler on each stanza, saves the received date
             * in order to ping only when needed.
             */
            _converse.lastStanzaDate = new Date();
            return true;
          });

          _converse.connection.addTimedHandler(1000, function () {
            var now = new Date();

            if (!_converse.lastStanzaDate) {
              _converse.lastStanzaDate = now;
            }

            if ((now - _converse.lastStanzaDate) / 1000 > _converse.ping_interval) {
              return _converse.ping();
            }

            return true;
          });
        }
      };

      var onConnected = function onConnected() {
        // Wrapper so that we can spy on registerPingHandler in tests
        _converse.registerPingHandler();
      };

      _converse.on('connected', onConnected);

      _converse.on('reconnected', onConnected);
    }
  });
});

/***/ }),

/***/ "./src/converse-profile.js":
/*!*********************************!*\
  !*** ./src/converse-profile.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2013-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js"), __webpack_require__(/*! templates/alert.html */ "./src/templates/alert.html"), __webpack_require__(/*! templates/chat_status_modal.html */ "./src/templates/chat_status_modal.html"), __webpack_require__(/*! templates/profile_modal.html */ "./src/templates/profile_modal.html"), __webpack_require__(/*! templates/profile_view.html */ "./src/templates/profile_view.html"), __webpack_require__(/*! templates/status_option.html */ "./src/templates/status_option.html"), __webpack_require__(/*! converse-vcard */ "./src/converse-vcard.js"), __webpack_require__(/*! converse-modal */ "./src/converse-modal.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, bootstrap, tpl_alert, tpl_chat_status_modal, tpl_profile_modal, tpl_profile_view, tpl_status_option) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      utils = _converse$env.utils,
      _ = _converse$env._,
      moment = _converse$env.moment;
  var u = converse.env.utils;
  converse.plugins.add('converse-profile', {
    dependencies: ["converse-modal", "converse-vcard", "converse-chatboxviews"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;
      _converse.ProfileModal = _converse.BootstrapModal.extend({
        events: {
          'click .change-avatar': "openFileSelection",
          'change input[type="file"': "updateFilePreview",
          'submit .profile-form': 'onFormSubmitted'
        },
        initialize: function initialize() {
          this.model.on('change', this.render, this);

          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          _converse.emit('profileModalInitialized', this.model);
        },
        toHTML: function toHTML() {
          return tpl_profile_modal(_.extend(this.model.toJSON(), this.model.vcard.toJSON(), {
            '_': _,
            '__': __,
            '_converse': _converse,
            'alt_avatar': __('Your avatar image'),
            'heading_profile': __('Your Profile'),
            'label_close': __('Close'),
            'label_email': __('Email'),
            'label_fullname': __('Full Name'),
            'label_jid': __('XMPP Address (JID)'),
            'label_nickname': __('Nickname'),
            'label_role': __('Role'),
            'label_role_help': __('Use commas to separate multiple roles. Your roles are shown next to your name on your chat messages.'),
            'label_url': __('URL'),
            'utils': u,
            'view': this
          }));
        },
        afterRender: function afterRender() {
          this.tabs = _.map(this.el.querySelectorAll('.nav-item'), function (tab) {
            return new bootstrap.Tab(tab);
          });
        },
        openFileSelection: function openFileSelection(ev) {
          ev.preventDefault();
          this.el.querySelector('input[type="file"]').click();
        },
        updateFilePreview: function updateFilePreview(ev) {
          var _this = this;

          var file = ev.target.files[0],
              reader = new FileReader();

          reader.onloadend = function () {
            _this.el.querySelector('.avatar').setAttribute('src', reader.result);
          };

          reader.readAsDataURL(file);
        },
        setVCard: function setVCard(data) {
          var _this2 = this;

          _converse.api.vcard.set(_converse.bare_jid, data).then(function () {
            return _converse.api.vcard.update(_this2.model.vcard, true);
          }).catch(function (err) {
            _converse.log(err, Strophe.LogLevel.FATAL);

            _converse.api.alert.show(Strophe.LogLevel.ERROR, __('Error'), [__("Sorry, an error happened while trying to save your profile data."), __("You can check your browser's developer console for any error output.")]);
          });

          this.modal.hide();
        },
        onFormSubmitted: function onFormSubmitted(ev) {
          var _this3 = this;

          ev.preventDefault();
          var reader = new FileReader(),
              form_data = new FormData(ev.target),
              image_file = form_data.get('image');
          var data = {
            'fn': form_data.get('fn'),
            'nickname': form_data.get('nickname'),
            'role': form_data.get('role'),
            'email': form_data.get('email'),
            'url': form_data.get('url')
          };

          if (!image_file.size) {
            _.extend(data, {
              'image': this.model.vcard.get('image'),
              'image_type': this.model.vcard.get('image_type')
            });

            this.setVCard(data);
          } else {
            reader.onloadend = function () {
              _.extend(data, {
                'image': btoa(reader.result),
                'image_type': image_file.type
              });

              _this3.setVCard(data);
            };

            reader.readAsBinaryString(image_file);
          }
        }
      });
      _converse.ChatStatusModal = _converse.BootstrapModal.extend({
        events: {
          "submit form#set-xmpp-status": "onFormSubmitted",
          "click .clear-input": "clearStatusMessage"
        },
        toHTML: function toHTML() {
          return tpl_chat_status_modal(_.extend(this.model.toJSON(), this.model.vcard.toJSON(), {
            'label_away': __('Away'),
            'label_close': __('Close'),
            'label_busy': __('Busy'),
            'label_cancel': __('Cancel'),
            'label_custom_status': __('Custom status'),
            'label_offline': __('Offline'),
            'label_online': __('Online'),
            'label_save': __('Save'),
            'label_xa': __('Away for long'),
            'modal_title': __('Change chat status'),
            'placeholder_status_message': __('Personal status message')
          }));
        },
        afterRender: function afterRender() {
          var _this4 = this;

          this.el.addEventListener('shown.bs.modal', function () {
            _this4.el.querySelector('input[name="status_message"]').focus();
          }, false);
        },
        clearStatusMessage: function clearStatusMessage(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
            u.hideElement(this.el.querySelector('.clear-input'));
          }

          var roster_filter = this.el.querySelector('input[name="status_message"]');
          roster_filter.value = '';
        },
        onFormSubmitted: function onFormSubmitted(ev) {
          ev.preventDefault();
          var data = new FormData(ev.target);
          this.model.save({
            'status_message': data.get('status_message'),
            'status': data.get('chat_status')
          });
          this.modal.hide();
        }
      });
      _converse.XMPPStatusView = _converse.VDOMViewWithAvatar.extend({
        tagName: "div",
        events: {
          "click a.show-profile": "showProfileModal",
          "click a.change-status": "showStatusChangeModal",
          "click .logout": "logOut"
        },
        initialize: function initialize() {
          this.model.on("change", this.render, this);
          this.model.vcard.on("change", this.render, this);
        },
        toHTML: function toHTML() {
          var chat_status = this.model.get('status') || 'offline';
          return tpl_profile_view(_.extend(this.model.toJSON(), this.model.vcard.toJSON(), {
            '__': __,
            'fullname': this.model.vcard.get('fullname') || _converse.bare_jid,
            'status_message': this.model.get('status_message') || __("I am %1$s", this.getPrettyStatus(chat_status)),
            'chat_status': chat_status,
            '_converse': _converse,
            'title_change_settings': __('Change settings'),
            'title_change_status': __('Click to change your chat status'),
            'title_log_out': __('Log out'),
            'title_your_profile': __('Your profile')
          }));
        },
        afterRender: function afterRender() {
          this.renderAvatar();
        },
        showProfileModal: function showProfileModal(ev) {
          if (_.isUndefined(this.profile_modal)) {
            this.profile_modal = new _converse.ProfileModal({
              model: this.model
            });
          }

          this.profile_modal.show(ev);
        },
        showStatusChangeModal: function showStatusChangeModal(ev) {
          if (_.isUndefined(this.status_modal)) {
            this.status_modal = new _converse.ChatStatusModal({
              model: this.model
            });
          }

          this.status_modal.show(ev);
        },
        logOut: function logOut(ev) {
          ev.preventDefault();
          var result = confirm(__("Are you sure you want to log out?"));

          if (result === true) {
            _converse.logOut();
          }
        },
        getPrettyStatus: function getPrettyStatus(stat) {
          if (stat === 'chat') {
            return __('online');
          } else if (stat === 'dnd') {
            return __('busy');
          } else if (stat === 'xa') {
            return __('away for long');
          } else if (stat === 'away') {
            return __('away');
          } else if (stat === 'offline') {
            return __('offline');
          } else {
            return __(stat) || __('online');
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-push.js":
/*!******************************!*\
  !*** ./src/converse-push.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// https://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)

/* This is a Converse.js plugin which add support for registering
 * an "App Server" as defined in  XEP-0357
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      _ = _converse$env._;
  Strophe.addNamespace('PUSH', 'urn:xmpp:push:0');
  converse.plugins.add('converse-push', {
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.settings.update({
        'push_app_servers': []
      });

      function disablePushAppServer(push_app_server) {
        if (!push_app_server.jid) {
          return;
        }

        Promise.all([_converse.api.disco.supports(Strophe.NS.PUSH, _converse.bare_jid)]).then(function (result) {
          if (!result[0].length && !result[1].length) {
            return _converse.log("Not disabling push app server \"".concat(push_app_server.jid, "\", no disco support from your server."), Strophe.LogLevel.WARN);
          }

          var stanza = $iq({
            'type': 'set'
          }).c('disable', {
            'xmlns': Strophe.NS.PUSH,
            'jid': push_app_server.jid
          });

          if (push_app_server.node) {
            stanza.attrs({
              'node': push_app_server.node
            });
          }

          _converse.api.sendIQ(stanza).then(function () {
            return _converse.session.set('push_enabled', true);
          }).catch(function (e) {
            _converse.log("Could not enable push app server for ".concat(push_app_server.jid), Strophe.LogLevel.ERROR);

            _converse.log(e, Strophe.LogLevel.ERROR);
          });
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
      }

      function enablePushAppServer(push_app_server) {
        if (!push_app_server.jid || !push_app_server.node) {
          return;
        }

        _converse.api.disco.getIdentity('pubsub', 'push', push_app_server.jid).then(function (identity) {
          if (!identity) {
            return _converse.log("Not enabling push the service \"".concat(push_app_server.jid, "\", it doesn't have the right disco identtiy."), Strophe.LogLevel.WARN);
          }

          return Promise.all([_converse.api.disco.supports(Strophe.NS.PUSH, push_app_server.jid), _converse.api.disco.supports(Strophe.NS.PUSH, _converse.bare_jid)]).then(function (result) {
            if (!result[0].length && !result[1].length) {
              return _converse.log("Not enabling push app server \"".concat(push_app_server.jid, "\", no disco support from your server."), Strophe.LogLevel.WARN);
            }

            var stanza = $iq({
              'type': 'set'
            }).c('enable', {
              'xmlns': Strophe.NS.PUSH,
              'jid': push_app_server.jid,
              'node': push_app_server.node
            });

            if (push_app_server.secret) {
              stanza.c('x', {
                'xmlns': Strophe.NS.XFORM,
                'type': 'submit'
              }).c('field', {
                'var': 'FORM_TYPE'
              }).c('value').t("".concat(Strophe.NS.PUBSUB, "#publish-options")).up().up().c('field', {
                'var': 'secret'
              }).c('value').t(push_app_server.secret);
            }

            _converse.api.sendIQ(stanza).then(function () {
              return _converse.session.save('push_enabled', true);
            }).catch(function (e) {
              _converse.log("Could not enable push app server for ".concat(push_app_server.jid), Strophe.LogLevel.ERROR);

              _converse.log(e, Strophe.LogLevel.ERROR);
            });
          }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
      }

      function enablePush() {
        if (_converse.session.get('push_enabled')) {
          // XXX: this code is still a bit naive. We set push_enabled
          // to true as soon as the first push app server has been set.
          //
          // When enabling or disabling multiple push app servers,
          // we won't wait until we have confirmation that all have been set.
          return;
        }

        var enabled_services = _.reject(_converse.push_app_servers, 'disable');

        _.each(enabled_services, enablePushAppServer);

        var disabled_services = _.filter(_converse.push_app_servers, 'disable');

        _.each(disabled_services, disablePushAppServer);
      }

      _converse.api.listen.on('statusInitialized', enablePush);
    }
  });
});

/***/ }),

/***/ "./src/converse-register.js":
/*!**********************************!*\
  !*** ./src/converse-register.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */

/* This is a Converse.js plugin which add support for in-band registration
 * as specified in XEP-0077.
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! utils/form */ "./src/utils/form.js"), __webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/form_username.html */ "./src/templates/form_username.html"), __webpack_require__(/*! templates/register_link.html */ "./src/templates/register_link.html"), __webpack_require__(/*! templates/register_panel.html */ "./src/templates/register_panel.html"), __webpack_require__(/*! templates/registration_form.html */ "./src/templates/registration_form.html"), __webpack_require__(/*! templates/registration_request.html */ "./src/templates/registration_request.html"), __webpack_require__(/*! templates/form_input.html */ "./src/templates/form_input.html"), __webpack_require__(/*! templates/spinner.html */ "./src/templates/spinner.html"), __webpack_require__(/*! converse-controlbox */ "./src/converse-controlbox.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (utils, converse, tpl_form_username, tpl_register_link, tpl_register_panel, tpl_registration_form, tpl_registration_request, tpl_form_input, tpl_spinner) {
  "use strict"; // Strophe methods for building stanzas

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      Backbone = _converse$env.Backbone,
      sizzle = _converse$env.sizzle,
      $iq = _converse$env.$iq,
      _ = _converse$env._; // Add Strophe Namespaces

  Strophe.addNamespace('REGISTER', 'jabber:iq:register'); // Add Strophe Statuses

  var i = 0;

  _.each(_.keys(Strophe.Status), function (key) {
    i = Math.max(i, Strophe.Status[key]);
  });

  Strophe.Status.REGIFAIL = i + 1;
  Strophe.Status.REGISTERED = i + 2;
  Strophe.Status.CONFLICT = i + 3;
  Strophe.Status.NOTACCEPTABLE = i + 5;
  converse.plugins.add('converse-register', {
    'overrides': {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      LoginPanel: {
        insertRegisterLink: function insertRegisterLink() {
          var _converse = this.__super__._converse;

          if (_.isUndefined(this.registerlinkview)) {
            this.registerlinkview = new _converse.RegisterLinkView({
              'model': this.model
            });
            this.registerlinkview.render();
            this.el.querySelector('.buttons').insertAdjacentElement('afterend', this.registerlinkview.el);
          }

          this.registerlinkview.render();
        },
        render: function render(cfg) {
          var _converse = this.__super__._converse;

          this.__super__.render.apply(this, arguments);

          if (_converse.allow_registration && !_converse.auto_login) {
            this.insertRegisterLink();
          }

          return this;
        }
      },
      ControlBoxView: {
        initialize: function initialize() {
          this.__super__.initialize.apply(this, arguments);

          this.model.on('change:active-form', this.showLoginOrRegisterForm.bind(this));
        },
        showLoginOrRegisterForm: function showLoginOrRegisterForm() {
          var _converse = this.__super__._converse;

          if (_.isNil(this.registerpanel)) {
            return;
          }

          if (this.model.get('active-form') == "register") {
            this.loginpanel.el.classList.add('hidden');
            this.registerpanel.el.classList.remove('hidden');
          } else {
            this.loginpanel.el.classList.remove('hidden');
            this.registerpanel.el.classList.add('hidden');
          }
        },
        renderRegistrationPanel: function renderRegistrationPanel() {
          var _converse = this.__super__._converse;

          if (_converse.allow_registration) {
            this.registerpanel = new _converse.RegisterPanel({
              'model': this.model
            });
            this.registerpanel.render();
            this.registerpanel.el.classList.add('hidden');
            this.el.querySelector('#converse-login-panel').insertAdjacentElement('afterend', this.registerpanel.el);
            this.showLoginOrRegisterForm();
          }

          return this;
        },
        renderLoginPanel: function renderLoginPanel() {
          /* Also render a registration panel, when rendering the
           * login panel.
           */
          this.__super__.renderLoginPanel.apply(this, arguments);

          this.renderRegistrationPanel();
          return this;
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;
      _converse.CONNECTION_STATUS[Strophe.Status.REGIFAIL] = 'REGIFAIL';
      _converse.CONNECTION_STATUS[Strophe.Status.REGISTERED] = 'REGISTERED';
      _converse.CONNECTION_STATUS[Strophe.Status.CONFLICT] = 'CONFLICT';
      _converse.CONNECTION_STATUS[Strophe.Status.NOTACCEPTABLE] = 'NOTACCEPTABLE';

      _converse.api.settings.update({
        'allow_registration': true,
        'domain_placeholder': __(" e.g. conversejs.org"),
        // Placeholder text shown in the domain input on the registration form
        'providers_link': 'https://xmpp.net/directory.php',
        // Link to XMPP providers shown on registration page
        'registration_domain': ''
      });

      function setActiveForm(value) {
        _converse.api.waitUntil('controlboxInitialized').then(function () {
          var controlbox = _converse.chatboxes.get('controlbox');

          controlbox.set({
            'active-form': value
          });
        }).catch(_.partial(_converse.log, _, Strophe.LogLevel.FATAL));
      }

      _converse.router.route('converse/login', _.partial(setActiveForm, 'login'));

      _converse.router.route('converse/register', _.partial(setActiveForm, 'register'));

      _converse.RegisterLinkView = Backbone.VDOMView.extend({
        toHTML: function toHTML() {
          return tpl_register_link(_.extend(this.model.toJSON(), {
            '__': _converse.__,
            '_converse': _converse,
            'connection_status': _converse.connfeedback.get('connection_status')
          }));
        }
      });
      _converse.RegisterPanel = Backbone.NativeView.extend({
        tagName: 'div',
        id: "converse-register-panel",
        className: 'controlbox-pane fade-in',
        events: {
          'submit form#converse-register': 'onFormSubmission',
          'click .button-cancel': 'renderProviderChoiceForm'
        },
        initialize: function initialize(cfg) {
          this.reset();
          this.registerHooks();
        },
        render: function render() {
          this.model.set('registration_form_rendered', false);
          this.el.innerHTML = tpl_register_panel({
            '__': __,
            'default_domain': _converse.registration_domain,
            'label_register': __('Fetch registration form'),
            'help_providers': __('Tip: A list of public XMPP providers is available'),
            'help_providers_link': __('here'),
            'href_providers': _converse.providers_link,
            'domain_placeholder': _converse.domain_placeholder
          });

          if (_converse.registration_domain) {
            this.fetchRegistrationForm(_converse.registration_domain);
          }

          return this;
        },
        registerHooks: function registerHooks() {
          var _this = this;

          /* Hook into Strophe's _connect_cb, so that we can send an IQ
           * requesting the registration fields.
           */
          var conn = _converse.connection;

          var connect_cb = conn._connect_cb.bind(conn);

          conn._connect_cb = function (req, callback, raw) {
            if (!_this._registering) {
              connect_cb(req, callback, raw);
            } else {
              if (_this.getRegistrationFields(req, callback, raw)) {
                _this._registering = false;
              }
            }
          };
        },
        getRegistrationFields: function getRegistrationFields(req, _callback, raw) {
          /*  Send an IQ stanza to the XMPP server asking for the
           *  registration fields.
           *  Parameters:
           *    (Strophe.Request) req - The current request
           *    (Function) callback
           */
          var conn = _converse.connection;
          conn.connected = true;

          var body = conn._proto._reqToData(req);

          if (!body) {
            return;
          }

          if (conn._proto._connect_cb(body) === Strophe.Status.CONNFAIL) {
            this.showValidationError(__("Sorry, we're unable to connect to your chosen provider."));
            return false;
          }

          var register = body.getElementsByTagName("register");
          var mechanisms = body.getElementsByTagName("mechanism");

          if (register.length === 0 && mechanisms.length === 0) {
            conn._proto._no_auth_received(_callback);

            return false;
          }

          if (register.length === 0) {
            conn._changeConnectStatus(Strophe.Status.REGIFAIL);

            this.showValidationError(__("Sorry, the given provider does not support in " + "band account registration. Please try with a " + "different provider."));
            return true;
          } // Send an IQ stanza to get all required data fields


          conn._addSysHandler(this.onRegistrationFields.bind(this), null, "iq", null, null);

          var stanza = $iq({
            type: "get"
          }).c("query", {
            xmlns: Strophe.NS.REGISTER
          }).tree();
          stanza.setAttribute("id", conn.getUniqueId("sendIQ"));
          conn.send(stanza);
          conn.connected = false;
          return true;
        },
        onRegistrationFields: function onRegistrationFields(stanza) {
          /*  Handler for Registration Fields Request.
           *
           *  Parameters:
           *    (XMLElement) elem - The query stanza.
           */
          if (stanza.getAttribute("type") === "error") {
            _converse.connection._changeConnectStatus(Strophe.Status.REGIFAIL, __('Something went wrong while establishing a connection with "%1$s". ' + 'Are you sure it exists?', this.domain));

            return false;
          }

          if (stanza.getElementsByTagName("query").length !== 1) {
            _converse.connection._changeConnectStatus(Strophe.Status.REGIFAIL, "unknown");

            return false;
          }

          this.setFields(stanza);

          if (!this.model.get('registration_form_rendered')) {
            this.renderRegistrationForm(stanza);
          }

          return false;
        },
        reset: function reset(settings) {
          var defaults = {
            fields: {},
            urls: [],
            title: "",
            instructions: "",
            registered: false,
            _registering: false,
            domain: null,
            form_type: null
          };

          _.extend(this, defaults);

          if (settings) {
            _.extend(this, _.pick(settings, _.keys(defaults)));
          }
        },
        onFormSubmission: function onFormSubmission(ev) {
          /* Event handler when the #converse-register form is
           * submitted.
           *
           * Depending on the available input fields, we delegate to
           * other methods.
           */
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (_.isNull(ev.target.querySelector('input[name=domain]'))) {
            this.submitRegistrationForm(ev.target);
          } else {
            this.onProviderChosen(ev.target);
          }
        },
        onProviderChosen: function onProviderChosen(form) {
          /* Callback method that gets called when the user has chosen an
           * XMPP provider.
           *
           * Parameters:
           *      (HTMLElement) form - The form that was submitted
           */
          var domain_input = form.querySelector('input[name=domain]'),
              domain = _.get(domain_input, 'value');

          if (!domain) {
            // TODO: add validation message
            domain_input.classList.add('error');
            return;
          }

          form.querySelector('input[type=submit]').classList.add('hidden');
          this.fetchRegistrationForm(domain.trim());
        },
        fetchRegistrationForm: function fetchRegistrationForm(domain_name) {
          /* This is called with a domain name based on which, it fetches a
           * registration form from the requested domain.
           *
           * Parameters:
           *      (String) domain_name - XMPP server domain
           */
          if (!this.model.get('registration_form_rendered')) {
            this.renderRegistrationRequest();
          }

          this.reset({
            domain: Strophe.getDomainFromJid(domain_name),
            _registering: true
          });

          _converse.connection.connect(this.domain, "", this.onConnectStatusChanged.bind(this));

          return false;
        },
        renderRegistrationRequest: function renderRegistrationRequest() {
          /* Clear the form and inform the user that the registration
           * form is being fetched.
           */
          this.clearRegistrationForm().insertAdjacentHTML('beforeend', tpl_registration_request({
            '__': _converse.__,
            'cancel': _converse.registration_domain
          }));
        },
        giveFeedback: function giveFeedback(message, klass) {
          var feedback = this.el.querySelector('.reg-feedback');

          if (!_.isNull(feedback)) {
            feedback.parentNode.removeChild(feedback);
          }

          var form = this.el.querySelector('form');
          form.insertAdjacentHTML('afterbegin', '<span class="reg-feedback"></span>');
          feedback = form.querySelector('.reg-feedback');
          feedback.textContent = message;

          if (klass) {
            feedback.classList.add(klass);
          }
        },
        clearRegistrationForm: function clearRegistrationForm() {
          var form = this.el.querySelector('form');
          form.innerHTML = '';
          this.model.set('registration_form_rendered', false);
          return form;
        },
        showSpinner: function showSpinner() {
          var form = this.el.querySelector('form');
          form.innerHTML = tpl_spinner();
          this.model.set('registration_form_rendered', false);
          return this;
        },
        onConnectStatusChanged: function onConnectStatusChanged(status_code) {
          /* Callback function called by Strophe whenever the
           * connection status changes.
           *
           * Passed to Strophe specifically during a registration
           * attempt.
           *
           * Parameters:
           *      (Integer) status_code - The Stroph.Status status code
           */
          _converse.log('converse-register: onConnectStatusChanged');

          if (_.includes([Strophe.Status.DISCONNECTED, Strophe.Status.CONNFAIL, Strophe.Status.REGIFAIL, Strophe.Status.NOTACCEPTABLE, Strophe.Status.CONFLICT], status_code)) {
            _converse.log("Problem during registration: Strophe.Status is ".concat(_converse.CONNECTION_STATUS[status_code]), Strophe.LogLevel.ERROR);

            this.abortRegistration();
          } else if (status_code === Strophe.Status.REGISTERED) {
            _converse.log("Registered successfully.");

            _converse.connection.reset();

            this.showSpinner();

            if (_.includes(["converse/login", "converse/register"], Backbone.history.getFragment())) {
              _converse.router.navigate('', {
                'replace': true
              });
            }

            if (this.fields.password && this.fields.username) {
              // automatically log the user in
              _converse.connection.connect(this.fields.username.toLowerCase() + '@' + this.domain.toLowerCase(), this.fields.password, _converse.onConnectStatusChanged);

              this.giveFeedback(__('Now logging you in'), 'info');
            } else {
              _converse.chatboxviews.get('controlbox').renderLoginPanel();

              _converse.giveFeedback(__('Registered successfully'));
            }

            this.reset();
          }
        },
        renderLegacyRegistrationForm: function renderLegacyRegistrationForm(form) {
          var _this2 = this;

          _.each(_.keys(this.fields), function (key) {
            if (key === "username") {
              form.insertAdjacentHTML('beforeend', tpl_form_username({
                'domain': " @".concat(_this2.domain),
                'name': key,
                'type': "text",
                'label': key,
                'value': '',
                'required': true
              }));
            } else {
              form.insertAdjacentHTML('beforeend', tpl_form_input({
                'label': key,
                'name': key,
                'placeholder': key,
                'required': true,
                'type': key === 'password' || key === 'email' ? key : "text",
                'value': ''
              }));
            }
          }); // Show urls


          _.each(this.urls, function (url) {
            form.insertAdjacentHTML('afterend', '<a target="blank" rel="noopener" href="' + url + '">' + url + '</a>');
          });
        },
        renderRegistrationForm: function renderRegistrationForm(stanza) {
          var _this3 = this;

          /* Renders the registration form based on the XForm fields
           * received from the XMPP server.
           *
           * Parameters:
           *      (XMLElement) stanza - The IQ stanza received from the XMPP server.
           */
          var form = this.el.querySelector('form');
          form.innerHTML = tpl_registration_form({
            '__': _converse.__,
            'domain': this.domain,
            'title': this.title,
            'instructions': this.instructions,
            'registration_domain': _converse.registration_domain
          });
          var buttons = form.querySelector('fieldset.buttons');

          if (this.form_type === 'xform') {
            _.each(stanza.querySelectorAll('field'), function (field) {
              buttons.insertAdjacentHTML('beforebegin', utils.xForm2webForm(field, stanza, _this3.domain));
            });
          } else {
            this.renderLegacyRegistrationForm(form);
          }

          if (!this.fields) {
            form.querySelector('.button-primary').classList.add('hidden');
          }

          form.classList.remove('hidden');
          this.model.set('registration_form_rendered', true);
        },
        showValidationError: function showValidationError(message) {
          var form = this.el.querySelector('form');
          var flash = form.querySelector('.form-errors');

          if (_.isNull(flash)) {
            flash = '<div class="form-errors hidden"></div>';
            var instructions = form.querySelector('p.instructions');

            if (_.isNull(instructions)) {
              form.insertAdjacentHTML('afterbegin', flash);
            } else {
              instructions.insertAdjacentHTML('afterend', flash);
            }

            flash = form.querySelector('.form-errors');
          } else {
            flash.innerHTML = '';
          }

          flash.insertAdjacentHTML('beforeend', '<p class="form-help error">' + message + '</p>');
          flash.classList.remove('hidden');
        },
        reportErrors: function reportErrors(stanza) {
          var _this4 = this;

          /* Report back to the user any error messages received from the
           * XMPP server after attempted registration.
           *
           * Parameters:
           *      (XMLElement) stanza - The IQ stanza received from the
           *      XMPP server.
           */
          var errors = stanza.querySelectorAll('error');

          _.each(errors, function (error) {
            _this4.showValidationError(error.textContent);
          });

          if (!errors.length) {
            var message = __('The provider rejected your registration attempt. ' + 'Please check the values you entered for correctness.');

            this.showValidationError(message);
          }
        },
        renderProviderChoiceForm: function renderProviderChoiceForm(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          _converse.connection._proto._abortAllRequests();

          _converse.connection.reset();

          this.render();
        },
        abortRegistration: function abortRegistration() {
          _converse.connection._proto._abortAllRequests();

          _converse.connection.reset();

          if (this.model.get('registration_form_rendered')) {
            if (_converse.registration_domain && this.model.get('registration_form_rendered')) {
              this.fetchRegistrationForm(_converse.registration_domain);
            }
          } else {
            this.render();
          }
        },
        submitRegistrationForm: function submitRegistrationForm(form) {
          /* Handler, when the user submits the registration form.
           * Provides form error feedback or starts the registration
           * process.
           *
           * Parameters:
           *      (HTMLElement) form - The HTML form that was submitted
           */
          var has_empty_inputs = _.reduce(this.el.querySelectorAll('input.required'), function (result, input) {
            if (input.value === '') {
              input.classList.add('error');
              return result + 1;
            }

            return result;
          }, 0);

          if (has_empty_inputs) {
            return;
          }

          var inputs = sizzle(':input:not([type=button]):not([type=submit])', form),
              iq = $iq({
            'type': 'set',
            'id': _converse.connection.getUniqueId()
          }).c("query", {
            xmlns: Strophe.NS.REGISTER
          });

          if (this.form_type === 'xform') {
            iq.c("x", {
              xmlns: Strophe.NS.XFORM,
              type: 'submit'
            });

            _.each(inputs, function (input) {
              iq.cnode(utils.webForm2xForm(input)).up();
            });
          } else {
            _.each(inputs, function (input) {
              iq.c(input.getAttribute('name'), {}, input.value);
            });
          }

          _converse.connection._addSysHandler(this._onRegisterIQ.bind(this), null, "iq", null, null);

          _converse.connection.send(iq);

          this.setFields(iq.tree());
        },
        setFields: function setFields(stanza) {
          /* Stores the values that will be sent to the XMPP server
           * during attempted registration.
           *
           * Parameters:
           *      (XMLElement) stanza - the IQ stanza that will be sent to the XMPP server.
           */
          var query = stanza.querySelector('query');
          var xform = sizzle("x[xmlns=\"".concat(Strophe.NS.XFORM, "\"]"), query);

          if (xform.length > 0) {
            this._setFieldsFromXForm(xform.pop());
          } else {
            this._setFieldsFromLegacy(query);
          }
        },
        _setFieldsFromLegacy: function _setFieldsFromLegacy(query) {
          var _this5 = this;

          _.each(query.children, function (field) {
            if (field.tagName.toLowerCase() === 'instructions') {
              _this5.instructions = Strophe.getText(field);
              return;
            } else if (field.tagName.toLowerCase() === 'x') {
              if (field.getAttribute('xmlns') === 'jabber:x:oob') {
                _this5.urls.concat(_.map(field.querySelectorAll('url'), 'textContent'));
              }

              return;
            }

            _this5.fields[field.tagName.toLowerCase()] = Strophe.getText(field);
          });

          this.form_type = 'legacy';
        },
        _setFieldsFromXForm: function _setFieldsFromXForm(xform) {
          var _this6 = this;

          this.title = _.get(xform.querySelector('title'), 'textContent');
          this.instructions = _.get(xform.querySelector('instructions'), 'textContent');

          _.each(xform.querySelectorAll('field'), function (field) {
            var _var = field.getAttribute('var');

            if (_var) {
              _this6.fields[_var.toLowerCase()] = _.get(field.querySelector('value'), 'textContent', '');
            } else {
              // TODO: other option seems to be type="fixed"
              _converse.log("Found field we couldn't parse", Strophe.LogLevel.WARN);
            }
          });

          this.form_type = 'xform';
        },
        _onRegisterIQ: function _onRegisterIQ(stanza) {
          /* Callback method that gets called when a return IQ stanza
           * is received from the XMPP server, after attempting to
           * register a new user.
           *
           * Parameters:
           *      (XMLElement) stanza - The IQ stanza.
           */
          if (stanza.getAttribute("type") === "error") {
            _converse.log("Registration failed.", Strophe.LogLevel.ERROR);

            this.reportErrors(stanza);
            var error = stanza.getElementsByTagName("error");

            if (error.length !== 1) {
              _converse.connection._changeConnectStatus(Strophe.Status.REGIFAIL, "unknown");

              return false;
            }

            error = error[0].firstChild.tagName.toLowerCase();

            if (error === 'conflict') {
              _converse.connection._changeConnectStatus(Strophe.Status.CONFLICT, error);
            } else if (error === 'not-acceptable') {
              _converse.connection._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error);
            } else {
              _converse.connection._changeConnectStatus(Strophe.Status.REGIFAIL, error);
            }
          } else {
            _converse.connection._changeConnectStatus(Strophe.Status.REGISTERED, null);
          }

          return false;
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-roomslist.js":
/*!***********************************!*\
  !*** ./src/converse-roomslist.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */

/* This is a non-core Converse.js plugin which shows a list of currently open
 * rooms in the "Rooms Panel" of the ControlBox.
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-muc */ "./src/converse-muc.js"), __webpack_require__(/*! templates/rooms_list.html */ "./src/templates/rooms_list.html"), __webpack_require__(/*! templates/rooms_list_item.html */ "./src/templates/rooms_list_item.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, muc, tpl_rooms_list, tpl_rooms_list_item) {
  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      b64_sha1 = _converse$env.b64_sha1,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._;
  var u = converse.env.utils;
  converse.plugins.add('converse-roomslist', {
    /* Optional dependencies are other plugins which might be
     * overridden or relied upon, and therefore need to be loaded before
     * this plugin. They are called "optional" because they might not be
     * available, in which case any overrides applicable to them will be
     * ignored.
     *
     * It's possible however to make optional dependencies non-optional.
     * If the setting "strict_plugin_dependencies" is set to true,
     * an error will be raised if the plugin is not found.
     *
     * NB: These plugins need to have already been loaded via require.js.
     */
    dependencies: ["converse-singleton", "converse-controlbox", "converse-muc", "converse-bookmarks"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;
      _converse.OpenRooms = Backbone.Collection.extend({
        comparator: function comparator(room) {
          if (room.get('bookmarked')) {
            var bookmark = _.head(_converse.bookmarksview.model.where({
              'jid': room.get('jid')
            }));

            return bookmark.get('name');
          } else {
            return room.get('name');
          }
        },
        initialize: function initialize() {
          _converse.chatboxes.on('add', this.onChatBoxAdded, this);

          _converse.chatboxes.on('change:hidden', this.onChatBoxChanged, this);

          _converse.chatboxes.on('change:bookmarked', this.onChatBoxChanged, this);

          _converse.chatboxes.on('change:name', this.onChatBoxChanged, this);

          _converse.chatboxes.on('change:num_unread', this.onChatBoxChanged, this);

          _converse.chatboxes.on('change:num_unread_general', this.onChatBoxChanged, this);

          _converse.chatboxes.on('remove', this.onChatBoxRemoved, this);

          this.reset(_.map(_converse.chatboxes.where({
            'type': 'chatroom'
          }), 'attributes'));
        },
        onChatBoxAdded: function onChatBoxAdded(item) {
          if (item.get('type') === 'chatroom') {
            this.create(item.attributes);
          }
        },
        onChatBoxChanged: function onChatBoxChanged(item) {
          if (item.get('type') === 'chatroom') {
            var room = this.get(item.get('jid'));

            if (!_.isNil(room)) {
              room.set(item.attributes);
            }
          }
        },
        onChatBoxRemoved: function onChatBoxRemoved(item) {
          if (item.get('type') === 'chatroom') {
            var room = this.get(item.get('jid'));
            this.remove(room);
          }
        }
      });
      _converse.RoomsList = Backbone.Model.extend({
        defaults: {
          "toggle-state": _converse.OPENED
        }
      });
      _converse.RoomsListElementView = Backbone.VDOMView.extend({
        events: {
          'click .room-info': 'showRoomDetailsModal'
        },
        initialize: function initialize() {
          this.model.on('destroy', this.remove, this);
          this.model.on('remove', this.remove, this);
          this.model.on('change:bookmarked', this.render, this);
          this.model.on('change:hidden', this.render, this);
          this.model.on('change:name', this.render, this);
          this.model.on('change:num_unread', this.render, this);
          this.model.on('change:num_unread_general', this.render, this);
        },
        toHTML: function toHTML() {
          return tpl_rooms_list_item(_.extend(this.model.toJSON(), {
            // XXX: By the time this renders, the _converse.bookmarks
            // collection should already exist if bookmarks are
            // supported by the XMPP server. So we can use it
            // as a check for support (other ways of checking are async).
            'allow_bookmarks': _converse.allow_bookmarks && _converse.bookmarks,
            'currently_open': _converse.isSingleton() && !this.model.get('hidden'),
            'info_leave_room': __('Leave this groupchat'),
            'info_remove_bookmark': __('Unbookmark this groupchat'),
            'info_add_bookmark': __('Bookmark this groupchat'),
            'info_title': __('Show more information on this groupchat'),
            'name': this.getRoomsListElementName(),
            'open_title': __('Click to open this groupchat')
          }));
        },
        showRoomDetailsModal: function showRoomDetailsModal(ev) {
          var room = _converse.chatboxes.get(this.model.get('jid'));

          ev.preventDefault();

          if (_.isUndefined(room.room_details_modal)) {
            room.room_details_modal = new _converse.RoomDetailsModal({
              'model': room
            });
          }

          room.room_details_modal.show(ev);
        },
        getRoomsListElementName: function getRoomsListElementName() {
          if (this.model.get('bookmarked') && _converse.bookmarksview) {
            var bookmark = _.head(_converse.bookmarksview.model.where({
              'jid': this.model.get('jid')
            }));

            return bookmark.get('name');
          } else {
            return this.model.get('name');
          }
        }
      });
      _converse.RoomsListView = Backbone.OrderedListView.extend({
        tagName: 'div',
        className: 'open-rooms-list list-container rooms-list-container',
        events: {
          'click .add-bookmark': 'addBookmark',
          'click .close-room': 'closeRoom',
          'click .list-toggle': 'toggleRoomsList',
          'click .remove-bookmark': 'removeBookmark',
          'click .open-room': 'openRoom'
        },
        listSelector: '.rooms-list',
        ItemView: _converse.RoomsListElementView,
        subviewIndex: 'jid',
        initialize: function initialize() {
          Backbone.OrderedListView.prototype.initialize.apply(this, arguments);
          this.model.on('add', this.showOrHide, this);
          this.model.on('remove', this.showOrHide, this);

          var storage = _converse.config.get('storage'),
              id = b64_sha1("converse.roomslist".concat(_converse.bare_jid));

          this.list_model = new _converse.RoomsList({
            'id': id
          });
          this.list_model.browserStorage = new Backbone.BrowserStorage[storage](id);
          this.list_model.fetch();
          this.render();
          this.sortAndPositionAllItems();
        },
        render: function render() {
          this.el.innerHTML = tpl_rooms_list({
            'toggle_state': this.list_model.get('toggle-state'),
            'desc_rooms': __('Click to toggle the list of open groupchats'),
            'label_rooms': __('Open Groupchats'),
            '_converse': _converse
          });

          if (this.list_model.get('toggle-state') !== _converse.OPENED) {
            this.el.querySelector('.open-rooms-list').classList.add('collapsed');
          }

          this.showOrHide();
          this.insertIntoControlBox();
          return this;
        },
        insertIntoControlBox: function insertIntoControlBox() {
          var controlboxview = _converse.chatboxviews.get('controlbox');

          if (!_.isUndefined(controlboxview) && !u.rootContains(_converse.root, this.el)) {
            var el = controlboxview.el.querySelector('.open-rooms-list');

            if (!_.isNull(el)) {
              el.parentNode.replaceChild(this.el, el);
            }
          }
        },
        hide: function hide() {
          u.hideElement(this.el);
        },
        show: function show() {
          u.showElement(this.el);
        },
        openRoom: function openRoom(ev) {
          ev.preventDefault();
          var name = ev.target.textContent;
          var jid = ev.target.getAttribute('data-room-jid');
          var data = {
            'name': name || Strophe.unescapeNode(Strophe.getNodeFromJid(jid)) || jid
          };

          _converse.api.rooms.open(jid, data);
        },
        closeRoom: function closeRoom(ev) {
          ev.preventDefault();
          var name = ev.target.getAttribute('data-room-name');
          var jid = ev.target.getAttribute('data-room-jid');

          if (confirm(__("Are you sure you want to leave the groupchat %1$s?", name))) {
            // TODO: replace with API call
            _converse.chatboxviews.get(jid).close();
          }
        },
        showOrHide: function showOrHide(item) {
          if (!this.model.models.length) {
            u.hideElement(this.el);
          } else {
            u.showElement(this.el);
          }
        },
        removeBookmark: _converse.removeBookmarkViaEvent,
        addBookmark: _converse.addBookmarkViaEvent,
        toggleRoomsList: function toggleRoomsList(ev) {
          var _this = this;

          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var icon_el = ev.target.querySelector('.fa');

          if (icon_el.classList.contains("fa-caret-down")) {
            u.slideIn(this.el.querySelector('.open-rooms-list')).then(function () {
              _this.list_model.save({
                'toggle-state': _converse.CLOSED
              });

              icon_el.classList.remove("fa-caret-down");
              icon_el.classList.add("fa-caret-right");
            });
          } else {
            u.slideOut(this.el.querySelector('.open-rooms-list')).then(function () {
              _this.list_model.save({
                'toggle-state': _converse.OPENED
              });

              icon_el.classList.remove("fa-caret-right");
              icon_el.classList.add("fa-caret-down");
            });
          }
        }
      });

      var initRoomsListView = function initRoomsListView() {
        var storage = _converse.config.get('storage'),
            id = b64_sha1("converse.open-rooms-{_converse.bare_jid}"),
            model = new _converse.OpenRooms();

        model.browserStorage = new Backbone.BrowserStorage[storage](id);
        _converse.rooms_list_view = new _converse.RoomsListView({
          'model': model
        });
      };

      if (_converse.allow_bookmarks) {
        u.onMultipleEvents([{
          'object': _converse,
          'event': 'chatBoxesFetched'
        }, {
          'object': _converse,
          'event': 'roomsPanelRendered'
        }, {
          'object': _converse,
          'event': 'bookmarksInitialized'
        }], initRoomsListView);
      } else {
        u.onMultipleEvents([{
          'object': _converse,
          'event': 'chatBoxesFetched'
        }, {
          'object': _converse,
          'event': 'roomsPanelRendered'
        }], initRoomsListView);
      }

      _converse.api.listen.on('reconnected', initRoomsListView);
    }
  });
});

/***/ }),

/***/ "./src/converse-roster.js":
/*!********************************!*\
  !*** ./src/converse-roster.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      $pres = _converse$env.$pres,
      b64_sha1 = _converse$env.b64_sha1,
      moment = _converse$env.moment,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._;
  var u = converse.env.utils;
  converse.plugins.add('converse-roster', {
    dependencies: ["converse-vcard"],
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.settings.update({
        'allow_contact_requests': true,
        'auto_subscribe': false,
        'synchronize_availability': true
      });

      _converse.api.promises.add(['cachedRoster', 'roster', 'rosterContactsFetched', 'rosterGroupsFetched', 'rosterInitialized']);

      _converse.registerPresenceHandler = function () {
        _converse.unregisterPresenceHandler();

        _converse.presence_ref = _converse.connection.addHandler(function (presence) {
          _converse.roster.presenceHandler(presence);

          return true;
        }, null, 'presence', null);
      };

      _converse.initRoster = function () {
        /* Initialize the Bakcbone collections that represent the contats
         * roster and the roster groups.
         */
        var storage = _converse.config.get('storage');

        _converse.roster = new _converse.RosterContacts();
        _converse.roster.browserStorage = new Backbone.BrowserStorage[storage](b64_sha1("converse.contacts-".concat(_converse.bare_jid)));
        _converse.roster.data = new Backbone.Model();
        var id = b64_sha1("converse-roster-model-".concat(_converse.bare_jid));
        _converse.roster.data.id = id;
        _converse.roster.data.browserStorage = new Backbone.BrowserStorage[storage](id);

        _converse.roster.data.fetch();

        _converse.rostergroups = new _converse.RosterGroups();
        _converse.rostergroups.browserStorage = new Backbone.BrowserStorage[storage](b64_sha1("converse.roster.groups".concat(_converse.bare_jid)));

        _converse.emit('rosterInitialized');
      };

      _converse.populateRoster = function () {
        var ignore_cache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        /* Fetch all the roster groups, and then the roster contacts.
         * Emit an event after fetching is done in each case.
         *
         * Parameters:
         *    (Bool) ignore_cache - If set to to true, the local cache
         *      will be ignored it's guaranteed that the XMPP server
         *      will be queried for the roster.
         */
        if (ignore_cache) {
          _converse.send_initial_presence = true;

          _converse.roster.fetchFromServer().then(function () {
            _converse.emit('rosterContactsFetched');

            _converse.sendInitialPresence();
          }).catch(function (reason) {
            _converse.log(reason, Strophe.LogLevel.ERROR);

            _converse.sendInitialPresence();
          });
        } else {
          _converse.rostergroups.fetchRosterGroups().then(function () {
            _converse.emit('rosterGroupsFetched');

            return _converse.roster.fetchRosterContacts();
          }).then(function () {
            _converse.emit('rosterContactsFetched');

            _converse.sendInitialPresence();
          }).catch(function (reason) {
            _converse.log(reason, Strophe.LogLevel.ERROR);

            _converse.sendInitialPresence();
          });
        }
      };

      _converse.Presence = Backbone.Model.extend({
        defaults: function defaults() {
          return {
            'show': 'offline',
            'resources': {}
          };
        },
        getHighestPriorityResource: function getHighestPriorityResource() {
          /* Return the resource with the highest priority.
           *
           * If multiple resources have the same priority, take the
           * latest one.
           */
          var resources = this.get('resources');

          if (_.isObject(resources) && _.size(resources)) {
            var val = _.flow(_.values, _.partial(_.sortBy, _, ['priority', 'timestamp']), _.reverse)(resources)[0];

            if (!_.isUndefined(val)) {
              return val;
            }
          }
        },
        addResource: function addResource(presence) {
          /* Adds a new resource and it's associated attributes as taken
           * from the passed in presence stanza.
           *
           * Also updates the presence if the resource has higher priority (and is newer).
           */
          var jid = presence.getAttribute('from'),
              show = _.propertyOf(presence.querySelector('show'))('textContent') || 'online',
              resource = Strophe.getResourceFromJid(jid),
              delay = sizzle("delay[xmlns=\"".concat(Strophe.NS.DELAY, "\"]"), presence).pop(),
              timestamp = _.isNil(delay) ? moment().format() : moment(delay.getAttribute('stamp')).format();
          var priority = _.propertyOf(presence.querySelector('priority'))('textContent') || 0;
          priority = _.isNaN(parseInt(priority, 10)) ? 0 : parseInt(priority, 10);
          var resources = _.isObject(this.get('resources')) ? this.get('resources') : {};
          resources[resource] = {
            'name': resource,
            'priority': priority,
            'show': show,
            'timestamp': timestamp
          };
          var changed = {
            'resources': resources
          };
          var hpr = this.getHighestPriorityResource();

          if (priority == hpr.priority && timestamp == hpr.timestamp) {
            // Only set the "global" presence if this is the newest resource
            // with the highest priority
            changed.show = show;
          }

          this.save(changed);
          return resources;
        },
        removeResource: function removeResource(resource) {
          /* Remove the passed in resource from the resources map.
           *
           * Also redetermines the presence given that there's one less
           * resource.
           */
          var resources = this.get('resources');

          if (!_.isObject(resources)) {
            resources = {};
          } else {
            delete resources[resource];
          }

          this.save({
            'resources': resources,
            'show': _.propertyOf(this.getHighestPriorityResource())('show') || 'offline'
          });
        }
      });
      _converse.Presences = Backbone.Collection.extend({
        model: _converse.Presence
      });
      _converse.ModelWithVCardAndPresence = Backbone.Model.extend({
        initialize: function initialize() {
          this.setVCard();
          this.setPresence();
        },
        setVCard: function setVCard() {
          var jid = this.get('jid');
          this.vcard = _converse.vcards.findWhere({
            'jid': jid
          }) || _converse.vcards.create({
            'jid': jid
          });
        },
        setPresence: function setPresence() {
          var jid = this.get('jid');
          this.presence = _converse.presences.findWhere({
            'jid': jid
          }) || _converse.presences.create({
            'jid': jid
          });
        }
      });
      _converse.RosterContact = _converse.ModelWithVCardAndPresence.extend({
        defaults: {
          'chat_state': undefined,
          'image': _converse.DEFAULT_IMAGE,
          'image_type': _converse.DEFAULT_IMAGE_TYPE,
          'num_unread': 0,
          'status': ''
        },
        initialize: function initialize(attributes) {
          var _this = this;

          _converse.ModelWithVCardAndPresence.prototype.initialize.apply(this, arguments);

          var jid = attributes.jid,
              bare_jid = Strophe.getBareJidFromJid(jid).toLowerCase(),
              resource = Strophe.getResourceFromJid(jid);
          attributes.jid = bare_jid;
          this.set(_.assignIn({
            'groups': [],
            'id': bare_jid,
            'jid': bare_jid,
            'user_id': Strophe.getNodeFromJid(jid)
          }, attributes));
          this.setChatBox();
          this.presence.on('change:show', function () {
            return _converse.emit('contactPresenceChanged', _this);
          });
          this.presence.on('change:show', function () {
            return _this.trigger('presenceChanged');
          });
        },
        setChatBox: function setChatBox() {
          var chatbox = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          chatbox = chatbox || _converse.chatboxes.get(this.get('jid'));

          if (chatbox) {
            this.chatbox = chatbox;
            this.chatbox.on('change:hidden', this.render, this);
          }
        },
        getDisplayName: function getDisplayName() {
          return this.get('nickname') || this.vcard.get('nickname') || this.vcard.get('fullname') || this.get('jid');
        },
        getFullname: function getFullname() {
          return this.vcard.get('fullname');
        },
        subscribe: function subscribe(message) {
          /* Send a presence subscription request to this roster contact
          *
          * Parameters:
          *    (String) message - An optional message to explain the
          *      reason for the subscription request.
          */
          var pres = $pres({
            to: this.get('jid'),
            type: "subscribe"
          });

          if (message && message !== "") {
            pres.c("status").t(message).up();
          }

          var nick = _converse.xmppstatus.vcard.get('nickname') || _converse.xmppstatus.vcard.get('fullname');

          if (nick) {
            pres.c('nick', {
              'xmlns': Strophe.NS.NICK
            }).t(nick).up();
          }

          _converse.connection.send(pres);

          this.save('ask', "subscribe"); // ask === 'subscribe' Means we have asked to subscribe to them.

          return this;
        },
        ackSubscribe: function ackSubscribe() {
          /* Upon receiving the presence stanza of type "subscribed",
          * the user SHOULD acknowledge receipt of that subscription
          * state notification by sending a presence stanza of type
          * "subscribe" to the contact
          */
          _converse.connection.send($pres({
            'type': 'subscribe',
            'to': this.get('jid')
          }));
        },
        ackUnsubscribe: function ackUnsubscribe() {
          /* Upon receiving the presence stanza of type "unsubscribed",
          * the user SHOULD acknowledge receipt of that subscription state
          * notification by sending a presence stanza of type "unsubscribe"
          * this step lets the user's server know that it MUST no longer
          * send notification of the subscription state change to the user.
          *  Parameters:
          *    (String) jid - The Jabber ID of the user who is unsubscribing
          */
          _converse.connection.send($pres({
            'type': 'unsubscribe',
            'to': this.get('jid')
          }));

          this.removeFromRoster();
          this.destroy();
        },
        unauthorize: function unauthorize(message) {
          /* Unauthorize this contact's presence subscription
          * Parameters:
          *   (String) message - Optional message to send to the person being unauthorized
          */
          _converse.rejectPresenceSubscription(this.get('jid'), message);

          return this;
        },
        authorize: function authorize(message) {
          /* Authorize presence subscription
          * Parameters:
          *   (String) message - Optional message to send to the person being authorized
          */
          var pres = $pres({
            'to': this.get('jid'),
            'type': "subscribed"
          });

          if (message && message !== "") {
            pres.c("status").t(message);
          }

          _converse.connection.send(pres);

          return this;
        },
        removeFromRoster: function removeFromRoster(callback, errback) {
          /* Instruct the XMPP server to remove this contact from our roster
          * Parameters:
          *   (Function) callback
          */
          var iq = $iq({
            type: 'set'
          }).c('query', {
            xmlns: Strophe.NS.ROSTER
          }).c('item', {
            jid: this.get('jid'),
            subscription: "remove"
          });

          _converse.connection.sendIQ(iq, callback, errback);

          return this;
        }
      });
      _converse.RosterContacts = Backbone.Collection.extend({
        model: _converse.RosterContact,
        comparator: function comparator(contact1, contact2) {
          var status1 = contact1.presence.get('show') || 'offline';
          var status2 = contact2.presence.get('show') || 'offline';

          if (_converse.STATUS_WEIGHTS[status1] === _converse.STATUS_WEIGHTS[status2]) {
            var name1 = contact1.getDisplayName().toLowerCase();
            var name2 = contact2.getDisplayName().toLowerCase();
            return name1 < name2 ? -1 : name1 > name2 ? 1 : 0;
          } else {
            return _converse.STATUS_WEIGHTS[status1] < _converse.STATUS_WEIGHTS[status2] ? -1 : 1;
          }
        },
        onConnected: function onConnected() {
          /* Called as soon as the connection has been established
           * (either after initial login, or after reconnection).
           *
           * Use the opportunity to register stanza handlers.
           */
          this.registerRosterHandler();
          this.registerRosterXHandler();
        },
        registerRosterHandler: function registerRosterHandler() {
          /* Register a handler for roster IQ "set" stanzas, which update
           * roster contacts.
           */
          _converse.connection.addHandler(function (iq) {
            _converse.roster.onRosterPush(iq);

            return true;
          }, Strophe.NS.ROSTER, 'iq', "set");
        },
        registerRosterXHandler: function registerRosterXHandler() {
          /* Register a handler for RosterX message stanzas, which are
           * used to suggest roster contacts to a user.
           */
          var t = 0;

          _converse.connection.addHandler(function (msg) {
            window.setTimeout(function () {
              _converse.connection.flush();

              _converse.roster.subscribeToSuggestedItems.bind(_converse.roster)(msg);
            }, t);
            t += msg.querySelectorAll('item').length * 250;
            return true;
          }, Strophe.NS.ROSTERX, 'message', null);
        },
        fetchRosterContacts: function fetchRosterContacts() {
          var _this2 = this;

          /* Fetches the roster contacts, first by trying the
           * sessionStorage cache, and if that's empty, then by querying
           * the XMPP server.
           *
           * Returns a promise which resolves once the contacts have been
           * fetched.
           */
          var that = this;
          return new Promise(function (resolve, reject) {
            _this2.fetch({
              'add': true,
              'silent': true,
              success: function success(collection) {
                if (collection.length === 0 || that.rosterVersioningSupported() && !_converse.session.get('roster_fetched')) {
                  _converse.send_initial_presence = true;

                  _converse.roster.fetchFromServer().then(resolve).catch(reject);
                } else {
                  _converse.emit('cachedRoster', collection);

                  resolve();
                }
              }
            });
          });
        },
        subscribeToSuggestedItems: function subscribeToSuggestedItems(msg) {
          _.each(msg.querySelectorAll('item'), function (item) {
            if (item.getAttribute('action') === 'add') {
              _converse.roster.addAndSubscribe(item.getAttribute('jid'), _converse.xmppstatus.vcard.get('nickname') || _converse.xmppstatus.vcard.get('fullname'));
            }
          });

          return true;
        },
        isSelf: function isSelf(jid) {
          return u.isSameBareJID(jid, _converse.connection.jid);
        },
        addAndSubscribe: function addAndSubscribe(jid, name, groups, message, attributes) {
          /* Add a roster contact and then once we have confirmation from
           * the XMPP server we subscribe to that contact's presence updates.
           *  Parameters:
           *    (String) jid - The Jabber ID of the user being added and subscribed to.
           *    (String) name - The name of that user
           *    (Array of Strings) groups - Any roster groups the user might belong to
           *    (String) message - An optional message to explain the
           *      reason for the subscription request.
           *    (Object) attributes - Any additional attributes to be stored on the user's model.
           */
          var handler = function handler(contact) {
            if (_instanceof(contact, _converse.RosterContact)) {
              contact.subscribe(message);
            }
          };

          this.addContactToRoster(jid, name, groups, attributes).then(handler, handler);
        },
        sendContactAddIQ: function sendContactAddIQ(jid, name, groups, callback, errback) {
          /*  Send an IQ stanza to the XMPP server to add a new roster contact.
           *
           *  Parameters:
           *    (String) jid - The Jabber ID of the user being added
           *    (String) name - The name of that user
           *    (Array of Strings) groups - Any roster groups the user might belong to
           *    (Function) callback - A function to call once the IQ is returned
           *    (Function) errback - A function to call if an error occurred
           */
          name = _.isEmpty(name) ? jid : name;
          var iq = $iq({
            type: 'set'
          }).c('query', {
            xmlns: Strophe.NS.ROSTER
          }).c('item', {
            jid: jid,
            name: name
          });

          _.each(groups, function (group) {
            iq.c('group').t(group).up();
          });

          _converse.connection.sendIQ(iq, callback, errback);
        },
        addContactToRoster: function addContactToRoster(jid, name, groups, attributes) {
          var _this3 = this;

          /* Adds a RosterContact instance to _converse.roster and
           * registers the contact on the XMPP server.
           * Returns a promise which is resolved once the XMPP server has
           * responded.
           *
           *  Parameters:
           *    (String) jid - The Jabber ID of the user being added and subscribed to.
           *    (String) name - The name of that user
           *    (Array of Strings) groups - Any roster groups the user might belong to
           *    (Object) attributes - Any additional attributes to be stored on the user's model.
           */
          return new Promise(function (resolve, reject) {
            groups = groups || [];

            _this3.sendContactAddIQ(jid, name, groups, function () {
              var contact = _this3.create(_.assignIn({
                'ask': undefined,
                'nickname': name,
                groups: groups,
                jid: jid,
                'requesting': false,
                'subscription': 'none'
              }, attributes), {
                sort: false
              });

              resolve(contact);
            }, function (err) {
              alert(__('Sorry, there was an error while trying to add %1$s as a contact.', name));

              _converse.log(err, Strophe.LogLevel.ERROR);

              resolve(err);
            });
          });
        },
        subscribeBack: function subscribeBack(bare_jid, presence) {
          var contact = this.get(bare_jid);

          if (_instanceof(contact, _converse.RosterContact)) {
            contact.authorize().subscribe();
          } else {
            // Can happen when a subscription is retried or roster was deleted
            var handler = function handler(contact) {
              if (_instanceof(contact, _converse.RosterContact)) {
                contact.authorize().subscribe();
              }
            };

            var nickname = _.get(sizzle("nick[xmlns=\"".concat(Strophe.NS.NICK, "\"]"), presence).pop(), 'textContent', null);

            this.addContactToRoster(bare_jid, nickname, [], {
              'subscription': 'from'
            }).then(handler, handler);
          }
        },
        getNumOnlineContacts: function getNumOnlineContacts() {
          var ignored = ['offline', 'unavailable'];

          if (_converse.show_only_online_users) {
            ignored = _.union(ignored, ['dnd', 'xa', 'away']);
          }

          return _.sum(this.models.filter(function (model) {
            return !_.includes(ignored, model.presence.get('show'));
          }));
        },
        onRosterPush: function onRosterPush(iq) {
          /* Handle roster updates from the XMPP server.
           * See: https://xmpp.org/rfcs/rfc6121.html#roster-syntax-actions-push
           *
           * Parameters:
           *    (XMLElement) IQ - The IQ stanza received from the XMPP server.
           */
          var id = iq.getAttribute('id');
          var from = iq.getAttribute('from');

          if (from && from !== _converse.connection.jid) {
            // https://tools.ietf.org/html/rfc6121#page-15
            // 
            // A receiving client MUST ignore the stanza unless it has no 'from'
            // attribute (i.e., implicitly from the bare JID of the user's
            // account) or it has a 'from' attribute whose value matches the
            // user's bare JID <user@domainpart>.
            return;
          }

          _converse.connection.send($iq({
            type: 'result',
            id: id,
            from: _converse.connection.jid
          }));

          var query = sizzle("query[xmlns=\"".concat(Strophe.NS.ROSTER, "\"]"), iq).pop();
          this.data.save('version', query.getAttribute('ver'));
          var items = sizzle("item", query);

          if (items.length > 1) {
            _converse.log(iq, Strophe.LogLevel.ERROR);

            throw new Error('Roster push query may not contain more than one "item" element.');
          }

          if (items.length === 0) {
            _converse.log(iq, Strophe.LogLevel.WARN);

            _converse.log('Received a roster push stanza without an "item" element.', Strophe.LogLevel.WARN);

            return;
          }

          this.updateContact(items.pop());

          _converse.emit('rosterPush', iq);

          return;
        },
        rosterVersioningSupported: function rosterVersioningSupported() {
          return _converse.api.disco.stream.getFeature('ver', 'urn:xmpp:features:rosterver') && this.data.get('version');
        },
        fetchFromServer: function fetchFromServer() {
          var _this4 = this;

          /* Fetch the roster from the XMPP server */
          return new Promise(function (resolve, reject) {
            var iq = $iq({
              'type': 'get',
              'id': _converse.connection.getUniqueId('roster')
            }).c('query', {
              xmlns: Strophe.NS.ROSTER
            });

            if (_this4.rosterVersioningSupported()) {
              iq.attrs({
                'ver': _this4.data.get('version')
              });
            }

            var callback = _.flow(_this4.onReceivedFromServer.bind(_this4), resolve);

            var errback = function errback(iq) {
              var errmsg = "Error while trying to fetch roster from the server";

              _converse.log(errmsg, Strophe.LogLevel.ERROR);

              reject(new Error(errmsg));
            };

            return _converse.connection.sendIQ(iq, callback, errback);
          });
        },
        onReceivedFromServer: function onReceivedFromServer(iq) {
          var _this5 = this;

          /* An IQ stanza containing the roster has been received from
           * the XMPP server.
           */
          var query = sizzle("query[xmlns=\"".concat(Strophe.NS.ROSTER, "\"]"), iq).pop();

          if (query) {
            var items = sizzle("item", query);

            _.each(items, function (item) {
              return _this5.updateContact(item);
            });

            this.data.save('version', query.getAttribute('ver'));

            _converse.session.save('roster_fetched', true);
          }

          _converse.emit('roster', iq);
        },
        updateContact: function updateContact(item) {
          /* Update or create RosterContact models based on items
           * received in the IQ from the server.
           */
          var jid = item.getAttribute('jid');

          if (this.isSelf(jid)) {
            return;
          }

          var contact = this.get(jid),
              subscription = item.getAttribute("subscription"),
              ask = item.getAttribute("ask"),
              groups = _.map(item.getElementsByTagName('group'), Strophe.getText);

          if (!contact) {
            if (subscription === "none" && ask === null || subscription === "remove") {
              return; // We're lazy when adding contacts.
            }

            this.create({
              'ask': ask,
              'nickname': item.getAttribute("name"),
              'groups': groups,
              'jid': jid,
              'subscription': subscription
            }, {
              sort: false
            });
          } else {
            if (subscription === "remove") {
              return contact.destroy();
            } // We only find out about requesting contacts via the
            // presence handler, so if we receive a contact
            // here, we know they aren't requesting anymore.
            // see docs/DEVELOPER.rst


            contact.save({
              'subscription': subscription,
              'ask': ask,
              'requesting': null,
              'groups': groups
            });
          }
        },
        createRequestingContact: function createRequestingContact(presence) {
          var bare_jid = Strophe.getBareJidFromJid(presence.getAttribute('from')),
              nickname = _.get(sizzle("nick[xmlns=\"".concat(Strophe.NS.NICK, "\"]"), presence).pop(), 'textContent', null);

          var user_data = {
            'jid': bare_jid,
            'subscription': 'none',
            'ask': null,
            'requesting': true,
            'nickname': nickname
          };

          _converse.emit('contactRequest', this.create(user_data));
        },
        handleIncomingSubscription: function handleIncomingSubscription(presence) {
          var jid = presence.getAttribute('from'),
              bare_jid = Strophe.getBareJidFromJid(jid),
              contact = this.get(bare_jid);

          if (!_converse.allow_contact_requests) {
            _converse.rejectPresenceSubscription(jid, __("This client does not allow presence subscriptions"));
          }

          if (_converse.auto_subscribe) {
            if (!contact || contact.get('subscription') !== 'to') {
              this.subscribeBack(bare_jid, presence);
            } else {
              contact.authorize();
            }
          } else {
            if (contact) {
              if (contact.get('subscription') !== 'none') {
                contact.authorize();
              } else if (contact.get('ask') === "subscribe") {
                contact.authorize();
              }
            } else {
              this.createRequestingContact(presence);
            }
          }
        },
        handleOwnPresence: function handleOwnPresence(presence) {
          var jid = presence.getAttribute('from'),
              resource = Strophe.getResourceFromJid(jid),
              presence_type = presence.getAttribute('type');

          if (_converse.connection.jid !== jid && presence_type !== 'unavailable' && (_converse.synchronize_availability === true || _converse.synchronize_availability === resource)) {
            // Another resource has changed its status and
            // synchronize_availability option set to update,
            // we'll update ours as well.
            var show = _.propertyOf(presence.querySelector('show'))('textContent') || 'online';

            _converse.xmppstatus.save({
              'status': show
            });

            var status_message = _.propertyOf(presence.querySelector('status'))('textContent');

            if (status_message) {
              _converse.xmppstatus.save({
                'status_message': status_message
              });
            }
          }

          if (_converse.jid === jid && presence_type === 'unavailable') {
            // XXX: We've received an "unavailable" presence from our
            // own resource. Apparently this happens due to a
            // Prosody bug, whereby we send an IQ stanza to remove
            // a roster contact, and Prosody then sends
            // "unavailable" globally, instead of directed to the
            // particular user that's removed.
            //
            // Here is the bug report: https://prosody.im/issues/1121
            //
            // I'm not sure whether this might legitimately happen
            // in other cases.
            //
            // As a workaround for now we simply send our presence again,
            // otherwise we're treated as offline.
            _converse.xmppstatus.sendPresence();
          }
        },
        presenceHandler: function presenceHandler(presence) {
          var presence_type = presence.getAttribute('type');

          if (presence_type === 'error') {
            return true;
          }

          var jid = presence.getAttribute('from'),
              bare_jid = Strophe.getBareJidFromJid(jid);

          if (this.isSelf(bare_jid)) {
            return this.handleOwnPresence(presence);
          } else if (sizzle("query[xmlns=\"".concat(Strophe.NS.MUC, "\"]"), presence).length) {
            return; // Ignore MUC
          }

          var status_message = _.propertyOf(presence.querySelector('status'))('textContent'),
              contact = this.get(bare_jid);

          if (contact && status_message !== contact.get('status')) {
            contact.save({
              'status': status_message
            });
          }

          if (presence_type === 'subscribed' && contact) {
            contact.ackSubscribe();
          } else if (presence_type === 'unsubscribed' && contact) {
            contact.ackUnsubscribe();
          } else if (presence_type === 'unsubscribe') {
            return;
          } else if (presence_type === 'subscribe') {
            this.handleIncomingSubscription(presence);
          } else if (presence_type === 'unavailable' && contact) {
            var resource = Strophe.getResourceFromJid(jid);
            contact.presence.removeResource(resource);
          } else if (contact) {
            // presence_type is undefined
            contact.presence.addResource(presence);
          }
        }
      });
      _converse.RosterGroup = Backbone.Model.extend({
        initialize: function initialize(attributes) {
          this.set(_.assignIn({
            description: __('Click to hide these contacts'),
            state: _converse.OPENED
          }, attributes)); // Collection of contacts belonging to this group.

          this.contacts = new _converse.RosterContacts();
        }
      });
      _converse.RosterGroups = Backbone.Collection.extend({
        model: _converse.RosterGroup,
        fetchRosterGroups: function fetchRosterGroups() {
          var _this6 = this;

          /* Fetches all the roster groups from sessionStorage.
          *
          * Returns a promise which resolves once the groups have been
          * returned.
          */
          return new Promise(function (resolve, reject) {
            _this6.fetch({
              silent: true,
              // We need to first have all groups before
              // we can start positioning them, so we set
              // 'silent' to true.
              success: resolve
            });
          });
        }
      });

      _converse.unregisterPresenceHandler = function () {
        if (!_.isUndefined(_converse.presence_ref)) {
          _converse.connection.deleteHandler(_converse.presence_ref);

          delete _converse.presence_ref;
        }
      };
      /********** Event Handlers *************/


      function updateUnreadCounter(chatbox) {
        var contact = _converse.roster.findWhere({
          'jid': chatbox.get('jid')
        });

        if (!_.isUndefined(contact)) {
          contact.save({
            'num_unread': chatbox.get('num_unread')
          });
        }
      }

      _converse.api.listen.on('chatBoxesInitialized', function () {
        _converse.chatboxes.on('change:num_unread', updateUnreadCounter);
      });

      _converse.api.listen.on('beforeTearDown', _converse.unregisterPresenceHandler());

      _converse.api.listen.on('afterTearDown', function () {
        if (_converse.presences) {
          _converse.presences.off().reset(); // Remove presences

        }
      });

      _converse.api.listen.on('clearSession', function () {
        if (_converse.presences) {
          _converse.presences.browserStorage._clear();
        }
      });

      _converse.api.listen.on('statusInitialized', function (reconnecting) {
        if (!reconnecting) {
          _converse.presences = new _converse.Presences();
          _converse.presences.browserStorage = new Backbone.BrowserStorage.session(b64_sha1("converse.presences-".concat(_converse.bare_jid)));

          _converse.presences.fetch();
        }

        _converse.emit('presencesInitialized', reconnecting);
      });

      _converse.api.listen.on('presencesInitialized', function (reconnecting) {
        if (reconnecting) {
          // No need to recreate the roster, otherwise we lose our
          // cached data. However we still emit an event, to give
          // event handlers a chance to register views for the
          // roster and its groups, before we start populating.
          _converse.emit('rosterReadyAfterReconnection');
        } else {
          _converse.registerIntervalHandler();

          _converse.initRoster();
        }

        _converse.roster.onConnected();

        _converse.populateRoster(reconnecting);

        _converse.registerPresenceHandler();
      });
      /************************ API ************************/
      // API methods only available to plugins


      _.extend(_converse.api, {
        /**
         * @namespace _converse.api.contacts
         * @memberOf _converse.api
         */
        'contacts': {
          /**
           * This method is used to retrieve roster contacts.
           * 
           * @method _converse.api.contacts.get
           * @params {(string[]|string)} jid|jids The JID or JIDs of
           *      the contacts to be returned.
           * @returns {(RosterContact[]|RosterContact)} [Backbone.Model](http://backbonejs.org/#Model)
           *      (or an array of them) representing the contact.
           *
           * @example
           * // Fetch a single contact
           * _converse.api.listen.on('rosterContactsFetched', function () {
           *     const contact = _converse.api.contacts.get('buddy@example.com')
           *     // ...
           * });
           * 
           * @example
           * // To get multiple contacts, pass in an array of JIDs:
           * _converse.api.listen.on('rosterContactsFetched', function () {
           *     const contacts = _converse.api.contacts.get(
           *         ['buddy1@example.com', 'buddy2@example.com']
           *     )
           *     // ...
           * });
           * 
           * @example
           * // To return all contacts, simply call ``get`` without any parameters:
           * _converse.api.listen.on('rosterContactsFetched', function () {
           *     const contacts = _converse.api.contacts.get();
           *     // ...
           * });
           */
          'get': function get(jids) {
            var _getter = function _getter(jid) {
              return _converse.roster.get(Strophe.getBareJidFromJid(jid)) || null;
            };

            if (_.isUndefined(jids)) {
              jids = _converse.roster.pluck('jid');
            } else if (_.isString(jids)) {
              return _getter(jids);
            }

            return _.map(jids, _getter);
          },

          /**
           * Add a contact.
           * 
           * @method _converse.api.contacts.add
           * @param {string} jid The JID of the contact to be added
           * @param {string} [name] A custom name to show the user by
           *     in the roster.
           * @example
           *     _converse.api.contacts.add('buddy@example.com')
           * @example
           *     _converse.api.contacts.add('buddy@example.com', 'Buddy')
           */
          'add': function add(jid, name) {
            if (!_.isString(jid) || !_.includes(jid, '@')) {
              throw new TypeError('contacts.add: invalid jid');
            }

            _converse.roster.addAndSubscribe(jid, _.isEmpty(name) ? jid : name);
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse-rosterview.js":
/*!************************************!*\
  !*** ./src/converse-rosterview.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/add_contact_modal.html */ "./src/templates/add_contact_modal.html"), __webpack_require__(/*! templates/group_header.html */ "./src/templates/group_header.html"), __webpack_require__(/*! templates/pending_contact.html */ "./src/templates/pending_contact.html"), __webpack_require__(/*! templates/requesting_contact.html */ "./src/templates/requesting_contact.html"), __webpack_require__(/*! templates/roster.html */ "./src/templates/roster.html"), __webpack_require__(/*! templates/roster_filter.html */ "./src/templates/roster_filter.html"), __webpack_require__(/*! templates/roster_item.html */ "./src/templates/roster_item.html"), __webpack_require__(/*! templates/search_contact.html */ "./src/templates/search_contact.html"), __webpack_require__(/*! awesomplete */ "awesomplete"), __webpack_require__(/*! converse-chatboxes */ "./src/converse-chatboxes.js"), __webpack_require__(/*! converse-modal */ "./src/converse-modal.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_add_contact_modal, tpl_group_header, tpl_pending_contact, tpl_requesting_contact, tpl_roster, tpl_roster_filter, tpl_roster_item, tpl_search_contact, Awesomplete) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Strophe = _converse$env.Strophe,
      $iq = _converse$env.$iq,
      b64_sha1 = _converse$env.b64_sha1,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._;
  var u = converse.env.utils;
  converse.plugins.add('converse-rosterview', {
    dependencies: ["converse-roster", "converse-modal"],
    overrides: {
      // Overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // New functions which don't exist yet can also be added.
      afterReconnected: function afterReconnected() {
        this.__super__.afterReconnected.apply(this, arguments);
      },
      tearDown: function tearDown() {
        /* Remove the rosterview when tearing down. It gets created
         * anew when reconnecting or logging in.
         */
        this.__super__.tearDown.apply(this, arguments);

        if (!_.isUndefined(this.rosterview)) {
          this.rosterview.remove();
        }
      },
      RosterGroups: {
        comparator: function comparator() {
          // RosterGroupsComparator only gets set later (once i18n is
          // set up), so we need to wrap it in this nameless function.
          var _converse = this.__super__._converse;
          return _converse.RosterGroupsComparator.apply(this, arguments);
        }
      }
    },
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse,
          __ = _converse.__;

      _converse.api.settings.update({
        'allow_chat_pending_contacts': true,
        'allow_contact_removal': true,
        'hide_offline_users': false,
        'roster_groups': true,
        'show_only_online_users': false,
        'show_toolbar': true,
        'xhr_user_search_url': null
      });

      _converse.api.promises.add('rosterViewInitialized');

      var STATUSES = {
        'dnd': __('This contact is busy'),
        'online': __('This contact is online'),
        'offline': __('This contact is offline'),
        'unavailable': __('This contact is unavailable'),
        'xa': __('This contact is away for an extended period'),
        'away': __('This contact is away')
      };

      var LABEL_GROUPS = __('Groups');

      var HEADER_CURRENT_CONTACTS = __('My contacts');

      var HEADER_PENDING_CONTACTS = __('Pending contacts');

      var HEADER_REQUESTING_CONTACTS = __('Contact requests');

      var HEADER_UNGROUPED = __('Ungrouped');

      var HEADER_WEIGHTS = {};
      HEADER_WEIGHTS[HEADER_REQUESTING_CONTACTS] = 0;
      HEADER_WEIGHTS[HEADER_CURRENT_CONTACTS] = 1;
      HEADER_WEIGHTS[HEADER_UNGROUPED] = 2;
      HEADER_WEIGHTS[HEADER_PENDING_CONTACTS] = 3;

      _converse.RosterGroupsComparator = function (a, b) {
        /* Groups are sorted alphabetically, ignoring case.
         * However, Ungrouped, Requesting Contacts and Pending Contacts
         * appear last and in that order.
         */
        a = a.get('name');
        b = b.get('name');

        var special_groups = _.keys(HEADER_WEIGHTS);

        var a_is_special = _.includes(special_groups, a);

        var b_is_special = _.includes(special_groups, b);

        if (!a_is_special && !b_is_special) {
          return a.toLowerCase() < b.toLowerCase() ? -1 : a.toLowerCase() > b.toLowerCase() ? 1 : 0;
        } else if (a_is_special && b_is_special) {
          return HEADER_WEIGHTS[a] < HEADER_WEIGHTS[b] ? -1 : HEADER_WEIGHTS[a] > HEADER_WEIGHTS[b] ? 1 : 0;
        } else if (!a_is_special && b_is_special) {
          return b === HEADER_REQUESTING_CONTACTS ? 1 : -1;
        } else if (a_is_special && !b_is_special) {
          return a === HEADER_REQUESTING_CONTACTS ? -1 : 1;
        }
      };

      _converse.AddContactModal = _converse.BootstrapModal.extend({
        events: {
          'submit form': 'addContactFromForm'
        },
        initialize: function initialize() {
          _converse.BootstrapModal.prototype.initialize.apply(this, arguments);

          this.model.on('change', this.render, this);
        },
        toHTML: function toHTML() {
          var label_nickname = _converse.xhr_user_search_url ? __('Contact name') : __('Optional nickname');
          return tpl_add_contact_modal(_.extend(this.model.toJSON(), {
            '_converse': _converse,
            'heading_new_contact': __('Add a Contact'),
            'label_xmpp_address': __('XMPP Address'),
            'label_nickname': label_nickname,
            'contact_placeholder': __('name@example.org'),
            'label_add': __('Add'),
            'error_message': __('Please enter a valid XMPP address')
          }));
        },
        afterRender: function afterRender() {
          if (_converse.xhr_user_search_url && _.isString(_converse.xhr_user_search_url)) {
            this.initXHRAutoComplete(this.el);
          } else {
            this.initJIDAutoComplete(this.el);
          }

          var jid_input = this.el.querySelector('input[name="jid"]');
          this.el.addEventListener('shown.bs.modal', function () {
            jid_input.focus();
          }, false);
        },
        initJIDAutoComplete: function initJIDAutoComplete(root) {
          var jid_input = root.querySelector('input[name="jid"]');

          var list = _.uniq(_converse.roster.map(function (item) {
            return Strophe.getDomainFromJid(item.get('jid'));
          }));

          new Awesomplete(jid_input, {
            'list': list,
            'data': function data(text, input) {
              return input.slice(0, input.indexOf("@")) + "@" + text;
            },
            'filter': Awesomplete.FILTER_STARTSWITH
          });
        },
        initXHRAutoComplete: function initXHRAutoComplete(root) {
          var name_input = this.el.querySelector('input[name="name"]');
          var jid_input = this.el.querySelector('input[name="jid"]');
          var awesomplete = new Awesomplete(name_input, {
            'minChars': 1,
            'list': []
          });
          var xhr = new window.XMLHttpRequest(); // `open` must be called after `onload` for mock/testing purposes.

          xhr.onload = function () {
            if (xhr.responseText) {
              awesomplete.list = JSON.parse(xhr.responseText).map(function (i) {
                //eslint-disable-line arrow-body-style
                return {
                  'label': i.fullname || i.jid,
                  'value': i.jid
                };
              });
              awesomplete.evaluate();
            }
          };

          name_input.addEventListener('input', _.debounce(function () {
            xhr.open("GET", "".concat(_converse.xhr_user_search_url, "q=").concat(name_input.value), true);
            xhr.send();
          }, 300));
          this.el.addEventListener('awesomplete-selectcomplete', function (ev) {
            jid_input.value = ev.text.value;
            name_input.value = ev.text.label;
          });
        },
        addContactFromForm: function addContactFromForm(ev) {
          ev.preventDefault();
          var data = new FormData(ev.target),
              jid = data.get('jid'),
              name = data.get('name');

          if (!jid || _.compact(jid.split('@')).length < 2) {
            // XXX: we have to do this manually, instead of via
            // toHTML because Awesomplete messes things up and
            // confuses Snabbdom
            u.addClass('is-invalid', this.el.querySelector('input[name="jid"]'));
            u.addClass('d-block', this.el.querySelector('.invalid-feedback'));
          } else {
            ev.target.reset();

            _converse.roster.addAndSubscribe(jid, name);

            this.model.clear();
            this.modal.hide();
          }
        }
      });
      _converse.RosterFilter = Backbone.Model.extend({
        initialize: function initialize() {
          this.set({
            'filter_text': '',
            'filter_type': 'contacts',
            'chat_state': ''
          });
        }
      });
      _converse.RosterFilterView = Backbone.VDOMView.extend({
        tagName: 'form',
        className: 'roster-filter-form',
        events: {
          "keydown .roster-filter": "liveFilter",
          "submit form.roster-filter-form": "submitFilter",
          "click .clear-input": "clearFilter",
          "click .filter-by span": "changeTypeFilter",
          "change .state-type": "changeChatStateFilter"
        },
        initialize: function initialize() {
          this.model.on('change:filter_type', this.render, this);
          this.model.on('change:filter_text', this.render, this);
        },
        toHTML: function toHTML() {
          return tpl_roster_filter(_.extend(this.model.toJSON(), {
            visible: this.shouldBeVisible(),
            placeholder: __('Filter'),
            title_contact_filter: __('Filter by contact name'),
            title_group_filter: __('Filter by group name'),
            title_status_filter: __('Filter by status'),
            label_any: __('Any'),
            label_unread_messages: __('Unread'),
            label_online: __('Online'),
            label_chatty: __('Chatty'),
            label_busy: __('Busy'),
            label_away: __('Away'),
            label_xa: __('Extended Away'),
            label_offline: __('Offline')
          }));
        },
        changeChatStateFilter: function changeChatStateFilter(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          this.model.save({
            'chat_state': this.el.querySelector('.state-type').value
          });
        },
        changeTypeFilter: function changeTypeFilter(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var type = ev.target.dataset.type;

          if (type === 'state') {
            this.model.save({
              'filter_type': type,
              'chat_state': this.el.querySelector('.state-type').value
            });
          } else {
            this.model.save({
              'filter_type': type,
              'filter_text': this.el.querySelector('.roster-filter').value
            });
          }
        },
        liveFilter: _.debounce(function (ev) {
          this.model.save({
            'filter_text': this.el.querySelector('.roster-filter').value
          });
        }, 250),
        submitFilter: function submitFilter(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          this.liveFilter();
          this.render();
        },
        isActive: function isActive() {
          /* Returns true if the filter is enabled (i.e. if the user
           * has added values to the filter).
           */
          if (this.model.get('filter_type') === 'state' || this.model.get('filter_text')) {
            return true;
          }

          return false;
        },
        shouldBeVisible: function shouldBeVisible() {
          return _converse.roster.length >= 5 || this.isActive();
        },
        showOrHide: function showOrHide() {
          if (this.shouldBeVisible()) {
            this.show();
          } else {
            this.hide();
          }
        },
        show: function show() {
          if (u.isVisible(this.el)) {
            return this;
          }

          this.el.classList.add('fade-in');
          this.el.classList.remove('hidden');
          return this;
        },
        hide: function hide() {
          if (!u.isVisible(this.el)) {
            return this;
          }

          this.model.save({
            'filter_text': '',
            'chat_state': ''
          });
          this.el.classList.add('hidden');
          return this;
        },
        clearFilter: function clearFilter(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
            u.hideElement(this.el.querySelector('.clear-input'));
          }

          var roster_filter = this.el.querySelector('.roster-filter');
          roster_filter.value = '';
          this.model.save({
            'filter_text': ''
          });
        }
      });
      _converse.RosterContactView = Backbone.NativeView.extend({
        tagName: 'li',
        className: 'list-item d-flex hidden controlbox-padded',
        events: {
          "click .accept-xmpp-request": "acceptRequest",
          "click .decline-xmpp-request": "declineRequest",
          "click .open-chat": "openChat",
          "click .remove-xmpp-contact": "removeContact"
        },
        initialize: function initialize() {
          this.model.on("change", this.render, this);
          this.model.on("highlight", this.highlight, this);
          this.model.on("destroy", this.remove, this);
          this.model.on("open", this.openChat, this);
          this.model.on("remove", this.remove, this);
          this.model.presence.on("change:show", this.render, this);
          this.model.vcard.on('change:fullname', this.render, this);
        },
        render: function render() {
          var that = this;

          if (!this.mayBeShown()) {
            u.hideElement(this.el);
            return this;
          }

          var ask = this.model.get('ask'),
              show = this.model.presence.get('show'),
              requesting = this.model.get('requesting'),
              subscription = this.model.get('subscription');
          var classes_to_remove = ['current-xmpp-contact', 'pending-xmpp-contact', 'requesting-xmpp-contact'].concat(_.keys(STATUSES));

          _.each(classes_to_remove, function (cls) {
            if (_.includes(that.el.className, cls)) {
              that.el.classList.remove(cls);
            }
          });

          this.el.classList.add(show);
          this.el.setAttribute('data-status', show);
          this.highlight();

          if (_converse.isSingleton()) {
            var chatbox = _converse.chatboxes.get(this.model.get('jid'));

            if (chatbox) {
              if (chatbox.get('hidden')) {
                this.el.classList.remove('open');
              } else {
                this.el.classList.add('open');
              }
            }
          }

          if (ask === 'subscribe' || subscription === 'from') {
            /* ask === 'subscribe'
             *      Means we have asked to subscribe to them.
             *
             * subscription === 'from'
             *      They are subscribed to use, but not vice versa.
             *      We assume that there is a pending subscription
             *      from us to them (otherwise we're in a state not
             *      supported by converse.js).
             *
             *  So in both cases the user is a "pending" contact.
             */
            var display_name = this.model.getDisplayName();
            this.el.classList.add('pending-xmpp-contact');
            this.el.innerHTML = tpl_pending_contact(_.extend(this.model.toJSON(), {
              'display_name': display_name,
              'desc_remove': __('Click to remove %1$s as a contact', display_name),
              'allow_chat_pending_contacts': _converse.allow_chat_pending_contacts
            }));
          } else if (requesting === true) {
            var _display_name = this.model.getDisplayName();

            this.el.classList.add('requesting-xmpp-contact');
            this.el.innerHTML = tpl_requesting_contact(_.extend(this.model.toJSON(), {
              'display_name': _display_name,
              'desc_accept': __("Click to accept the contact request from %1$s", _display_name),
              'desc_decline': __("Click to decline the contact request from %1$s", _display_name),
              'allow_chat_pending_contacts': _converse.allow_chat_pending_contacts
            }));
          } else if (subscription === 'both' || subscription === 'to') {
            this.el.classList.add('current-xmpp-contact');
            this.el.classList.remove(_.without(['both', 'to'], subscription)[0]);
            this.el.classList.add(subscription);
            this.renderRosterItem(this.model);
          }

          return this;
        },
        highlight: function highlight() {
          /* If appropriate, highlight the contact (by adding the 'open' class).
           */
          if (_converse.isSingleton()) {
            var chatbox = _converse.chatboxes.get(this.model.get('jid'));

            if (chatbox) {
              if (chatbox.get('hidden')) {
                this.el.classList.remove('open');
              } else {
                this.el.classList.add('open');
              }
            }
          }
        },
        renderRosterItem: function renderRosterItem(item) {
          var status_icon = 'fa fa-times-circle';
          var show = item.presence.get('show') || 'offline';

          if (show === 'online') {
            status_icon = 'fa fa-circle';
          } else if (show === 'away') {
            status_icon = 'fa fa-dot-circle';
          } else if (show === 'xa') {
            status_icon = 'far fa-circle';
          } else if (show === 'dnd') {
            status_icon = 'fa fa-minus-circle';
          }

          var display_name = item.getDisplayName();
          this.el.innerHTML = tpl_roster_item(_.extend(item.toJSON(), {
            'display_name': display_name,
            'desc_status': STATUSES[show],
            'status_icon': status_icon,
            'desc_chat': __('Click to chat with %1$s (JID: %2$s)', display_name, item.get('jid')),
            'desc_remove': __('Click to remove %1$s as a contact', display_name),
            'allow_contact_removal': _converse.allow_contact_removal,
            'num_unread': item.get('num_unread') || 0
          }));
          return this;
        },
        mayBeShown: function mayBeShown() {
          /* Return a boolean indicating whether this contact should
           * generally be visible in the roster.
           *
           * It doesn't check for the more specific case of whether
           * the group it's in is collapsed.
           */
          var chatStatus = this.model.presence.get('show');

          if (_converse.show_only_online_users && chatStatus !== 'online' || _converse.hide_offline_users && chatStatus === 'offline') {
            // If pending or requesting, show
            if (this.model.get('ask') === 'subscribe' || this.model.get('subscription') === 'from' || this.model.get('requesting') === true) {
              return true;
            }

            return false;
          }

          return true;
        },
        openChat: function openChat(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var attrs = this.model.attributes;

          _converse.api.chats.open(attrs.jid, attrs);
        },
        removeContact: function removeContact(ev) {
          var _this = this;

          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          if (!_converse.allow_contact_removal) {
            return;
          }

          var result = confirm(__("Are you sure you want to remove this contact?"));

          if (result === true) {
            this.model.removeFromRoster(function (iq) {
              _this.model.destroy();

              _this.remove();
            }, function (err) {
              alert(__('Sorry, there was an error while trying to remove %1$s as a contact.', name));

              _converse.log(err, Strophe.LogLevel.ERROR);
            });
          }
        },
        acceptRequest: function acceptRequest(ev) {
          var _this2 = this;

          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          _converse.roster.sendContactAddIQ(this.model.get('jid'), this.model.getFullname(), [], function () {
            _this2.model.authorize().subscribe();
          });
        },
        declineRequest: function declineRequest(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var result = confirm(__("Are you sure you want to decline this contact request?"));

          if (result === true) {
            this.model.unauthorize().destroy();
          }

          return this;
        }
      });
      _converse.RosterGroupView = Backbone.OrderedListView.extend({
        tagName: 'div',
        className: 'roster-group hidden',
        events: {
          "click a.group-toggle": "toggle"
        },
        ItemView: _converse.RosterContactView,
        listItems: 'model.contacts',
        listSelector: '.roster-group-contacts',
        sortEvent: 'presenceChanged',
        initialize: function initialize() {
          Backbone.OrderedListView.prototype.initialize.apply(this, arguments);
          this.model.contacts.on("change:subscription", this.onContactSubscriptionChange, this);
          this.model.contacts.on("change:requesting", this.onContactRequestChange, this);
          this.model.contacts.on("remove", this.onRemove, this);

          _converse.roster.on('change:groups', this.onContactGroupChange, this); // This event gets triggered once *all* contacts (i.e. not
          // just this group's) have been fetched from browser
          // storage or the XMPP server and once they've been
          // assigned to their various groups.


          _converse.rosterview.on('rosterContactsFetchedAndProcessed', this.sortAndPositionAllItems.bind(this));
        },
        render: function render() {
          this.el.setAttribute('data-group', this.model.get('name'));
          this.el.innerHTML = tpl_group_header({
            'label_group': this.model.get('name'),
            'desc_group_toggle': this.model.get('description'),
            'toggle_state': this.model.get('state'),
            '_converse': _converse
          });
          this.contacts_el = this.el.querySelector('.roster-group-contacts');
          return this;
        },
        show: function show() {
          var _this3 = this;

          u.showElement(this.el);

          _.each(this.getAll(), function (contact_view) {
            if (contact_view.mayBeShown() && _this3.model.get('state') === _converse.OPENED) {
              u.showElement(contact_view.el);
            }
          });

          return this;
        },
        collapse: function collapse() {
          return u.slideIn(this.contacts_el);
        },
        filterOutContacts: function filterOutContacts() {
          var _this4 = this;

          var contacts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          /* Given a list of contacts, make sure they're filtered out
           * (aka hidden) and that all other contacts are visible.
           *
           * If all contacts are hidden, then also hide the group
           * title.
           */
          var shown = 0;
          var all_contact_views = this.getAll();

          _.each(this.model.contacts.models, function (contact) {
            var contact_view = _this4.get(contact.get('id'));

            if (_.includes(contacts, contact)) {
              u.hideElement(contact_view.el);
            } else if (contact_view.mayBeShown()) {
              u.showElement(contact_view.el);
              shown += 1;
            }
          });

          if (shown) {
            u.showElement(this.el);
          } else {
            u.hideElement(this.el);
          }
        },
        getFilterMatches: function getFilterMatches(q, type) {
          /* Given the filter query "q" and the filter type "type",
           * return a list of contacts that need to be filtered out.
           */
          if (q.length === 0) {
            return [];
          }

          var matches;
          q = q.toLowerCase();

          if (type === 'state') {
            if (this.model.get('name') === HEADER_REQUESTING_CONTACTS) {
              // When filtering by chat state, we still want to
              // show requesting contacts, even though they don't
              // have the state in question.
              matches = this.model.contacts.filter(function (contact) {
                return !_.includes(contact.presence.get('show'), q) && !contact.get('requesting');
              });
            } else if (q === 'unread_messages') {
              matches = this.model.contacts.filter({
                'num_unread': 0
              });
            } else {
              matches = this.model.contacts.filter(function (contact) {
                return !_.includes(contact.presence.get('show'), q);
              });
            }
          } else {
            matches = this.model.contacts.filter(function (contact) {
              return !_.includes(contact.getDisplayName().toLowerCase(), q.toLowerCase());
            });
          }

          return matches;
        },
        filter: function filter(q, type) {
          /* Filter the group's contacts based on the query "q".
           * 
           * If all contacts are filtered out (i.e. hidden), then the
           * group must be filtered out as well.
           */
          if (_.isNil(q)) {
            type = type || _converse.rosterview.filter_view.model.get('filter_type');

            if (type === 'state') {
              q = _converse.rosterview.filter_view.model.get('chat_state');
            } else {
              q = _converse.rosterview.filter_view.model.get('filter_text');
            }
          }

          this.filterOutContacts(this.getFilterMatches(q, type));
        },
        toggle: function toggle(ev) {
          if (ev && ev.preventDefault) {
            ev.preventDefault();
          }

          var icon_el = ev.target.querySelector('.fa');

          if (_.includes(icon_el.classList, "fa-caret-down")) {
            this.model.save({
              state: _converse.CLOSED
            });
            this.collapse().then(function () {
              icon_el.classList.remove("fa-caret-down");
              icon_el.classList.add("fa-caret-right");
            });
          } else {
            icon_el.classList.remove("fa-caret-right");
            icon_el.classList.add("fa-caret-down");
            this.model.save({
              state: _converse.OPENED
            });
            this.filter();
            u.showElement(this.el);
            u.slideOut(this.contacts_el);
          }
        },
        onContactGroupChange: function onContactGroupChange(contact) {
          var in_this_group = _.includes(contact.get('groups'), this.model.get('name'));

          var cid = contact.get('id');
          var in_this_overview = !this.get(cid);

          if (in_this_group && !in_this_overview) {
            this.items.trigger('add', contact);
          } else if (!in_this_group) {
            this.removeContact(contact);
          }
        },
        onContactSubscriptionChange: function onContactSubscriptionChange(contact) {
          if (this.model.get('name') === HEADER_PENDING_CONTACTS && contact.get('subscription') !== 'from') {
            this.removeContact(contact);
          }
        },
        onContactRequestChange: function onContactRequestChange(contact) {
          if (this.model.get('name') === HEADER_REQUESTING_CONTACTS && !contact.get('requesting')) {
            this.removeContact(contact);
          }
        },
        removeContact: function removeContact(contact) {
          // We suppress events, otherwise the remove event will
          // also cause the contact's view to be removed from the
          // "Pending Contacts" group.
          this.model.contacts.remove(contact, {
            'silent': true
          });
          this.onRemove(contact);
        },
        onRemove: function onRemove(contact) {
          this.remove(contact.get('jid'));

          if (this.model.contacts.length === 0) {
            this.remove();
          }
        }
      });
      _converse.RosterView = Backbone.OrderedListView.extend({
        tagName: 'div',
        id: 'converse-roster',
        className: 'controlbox-section',
        ItemView: _converse.RosterGroupView,
        listItems: 'model',
        listSelector: '.roster-contacts',
        sortEvent: null,
        // Groups are immutable, so they don't get re-sorted
        subviewIndex: 'name',
        events: {
          'click a.chatbox-btn.add-contact': 'showAddContactModal'
        },
        initialize: function initialize() {
          var _this5 = this;

          Backbone.OrderedListView.prototype.initialize.apply(this, arguments);

          _converse.roster.on("add", this.onContactAdded, this);

          _converse.roster.on('change:groups', this.onContactAdded, this);

          _converse.roster.on('change', this.onContactChange, this);

          _converse.roster.on("destroy", this.update, this);

          _converse.roster.on("remove", this.update, this);

          _converse.presences.on('change:show', function () {
            _this5.update();

            _this5.updateFilter();
          });

          this.model.on("reset", this.reset, this); // This event gets triggered once *all* contacts (i.e. not
          // just this group's) have been fetched from browser
          // storage or the XMPP server and once they've been
          // assigned to their various groups.

          _converse.on('rosterGroupsFetched', this.sortAndPositionAllItems.bind(this));

          _converse.on('rosterContactsFetched', function () {
            _converse.roster.each(function (contact) {
              return _this5.addRosterContact(contact, {
                'silent': true
              });
            });

            _this5.update();

            _this5.updateFilter();

            _this5.trigger('rosterContactsFetchedAndProcessed');
          });

          this.createRosterFilter();
        },
        render: function render() {
          this.el.innerHTML = tpl_roster({
            'heading_contacts': __('Contacts'),
            'title_add_contact': __('Add a contact')
          });
          var form = this.el.querySelector('.roster-filter-form');
          this.el.replaceChild(this.filter_view.render().el, form);
          this.roster_el = this.el.querySelector('.roster-contacts');
          return this;
        },
        showAddContactModal: function showAddContactModal(ev) {
          if (_.isUndefined(this.add_contact_modal)) {
            this.add_contact_modal = new _converse.AddContactModal({
              'model': new Backbone.Model()
            });
          }

          this.add_contact_modal.show(ev);
        },
        createRosterFilter: function createRosterFilter() {
          // Create a model on which we can store filter properties
          var model = new _converse.RosterFilter();
          model.id = b64_sha1("_converse.rosterfilter".concat(_converse.bare_jid));
          model.browserStorage = new Backbone.BrowserStorage.local(this.filter.id);
          this.filter_view = new _converse.RosterFilterView({
            'model': model
          });
          this.filter_view.model.on('change', this.updateFilter, this);
          this.filter_view.model.fetch();
        },
        updateFilter: _.debounce(function () {
          /* Filter the roster again.
           * Called whenever the filter settings have been changed or
           * when contacts have been added, removed or changed.
           *
           * Debounced so that it doesn't get called for every
           * contact fetched from browser storage.
           */
          var type = this.filter_view.model.get('filter_type');

          if (type === 'state') {
            this.filter(this.filter_view.model.get('chat_state'), type);
          } else {
            this.filter(this.filter_view.model.get('filter_text'), type);
          }
        }, 100),
        update: _.debounce(function () {
          if (!u.isVisible(this.roster_el)) {
            u.showElement(this.roster_el);
          }

          this.filter_view.showOrHide();
          return this;
        }, _converse.animate ? 100 : 0),
        filter: function filter(query, type) {
          // First we make sure the filter is restored to its
          // original state
          _.each(this.getAll(), function (view) {
            if (view.model.contacts.length > 0) {
              view.show().filter('');
            }
          }); // Now we can filter


          query = query.toLowerCase();

          if (type === 'groups') {
            _.each(this.getAll(), function (view, idx) {
              if (!_.includes(view.model.get('name').toLowerCase(), query.toLowerCase())) {
                u.slideIn(view.el);
              } else if (view.model.contacts.length > 0) {
                u.slideOut(view.el);
              }
            });
          } else {
            _.each(this.getAll(), function (view) {
              view.filter(query, type);
            });
          }
        },
        reset: function reset() {
          _converse.roster.reset();

          this.removeAll();
          this.render().update();
          return this;
        },
        onContactAdded: function onContactAdded(contact) {
          this.addRosterContact(contact);
          this.update();
          this.updateFilter();
        },
        onContactChange: function onContactChange(contact) {
          this.updateChatBox(contact);
          this.update();

          if (_.has(contact.changed, 'subscription')) {
            if (contact.changed.subscription === 'from') {
              this.addContactToGroup(contact, HEADER_PENDING_CONTACTS);
            } else if (_.includes(['both', 'to'], contact.get('subscription'))) {
              this.addExistingContact(contact);
            }
          }

          if (_.has(contact.changed, 'ask') && contact.changed.ask === 'subscribe') {
            this.addContactToGroup(contact, HEADER_PENDING_CONTACTS);
          }

          if (_.has(contact.changed, 'subscription') && contact.changed.requesting === 'true') {
            this.addContactToGroup(contact, HEADER_REQUESTING_CONTACTS);
          }

          this.updateFilter();
        },
        updateChatBox: function updateChatBox(contact) {
          if (!this.model.chatbox) {
            return this;
          }

          var changes = {};

          if (_.has(contact.changed, 'status')) {
            changes.status = contact.get('status');
          }

          this.model.chatbox.save(changes);
          return this;
        },
        getGroup: function getGroup(name) {
          /* Returns the group as specified by name.
           * Creates the group if it doesn't exist.
           */
          var view = this.get(name);

          if (view) {
            return view.model;
          }

          return this.model.create({
            name: name,
            id: b64_sha1(name)
          });
        },
        addContactToGroup: function addContactToGroup(contact, name, options) {
          this.getGroup(name).contacts.add(contact, options);
          this.sortAndPositionAllItems();
        },
        addExistingContact: function addExistingContact(contact, options) {
          var groups;

          if (_converse.roster_groups) {
            groups = contact.get('groups');

            if (groups.length === 0) {
              groups = [HEADER_UNGROUPED];
            }
          } else {
            groups = [HEADER_CURRENT_CONTACTS];
          }

          _.each(groups, _.bind(this.addContactToGroup, this, contact, _, options));
        },
        addRosterContact: function addRosterContact(contact, options) {
          if (contact.get('subscription') === 'both' || contact.get('subscription') === 'to') {
            this.addExistingContact(contact, options);
          } else {
            if (contact.get('ask') === 'subscribe' || contact.get('subscription') === 'from') {
              this.addContactToGroup(contact, HEADER_PENDING_CONTACTS, options);
            } else if (contact.get('requesting') === true) {
              this.addContactToGroup(contact, HEADER_REQUESTING_CONTACTS, options);
            }
          }

          return this;
        }
      });
      /* -------- Event Handlers ----------- */

      _converse.api.listen.on('chatBoxesInitialized', function () {
        _converse.chatboxes.on('change:hidden', function (chatbox) {
          var contact = _converse.roster.findWhere({
            'jid': chatbox.get('jid')
          });

          if (!_.isUndefined(contact)) {
            contact.trigger('highlight', contact);
          }
        });
      });

      function initRoster() {
        /* Create an instance of RosterView once the RosterGroups
         * collection has been created (in converse-core.js)
         */
        if (_converse.authentication === _converse.ANONYMOUS) {
          return;
        }

        _converse.rosterview = new _converse.RosterView({
          'model': _converse.rostergroups
        });

        _converse.rosterview.render();

        _converse.emit('rosterViewInitialized');
      }

      _converse.api.listen.on('rosterInitialized', initRoster);

      _converse.api.listen.on('rosterReadyAfterReconnection', initRoster);
    }
  });
});

/***/ }),

/***/ "./src/converse-singleton.js":
/*!***********************************!*\
  !*** ./src/converse-singleton.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2012-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)

/* converse-singleton
 * ******************
 *
 * A plugin which ensures that only one chat (private or groupchat) is
 * visible at any one time. All other ongoing chats are hidden and kept in the
 * background.
 *
 * This plugin makes sense in mobile or fullscreen chat environments (as
 * configured by the `view_mode` setting).
 *
 */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse) {
  "use strict";

  var _converse$env = converse.env,
      _ = _converse$env._,
      Strophe = _converse$env.Strophe;
  var u = converse.env.utils;

  function hideChat(view) {
    if (view.model.get('id') === 'controlbox') {
      return;
    }

    u.safeSave(view.model, {
      'hidden': true
    });
    view.hide();
  }

  converse.plugins.add('converse-singleton', {
    // It's possible however to make optional dependencies non-optional.
    // If the setting "strict_plugin_dependencies" is set to true,
    // an error will be raised if the plugin is not found.
    //
    // NB: These plugins need to have already been loaded via require.js.
    dependencies: ['converse-chatboxes', 'converse-muc', 'converse-muc-views', 'converse-controlbox', 'converse-rosterview'],
    overrides: {
      // overrides mentioned here will be picked up by converse.js's
      // plugin architecture they will replace existing methods on the
      // relevant objects or classes.
      //
      // new functions which don't exist yet can also be added.
      ChatBoxes: {
        chatBoxMayBeShown: function chatBoxMayBeShown(chatbox) {
          var _converse = this.__super__._converse;

          if (chatbox.get('id') === 'controlbox') {
            return true;
          }

          if (_converse.isSingleton()) {
            var any_chats_visible = _converse.chatboxes.filter(function (cb) {
              return cb.get('id') != 'controlbox';
            }).filter(function (cb) {
              return !cb.get('hidden');
            }).length > 0;

            if (any_chats_visible) {
              return !chatbox.get('hidden');
            } else {
              return true;
            }
          } else {
            return this.__super__.chatBoxMayBeShown.apply(this, arguments);
          }
        },
        createChatBox: function createChatBox(jid, attrs) {
          /* Make sure new chat boxes are hidden by default. */
          var _converse = this.__super__._converse;

          if (_converse.isSingleton()) {
            attrs = attrs || {};
            attrs.hidden = true;
          }

          return this.__super__.createChatBox.call(this, jid, attrs);
        }
      },
      ChatBoxView: {
        shouldShowOnTextMessage: function shouldShowOnTextMessage() {
          var _converse = this.__super__._converse;

          if (_converse.isSingleton()) {
            return false;
          } else {
            return this.__super__.shouldShowOnTextMessage.apply(this, arguments);
          }
        },
        _show: function _show(focus) {
          /* We only have one chat visible at any one
           * time. So before opening a chat, we make sure all other
           * chats are hidden.
           */
          var _converse = this.__super__._converse;

          if (_converse.isSingleton()) {
            _.each(this.__super__._converse.chatboxviews.xget(this.model.get('id')), hideChat);

            u.safeSave(this.model, {
              'hidden': false
            });
          }

          return this.__super__._show.apply(this, arguments);
        }
      },
      ChatRoomView: {
        show: function show(focus) {
          var _converse = this.__super__._converse;

          if (_converse.isSingleton()) {
            _.each(this.__super__._converse.chatboxviews.xget(this.model.get('id')), hideChat);

            u.safeSave(this.model, {
              'hidden': false
            });
          }

          return this.__super__.show.apply(this, arguments);
        }
      }
    }
  });
});

/***/ }),

/***/ "./src/converse-vcard.js":
/*!*******************************!*\
  !*** ./src/converse-vcard.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Converse.js
// http://conversejs.org
//
// Copyright (c) 2013-2018, the Converse.js developers
// Licensed under the Mozilla Public License (MPLv2)
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! templates/vcard.html */ "./src/templates/vcard.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, tpl_vcard) {
  "use strict";

  var _converse$env = converse.env,
      Backbone = _converse$env.Backbone,
      Promise = _converse$env.Promise,
      Strophe = _converse$env.Strophe,
      _ = _converse$env._,
      $iq = _converse$env.$iq,
      $build = _converse$env.$build,
      b64_sha1 = _converse$env.b64_sha1,
      moment = _converse$env.moment,
      sizzle = _converse$env.sizzle;
  var u = converse.env.utils;
  converse.plugins.add('converse-vcard', {
    initialize: function initialize() {
      /* The initialize function gets called as soon as the plugin is
       * loaded by converse.js's plugin machinery.
       */
      var _converse = this._converse;
      _converse.VCard = Backbone.Model.extend({
        defaults: {
          'image': _converse.DEFAULT_IMAGE,
          'image_type': _converse.DEFAULT_IMAGE_TYPE
        },
        set: function set(key, val, options) {
          // Override Backbone.Model.prototype.set to make sure that the
          // default `image` and `image_type` values are maintained.
          var attrs;

          if (_typeof(key) === 'object') {
            attrs = key;
            options = val;
          } else {
            (attrs = {})[key] = val;
          }

          if (_.has(attrs, 'image') && !attrs['image']) {
            attrs['image'] = _converse.DEFAULT_IMAGE;
            attrs['image_type'] = _converse.DEFAULT_IMAGE_TYPE;
            return Backbone.Model.prototype.set.call(this, attrs, options);
          } else {
            return Backbone.Model.prototype.set.apply(this, arguments);
          }
        }
      });
      _converse.VCards = Backbone.Collection.extend({
        model: _converse.VCard,
        initialize: function initialize() {
          this.on('add', function (vcard) {
            return _converse.api.vcard.update(vcard);
          });
        }
      });

      function onVCardData(jid, iq, callback) {
        var vcard = iq.querySelector('vCard');
        var result = {};

        if (!_.isNull(vcard)) {
          result = {
            'stanza': iq,
            'fullname': _.get(vcard.querySelector('FN'), 'textContent'),
            'nickname': _.get(vcard.querySelector('NICKNAME'), 'textContent'),
            'image': _.get(vcard.querySelector('PHOTO BINVAL'), 'textContent'),
            'image_type': _.get(vcard.querySelector('PHOTO TYPE'), 'textContent'),
            'url': _.get(vcard.querySelector('URL'), 'textContent'),
            'role': _.get(vcard.querySelector('ROLE'), 'textContent'),
            'email': _.get(vcard.querySelector('EMAIL USERID'), 'textContent'),
            'vcard_updated': moment().format(),
            'vcard_error': undefined
          };
        }

        if (result.image) {
          var buffer = u.base64ToArrayBuffer(result['image']);
          crypto.subtle.digest('SHA-1', buffer).then(function (ab) {
            result['image_hash'] = u.arrayBufferToHex(ab);
            if (callback) callback(result);
          });
        } else {
          if (callback) callback(result);
        }
      }

      function onVCardError(jid, iq, errback) {
        if (errback) {
          errback({
            'stanza': iq,
            'jid': jid,
            'vcard_error': moment().format()
          });
        }
      }

      function createStanza(type, jid, vcard_el) {
        var iq = $iq(jid ? {
          'type': type,
          'to': jid
        } : {
          'type': type
        });

        if (!vcard_el) {
          iq.c("vCard", {
            'xmlns': Strophe.NS.VCARD
          });
        } else {
          iq.cnode(vcard_el);
        }

        return iq;
      }

      function setVCard(jid, data) {
        if (!jid) {
          throw Error("No jid provided for the VCard data");
        }

        var vcard_el = Strophe.xmlHtmlNode(tpl_vcard(data)).firstElementChild;
        return _converse.api.sendIQ(createStanza("set", jid, vcard_el));
      }

      function getVCard(_converse, jid) {
        /* Request the VCard of another user. Returns a promise.
         *
         * Parameters:
         *    (String) jid - The Jabber ID of the user whose VCard
         *      is being requested.
         */
        var to = Strophe.getBareJidFromJid(jid) === _converse.bare_jid ? null : jid;
        return new Promise(function (resolve, reject) {
          _converse.connection.sendIQ(createStanza("get", to), _.partial(onVCardData, jid, _, resolve), _.partial(onVCardError, jid, _, resolve), _converse.IQ_TIMEOUT);
        });
      }
      /* Event handlers */


      _converse.initVCardCollection = function () {
        _converse.vcards = new _converse.VCards();
        var id = b64_sha1("converse.vcards");
        _converse.vcards.browserStorage = new Backbone.BrowserStorage[_converse.config.get('storage')](id);

        _converse.vcards.fetch();
      };

      _converse.api.listen.on('sessionInitialized', _converse.initVCardCollection);

      _converse.on('addClientFeatures', function () {
        _converse.api.disco.own.features.add(Strophe.NS.VCARD);
      });

      _.extend(_converse.api, {
        /**
         * The XEP-0054 VCard API
         *
         * This API lets you access and update user VCards
         *
         * @namespace _converse.api.vcard
         * @memberOf _converse.api
         */
        'vcard': {
          /**
           * Enables setting new values for a VCard.
           *
           * @method _converse.api.vcard.set
           * @param {string} jid The JID for which the VCard should be set
           * @param {object} data A map of VCard keys and values
           * @example
           * _converse.api.vcard.set({
           *     'jid': _converse.bare_jid,
           *     'fn': 'John Doe',
           *     'nickname': 'jdoe'
           * }).then(() => {
           *     // Succes
           * }).catch(() => {
           *     // Failure
           * }).
           */
          'set': function set(jid, data) {
            return setVCard(jid, data);
          },

          /**
           * @method _converse.api.vcard.get
           * @param {Backbone.Model|string} model Either a `Backbone.Model` instance, or a string JID.
           *     If a `Backbone.Model` instance is passed in, then it must have either a `jid`
           *     attribute or a `muc_jid` attribute.
           * @param {boolean} [force] A boolean indicating whether the vcard should be
           *     fetched even if it's been fetched before.
           * @returns {promise} A Promise which resolves with the VCard data for a particular JID or for
           *     a `Backbone.Model` instance which represents an entity with a JID (such as a roster contact,
           *     chat or chatroom occupant).
           *
           * @example
           * _converse.api.waitUntil('rosterContactsFetched').then(() => {
           *     _converse.api.vcard.get('someone@example.org').then(
           *         (vcard) => {
           *             // Do something with the vcard...
           *         }
           *     );
           * });
           */
          'get': function get(model, force) {
            if (_.isString(model)) {
              return getVCard(_converse, model);
            } else if (force || !model.get('vcard_updated') || !moment(model.get('vcard_error')).isSame(new Date(), "day")) {
              var jid = model.get('jid');

              if (!jid) {
                throw new Error("No JID to get vcard for!");
              }

              return getVCard(_converse, jid);
            } else {
              return Promise.resolve({});
            }
          },

          /**
           * Fetches the VCard associated with a particular `Backbone.Model` instance
           * (by using its `jid` or `muc_jid` attribute) and then updates the model with the
           * returned VCard data.
           *
           * @method _converse.api.vcard.update
           * @param {Backbone.Model} model A `Backbone.Model` instance
           * @param {boolean} [force] A boolean indicating whether the vcard should be
           *     fetched again even if it's been fetched before.
           * @returns {promise} A promise which resolves once the update has completed.
           * @example
           * _converse.api.waitUntil('rosterContactsFetched').then(() => {
           *     const chatbox = _converse.chatboxes.getChatBox('someone@example.org');
           *     _converse.api.vcard.update(chatbox);
           * });
           */
          'update': function update(model, force) {
            return this.get(model, force).then(function (vcard) {
              delete vcard['stanza'];
              model.save(vcard);
            });
          }
        }
      });
    }
  });
});

/***/ }),

/***/ "./src/converse.js":
/*!*************************!*\
  !*** ./src/converse.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

/*global define */
if (true) {
  // The section below determines which plugins will be included in a build
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"),
  /* START: Removable components
   * --------------------
   * Any of the following components may be removed if they're not needed.
   */
  __webpack_require__(/*! converse-autocomplete */ "./src/converse-autocomplete.js"), __webpack_require__(/*! converse-bookmarks */ "./src/converse-bookmarks.js"), // XEP-0048 Bookmarks
  __webpack_require__(/*! converse-caps */ "./src/converse-caps.js"), // XEP-0115 Entity Capabilities
  __webpack_require__(/*! converse-chatview */ "./src/converse-chatview.js"), // Renders standalone chat boxes for single user chat
  __webpack_require__(/*! converse-controlbox */ "./src/converse-controlbox.js"), // The control box
  __webpack_require__(/*! converse-dragresize */ "./src/converse-dragresize.js"), // Allows chat boxes to be resized by dragging them
  __webpack_require__(/*! converse-embedded */ "./src/converse-embedded.js"), __webpack_require__(/*! converse-fullscreen */ "./src/converse-fullscreen.js"), __webpack_require__(/*! converse-push */ "./src/converse-push.js"), // XEP-0357 Push Notifications
  __webpack_require__(/*! converse-headline */ "./src/converse-headline.js"), // Support for headline messages
  __webpack_require__(/*! converse-mam */ "./src/converse-mam.js"), // XEP-0313 Message Archive Management
  __webpack_require__(/*! converse-minimize */ "./src/converse-minimize.js"), // Allows chat boxes to be minimized
  __webpack_require__(/*! converse-muc */ "./src/converse-muc.js"), // XEP-0045 Multi-user chat
  __webpack_require__(/*! converse-muc-views */ "./src/converse-muc-views.js"), // Views related to MUC
  __webpack_require__(/*! converse-notification */ "./src/converse-notification.js"), // HTML5 Notifications
  __webpack_require__(/*! converse-omemo */ "./src/converse-omemo.js"), __webpack_require__(/*! converse-ping */ "./src/converse-ping.js"), // XEP-0199 XMPP Ping
  __webpack_require__(/*! converse-register */ "./src/converse-register.js"), // XEP-0077 In-band registration
  __webpack_require__(/*! converse-roomslist */ "./src/converse-roomslist.js"), // Show currently open chat rooms
  __webpack_require__(/*! converse-roster */ "./src/converse-roster.js"), __webpack_require__(/*! converse-vcard */ "./src/converse-vcard.js")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (converse) {
    return converse;
  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}

/***/ }),

/***/ "./src/i18n.js":
/*!*********************!*\
  !*** ./src/i18n.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// This is the internationalization module.
//
// Copyright (c) 2013-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! es6-promise */ "es6-promise"), __webpack_require__(/*! jed */ "./node_modules/jed/jed.js"), __webpack_require__(/*! lodash.noconflict */ "lodash.noconflict"), __webpack_require__(/*! moment */ "moment"), __webpack_require__(/*! moment/locale/af */ "./node_modules/moment/locale/af.js"), __webpack_require__(/*! moment/locale/ar */ "./node_modules/moment/locale/ar.js"), __webpack_require__(/*! moment/locale/bg */ "./node_modules/moment/locale/bg.js"), __webpack_require__(/*! moment/locale/ca */ "./node_modules/moment/locale/ca.js"), __webpack_require__(/*! moment/locale/cs */ "./node_modules/moment/locale/cs.js"), __webpack_require__(/*! moment/locale/de */ "./node_modules/moment/locale/de.js"), __webpack_require__(/*! moment/locale/es */ "./node_modules/moment/locale/es.js"), __webpack_require__(/*! moment/locale/eu */ "./node_modules/moment/locale/eu.js"), __webpack_require__(/*! moment/locale/fr */ "./node_modules/moment/locale/fr.js"), __webpack_require__(/*! moment/locale/he */ "./node_modules/moment/locale/he.js"), __webpack_require__(/*! moment/locale/hu */ "./node_modules/moment/locale/hu.js"), __webpack_require__(/*! moment/locale/id */ "./node_modules/moment/locale/id.js"), __webpack_require__(/*! moment/locale/it */ "./node_modules/moment/locale/it.js"), __webpack_require__(/*! moment/locale/ja */ "./node_modules/moment/locale/ja.js"), __webpack_require__(/*! moment/locale/nb */ "./node_modules/moment/locale/nb.js"), __webpack_require__(/*! moment/locale/nl */ "./node_modules/moment/locale/nl.js"), __webpack_require__(/*! moment/locale/pl */ "./node_modules/moment/locale/pl.js"), __webpack_require__(/*! moment/locale/pt-br */ "./node_modules/moment/locale/pt-br.js"), __webpack_require__(/*! moment/locale/ru */ "./node_modules/moment/locale/ru.js"), __webpack_require__(/*! moment/locale/tr */ "./node_modules/moment/locale/tr.js"), __webpack_require__(/*! moment/locale/uk */ "./node_modules/moment/locale/uk.js"), __webpack_require__(/*! moment/locale/zh-cn */ "./node_modules/moment/locale/zh-cn.js"), __webpack_require__(/*! moment/locale/zh-tw */ "./node_modules/moment/locale/zh-tw.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (Promise, Jed, _, moment) {
  'use strict';

  function detectLocale(library_check) {
    /* Determine which locale is supported by the user's system as well
     * as by the relevant library (e.g. converse.js or moment.js).
     *
     * Parameters:
     *      (Function) library_check - Returns a boolean indicating whether
     *                                 the locale is supported.
     */
    var locale, i;

    if (window.navigator.userLanguage) {
      locale = isLocaleAvailable(window.navigator.userLanguage, library_check);
    }

    if (window.navigator.languages && !locale) {
      for (i = 0; i < window.navigator.languages.length && !locale; i++) {
        locale = isLocaleAvailable(window.navigator.languages[i], library_check);
      }
    }

    if (window.navigator.browserLanguage && !locale) {
      locale = isLocaleAvailable(window.navigator.browserLanguage, library_check);
    }

    if (window.navigator.language && !locale) {
      locale = isLocaleAvailable(window.navigator.language, library_check);
    }

    if (window.navigator.systemLanguage && !locale) {
      locale = isLocaleAvailable(window.navigator.systemLanguage, library_check);
    }

    return locale || 'en';
  }

  function isMomentLocale(locale) {
    return _.includes(moment.locales(), locale);
  }

  function isConverseLocale(locale, supported_locales) {
    return _.isString(locale) && _.includes(supported_locales, locale);
  }

  function getLocale(preferred_locale, isSupportedByLibrary) {
    if (_.isString(preferred_locale)) {
      if (preferred_locale === 'en' || isSupportedByLibrary(preferred_locale)) {
        return preferred_locale;
      }
    }

    return detectLocale(isSupportedByLibrary) || 'en';
  }

  function isLocaleAvailable(locale, available) {
    /* Check whether the locale or sub locale (e.g. en-US, en) is supported.
     *
     * Parameters:
     *      (String) locale - The locale to check for
     *      (Function) available - returns a boolean indicating whether the locale is supported
     */
    if (available(locale)) {
      return locale;
    } else {
      var sublocale = locale.split("-")[0];

      if (sublocale !== locale && available(sublocale)) {
        return sublocale;
      }
    }
  }

  var jed_instance;
  return {
    setLocales: function setLocales(preferred_locale, _converse) {
      _converse.locale = getLocale(preferred_locale, _.partial(isConverseLocale, _, _converse.locales));
      moment.locale(getLocale(preferred_locale, isMomentLocale));
    },
    translate: function translate(str) {
      if (_.isNil(jed_instance)) {
        return Jed.sprintf.apply(Jed, arguments);
      }

      var t = jed_instance.translate(str);

      if (arguments.length > 1) {
        return t.fetch.apply(t, [].slice.call(arguments, 1));
      } else {
        return t.fetch();
      }
    },
    fetchTranslations: function fetchTranslations(locale, supported_locales, locale_url) {
      /* Fetch the translations for the given local at the given URL.
       *
       * Parameters:
       *  (String) locale:            The given i18n locale
       *  (Array) supported_locales:  List of locales supported
       *  (String) locale_url:        The URL from which the translations
       *                              should be fetched.
       */
      return new Promise(function (resolve, reject) {
        if (!isConverseLocale(locale, supported_locales) || locale === 'en') {
          return resolve();
        }

        var xhr = new XMLHttpRequest();
        xhr.open('GET', locale_url, true);
        xhr.setRequestHeader('Accept', "application/json, text/javascript");

        xhr.onload = function () {
          if (xhr.status >= 200 && xhr.status < 400) {
            try {
              var data = window.JSON.parse(xhr.responseText);
              jed_instance = new Jed(data);
              resolve();
            } catch (e) {
              xhr.onerror(e);
            }
          } else {
            xhr.onerror();
          }
        };

        xhr.onerror = function (e) {
          var err_message = e ? " Error: ".concat(e.message) : '';
          reject(new Error("Could not fetch translations. Status: ".concat(xhr.statusText, ". ").concat(err_message)));
        };

        xhr.send();
      });
    }
  };
});

/***/ }),

/***/ "./src/jquery-stub.js":
/*!****************************!*\
  !*** ./src/jquery-stub.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

/*global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return Object;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ "./src/lodash.fp.js":
/*!**************************!*\
  !*** ./src/lodash.fp.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! lodash */ "lodash"), __webpack_require__(/*! lodash.converter */ "lodash.converter")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_, lodashConverter) {
  var fp = lodashConverter(_.runInContext());
  return fp;
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ "./src/polyfill.js":
/*!*************************!*\
  !*** ./src/polyfill.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function CustomEvent(event, params) {
  params = params || {
    bubbles: false,
    cancelable: false,
    detail: undefined
  };
  var evt = document.createEvent('CustomEvent');
  evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
  return evt;
}

if (typeof window.CustomEvent !== "function") {
  CustomEvent.prototype = window.Event.prototype;
  window.CustomEvent = CustomEvent;
}

if (!String.prototype.includes) {
  String.prototype.includes = function (search, start) {
    'use strict';

    if (typeof start !== 'number') {
      start = 0;
    }

    if (start + search.length > this.length) {
      return false;
    } else {
      return this.indexOf(search, start) !== -1; // eslint-disable-line lodash/prefer-includes
    }
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (searchString, position) {
    var subjectString = this.toString();

    if (position === undefined || position > subjectString.length) {
      position = subjectString.length;
    }

    position -= searchString.length;
    var lastIndex = subjectString.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };
}

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (searchString, position) {
    position = position || 0;
    return this.substr(position, searchString.length) === searchString;
  };
}

if (!String.prototype.splitOnce) {
  String.prototype.splitOnce = function (delimiter) {
    var components = this.split(delimiter);
    return [components.shift(), components.join(delimiter)];
  };
}

if (!String.prototype.trim) {
  String.prototype.trim = function () {
    return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  };
}

/***/ }),

/***/ "./src/templates/add_chatroom_modal.html":
/*!***********************************************!*\
  !*** ./src/templates/add_chatroom_modal.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/add_chatroom_modal.html -->\n<div class="modal fade" id="add-chatroom-modal" tabindex="-1" role="dialog" aria-labelledby="add-chatroom-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title"\n                    id="add-chatroom-modal-label">' +
__e(o.heading_new_chatroom) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n            <div class="modal-body">\n                <form class="converse-form add-chatroom">\n                    <div class="form-group">\n                        <label for="chatroom">' +
__e(o.label_room_address) +
':</label>\n                        <input type="text" required="required" name="chatroom" class="form-control" placeholder="' +
__e(o.chatroom_placeholder) +
'">\n                    </div>\n                    <div class="form-group">\n                        <label for="nickname">' +
__e(o.label_nickname) +
':</label>\n                        <input type="text" name="nickname" value="' +
__e(o.nick) +
'" class="form-control">\n                    </div>\n                    <input type="submit" class="btn btn-primary" name="join" value="' +
__e(o.label_join) +
'">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/add_contact_modal.html":
/*!**********************************************!*\
  !*** ./src/templates/add_contact_modal.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/add_contact_modal.html -->\n<!-- Add contact Modal -->\n<div class="modal fade" id="add-contact-modal" tabindex="-1" role="dialog" aria-labelledby="addContactModalLabel" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title" id="addContactModalLabel">' +
__e(o.heading_new_contact) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n            </div>\n            <form class="converse-form add-xmpp-contact">\n                <div class="modal-body">\n                    <div class="form-group ';
 if (o._converse.xhr_user_search_url) { ;
__p += ' hidden ';
 } ;
__p += '">\n                        <label class="clearfix" for="jid">' +
__e(o.label_xmpp_address) +
':</label>\n                        <input type="text" name="jid" required="required" value="' +
__e(o.jid) +
'"\n                               class="form-control"\n                               placeholder="' +
__e(o.contact_placeholder) +
'"/>\n                        <div class="invalid-feedback">' +
__e(o.error_message) +
'</div>\n                    </div>\n                    <div class="form-group">\n                        <label class="clearfix" for="name">' +
__e(o.label_nickname) +
':</label>\n                        <input type="text" name="name" value="' +
__e(o.nickname) +
'"\n                               class="form-control"\n                               placeholder="' +
__e(o.nickname_placeholder) +
'"/>\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button type="submit" class="btn btn-primary">' +
__e(o.label_add) +
'</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/alert.html":
/*!**********************************!*\
  !*** ./src/templates/alert.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/alert.html -->\n<div class="alert ' +
__e(o.type) +
'" role="alert">' +
__e(o.message) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/alert_modal.html":
/*!****************************************!*\
  !*** ./src/templates/alert_modal.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/alert_modal.html -->\n<div class="modal" tabindex="-1" role="dialog">\n  <div class="modal-dialog" role="document">\n    <div class="modal-content">\n      <div class="modal-header ' +
__e(o.type) +
'">\n        <h5 class="modal-title">' +
__e(o.title) +
'</h5>\n        <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="modal-body">';
o.messages.forEach(function (message) { ;
__p += '\n          <p>' +
__e(message) +
'</p>\n      ';
 }) ;
__p += '\n    </div>\n    </div>\n  </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/audio.html":
/*!**********************************!*\
  !*** ./src/templates/audio.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/audio.html -->\n<audio controls><source src="' +
__e(o.url) +
'" type="audio/mpeg"></audio>\n<a target="_blank" rel="noopener" href="' +
__e(o.url) +
'">' +
__e(o.label_download) +
'</a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/bookmark.html":
/*!*************************************!*\
  !*** ./src/templates/bookmark.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/bookmark.html -->\n<div class="list-item controlbox-padded room-item available-chatroom d-flex flex-row ';
 if (o.hidden) { ;
__p += ' hidden ';
 } ;
__p += '" data-room-jid="' +
__e(o.jid) +
'">\n    <a class="list-item-link open-room w-100" data-room-jid="' +
__e(o.jid) +
'" title="' +
__e(o.open_title) +
'" href="#">' +
__e(o.name) +
'</a>\n    <a class="list-item-action remove-bookmark fa fa-bookmark align-self-center ';
 if (o.bookmarked) { ;
__p += ' button-on ';
 } ;
__p += '"\n        data-room-jid="' +
__e(o.jid) +
'" data-bookmark-name="' +
__e(o.name) +
'"\n        title="' +
__e(o.info_remove_bookmark) +
'" href="#">&nbsp;</a>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/bookmarks_list.html":
/*!*******************************************!*\
  !*** ./src/templates/bookmarks_list.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/bookmarks_list.html -->\n<a href="#" class="list-toggle bookmarks-toggle controlbox-padded" title="' +
__e(o.desc_bookmarks) +
'">\n    <span class="fa ';
 if (o.toggle_state === o._converse.OPENED) { ;
__p += ' fa-caret-down ';
 } else { ;
__p += ' fa-caret-right ';
 } ;
__p += '">\n    </span> ' +
__e(o.label_bookmarks) +
'</a>\n<div class="items-list bookmarks rooms-list ';
 if (o.toggle_state !== o._converse.OPENED) { ;
__p += ' hidden ';
 } ;
__p += '"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chat_status_modal.html":
/*!**********************************************!*\
  !*** ./src/templates/chat_status_modal.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chat_status_modal.html -->\n<!-- Change status Modal -->\n<div class="modal fade" id="modal-status-change" tabindex="-1" role="dialog" aria-labelledby="changeStatusModalLabel" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title" id="changeStatusModalLabel">' +
__e(o.modal_title) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="' +
__e(o.label_close) +
'">\n                    <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n            <form class="set-xmpp-status" id="set-xmpp-status">\n                <div class="modal-body">\n                    <div class="form-group">\n                        <div class="custom-control custom-radio">\n                            <input ';
 if (o.status === 'online') { ;
__p += ' checked="checked" ';
 } ;
__p += '\n                                   type="radio" id="radio-online" value="online" name="chat_status" class="custom-control-input">\n                            <label class="custom-control-label" for="radio-online">\n                                <span class="fa fa-circle"></span>&nbsp;' +
__e(o.label_online) +
'</label>\n                        </div>\n                        <div class="custom-control custom-radio">\n                            <input ';
 if (o.status === 'busy') { ;
__p += ' checked="checked" ';
 } ;
__p += '\n                                   type="radio" id="radio-busy" value="dnd" name="chat_status" class="custom-control-input">\n                            <label class="custom-control-label" for="radio-busy">\n                                <span class="fa fa-minus-circle"></span>&nbsp;' +
__e(o.label_busy) +
'</label>\n                        </div>\n                        <div class="custom-control custom-radio">\n                            <input ';
 if (o.status === 'away') { ;
__p += ' checked="checked" ';
 } ;
__p += '\n                                   type="radio" id="radio-away" value="away" name="chat_status" class="custom-control-input">\n                            <label class="custom-control-label" for="radio-away">\n                                <span class="fa fa-dot-circle"></span>&nbsp;' +
__e(o.label_away) +
'</label>\n                        </div>\n                        <div class="custom-control custom-radio">\n                            <input ';
 if (o.status === 'xa') { ;
__p += ' checked="checked" ';
 } ;
__p += '\n                                   type="radio" id="radio-xa" value="xa" name="chat_status" class="custom-control-input">\n                            <label class="custom-control-label" for="radio-xa">\n                                <span class="far fa-circle"></span>&nbsp;' +
__e(o.label_xa) +
'</label>\n                        </div>\n                    </div>\n                    <div class="btn-group w-100">\n                        <input name="status_message" type="text" class="form-control" \n                               value="' +
__e(o.status_message) +
'" placeholder="' +
__e(o.placeholder_status_message) +
'">\n                        <span class="clear-input fa fa-times ';
 if (!o.status_message) { ;
__p += ' hidden ';
 } ;
__p += '"></span>\n                    </div>\n                </div>\n                <div class="modal-footer">\n                    <button type="submit" class="btn btn-primary">' +
__e(o.label_save) +
'</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatarea.html":
/*!*************************************!*\
  !*** ./src/templates/chatarea.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatarea.html -->\n<div class="chat-area col">\n    <div class="chat-content ';
 if (o.show_send_button) { ;
__p += 'chat-content-sendbutton';
 } ;
__p += '"></div>\n    <div class="message-form-container"/>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatbox.html":
/*!************************************!*\
  !*** ./src/templates/chatbox.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatbox.html -->\n<div class="flyout box-flyout">\n    <div class="chat-body">\n        <div class="chat-content ';
 if (o.show_send_button) { ;
__p += 'chat-content-sendbutton';
 } ;
__p += '"></div>\n        <div class="message-form-container"/>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatbox_head.html":
/*!*****************************************!*\
  !*** ./src/templates/chatbox_head.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatbox_head.html -->\n<div class="chat-head chat-head-chatbox row no-gutters">\n    <div class="chatbox-navback"><i class="fa fa-arrow-left"></i></div>\n    <div class="chatbox-title">\n        <div class="row no-gutters">\n            <canvas class="avatar" height="36" width="36"></canvas>\n            <div class="col chat-title" title="' +
__e(o.jid) +
'">\n                ';
 if (o.url) { ;
__p += '\n                    <a href="' +
__e(o.url) +
'" target="_blank" rel="noopener" class="user">\n                ';
 } ;
__p += '\n                        ' +
__e( o.nickname || o.fullname || o.jid ) +
'\n                ';
 if (o.url) { ;
__p += '\n                    </a>\n                ';
 } ;
__p += '\n                <p class="user-custom-message">' +
__e( o.status ) +
'</p>\n            </div>\n        </div>\n    </div>\n    <div class="chatbox-buttons row no-gutters">\n        <a class="chatbox-btn close-chatbox-button fa fa-times" title=' +
__e(o.info_close) +
'></a>\n        <a class="chatbox-btn show-user-details-modal fa fa-id-card" title="' +
__e(o.info_details) +
'"></a>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatbox_message_form.html":
/*!*************************************************!*\
  !*** ./src/templates/chatbox_message_form.html ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatbox_message_form.html -->\n<div class="message-form-container">\n<div class="new-msgs-indicator hidden">▼ ' +
__e( o.unread_msgs ) +
' ▼</div>\n<form class="sendXMPPMessage">\n    ';
 if (o.show_toolbar) { ;
__p += '\n        <ul class="chat-toolbar no-text-select"></ul>\n    ';
 } ;
__p += '\n    <input type="text" placeholder="' +
((__t = (o.label_spoiler_hint)) == null ? '' : __t) +
'" value="' +
((__t = ( o.hint_value )) == null ? '' : __t) +
'"\n           class="';
 if (!o.composing_spoiler) { ;
__p += ' hidden ';
 } ;
__p += ' spoiler-hint"/>\n\n    <div class="suggestion-box">\n        <ul class="suggestion-box__results suggestion-box__results--above" hidden></ul>\n        <textarea\n            type="text"\n            class="chat-textarea suggestion-box__input\n                ';
 if (o.show_send_button) { ;
__p += ' chat-textarea-send-button ';
 } ;
__p += '\n                ';
 if (o.composing_spoiler) { ;
__p += ' spoiler ';
 } ;
__p += '"\n            placeholder="' +
__e(o.label_message) +
'">' +
((__t = ( o.message_value )) == null ? '' : __t) +
'</textarea>\n        <span class="suggestion-box__additions visually-hidden" role="status" aria-live="assertive" aria-relevant="additions"></span>\n\n        ';
 if (o.show_send_button) { ;
__p += '\n            <button type="submit" class="pure-button send-button">' +
__e( o.label_send ) +
'</button>\n        ';
 } ;
__p += '\n    </div>\n</form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatbox_minimize.html":
/*!*********************************************!*\
  !*** ./src/templates/chatbox_minimize.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/chatbox_minimize.html -->\n<a class="chatbox-btn toggle-chatbox-button fa fa-minus" title="' +
__e(o.info_minimize) +
'"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatboxes.html":
/*!**************************************!*\
  !*** ./src/templates/chatboxes.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/chatboxes.html -->\n<div class="converse-chatboxes row no-gutters"></div>\n<div id="converse-modals" class="modals"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom.html":
/*!*************************************!*\
  !*** ./src/templates/chatroom.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/chatroom.html -->\n<div class="flyout box-flyout">\n    <div class="chat-head chat-head-chatroom row no-gutters"></div>\n    <div class="chat-body chatroom-body row no-gutters">\n        <div class="disconnect-container hidden"></div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_bookmark_form.html":
/*!***************************************************!*\
  !*** ./src/templates/chatroom_bookmark_form.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/chatroom_bookmark_form.html -->\n<div class="chatroom-form-container">\n    <form class="converse-form chatroom-form">\n        <legend>' +
__e(o.heading) +
'</legend>\n        <fieldset class="form-group">\n            <label for="converse_muc_bookmark_name">' +
__e(o.label_name) +
'</label>\n            <input class="form-control" type="text" name="name" required="required" id="converse_muc_bookmark_name"/>\n        </fieldset>\n        <fieldset class="form-group">\n            <label for="converse_muc_bookmark_nick">' +
__e(o.label_nick) +
'</label>\n            <input class="form-control" type="text" name="nick" value="' +
__e(o.default_nick) +
'" id="converse_muc_bookmark_nick"/>\n        </fieldset>\n        <fieldset class="form-group form-check">\n            <input class="form-check-input" id="converse_muc_bookmark_autojoin" type="checkbox" name="autojoin"/>\n            <label class="form-check-label" for="converse_muc_bookmark_autojoin">' +
__e(o.label_autojoin) +
'</label>\n        </fieldset>\n        <fieldset class="form-group">\n            <input class="btn btn-primary" type="submit" value="' +
__e(o.label_submit) +
'"/>\n            <input class="btn btn-secondary button-cancel" type="button" value="' +
__e(o.label_cancel) +
'"/>\n        </fieldset>\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_bookmark_toggle.html":
/*!*****************************************************!*\
  !*** ./src/templates/chatroom_bookmark_toggle.html ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_bookmark_toggle.html -->\n<a class="chatbox-btn toggle-bookmark fa fa-bookmark\n   ';
 if (o.bookmarked) {;
__p += ' button-on ';
 } ;
__p += '" title="' +
__e(o.info_toggle_bookmark) +
'"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_details_modal.html":
/*!***************************************************!*\
  !*** ./src/templates/chatroom_details_modal.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_details_modal.html -->\n<div class="modal fade" id="room-details-modal" tabindex="-1" role="dialog" aria-labelledby="room-details-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title" id="room-details-modal-label">' +
__e(o.display_name) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="' +
__e(o.label_close) +
'"><span aria-hidden="true">&times;</span></button>\n            </div>\n            <div class="modal-body">\n                <div class="room-info">\n                    <p class="room-info"><strong>' +
__e(o.__('Name')) +
'</strong>: ' +
__e(o.name) +
'</p>\n                    <p class="room-info"><strong>' +
__e(o.__('Groupchat address (JID)')) +
'</strong>: ' +
__e(o.jid) +
'</p>\n                    <p class="room-info"><strong>' +
__e(o.__('Description')) +
'</strong>: ' +
__e(o.description) +
'</p>\n                    ';
 if (o.subject) { ;
__p += '\n                    <p class="room-info"><strong>' +
__e(o.__('Topic')) +
'</strong>: ' +
((__t = (o.topic)) == null ? '' : __t) +
'</p> <!-- Sanitized in converse-muc-views. We want to render links. -->\n                        <p class="room-info"><strong>' +
__e(o.__('Topic author')) +
'</strong>: ' +
__e(o._.get(o.subject, 'author')) +
'</p>\n                    ';
 } ;
__p += '\n                    <p class="room-info"><strong>' +
__e(o.__('Online users')) +
'</strong>: ' +
__e(o.num_occupants) +
'</p>\n                    <p class="room-info"><strong>' +
__e(o.__('Features')) +
'</strong>:\n                        <div class="chatroom-features">\n                        <ul class="features-list">\n                        ';
 if (o.passwordprotected) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-lock"></span>' +
__e( o.__('Password protected') ) +
' - <em>' +
__e( o.__('This groupchat requires a password before entry') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.unsecured) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-unlock"></span>' +
__e( o.__('No password required') ) +
' - <em>' +
__e( o.__('This groupchat does not require a password upon entry') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.hidden) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-eye-slash"></span>' +
__e( o.__('Hidden') ) +
' - <em>' +
__e( o.__('This groupchat is not publicly searchable') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.public_room) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-eye"></span>' +
__e( o.__('Public') ) +
' - <em>' +
__e( o.__('This groupchat is publicly searchable') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.membersonly) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-address-book"></span>' +
__e( o.__('Members only') ) +
' - <em>' +
__e( o.__('This groupchat is restricted to members only') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.open) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-globe"></span>' +
__e( o.__('Open') ) +
' - <em>' +
__e( o.__('Anyone can join this groupchat') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.persistent) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-save"></span>' +
__e( o.__('Persistent') ) +
' - <em>' +
__e( o.__('This groupchat persists even if it\'s unoccupied') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.temporary) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-snowflake-o"></span>' +
__e( o.__('Temporary') ) +
' - <em>' +
__e( o.__('This groupchat will disappear once the last person leaves') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.nonanonymous) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-id-card"></span>' +
__e( o.__('Not anonymous') ) +
' - <em>' +
__e( o.__('All other groupchat participants can see your XMPP username') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.semianonymous) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-user-secret"></span>' +
__e( o.__('Semi-anonymous') ) +
' - <em>' +
__e( o.__('Only moderators can see your XMPP username') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.moderated) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-gavel"></span>' +
__e( o.__('Moderated') ) +
' - <em>' +
__e( o.__('This groupchat is being moderated') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.unmoderated) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-info-circle"></span>' +
__e( o.__('Not moderated') ) +
' - <em>' +
__e( o.__('This groupchat is not being moderated') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.mam_enabled) { ;
__p += '\n                        <li class="feature" ><span class="fa fa-database"></span>' +
__e( o.__('Message archiving') ) +
' - <em>' +
__e( o.__('Messages are archived on the server') ) +
'</em></li>\n                        ';
 } ;
__p += '\n                        </ul>\n                        </div>\n                    </p>\n                </div>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-secondary" data-dismiss="modal">' +
__e(o.__('Close')) +
'</button>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_disconnect.html":
/*!************************************************!*\
  !*** ./src/templates/chatroom_disconnect.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_disconnect.html -->\n<div class="alert alert-danger">\n    <h3 class="alert-heading disconnect-msg">' +
__e(o.disconnect_messages[0]) +
'</h3>\n\n    ';
 o._.forEach(o.disconnect_messages.slice(1), function (msg) { ;
__p += '\n        <p class="disconnect-msg">' +
__e(msg) +
'</p>\n    ';
 }); ;
__p += '\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_features.html":
/*!**********************************************!*\
  !*** ./src/templates/chatroom_features.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_features.html -->\n';
 if (o.has_features) { ;
__p += '\n<p class="occupants-heading">' +
__e(o.__('Features')) +
'</p>\n';
 } ;
__p += '\n<ul class="features-list">\n';
 if (o.passwordprotected) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat requires a password before entry') ) +
'"><span class="fa fa-lock"></span>' +
__e( o.__('Password protected') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.unsecured) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat does not require a password upon entry') ) +
'"><span class="fa fa-unlock"></span>' +
__e( o.__('No password') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.hidden) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat is not publicly searchable') ) +
'"><span class="fa fa-eye-slash"></span>' +
__e( o.__('Hidden') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.public_room) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat is publicly searchable') ) +
'"><span class="fa fa-eye"></span>' +
__e( o.__('Public') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.membersonly) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('this groupchat is restricted to members only') ) +
'"><span class="fa fa-address-book"></span>' +
__e( o.__('Members only') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.open) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('Anyone can join this groupchat') ) +
'"><span class="fa fa-globe"></span>' +
__e( o.__('Open') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.persistent) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat persists even if it\'s unoccupied') ) +
'"><span class="fa fa-save"></span>' +
__e( o.__('Persistent') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.temporary) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat will disappear once the last person leaves') ) +
'"><span class="fa fa-snowflake-o"></span>' +
__e( o.__('Temporary') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.nonanonymous) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('All other groupchat participants can see your XMPP username') ) +
'"><span class="fa fa-id-card"></span>' +
__e( o.__('Not anonymous') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.semianonymous) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('Only moderators can see your XMPP username') ) +
'"><span class="fa fa-user-secret"></span>' +
__e( o.__('Semi-anonymous') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.moderated) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat is being moderated') ) +
'"><span class="fa fa-gavel"></span>' +
__e( o.__('Moderated') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.unmoderated) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('This groupchat is not being moderated') ) +
'"><span class="fa fa-info-circle"></span>' +
__e( o.__('Not moderated') ) +
'</li>\n';
 } ;
__p += '\n';
 if (o.mam_enabled) { ;
__p += '\n<li class="feature" title="' +
__e( o.__('Messages are archived on the server') ) +
'"><span class="fa fa-database"></span>' +
__e( o.__('Message archiving') ) +
'</li>\n';
 } ;
__p += '\n</ul>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_form.html":
/*!******************************************!*\
  !*** ./src/templates/chatroom_form.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/chatroom_form.html -->\n<div class="chatroom-form-container">\n    <form class="converse-form chatroom-form">\n        <fieldset class="form-group">\n            <span class="spinner fa fa-spinner centered"/>\n        </fieldset>\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_head.html":
/*!******************************************!*\
  !*** ./src/templates/chatroom_head.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_head.html -->\n<div class="chatbox-navback"><i class="fa fa-arrow-left"></i></div>\n<div class="chatbox-title">\n    <div class="chat-title" title="' +
__e(o.jid) +
'">\n        ';
 if (o.name && o.name !== o.Strophe.getNodeFromJid(o.jid)) { ;
__p += '\n            ' +
__e( o.name ) +
'\n        ';
 } else { ;
__p += '\n            ' +
__e( o.Strophe.getNodeFromJid(o.jid) ) +
'@' +
__e( o.Strophe.getDomainFromJid(o.jid) ) +
'\n        ';
 } ;
__p += '\n    </div>\n    <p class="chatroom-description" title="' +
__e(o.description) +
'">' +
__e(o.description) +
'<p/>\n</div>\n<div class="chatbox-buttons row no-gutters">\n    <a class="chatbox-btn close-chatbox-button fa fa-sign-out-alt" title="' +
__e(o.info_close) +
'"></a>\n    ';
 if (o.affiliation == 'owner') { ;
__p += '\n    <a class="chatbox-btn configure-chatroom-button fa fa-wrench" title="' +
__e(o.info_configure) +
' "></a>\n    ';
 } ;
__p += '\n    <a class="chatbox-btn show-room-details-modal fa fa-info-circle" title="' +
__e(o.info_details) +
'"></a>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_invite.html":
/*!********************************************!*\
  !*** ./src/templates/chatroom_invite.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/chatroom_invite.html -->\n<form class="room-invite">\n    ';
 if (o.error_message) { ;
__p += '\n        <span class="error">' +
__e(o.error_message) +
'</span>\n    ';
 } ;
__p += '\n    <input class="form-control invited-contact" placeholder="' +
__e(o.label_invitation) +
'" type="text"/>\n</form>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_nickname_form.html":
/*!***************************************************!*\
  !*** ./src/templates/chatroom_nickname_form.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/chatroom_nickname_form.html -->\n<div class="chatroom-form-container">\n    <form class="converse-form chatroom-form converse-centered-form">\n        <fieldset class="form-group">\n            <label>' +
__e(o.heading) +
'</label>\n            <p class="validation-message">' +
__e(o.validation_message) +
'</p>\n            <input type="text" required="required" name="nick" class="form-control" placeholder="' +
__e(o.label_nickname) +
'"/>\n        </fieldset>\n        <input type="submit" class="btn btn-primary" name="join" value="' +
__e(o.label_join) +
'"/>\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_password_form.html":
/*!***************************************************!*\
  !*** ./src/templates/chatroom_password_form.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/chatroom_password_form.html -->\n<div class="chatroom-form-container">\n    <form class="pure-form converse-form chatroom-form">\n        <fieldset class="form-group">\n            <legend>' +
__e(o.heading) +
'</legend>\n            <label>' +
__e(o.label_password) +
'</label>\n            <input type="password" name="password"/>\n        </fieldset>\n        <input class="btn btn-primary" type="submit" value="' +
__e(o.label_submit) +
'"/>\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/chatroom_sidebar.html":
/*!*********************************************!*\
  !*** ./src/templates/chatroom_sidebar.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/chatroom_sidebar.html -->\n<!-- <div class="occupants"> -->\n<div class="occupants-header">\n    <i class="hide-occupants fa fa-times"></i>\n    <p class="occupants-heading">' +
__e(o.label_occupants) +
'</p>\n</div>\n<ul class="occupant-list"></ul>\n<div class="chatroom-features"></div>\n<!-- </div> -->\n';
return __p
};

/***/ }),

/***/ "./src/templates/chats_panel.html":
/*!****************************************!*\
  !*** ./src/templates/chats_panel.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/chats_panel.html -->\n<a id="toggle-minimized-chats" href="#" class="row no-gutters"></a>\n<div class="flyout minimized-chats-flyout row no-gutters"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/controlbox.html":
/*!***************************************!*\
  !*** ./src/templates/controlbox.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/controlbox.html -->\n<div class="flyout box-flyout">\n    <div class="chat-head controlbox-head">\n        ';
 if (!o.sticky_controlbox) { ;
__p += '\n            <a class="chatbox-btn close-chatbox-button fa fa-times"></a>\n        ';
 } ;
__p += '\n    </div>\n    <div class="controlbox-panes"></div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/controlbox_toggle.html":
/*!**********************************************!*\
  !*** ./src/templates/controlbox_toggle.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/controlbox_toggle.html -->\n<span class="toggle-feedback">' +
__e(o.label_toggle) +
'</span>\n';
return __p
};

/***/ }),

/***/ "./src/templates/converse_brand_heading.html":
/*!***************************************************!*\
  !*** ./src/templates/converse_brand_heading.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/converse_brand_heading.html -->\n<span class="brand-heading-container">\n    <div class="brand-heading">\n        <a href="https://conversejs.org" target="_blank" rel="noopener">\n            <i class="icon-conversejs"></i><span class="brand-name">converse</span>\n        </a>\n    </div>\n</span>\n';
return __p
};

/***/ }),

/***/ "./src/templates/csn.html":
/*!********************************!*\
  !*** ./src/templates/csn.html ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/csn.html -->\n<div class="message chat-info chat-state-notification"\n     data-isodate="' +
__e(o.isodate) +
'"\n     data-csn="' +
__e(o.from) +
'">' +
__e(o.message) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/dragresize.html":
/*!***************************************!*\
  !*** ./src/templates/dragresize.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/dragresize.html -->\n<div class="dragresize dragresize-top"></div>\n<div class="dragresize dragresize-topleft"></div>\n<div class="dragresize dragresize-left"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/emojis.html":
/*!***********************************!*\
  !*** ./src/templates/emojis.html ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/emojis.html -->\n<div class="emoji-picker-container">\n';
 o._.forEach(o.emojis_by_category, function (obj, category) { ;
__p += '\n    <ul class="emoji-picker emoji-picker-' +
__e(category) +
' ';
 if (o.current_category !== category) { ;
__p += ' hidden ';
 } ;
__p += '">\n        ';
 o._.forEach(o.emojis_by_category[category], function (emoji) { ;
__p += '\n        <li class="emoji insert-emoji ';
 if (o.shouldBeHidden(emoji._shortname, o.current_skintone, o.toned_emojis)) { ;
__p += ' hidden ';
 }; ;
__p += '"\n            data-emoji="' +
__e(emoji._shortname) +
'">\n                <a href="#" data-emoji="' +
__e(emoji._shortname) +
'"> ' +
((__t = ( o.transform(emoji._shortname) )) == null ? '' : __t) +
'  </a>\n        </li>\n        ';
 }); ;
__p += '\n    </ul>\n';
 }); ;
__p += '\n<ul class="emoji-toolbar">\n    <li class="emoji-category-picker">\n        <ul>\n            ';
 o._.forEach(o.emojis_by_category, function (obj, category) { ;
__p += '\n                <li data-category="' +
__e(category) +
'" class="emoji-category ';
 if (o.current_category === category) { ;
__p += ' picked ';
 } ;
__p += '">\n                    <a class="pick-category" href="#" data-category="' +
__e(category) +
'"> ' +
((__t = ( o.transform(o.emojis_by_category[category][0]._shortname) )) == null ? '' : __t) +
' </a>\n                </li>\n            ';
 }); ;
__p += '\n        </ul>\n    </li>\n    <li class="emoji-skintone-picker">\n        <ul>\n            ';
 o._.forEach(o.skintones, function (skintone) { ;
__p += '\n                <li data-skintone="' +
__e(skintone) +
'" class="emoji-skintone ';
 if (o.current_skintone === skintone) { ;
__p += ' picked ';
 } ;
__p += '">\n                    <a class="pick-skintone" href="#" data-skintone="' +
__e(skintone) +
'"> ' +
((__t = ( o.transform(':'+skintone+':') )) == null ? '' : __t) +
' </a>\n                </li>\n            ';
 }); ;
__p += '\n        </ul>\n    </li>\n</ul>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/error_message.html":
/*!******************************************!*\
  !*** ./src/templates/error_message.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/error_message.html -->\n<div class="message chat-info chat-error" data-isodate="' +
__e(o.isodate) +
'">' +
__e(o.message) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/field.html":
/*!**********************************!*\
  !*** ./src/templates/field.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/field.html -->\n<field var="' +
__e(o.name) +
'">\n';
 if (o.value.constructor === Array) { ;
__p += '\n    ';
 o.value.forEach(function (arrayValue) { ;
__p += '<value>' +
__e(arrayValue) +
'</value>';
 }); ;
__p += '\n';
 } else { ;
__p += '\n    <value>' +
__e(o.value) +
'</value>\n';
 } ;
__p += '</field>\n';
return __p
};

/***/ }),

/***/ "./src/templates/file.html":
/*!*********************************!*\
  !*** ./src/templates/file.html ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/file.html -->\n<a target="_blank" rel="noopener" href="' +
__e(o.url) +
'">' +
__e(o.label_download) +
'</a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/file_progress.html":
/*!******************************************!*\
  !*** ./src/templates/file_progress.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/file_progress.html -->\n<div class="message chat-msg" data-isodate="' +
__e(o.time) +
'" data-msgid="' +
__e(o.msgid) +
'">\n    <canvas class="avatar chat-msg__avatar" height="36" width="36"></canvas>\n    <div class="chat-msg__content">\n        <span class="chat-msg__text">Uploading file: <strong>' +
__e(o.file.name) +
'</strong>, ' +
__e(o.filesize) +
'</span>\n        <progress value="' +
__e(o.progress) +
'"/>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_captcha.html":
/*!*****************************************!*\
  !*** ./src/templates/form_captcha.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/form_captcha.html -->\n';
 if (o.label) { ;
__p += '\n<label>\n    ' +
__e(o.label) +
'\n</label>\n';
 } ;
__p += '\n<img src="data:' +
__e(o.type) +
';base64,' +
__e(o.data) +
'">\n<input name="' +
__e(o.name) +
'" type="text" ';
 if (o.required) { ;
__p += ' class="required" ';
 } ;
__p += ' >\n\n\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_checkbox.html":
/*!******************************************!*\
  !*** ./src/templates/form_checkbox.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/form_checkbox.html -->\n<div class="form-group">\n    <input id="' +
__e(o.id) +
'" name="' +
__e(o.name) +
'" type="checkbox" ' +
__e(o.checked) +
' ';
 if (o.required) { ;
__p += ' required ';
 } ;
__p += ' >\n    <label class="form-check-label" for="' +
__e(o.id) +
'">' +
__e(o.label) +
'</label>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_input.html":
/*!***************************************!*\
  !*** ./src/templates/form_input.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/form_input.html -->\n<div class="form-group">\n    ';
 if (o.type !== 'hidden') { ;
__p += '\n        <label for="' +
__e(o.id) +
'">' +
__e(o.label) +
'</label>\n    ';
 } ;
__p += '\n    <input class="form-control" name="' +
__e(o.name) +
'" type="' +
__e(o.type) +
'" id="' +
__e(o.id) +
'"\n        ';
 if (o.placeholder) { ;
__p += ' placeholder="' +
__e(o.placeholder) +
'" ';
 } ;
__p += '\n        ';
 if (o.value) { ;
__p += ' value="' +
__e(o.value) +
'" ';
 } ;
__p += '\n        ';
 if (o.required) { ;
__p += ' required ';
 } ;
__p += ' >\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_select.html":
/*!****************************************!*\
  !*** ./src/templates/form_select.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/form_select.html -->\n<div class="form-group">\n    <label for="' +
__e(o.id) +
'">' +
__e(o.label) +
'</label>\n    <select class="form-control" id="' +
__e(o.id) +
'" name="' +
__e(o.name) +
'" ';
 if (o.multiple) { ;
__p += ' multiple="multiple" ';
 } ;
__p += '>' +
((__t = (o.options)) == null ? '' : __t) +
'</select>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_textarea.html":
/*!******************************************!*\
  !*** ./src/templates/form_textarea.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/form_textarea.html -->\n<label class="label-ta">' +
__e(o.label) +
'</label>\n<textarea name="' +
__e(o.name) +
'">' +
__e(o.value) +
'</textarea>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_url.html":
/*!*************************************!*\
  !*** ./src/templates/form_url.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/form_url.html -->\n<label>\n    ' +
__e(o.label) +
'\n    <a class="form-url" target="_blank" rel="noopener" href="' +
__e(o.value) +
'">' +
__e(o.value) +
'</a>\n</label>\n';
return __p
};

/***/ }),

/***/ "./src/templates/form_username.html":
/*!******************************************!*\
  !*** ./src/templates/form_username.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/form_username.html -->\n';
 if (o.label) { ;
__p += '\n<label>\n    ' +
__e(o.label) +
'\n</label>\n';
 } ;
__p += '\n<div class="input-group">\n    <input name="' +
__e(o.name) +
'" type="' +
__e(o.type) +
'"\n        ';
 if (o.value) { ;
__p += ' value="' +
__e(o.value) +
'" ';
 } ;
__p += '\n        ';
 if (o.required) { ;
__p += ' class="required" ';
 } ;
__p += ' />\n    <span title="' +
__e(o.domain) +
'">' +
__e(o.domain) +
'</span>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/group_header.html":
/*!*****************************************!*\
  !*** ./src/templates/group_header.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/group_header.html -->\n<a href="#" class="group-toggle controlbox-padded" title="' +
__e(o.desc_group_toggle) +
'">\n    <span class="fa ';
 if (o.toggle_state === o._converse.OPENED) { ;
__p += ' fa-caret-down ';
 } else { ;
__p += ' fa-caret-right ';
 } ;
__p += '">\n    </span> ' +
__e(o.label_group) +
'</a>\n<ul class="items-list roster-group-contacts ';
 if (o.toggle_state === o._converse.CLOSED) { ;
__p += ' collapsed ';
 } ;
__p += '"></ul>\n';
return __p
};

/***/ }),

/***/ "./src/templates/help_message.html":
/*!*****************************************!*\
  !*** ./src/templates/help_message.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/help_message.html -->\n<div class="message chat-info ';
 if (o.type !== 'info') { ;
__p += ' chat-' +
__e(o.type) +
' ';
 } ;
__p += '" data-isodate="' +
__e(o.isodate) +
'">' +
((__t = (o.message)) == null ? '' : __t) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/image.html":
/*!**********************************!*\
  !*** ./src/templates/image.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/image.html -->\n<a href="' +
__e(o.url) +
'" target="_blank" rel="noopener"><img class="chat-image img-thumbnail" src="' +
__e(o.url) +
'"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/info.html":
/*!*********************************!*\
  !*** ./src/templates/info.html ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/info.html -->\n<div class="message chat-info ' +
__e(o.extra_classes) +
'"\n     data-isodate="' +
__e(o.isodate) +
'"\n     ' +
__e(o.data) +
'>' +
__e(o.message) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/inverse_brand_heading.html":
/*!**************************************************!*\
  !*** ./src/templates/inverse_brand_heading.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/inverse_brand_heading.html -->\n<div class="row">\n    <div class="container brand-heading-container">\n        <h1 class="brand-heading"><i class="icon-conversejs"></i>Converse</h1>\n        <p class="brand-subtitle"><a target="_blank" rel="nofollow" href="https://conversejs.org">Open Source</a> XMPP chat client brought to you by <a target="_blank" rel="nofollow" href="https://opkode.com">Opkode</a> </p>\n        <p class="brand-subtitle"><a target="_blank" rel="nofollow" href="https://hosted.weblate.org/projects/conversejs/#languages">Translate</a> it into your own language</p>\n    <div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/list_chatrooms_modal.html":
/*!*************************************************!*\
  !*** ./src/templates/list_chatrooms_modal.html ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/list_chatrooms_modal.html -->\n<div class="modal fade" id="list-chatrooms-modal" tabindex="-1" role="dialog" aria-labelledby="list-chatrooms-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title"\n                    id="list-chatrooms-modal-label">' +
__e(o.heading_list_chatrooms) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n                    <span aria-hidden="true">&times;</span>\n                </button>\n            </div>\n            <div class="modal-body">\n                <form class="converse-form list-chatrooms">\n                    <div class="form-group">\n                        <label for="chatroom">' +
__e(o.label_server_address) +
':</label>\n                        <input type="text" value="' +
__e(o.muc_domain) +
'" required="required" name="server" class="form-control" placeholder="' +
__e(o.server_placeholder) +
'">\n                    </div>\n                    <input type="submit" class="btn btn-primary" name="join" value="' +
__e(o.label_query) +
'">\n                </form>\n                <ul class="available-chatrooms list-group"></ul>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/login_panel.html":
/*!****************************************!*\
  !*** ./src/templates/login_panel.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/login_panel.html -->\n<div id="converse-login-panel" class="controlbox-pane fade-in row no-gutters">\n    <form id="converse-login" class="converse-form" method="post">\n        <div class="conn-feedback fade-in ';
 if (!o.conn_feedback_subject) { ;
__p += ' hidden ';
 } ;
__p += ' ' +
__e(o.conn_feedback_class) +
'">\n            <p class="feedback-subject">' +
__e( o.conn_feedback_subject ) +
'</p>\n            <p class="feedback-message ';
 if (!o.conn_feedback_message) { ;
__p += ' hidden ';
 } ;
__p += '">' +
__e(o.conn_feedback_message) +
'</p>\n        </div>\n        ';
 if (o.auto_login || o._converse.CONNECTION_STATUS[o.connection_status] === 'CONNECTING') { ;
__p += '\n            <span class="spinner fa fa-spinner centered"/>\n        ';
 } else { ;
__p += '\n            ';
 if (o.authentication == o.LOGIN || o.authentication == o.EXTERNAL) { ;
__p += '\n                <div class="form-group">\n                    <label for="converse-login-jid">' +
__e(o.__("XMPP Username:")) +
'</label>\n                    <input id="converse-login-jid" class="form-control" autofocus required="required" type="text" name="jid" placeholder="' +
__e(o.placeholder_username) +
'">\n                </div>\n                ';
 if (o.authentication !== o.EXTERNAL) { ;
__p += '\n                <div class="form-group">\n                    <label for="converse-login-password">' +
__e(o.__("Password:")) +
'</label>\n                    <input id="converse-login-password" class="form-control" required="required" type="password" name="password" placeholder="' +
__e(o.__('password')) +
'">\n                </div>\n                ';
 } ;
__p += '\n                <div class="form-group form-check">\n                    <input id="converse-login-trusted" type="checkbox" class="form-check-input" name="trusted" ';
 if (o._converse.config.get('trusted')) { ;
__p += ' checked="checked" ';
 } ;
__p += '>\n                    <label for="converse-login-trusted" class="form-check-label">' +
__e(o.__('This is a trusted device')) +
'</label>\n                    <i class="fa fa-info-circle" data-toggle="popover"\n                       data-title="Trusted device?"\n                       data-content="' +
__e(o.__('To improve performance, we cache your data in this browser. Uncheck this box if this is a public computer or if you want your data to be deleted when you log out. It\'s important that you explicitly log out, otherwise not all cached data might be deleted.')) +
'"></i>\n                </div>\n\n                <fieldset class="buttons">\n                    <input class="btn btn-primary" type="submit" value="' +
__e(o.__('Log in')) +
'">\n                </fieldset>\n            ';
 } ;
__p += '\n            ';
 if (o.authentication == o.ANONYMOUS) { ;
__p += '\n                <input class="btn btn-primary login-anon" type="submit" value="' +
__e(o.__('Click here to log in anonymously')) +
'"/>\n            ';
 } ;
__p += '\n            ';
 if (o.authentication == o.PREBIND) { ;
__p += '\n                <p>Disconnected.</p>\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/message.html":
/*!************************************!*\
  !*** ./src/templates/message.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/message.html -->\n<div class="message chat-msg ' +
__e(o.type) +
' ';
 if (o.is_me_message) { ;
__p += ' chat-msg--action ';
 } ;
__p += ' ' +
__e(o.extra_classes) +
'"\n        data-isodate="' +
__e(o.time) +
'" data-msgid="' +
__e(o.msgid) +
'" data-from="' +
__e(o.from) +
'" data-encrypted="' +
__e(o.is_encrypted) +
'">\n    ';
 if (o.type !== 'headline' && !o.is_me_message) { ;
__p += '\n    <canvas class="avatar chat-msg__avatar" height="36" width="36"></canvas>\n    ';
 } ;
__p += '\n    <div class="chat-msg__content ';
 if (o.is_me_message) { ;
__p += 'chat-msg__content--action';
 } ;
__p += '">\n        <span class="chat-msg__heading">\n            ';
 if (o.is_me_message) { ;
__p += '<time timestamp="' +
__e(o.isodate) +
'" class="chat-msg__time">' +
__e(o.pretty_time) +
'</time>';
 } ;
__p += '\n            <span class="chat-msg__author">';
 if (o.is_me_message) { ;
__p += '**';
 }; ;
__p +=
__e(o.username) +
'\n                ';
o.roles.forEach(function (role) { ;
__p += ' <span class="badge badge-secondary">' +
__e(role) +
'</span> ';
 }); ;
__p += '\n            </span>\n            ';
 if (!o.is_me_message) { ;
__p += '<time timestamp="' +
__e(o.isodate) +
'" class="chat-msg__time">' +
__e(o.pretty_time) +
'</time>';
 } ;
__p += '\n            ';
 if (o.is_encrypted) { ;
__p += '<span class="fa fa-lock"></span>';
 } ;
__p += '\n        </span>\n        ';
 if (!o.is_me_message) { ;
__p += '<div class="chat-msg__body">';
 } ;
__p += '\n            ';
 if (o.edited) { ;
__p += ' <i title="' +
__e(o.__('This message has been edited')) +
'" class="fa fa-edit chat-msg__edit-modal"></i> ';
 } ;
__p += '\n            ';
 if (!o.is_me_message) { ;
__p += '<div class="chat-msg__message">';
 } ;
__p += '\n                ';
 if (o.is_spoiler) { ;
__p += '\n                    <div class="chat-msg__spoiler-hint">\n                        <span class="spoiler-hint">' +
__e(o.spoiler_hint) +
'</span>\n                        <a class="badge badge-info spoiler-toggle" data-toggle-state="closed" href="#"><i class="fa fa-eye"></i>' +
__e(o.label_show) +
'</a>\n                    </div>\n                ';
 } ;
__p += '\n                <div class="chat-msg__text';
 if (o.is_spoiler) { ;
__p += ' spoiler collapsed';
 } ;
__p += '"><!-- message gets added here via renderMessage --></div>\n                <div class="chat-msg__media"></div>\n            ';
 if (!o.is_me_message) { ;
__p += '</div>';
 } ;
__p += '\n            ';
 if (o.type !== 'headline' && !o.is_me_message && o.sender === 'me') { ;
__p += '\n            <div class="chat-msg__actions">\n                <button class="chat-msg__action chat-msg__action-edit fa fa-pencil-alt" title="' +
__e(o.__('Edit this message')) +
'">&nbsp;</button>\n            </div>\n            ';
 } ;
__p += '\n\n        ';
 if (!o.is_me_message) { ;
__p += '</div>';
 } ;
__p += '\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/message_versions_modal.html":
/*!***************************************************!*\
  !*** ./src/templates/message_versions_modal.html ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/message_versions_modal.html -->\n<div class="modal fade" id="message-versions-modal" tabindex="-1" role="dialog" aria-labelledby="message-versions-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h4 class="modal-title" id="message-versions-modal-label">' +
__e(o.__('Message versions')) +
'</h4>\n                <button type="button" class="close" data-dismiss="modal" aria-label="' +
__e(o.label_close) +
'"><span aria-hidden="true">&times;</span></button>\n            </div>\n            <div class="modal-body">\n                <h4>Older versions</h4>\n                ';
o.older_versions.forEach(function (text) { ;
__p += ' <p class="older-msg">' +
__e(text) +
'</p> ';
 }); ;
__p += '\n                <hr>\n                <h4>Current version</h4>\n                <p>' +
__e(o.message) +
'</p>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-secondary" data-dismiss="modal">' +
__e(o.__('Close')) +
'</button>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/new_day.html":
/*!************************************!*\
  !*** ./src/templates/new_day.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/new_day.html -->\n<div class="message date-separator" data-isodate="' +
__e(o.isodate) +
'">\n    <hr class="separator">\n    <time class="separator-text" datetime="' +
__e(o.isodate) +
'"><span>' +
__e(o.datestring) +
'</span></time>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/occupant.html":
/*!*************************************!*\
  !*** ./src/templates/occupant.html ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/occupant.html -->\n<li class="occupant" id="' +
__e( o.id ) +
'"\n    ';
 if (o.role === "moderator") { ;
__p += '\n       title="' +
__e( o.jid ) +
' ' +
__e( o.desc_moderator ) +
' ' +
__e( o.hint_occupant ) +
'"\n    ';
 } ;
__p += '\n    ';
 if (o.role === "participant") { ;
__p += '\n       title="' +
__e( o.jid ) +
' ' +
__e( o.desc_participant ) +
' ' +
__e( o.hint_occupant ) +
'"\n    ';
 } ;
__p += '\n    ';
 if (o.role === "visitor") { ;
__p += '\n       title="' +
__e( o.jid ) +
' ' +
__e( o.desc_visitor ) +
' ' +
__e( o.hint_occupant ) +
'"\n    ';
 } ;
__p += '\n    ';
 if (!o._.includes(["visitor", "participant", "moderator"], o.role)) { ;
__p += '\n       title="' +
__e( o.jid ) +
' ' +
__e( o.hint_occupant ) +
'"\n    ';
 } ;
__p += '>\n    <div class="row no-gutters">\n        <div class="col-auto">\n            <div class="occupant-status occupant-' +
__e(o.show) +
' circle" title="' +
__e(o.hint_show) +
'"></div>\n        </div>\n        <div class="col">\n            <span class="occupant-nick">' +
__e(o.nick || o.jid) +
'</span>\n            ';
 if (o.affiliation === "owner") { ;
__p += '\n                <span class="badge badge-danger">' +
__e(o.label_owner) +
'</span>\n            ';
 } ;
__p += '\n            ';
 if (o.affiliation === "admin") { ;
__p += '\n                <span class="badge badge-info">' +
__e(o.label_admin) +
'</span>\n            ';
 } ;
__p += '\n            ';
 if (o.affiliation === "member") { ;
__p += '\n                <span class="badge badge-info">' +
__e(o.label_member) +
'</span>\n            ';
 } ;
__p += '\n\n            ';
 if (o.role === "moderator") { ;
__p += '\n                <span class="badge badge-info">' +
__e(o.label_moderator) +
'</span>\n            ';
 } ;
__p += '\n            ';
 if (o.role === "visitor") { ;
__p += '\n                <span class="badge badge-secondary">' +
__e(o.label_visitor) +
'</span>\n            ';
 } ;
__p += '\n        </div>\n    </div>\n</li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/pending_contact.html":
/*!********************************************!*\
  !*** ./src/templates/pending_contact.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/pending_contact.html -->\n';
 if (o.allow_chat_pending_contacts)  { ;
__p += '\n<a class="open-chat w-100" href="#">\n';
 } ;
__p += '\n<span class="pending-contact-name w-100" title="JID: ' +
__e(o.jid) +
'">' +
__e(o.display_name) +
'</span> \n';
 if (o.allow_chat_pending_contacts)  { ;
__p += '</a>\n';
 } ;
__p += '\n<a class="remove-xmpp-contact far fa-trash-alt" title="' +
__e(o.desc_remove) +
'" href="#"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/profile_modal.html":
/*!******************************************!*\
  !*** ./src/templates/profile_modal.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/profile_modal.html -->\n<div class="modal fade" id="user-profile-modal" tabindex="-1" role="dialog" aria-labelledby="user-profile-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title" id="user-profile-modal-label">' +
__e(o.heading_profile) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="' +
__e(o.label_close) +
'"><span aria-hidden="true">&times;</span></button>\n            </div>\n            <div class="modal-body">\n                ';
 if (o._converse.pluggable.plugins['converse-omemo'].enabled(o._converse)) { ;
__p += '\n                <ul class="nav nav-pills justify-content-center">\n                    <li role="presentation" class="nav-item">\n                        <a class="nav-link active" id="profile-tab" href="#profile-tabpanel" aria-controls="profile-tabpanel" role="tab" data-toggle="tab">Profile</a>\n                    </li>\n                    <li role="presentation" class="nav-item">\n                        <a class="nav-link" id="omemo-tab" href="#omemo-tabpanel" aria-controls="omemo-tabpanel" role="tab" data-toggle="tab">OMEMO</a>\n                    </li>\n                </ul>\n                ';
 } ;
__p += '\n                <div class="tab-content">\n                    <div class="tab-pane fade show active" id="profile-tabpanel" role="tabpanel" aria-labelledby="profile-tab">\n                        <form class="converse-form converse-form--modal profile-form" action="#">\n                            <div class="row">\n                                <div class="col-auto">\n                                    <a class="change-avatar" href="#">\n                                        ';
 if (o.image) { ;
__p += '\n                                            <img alt="' +
__e(o.alt_avatar) +
'" class="img-thumbnail avatar align-self-center" height="100px" width="100px" src="data:' +
__e(o.image_type) +
';base64,' +
__e(o.image) +
'"/>\n                                        ';
 } ;
__p += '\n                                        ';
 if (!o.image) { ;
__p += '\n                                            <canvas class="avatar" height="100px" width="100px"/>\n                                        ';
 } ;
__p += '\n                                    </a>\n                                    <input class="hidden" name="image" type="file">\n                                </div>\n                                <div class="col">\n                                    <div class="form-group">\n                                        <label class="col-form-label">' +
__e(o.label_jid) +
':</label>\n                                        <div>' +
__e(o.jid) +
'</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="form-group">\n                                <label for="vcard-fullname" class="col-form-label">' +
__e(o.label_fullname) +
':</label>\n                                <input id="vcard-fullname" type="text" class="form-control" name="fn" value="' +
__e(o.fullname) +
'">\n                            </div>\n                            <div class="form-group">\n                                <label for="vcard-nickname" class="col-form-label">' +
__e(o.label_nickname) +
':</label>\n                                <input id="vcard-nickname" type="text" class="form-control" name="nickname" value="' +
__e(o.nickname) +
'">\n                            </div>\n                            <div class="form-group">\n                                <label for="vcard-url" class="col-form-label">' +
__e(o.label_url) +
':</label>\n                                <input id="vcard-url" type="url" class="form-control" name="url" value="' +
__e(o.url) +
'">\n                            </div>\n                            <div class="form-group">\n                                <label for="vcard-email" class="col-form-label">' +
__e(o.label_email) +
':</label>\n                                <input id="vcard-email" type="email" class="form-control" name="email" value="' +
__e(o.email) +
'">\n                            </div>\n                            <div class="form-group">\n                                <label for="vcard-role" class="col-form-label">' +
__e(o.label_role) +
':</label>\n                                <input id="vcard-role" type="text" class="form-control" name="role" value="' +
__e(o.role) +
'" aria-describedby="vcard-role-help">\n                                <small id="vcard-role-help" class="form-text text-muted">' +
__e(o.label_role_help) +
'</small>\n                            </div>\n                            <hr/>\n                            <div class="form-group">\n                                <button type="submit" class="save-form btn btn-primary">' +
__e(o.__('Save and close')) +
'</button>\n                            </div>\n                        </form>\n                    </div>\n                    ';
 if (o._converse.pluggable.plugins['converse-omemo'].enabled(o._converse)) { ;
__p += '\n                        <div class="tab-pane fade" id="omemo-tabpanel" role="tabpanel" aria-labelledby="omemo-tab">\n                            <form class="converse-form fingerprint-removal">\n                                <ul class="list-group fingerprints">\n                                    <li class="list-group-item active">' +
__e(o.__("This device's OMEMO fingerprint")) +
'</li>\n                                    <li class="list-group-item">\n                                        ';
 if (o.view.current_device.get('bundle') && o.view.current_device.get('bundle').fingerprint) { ;
__p += '\n                                        <span class="fingerprint">' +
__e(o.utils.formatFingerprint(o.view.current_device.get('bundle').fingerprint)) +
'</span>\n                                        ';
 } else {;
__p += '\n                                            <span class="spinner fa fa-spinner centered"/>\n                                        ';
 } ;
__p += '\n                                    </li>\n                                </ul>\n                                ';
 if (o.view.other_devices.length) { ;
__p += '\n                                    <ul class="list-group fingerprints">\n                                        <li class="list-group-item nopadding active">\n                                            <label>\n                                            <input type="checkbox" class="select-all" title="' +
__e(o.__('Select all')) +
'"\n                                                   aria-label="' +
__e(o.__('Checkbox to select fingerprints of all other OMEMO devices')) +
'">\n                                            ' +
__e(o.__('Other OMEMO-enabled devices')) +
'\n                                            </label>\n                                        </li>\n                                        ';
 o._.forEach(o.view.other_devices, function (device) { ;
__p += '\n                                            ';
 if (device.get('bundle') && device.get('bundle').fingerprint) { ;
__p += '\n                                            <li class="fingerprint-removal-item list-group-item nopadding">\n                                                <label>\n                                                <input type="checkbox" value="' +
__e(device.get('id')) +
'"\n                                                       aria-label="' +
__e(o.__('Checkbox for selecting the following fingerprint')) +
'">\n                                                <span class="fingerprint">' +
__e(o.utils.formatFingerprint(device.get('bundle').fingerprint)) +
'</span>\n                                                </label>\n                                            </li>\n                                            ';
 } else {;
__p += '\n                                            <li class="fingerprint-removal-item list-group-item nopadding">\n                                                <label>\n                                                <input type="checkbox" value="' +
__e(device.get('id')) +
'"\n                                                       aria-label="' +
__e(o.__('Checkbox for selecting the following fingerprint')) +
'">\n                                                <span>' +
__e(o.__('Device without a fingerprint')) +
'</span>\n                                                </label>\n                                            </li>\n                                            ';
 } ;
__p += '\n                                        ';
 }); ;
__p += '\n                                    </ul>\n                                    <div class="form-group">\n                                        <button type="submit" class="save-form btn btn-primary">' +
__e(o.__('Remove checked devices and close')) +
'</button>\n                                    </div>\n                                ';
 } ;
__p += '\n                            </form>\n                        </div>\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/profile_view.html":
/*!*****************************************!*\
  !*** ./src/templates/profile_view.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/profile_view.html -->\n<div class="userinfo controlbox-padded">\n<div class="profile d-flex">\n    <a class="show-profile" href="#">\n        <canvas alt="o.__(\'Your avatar\')" class="avatar align-self-center" height="40" width="40"></canvas>\n    </a>\n    <span class="username w-100 align-self-center">' +
__e(o.fullname) +
'</span>\n    <!-- <a class="chatbox-btn fa fa-id-card align-self-center" title="' +
__e(o.title_your_profile) +
'" data-toggle="modal" data-target="#userProfileModal"></a> -->\n    <!-- <a class="chatbox-btn fa fa-cog align-self-center" title="' +
__e(o.title_change_status) +
'" data-toggle="modal" data-target="#settingsModal"></a> -->\n    ';
 if (o._converse.allow_logout) { ;
__p += '\n        <a class="chatbox-btn logout fa fa-sign-out-alt align-self-center" title="' +
__e(o.title_log_out) +
'"></a>\n    ';
 } ;
__p += '\n</div>\n<div class="d-flex xmpp-status">\n    <span class="' +
__e(o.chat_status) +
' w-100 align-self-center" data-value="' +
__e(o.chat_status) +
'">\n        <span class="\n            ';
 if (o.chat_status === 'online') { ;
__p += ' fa fa-circle ';
 } ;
__p += '\n            ';
 if (o.chat_status === 'dnd') { ;
__p += ' fa fa-minus-circle ';
 } ;
__p += '\n            ';
 if (o.chat_status === 'away') { ;
__p += ' fa fa-dot-circle ';
 } ;
__p += '\n            ';
 if (o.chat_status === 'xa') { ;
__p += ' far fa-circle ';
 } ;
__p += '\n            ';
 if (o.chat_status === 'offline') { ;
__p += ' fa fa-times-circle ';
 } ;
__p += '"></span> ' +
__e(o.status_message) +
'</span>\n    <a class="chatbox-btn change-status fa fa-pencil-alt" title="' +
__e(o.title_change_status) +
'" data-toggle="modal" data-target="#changeStatusModal"></a>\n</div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/register_link.html":
/*!******************************************!*\
  !*** ./src/templates/register_link.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/register_link.html -->\n<fieldset class="switch-form">\n    ';
 if (!o._converse.auto_login && o._converse.CONNECTION_STATUS[o.connection_status] !== 'CONNECTING') { ;
__p += '\n        <p>' +
__e( o.__("Don't have a chat account?") ) +
'</p>\n        <p><a class="register-account toggle-register-login" href="#converse/register">' +
__e(o.__("Create an account")) +
'</a></p>\n    ';
 } ;
__p += '\n</fieldset>\n';
return __p
};

/***/ }),

/***/ "./src/templates/register_panel.html":
/*!*******************************************!*\
  !*** ./src/templates/register_panel.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/register_panel.html -->\n<div class="row">\n    <form id="converse-register" class="converse-form">\n        <legend>' +
__e(o.__("Create your account")) +
'</legend>\n\n        <div class="form-group">\n            <label>' +
__e(o.__("Please enter the XMPP provider to register with:")) +
'</label>\n            <div class="form-errors hidden"></div>\n\n            ';
 if (o.default_domain) { ;
__p += '\n                ' +
__e(o.default_domain) +
'\n            </div>\n            ';
 } ;
__p += '\n            ';
 if (!o.default_domain) { ;
__p += '\n                <input class="form-control" autofocus="autofocus" required="required" type="text" name="domain" placeholder="' +
__e(o.domain_placeholder) +
'">\n                <p class="form-text text-muted">' +
__e(o.help_providers) +
' <a href="' +
__e(o.href_providers) +
'" class="url" target="_blank" rel="noopener">' +
__e(o.help_providers_link) +
'</a>.</p>\n            </div>\n            <fieldset class="buttons">\n                <input class="btn btn-primary" type="submit" value="' +
__e(o.label_register) +
'">\n                <div class="switch-form">\n                    <p>' +
__e( o.__("Already have a chat account?") ) +
'</p>\n                    <p><a class="login-here toggle-register-login" href="#converse/login">' +
__e(o.__("Log in here")) +
'</a></p>\n                </div>\n            </fieldset>\n            ';
 } ;
__p += '\n        </div>\n    </form>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/registration_form.html":
/*!**********************************************!*\
  !*** ./src/templates/registration_form.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/registration_form.html -->\n<legend>' +
__e(o.__("Account Registration:")) +
' ' +
__e(o.domain) +
'</legend>\n<p class="title">' +
__e(o.title) +
'</p>\n<p class="form-help instructions">' +
__e(o.instructions) +
'</p>\n<div class="form-errors hidden"></div>\n\n<fieldset class="buttons">\n    <input type="submit" class="btn btn-primary" value="' +
__e(o.__('Register')) +
'"/>\n    ';
 if (!o.registration_domain) { ;
__p += '\n        <input type="button" class="btn btn-secondary button-cancel" value="' +
__e(o.__('Choose a different provider')) +
'"/>\n    ';
 } ;
__p += '\n</fieldset>\n';
return __p
};

/***/ }),

/***/ "./src/templates/registration_request.html":
/*!*************************************************!*\
  !*** ./src/templates/registration_request.html ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/registration_request.html -->\n<span class="spinner login-submit fa fa-spinner"></span>\n<p class="info">' +
__e(o.__("Hold tight, we're fetching the registration form…")) +
'</p>\n';
 if (o.cancel) { ;
__p += '\n    <button class="btn btn-secondary button-cancel hor_centered">' +
__e(o.__('Cancel')) +
'</button>\n';
 } ;
__p += '\n';
return __p
};

/***/ }),

/***/ "./src/templates/requesting_contact.html":
/*!***********************************************!*\
  !*** ./src/templates/requesting_contact.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/requesting_contact.html -->\n';
 if (o.allow_chat_pending_contacts)  { ;
__p += '\n<a class="open-chat w-100"href="#">\n';
 } ;
__p += '\n<span class="req-contact-name w-100" title="JID: ' +
__e(o.jid) +
'">' +
__e(o.display_name) +
'</span>\n';
 if (o.allow_chat_pending_contacts)  { ;
__p += '\n</a>\n';
 } ;
__p += '\n<a class="accept-xmpp-request fa fa-check"\n   aria-label="' +
__e(o.desc_accept) +
'" title="' +
__e(o.desc_accept) +
'" href="#"></a>\n<a class="decline-xmpp-request fa fa-times"\n   aria-label="' +
__e(o.desc_decline) +
'" title="' +
__e(o.desc_decline) +
'" href="#"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/room_description.html":
/*!*********************************************!*\
  !*** ./src/templates/room_description.html ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/room_description.html -->\n<!-- FIXME: check markup in mockup -->\n<div class="room-info">\n<p class="room-info"><strong>' +
__e(o.label_jid) +
'</strong> ' +
__e(o.jid) +
'</p>\n<p class="room-info"><strong>' +
__e(o.label_desc) +
'</strong> ' +
__e(o.desc) +
'</p>\n<p class="room-info"><strong>' +
__e(o.label_occ) +
'</strong> ' +
__e(o.occ) +
'</p>\n<p class="room-info"><strong>' +
__e(o.label_features) +
'</strong>\n    <ul>\n        ';
 if (o.passwordprotected) { ;
__p += '\n        <li class="room-info locked">' +
__e(o.label_requires_auth) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.hidden) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_hidden) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.membersonly) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_requires_invite) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.moderated) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_moderated) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.nonanonymous) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_non_anon) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.open) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_open_room) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.persistent) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_permanent_room) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.publicroom) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_public) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.semianonymous) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_semi_anon) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.temporary) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_temp_room) +
'</li>\n        ';
 } ;
__p += '\n        ';
 if (o.unmoderated) { ;
__p += '\n        <li class="room-info">' +
__e(o.label_unmoderated) +
'</li>\n        ';
 } ;
__p += '\n    </ul>\n</p>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/room_item.html":
/*!**************************************!*\
  !*** ./src/templates/room_item.html ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/room_item.html -->\n<li class="room-item list-group-item">\n  <div class="available-chatroom d-flex flex-row">\n    <a class="open-room available-room w-100"\n       data-room-jid="' +
__e(o.jid) +
'"\n       data-room-name="' +
__e(o.name) +
'"\n       title="' +
__e(o.open_title) +
'"\n       href="#">' +
__e(o.name) +
'</a>\n    <a class="right room-info icon-room-info"\n       data-room-jid="' +
__e(o.jid) +
'"\n       title="' +
__e(o.info_title) +
'" href="#">&nbsp;</a>\n  </div>\n</li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/room_panel.html":
/*!***************************************!*\
  !*** ./src/templates/room_panel.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/room_panel.html -->\n<!-- <div id="chatrooms"> -->\n<div class="d-flex controlbox-padded">\n    <span class="w-100 controlbox-heading">' +
__e(o.heading_chatrooms) +
'</span>\n    <a class="chatbox-btn show-list-muc-modal fa fa-list-ul" title="' +
__e(o.title_list_rooms) +
'" data-toggle="modal" data-target="#list-chatrooms-modal"></a>\n    <a class="chatbox-btn show-add-muc-modal fa fa-plus" title="' +
__e(o.title_new_room) +
'" data-toggle="modal" data-target="#add-chatrooms-modal"></a>\n</div>\n<div class="list-container open-rooms-list rooms-list-container"></div>\n<div class="list-container bookmarks-list rooms-list-container"></div>\n<!-- </div> -->\n';
return __p
};

/***/ }),

/***/ "./src/templates/rooms_list.html":
/*!***************************************!*\
  !*** ./src/templates/rooms_list.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/rooms_list.html -->\n<a href="#" class="list-toggle open-rooms-toggle controlbox-padded" title="' +
__e(o.desc_rooms) +
'">\n    <span class="fa ';
 if (o.toggle_state === o._converse.OPENED) { ;
__p += ' fa-caret-down ';
 } else { ;
__p += ' fa-caret-right ';
 } ;
__p += '">\n    </span> ' +
__e(o.label_rooms) +
'</a>\n<div class="items-list rooms-list open-rooms-list"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/rooms_list_item.html":
/*!********************************************!*\
  !*** ./src/templates/rooms_list_item.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/rooms_list_item.html -->\n<div class="list-item controlbox-padded available-chatroom d-flex flex-row\n    ';
 if (o.currently_open) { ;
__p += ' open ';
 } ;
__p += '\n    ';
 if (o.num_unread_general) { ;
__p += ' unread-msgs ';
 } ;
__p += '"\n    data-room-jid="' +
__e(o.jid) +
'">\n';
 if (o.num_unread) { ;
__p += '\n    <span class="msgs-indicator badge badge-info">' +
__e( o.num_unread ) +
'</span>\n';
 } ;
__p += '\n<a class="list-item-link open-room available-room w-100"\n    data-room-jid="' +
__e(o.jid) +
'"\n    title="' +
__e(o.open_title) +
'" href="#">' +
__e(o.name || o.jid) +
'</a>\n\n';
 if (o.allow_bookmarks) { ;
__p += '\n<a class="list-item-action fa ';
 if (o.bookmarked) { ;
__p += ' fa-bookmark remove-bookmark button-on ';
 } else { ;
__p += ' add-bookmark fa-bookmark-o ';
 } ;
__p += '"\n   data-room-jid="' +
__e(o.jid) +
'" data-bookmark-name="' +
__e(o.name) +
'"\n   title="';
 if (o.bookmarked) { ;
__p += ' ' +
__e(o.info_remove_bookmark) +
' ';
 } else { ;
__p += ' ' +
__e(o.info_add_bookmark) +
' ';
 } ;
__p += '"\n   href="#">&nbsp;</a>\n';
 } ;
__p += '\n\n<a class="list-item-action room-info fa fa-info-circle" data-room-jid="' +
__e(o.jid) +
'"\n   title="' +
__e(o.info_title) +
'" href="#">&nbsp;</a>\n\n<a class="list-item-action fa fa-times close-room"\n   data-room-jid="' +
__e(o.jid) +
'"\n   data-room-name="' +
__e(o.name || o.jid) +
'"\n   title="' +
__e(o.info_leave_room) +
'" href="#">&nbsp;</a>\n\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/rooms_results.html":
/*!******************************************!*\
  !*** ./src/templates/rooms_results.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/rooms_results.html -->\n<li class="list-group-item active">' +
__e( o.feedback_text ) +
'</dt>\n';
return __p
};

/***/ }),

/***/ "./src/templates/roster.html":
/*!***********************************!*\
  !*** ./src/templates/roster.html ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/roster.html -->\n<div class="d-flex controlbox-padded">\n    <span class="w-100 controlbox-heading">' +
__e(o.heading_contacts) +
'</span>\n    <a class="chatbox-btn add-contact fa fa-user-plus" title="' +
__e(o.title_add_contact) +
'"\n       data-toggle="modal" data-target="#add-contact-modal"></a>\n</div>\n\n<form class="roster-filter-form"></form>\n\n<div class="roster-contacts"></div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/roster_filter.html":
/*!******************************************!*\
  !*** ./src/templates/roster_filter.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/roster_filter.html -->\n<form class="controlbox-padded roster-filter-form input-button-group ';
 if (!o.visible) { ;
__p += ' hidden ';
 } ;
__p += '">\n    <div class="form-inline flex-nowrap">\n        <div class="btn-group">\n            <input ';
 if (o.filter_text) { ;
__p += ' value="' +
__e(o.filter_text) +
'" ';
 } ;
__p += '\n                class="roster-filter form-control ';
 if (o.filter_type === 'state') { ;
__p += ' hidden ';
 } ;
__p += '"\n                placeholder="' +
__e(o.placeholder) +
'">\n            <span class="clear-input fa fa-times ';
 if (!o.filter_text || o.filter_type === 'state') { ;
__p += ' hidden ';
 } ;
__p += '"></span>\n        </div>\n\n        <select class="form-control state-type ';
 if (o.filter_type !== 'state') { ;
__p += ' hidden ';
 } ;
__p += '">\n            <option value="">' +
__e(o.label_any) +
'</option>\n            <option ';
 if (o.chat_state === 'unread_messages') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="unread_messages">' +
__e(o.label_unread_messages) +
'</option>\n            <option ';
 if (o.chat_state === 'online') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="online">' +
__e(o.label_online) +
'</option>\n            <option ';
 if (o.chat_state === 'chat') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="chat">' +
__e(o.label_chatty) +
'</option>\n            <option ';
 if (o.chat_state === 'dnd') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="dnd">' +
__e(o.label_busy) +
'</option>\n            <option ';
 if (o.chat_state === 'away') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="away">' +
__e(o.label_away) +
'</option>\n            <option ';
 if (o.chat_state === 'xa') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="xa">' +
__e(o.label_xa) +
'</option>\n            <option ';
 if (o.chat_state === 'offline') { ;
__p += ' selected="selected" ';
 } ;
__p += '\n                value="offline">' +
__e(o.label_offline) +
'</option>\n        </select>\n\n        <div class="filter-by d-flex flex-nowrap">\n            <span class="fa fa-user ';
 if (o.filter_type === 'contacts') { ;
__p += ' selected ';
 } ;
__p += '" data-type="contacts" title="' +
__e(o.title_contact_filter) +
'"></span>\n            <span class="fa fa-users ';
 if (o.filter_type === 'groups') { ;
__p += ' selected ';
 } ;
__p += '" data-type="groups" title="' +
__e(o.title_group_filter) +
'"></span>\n            <span class="fa fa-circle ';
 if (o.filter_type === 'state') { ;
__p += ' selected ';
 } ;
__p += '" data-type="state" title="' +
__e(o.title_status_filter) +
'"></span>\n        </div>\n    </div>\n</form>\n';
return __p
};

/***/ }),

/***/ "./src/templates/roster_item.html":
/*!****************************************!*\
  !*** ./src/templates/roster_item.html ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/roster_item.html -->\n<a class="list-item-link cbox-list-item open-chat w-100 ';
 if (o.num_unread) { ;
__p += ' unread-msgs ';
 } ;
__p += '"\n   title="' +
__e(o.desc_chat) +
'" href="#">\n    <span class="' +
__e(o.status_icon) +
'" title="' +
__e(o.desc_status) +
'"></span>\n    ';
 if (o.num_unread) { ;
__p += '\n    <span class="msgs-indicator">' +
__e( o.num_unread ) +
'</span>\n    ';
 } ;
__p += '\n    <span class="contact-name ';
 if (o.num_unread) { ;
__p += ' unread-msgs ';
 } ;
__p += '">' +
__e(o.display_name) +
'</span></a>\n';
 if (o.allow_contact_removal) { ;
__p += '\n<a class="list-item-action remove-xmpp-contact far fa-trash-alt" title="' +
__e(o.desc_remove) +
'" href="#"></a>\n';
 } ;
__p += '\n';
return __p
};

/***/ }),

/***/ "./src/templates/search_contact.html":
/*!*******************************************!*\
  !*** ./src/templates/search_contact.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/search_contact.html -->\n<li>\n    <form class="search-xmpp-contact">\n        <input type="text"\n            name="identifier"\n            class="username"\n            placeholder="' +
__e(o.label_contact_name) +
'"/>\n        <button type="submit">' +
__e(o.label_search) +
'</button>\n    </form>\n</li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/select_option.html":
/*!******************************************!*\
  !*** ./src/templates/select_option.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/select_option.html -->\n<option value="' +
__e(o.value) +
'" ';
 if (o.selected) { ;
__p += ' selected="selected" ';
 } ;
__p += ' >' +
__e(o.label) +
'</option>\n';
return __p
};

/***/ }),

/***/ "./src/templates/spinner.html":
/*!************************************!*\
  !*** ./src/templates/spinner.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '';
__p += '<!-- src/templates/spinner.html -->\n<span class="spinner fa fa-spinner centered"/>\n';
return __p
};

/***/ }),

/***/ "./src/templates/spoiler_button.html":
/*!*******************************************!*\
  !*** ./src/templates/spoiler_button.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/spoiler_button.html -->\n<li class="toggle-compose-spoiler fa ';
 if (o.composing_spoiler)  { ;
__p += ' fa-eye-slash ';
 } ;
__p += ' ';
 if (!o.composing_spoiler)  { ;
__p += ' fa-eye ';
 } ;
__p += '"\n    title="' +
((__t = ( o.label_toggle_spoiler )) == null ? '' : __t) +
'"></a>\n</li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/status_message.html":
/*!*******************************************!*\
  !*** ./src/templates/status_message.html ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/status_message.html -->\n<div class="message chat-info chat-status"\n     data-isodate="' +
__e(o.isodate) +
'"\n     data-status="' +
__e(o.from) +
'">' +
__e(o.message) +
'</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/status_option.html":
/*!******************************************!*\
  !*** ./src/templates/status_option.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/status_option.html -->\n<li>\n    <a href="#" class="' +
__e( o.value ) +
'" data-value="' +
__e( o.value ) +
'">\n        <span class="icon-' +
__e( o.value ) +
'"></span>\n        ' +
__e( o.text ) +
'\n    </a>\n</li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/toggle_chats.html":
/*!*****************************************!*\
  !*** ./src/templates/toggle_chats.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/toggle_chats.html -->\n' +
__e(o.num_minimized) +
' ' +
__e(o.Minimized) +
'\n<span class="unread-message-count ';
 if (!o.num_unread) { ;
__p += ' unread-message-count-hidden ';
 } ;
__p += '" href="#">' +
__e(o.num_unread) +
'</span>\n';
return __p
};

/***/ }),

/***/ "./src/templates/toolbar.html":
/*!************************************!*\
  !*** ./src/templates/toolbar.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/toolbar.html -->\n';
 if (o.use_emoji)  { ;
__p += '\n<li class="toggle-toolbar-menu toggle-smiley dropup">\n    <a class="toggle-smiley far fa-smile" title="' +
__e(o.tooltip_insert_smiley) +
'" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></a> \n    <div class="emoji-picker dropdown-menu toolbar-menu"></div>\n</li>\n';
 } ;
__p += '\n';
 if (o.show_call_button)  { ;
__p += '\n<li class="toggle-call fa fa-phone" title="' +
__e(o.label_start_call) +
'"></li>\n';
 } ;
__p += '\n';
 if (o.show_occupants_toggle)  { ;
__p += '\n<li class="toggle-occupants fa fa-angle-double-right" title="' +
__e(o.label_hide_occupants) +
'"></li>\n';
 } ;
__p += '\n';
return __p
};

/***/ }),

/***/ "./src/templates/toolbar_fileupload.html":
/*!***********************************************!*\
  !*** ./src/templates/toolbar_fileupload.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/toolbar_fileupload.html -->\n<li class="upload-file">\n    <a class="fa fa-paperclip" title="' +
__e(o.tooltip_upload_file) +
'"></a>\n    <input type="file" class="fileupload" multiple style="display:none"/>\n</li> \n';
return __p
};

/***/ }),

/***/ "./src/templates/toolbar_omemo.html":
/*!******************************************!*\
  !*** ./src/templates/toolbar_omemo.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/toolbar_omemo.html -->\n<li class="toggle-omemo fa ';
 if (o.omemo_active) { ;
__p += ' fa-lock ';
 } else { ;
__p += ' fa-unlock ';
 } ;
__p += '" title="' +
__e(o.__('Messages are being sent in plaintext')) +
'"></li>\n';
return __p
};

/***/ }),

/***/ "./src/templates/trimmed_chat.html":
/*!*****************************************!*\
  !*** ./src/templates/trimmed_chat.html ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/trimmed_chat.html -->\n<a href="#" class="restore-chat w-100 align-self-center" title="' +
__e(o.tooltip) +
'">\n    ';
 if (o.num_unread) { ;
__p += ' \n        <span class="message-count badge badge-light">' +
__e(o.num_unread) +
'</span>\n    ';
 } ;
__p += '\n    ' +
__e(o.title || o.jid ) +
'\n</a>\n<a class="chatbox-btn close-chatbox-button fa fa-times"></a>\n';
return __p
};

/***/ }),

/***/ "./src/templates/user_details_modal.html":
/*!***********************************************!*\
  !*** ./src/templates/user_details_modal.html ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<!-- src/templates/user_details_modal.html -->\n<div class="modal fade" id="user-details-modal" tabindex="-1" role="dialog" aria-labelledby="user-details-modal-label" aria-hidden="true">\n    <div class="modal-dialog" role="document">\n        <div class="modal-content">\n            <div class="modal-header">\n                <h5 class="modal-title" id="user-details-modal-label">' +
__e(o.display_name) +
'</h5>\n                <button type="button" class="close" data-dismiss="modal" aria-label="' +
__e(o.__('Close')) +
'"><span aria-hidden="true">&times;</span></button>\n            </div>\n            <div class="modal-body">\n                ';
 if (o.image) { ;
__p += '\n                <img alt="' +
__e(o.__('The User\'s Profile Image')) +
'"\n                    class="img-thumbnail avatar align-self-center mb-3"\n                    height="100" width="100" src="data:' +
__e(o.image_type) +
';base64,' +
__e(o.image) +
'"/>\n                ';
 } ;
__p += '\n                ';
 if (o.fullname) { ;
__p += '\n                <p><label>' +
__e(o.__('Full Name')) +
':</label>&nbsp;' +
__e(o.fullname) +
'</p>\n                ';
 } ;
__p += '\n                <p><label>' +
__e(o.__('XMPP Address')) +
':</label>&nbsp;' +
__e(o.jid) +
'</p>\n                ';
 if (o.nickname) { ;
__p += '\n                <p><label>' +
__e(o.__('Nickname')) +
':</label>&nbsp;' +
__e(o.nickname) +
'</p>\n                ';
 } ;
__p += '\n                ';
 if (o.url) { ;
__p += '\n                <p><label>' +
__e(o.__('URL')) +
':</label>&nbsp;<a target="_blank" rel="noopener" href="' +
__e(o.url) +
'">' +
__e(o.url) +
'</a></p>\n                ';
 } ;
__p += '\n                ';
 if (o.email) { ;
__p += '\n                <p><label>' +
__e(o.__('Email')) +
':</label>&nbsp;<a href="mailto:' +
__e(o.email) +
'">' +
__e(o.email) +
'</a></p>\n                ';
 } ;
__p += '\n                ';
 if (o.role) { ;
__p += '\n                <p><label>' +
__e(o.__('Role')) +
':</label>&nbsp;' +
__e(o.role) +
'</p>\n                ';
 } ;
__p += '\n\n                ';
 if (o._converse.pluggable.plugins['converse-omemo'].enabled(o._converse)) { ;
__p += '\n                    <hr>\n                    <ul class="list-group fingerprints">\n                        <li class="list-group-item active">' +
__e(o.__('OMEMO Fingerprints')) +
'</li>\n                        ';
 if (!o.view.devicelist.devices) { ;
__p += '\n                            <li class="list-group-item"><span class="spinner fa fa-spinner centered"/></li>\n                        ';
 } ;
__p += '\n                        ';
 if (o.view.devicelist.devices) { ;
__p += '\n                            ';
 o.view.devicelist.devices.each(function (device) { ;
__p += '\n                                ';
 if (device.get('bundle') && device.get('bundle').fingerprint) { ;
__p += '\n                                <li class="list-group-item">\n                                    <form class="fingerprint-trust">\n                                    <div class="btn-group btn-group-toggle">\n                                        <label class="btn btn--small ';
 if (device.get('trusted') !== -1) { ;
__p += ' btn-primary active ';
 } else { ;
__p += '  btn-secondary ';
 } ;
__p += '">\n                                            <input type="radio" name="' +
__e(device.get('id')) +
'" value="1"\n                                                ';
 if (device.get('trusted') !== -1) { ;
__p += ' checked="checked" ';
 } ;
__p += '>' +
__e(o.__('Trusted')) +
'\n                                        </label>\n                                        <label class="btn btn--small ';
 if (device.get('trusted') === -1) { ;
__p += ' btn-primary active ';
 } else { ;
__p += ' btn-secondary ';
 } ;
__p += '">\n                                            <input type="radio" name="' +
__e(device.get('id')) +
'" value="-1"\n                                                ';
 if (device.get('trusted') === -1) { ;
__p += ' checked="checked" ';
 } ;
__p += '>' +
__e(o.__('Untrusted')) +
'\n                                        </label>\n                                    </div>\n                                    <span class="fingerprint">' +
__e(o.utils.formatFingerprint(device.get('bundle').fingerprint)) +
'</span>\n                                    </form>\n                                </li>\n                                ';
 } ;
__p += '\n                            ';
 }); ;
__p += '\n                        ';
 } ;
__p += '\n                    </ul>\n                ';
 } ;
__p += '\n            </div>\n            <div class="modal-footer">\n                ';
 if (o.allow_contact_removal && o.is_roster_contact) { ;
__p += '\n                    <button type="button" class="btn btn-danger remove-contact"><i class="far fa-trash-alt"> </i>' +
__e(o.__('Remove as contact')) +
'</button>\n                ';
 } ;
__p += '\n                <button type="button" class="btn btn-info refresh-contact"><i class="fa fa-refresh"> </i>' +
__e(o.__('Refresh')) +
'</button>\n                <button type="button" class="btn btn-secondary" data-dismiss="modal">' +
__e(o.__('Close')) +
'</button>\n            </div>\n        </div>\n    </div>\n</div>\n';
return __p
};

/***/ }),

/***/ "./src/templates/vcard.html":
/*!**********************************!*\
  !*** ./src/templates/vcard.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/vcard.html -->\n<vCard xmlns="vcard-temp">\n    <FN>' +
__e(o.fn) +
'</FN>\n    <NICKNAME>' +
__e(o.nickname) +
'</NICKNAME>\n    <URL>' +
__e(o.url) +
'</URL>\n    <ROLE>' +
__e(o.role) +
'</ROLE>\n    <EMAIL><INTERNET/><PREF/><USERID>' +
__e(o.email) +
'</USERID></EMAIL>\n    <PHOTO>\n      <TYPE>' +
__e(o.image_type) +
'</TYPE>\n      <BINVAL>' +
__e(o.image) +
'</BINVAL>\n    </PHOTO>\n</vCard>\n';
return __p
};

/***/ }),

/***/ "./src/templates/video.html":
/*!**********************************!*\
  !*** ./src/templates/video.html ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _ = {escape:__webpack_require__(/*! ./node_modules/lodash/escape.js */ "./node_modules/lodash/escape.js")};
module.exports = function(o) {
var __t, __p = '', __e = _.escape;
__p += '<!-- src/templates/video.html -->\n<video controls><source src="' +
__e(o.url) +
'" type="video/mp4"></video>\n<a target="_blank" rel="noopener" href="' +
__e(o.url) +
'">' +
__e(o.label_download) +
'</a>\n';
return __p
};

/***/ }),

/***/ "./src/underscore-shim.js":
/*!********************************!*\
  !*** ./src/underscore-shim.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

/*global define */
!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! lodash */ "lodash")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {
  return _.noConflict();
}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),

/***/ "./src/utils/core.js":
/*!***************************!*\
  !*** ./src/utils/core.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _instanceof(left, right) { if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// This is the utilities module.
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define, escape, window, Uint8Array */
(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! sizzle */ "./node_modules/sizzle/dist/sizzle.js"), __webpack_require__(/*! es6-promise */ "es6-promise"), __webpack_require__(/*! lodash.noconflict */ "lodash.noconflict"), __webpack_require__(/*! backbone */ "./node_modules/backbone/backbone.js"), __webpack_require__(/*! strophe */ "strophe"), __webpack_require__(/*! uri */ "./node_modules/urijs/src/URI.js"), __webpack_require__(/*! templates/audio.html */ "./src/templates/audio.html"), __webpack_require__(/*! templates/file.html */ "./src/templates/file.html"), __webpack_require__(/*! templates/image.html */ "./src/templates/image.html"), __webpack_require__(/*! templates/video.html */ "./src/templates/video.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var Strophe; }
})(void 0, function (sizzle, Promise, _, Backbone, Strophe, URI, tpl_audio, tpl_file, tpl_image, tpl_video) {
  "use strict";

  Strophe = Strophe.Strophe;
  var URL_REGEX = /\b(https?:\/\/|www\.|https?:\/\/www\.)[^\s<>]{2,200}\b\/?/g;

  var logger = _.assign({
    'debug': _.get(console, 'log') ? console.log.bind(console) : _.noop,
    'error': _.get(console, 'log') ? console.log.bind(console) : _.noop,
    'info': _.get(console, 'log') ? console.log.bind(console) : _.noop,
    'warn': _.get(console, 'log') ? console.log.bind(console) : _.noop
  }, console);

  var isImage = function isImage(url) {
    return new Promise(function (resolve, reject) {
      var img = new Image();
      var timer = window.setTimeout(function () {
        reject(new Error("Could not determine whether it's an image"));
        img = null;
      }, 3000);

      img.onerror = img.onabort = function () {
        clearTimeout(timer);
        reject(new Error("Could not determine whether it's an image"));
      };

      img.onload = function () {
        clearTimeout(timer);
        resolve(img);
      };

      img.src = url;
    });
  };

  function slideOutWrapup(el) {
    /* Wrapup function for slideOut. */
    el.removeAttribute('data-slider-marker');
    el.classList.remove('collapsed');
    el.style.overflow = "";
    el.style.height = "";
  }

  var u = {};

  u.getLongestSubstring = function (string, candidates) {
    function reducer(accumulator, current_value) {
      if (string.startsWith(current_value)) {
        if (current_value.length > accumulator.length) {
          return current_value;
        } else {
          return accumulator;
        }
      } else {
        return accumulator;
      }
    }

    return candidates.reduce(reducer, '');
  };

  u.getNextElement = function (el) {
    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';
    var next_el = el.nextElementSibling;

    while (!_.isNull(next_el) && !sizzle.matchesSelector(next_el, selector)) {
      next_el = next_el.nextElementSibling;
    }

    return next_el;
  };

  u.getPreviousElement = function (el) {
    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';
    var prev_el = el.previousSibling;

    while (!_.isNull(prev_el) && !sizzle.matchesSelector(prev_el, selector)) {
      prev_el = prev_el.previousSibling;
    }

    return prev_el;
  };

  u.getFirstChildElement = function (el) {
    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';
    var first_el = el.firstElementChild;

    while (!_.isNull(first_el) && !sizzle.matchesSelector(first_el, selector)) {
      first_el = first_el.nextSibling;
    }

    return first_el;
  };

  u.getLastChildElement = function (el) {
    var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '*';
    var last_el = el.lastElementChild;

    while (!_.isNull(last_el) && !sizzle.matchesSelector(last_el, selector)) {
      last_el = last_el.previousSibling;
    }

    return last_el;
  };

  u.calculateElementHeight = function (el) {
    /* Return the height of the passed in DOM element,
     * based on the heights of its children.
     */
    return _.reduce(el.children, function (result, child) {
      return result + child.offsetHeight;
    }, 0);
  };

  u.addClass = function (className, el) {
    if (_instanceof(el, Element)) {
      el.classList.add(className);
    }
  };

  u.removeClass = function (className, el) {
    if (_instanceof(el, Element)) {
      el.classList.remove(className);
    }

    return el;
  };

  u.removeElement = function (el) {
    if (!_.isNil(el) && !_.isNil(el.parentNode)) {
      el.parentNode.removeChild(el);
    }
  };

  u.showElement = _.flow(_.partial(u.removeClass, 'collapsed'), _.partial(u.removeClass, 'hidden'));

  u.hideElement = function (el) {
    if (!_.isNil(el)) {
      el.classList.add('hidden');
    }

    return el;
  };

  u.ancestor = function (el, selector) {
    var parent = el;

    while (!_.isNil(parent) && !sizzle.matchesSelector(parent, selector)) {
      parent = parent.parentElement;
    }

    return parent;
  };

  u.nextUntil = function (el, selector) {
    var include_self = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    /* Return the element's siblings until one matches the selector. */
    var matches = [];
    var sibling_el = el.nextElementSibling;

    while (!_.isNil(sibling_el) && !sibling_el.matches(selector)) {
      matches.push(sibling_el);
      sibling_el = sibling_el.nextElementSibling;
    }

    return matches;
  };

  u.unescapeHTML = function (string) {
    /* Helper method that replace HTML-escaped symbols with equivalent characters
     * (e.g. transform occurrences of '&amp;' to '&')
     *
     * Parameters:
     *  (String) string: a String containing the HTML-escaped symbols.
     */
    var div = document.createElement('div');
    div.innerHTML = string;
    return div.innerText;
  };

  u.escapeHTML = function (string) {
    return string.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
  };

  u.escapeURL = function (url) {
    return encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\*/g, "%2A");
  };

  u.prefixMentions = function (message) {
    /* Given a message object, return its text with @ chars
     * inserted before the mentioned nicknames.
     */
    var text = message.get('message');
    (message.get('references') || []).sort(function (a, b) {
      return b.begin - a.begin;
    }).forEach(function (ref) {
      text = "".concat(text.slice(0, ref.begin), "@").concat(text.slice(ref.begin));
    });
    return text;
  };

  u.addMentionsMarkup = function (text, references, chatbox) {
    if (chatbox.get('message_type') !== 'groupchat') {
      return text;
    }

    var nick = chatbox.get('nick');
    references.sort(function (a, b) {
      return b.begin - a.begin;
    }).forEach(function (ref) {
      var mention = text.slice(ref.begin, ref.end);
      chatbox;

      if (mention === nick) {
        text = text.slice(0, ref.begin) + "<span class=\"mention mention--self badge badge-info\">".concat(mention, "</span>") + text.slice(ref.end);
      } else {
        text = text.slice(0, ref.begin) + "<span class=\"mention\">".concat(mention, "</span>") + text.slice(ref.end);
      }
    });
    return text;
  };

  u.addHyperlinks = function (text) {
    return URI.withinString(text, function (url) {
      var uri = new URI(url);
      uri.normalize();

      if (!url.startsWith('http://') && !url.startsWith('https://')) {
        url = 'http://' + url;
      }

      url = u.escapeHTML(u.escapeURL(url));
      return "<a target=\"_blank\" rel=\"noopener\" href=\"".concat(url, "\">").concat(u.escapeHTML(uri.readable()), "</a>");
    });
  };

  u.renderNewLines = function (text) {
    return text.replace(/\n\n+/g, '<br/><br/>').replace(/\n/g, '<br/>');
  };

  u.renderImageURLs = function (_converse, obj) {
    /* Returns a Promise which resolves once all images have been loaded.
     */
    var __ = _converse.__;
    var list = obj.textContent.match(URL_REGEX) || [];
    return Promise.all(_.map(list, function (url) {
      return new Promise(function (resolve, reject) {
        return isImage(url).then(function (img) {
          var i = new Image();
          i.src = img.src;
          i.addEventListener('load', resolve); // We also resolve for non-images, otherwise the
          // Promise.all resolves prematurely.

          i.addEventListener('error', resolve);

          _.each(sizzle("a[href=\"".concat(url, "\"]"), obj), function (a) {
            a.outerHTML = tpl_image({
              'url': url,
              'label_download': __('Download')
            });
          });
        }).catch(resolve);
      });
    }));
  };

  u.renderFileURL = function (_converse, url) {
    var uri = new URI(url),
        __ = _converse.__,
        filename = uri.filename(),
        lower_filename = filename.toLowerCase();

    if (!_.includes(["https", "http"], uri.protocol().toLowerCase()) || lower_filename.endsWith('mp3') || lower_filename.endsWith('mp4') || lower_filename.endsWith('jpg') || lower_filename.endsWith('jpeg') || lower_filename.endsWith('png') || lower_filename.endsWith('gif') || lower_filename.endsWith('svg')) {
      return url;
    }

    return tpl_file({
      'url': url,
      'label_download': __('Download "%1$s"', uri.filename())
    });
  };

  u.renderImageURL = function (_converse, url) {
    var __ = _converse.__,
        lurl = url.toLowerCase();

    if (lurl.endsWith('jpg') || lurl.endsWith('jpeg') || lurl.endsWith('png') || lurl.endsWith('gif') || lurl.endsWith('svg')) {
      return tpl_image({
        'url': url,
        'label_download': __('Download')
      });
    }

    return url;
  };

  u.renderMovieURL = function (_converse, url) {
    var __ = _converse.__;

    if (url.endsWith('mp4')) {
      return tpl_video({
        'url': url,
        'label_download': __('Download video file')
      });
    }

    return url;
  };

  u.renderAudioURL = function (_converse, url) {
    var __ = _converse.__;

    if (url.endsWith('mp3')) {
      return tpl_audio({
        'url': url,
        'label_download': __('Download audio file')
      });
    }

    return url;
  };

  u.slideInAllElements = function (elements) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;
    return Promise.all(_.map(elements, _.partial(u.slideIn, _, duration)));
  };

  u.slideToggleElement = function (el, duration) {
    if (_.includes(el.classList, 'collapsed') || _.includes(el.classList, 'hidden')) {
      return u.slideOut(el, duration);
    } else {
      return u.slideIn(el, duration);
    }
  };

  u.hasClass = function (className, el) {
    return _.includes(el.classList, className);
  };

  u.slideOut = function (el) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;

    /* Shows/expands an element by sliding it out of itself
     *
     * Parameters:
     *      (HTMLElement) el - The HTML string
     *      (Number) duration - The duration amount in milliseconds
     */
    return new Promise(function (resolve, reject) {
      if (_.isNil(el)) {
        var err = "Undefined or null element passed into slideOut";
        logger.warn(err);
        reject(new Error(err));
        return;
      }

      var marker = el.getAttribute('data-slider-marker');

      if (marker) {
        el.removeAttribute('data-slider-marker');
        window.cancelAnimationFrame(marker);
      }

      var end_height = u.calculateElementHeight(el);

      if (window.converse_disable_effects) {
        // Effects are disabled (for tests)
        el.style.height = end_height + 'px';
        slideOutWrapup(el);
        resolve();
        return;
      }

      if (!u.hasClass('collapsed', el) && !u.hasClass('hidden', el)) {
        resolve();
        return;
      }

      var steps = duration / 17; // We assume 17ms per animation which is ~60FPS

      var height = 0;

      function draw() {
        height += end_height / steps;

        if (height < end_height) {
          el.style.height = height + 'px';
          el.setAttribute('data-slider-marker', window.requestAnimationFrame(draw));
        } else {
          // We recalculate the height to work around an apparent
          // browser bug where browsers don't know the correct
          // offsetHeight beforehand.
          el.removeAttribute('data-slider-marker');
          el.style.height = u.calculateElementHeight(el) + 'px';
          el.style.overflow = "";
          el.style.height = "";
          resolve();
        }
      }

      el.style.height = '0';
      el.style.overflow = 'hidden';
      el.classList.remove('hidden');
      el.classList.remove('collapsed');
      el.setAttribute('data-slider-marker', window.requestAnimationFrame(draw));
    });
  };

  u.slideIn = function (el) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;

    /* Hides/collapses an element by sliding it into itself. */
    return new Promise(function (resolve, reject) {
      if (_.isNil(el)) {
        var err = "Undefined or null element passed into slideIn";
        logger.warn(err);
        return reject(new Error(err));
      } else if (_.includes(el.classList, 'collapsed')) {
        return resolve(el);
      } else if (window.converse_disable_effects) {
        // Effects are disabled (for tests)
        el.classList.add('collapsed');
        el.style.height = "";
        return resolve(el);
      }

      var marker = el.getAttribute('data-slider-marker');

      if (marker) {
        el.removeAttribute('data-slider-marker');
        window.cancelAnimationFrame(marker);
      }

      var original_height = el.offsetHeight,
          steps = duration / 17; // We assume 17ms per animation which is ~60FPS

      var height = original_height;
      el.style.overflow = 'hidden';

      function draw() {
        height -= original_height / steps;

        if (height > 0) {
          el.style.height = height + 'px';
          el.setAttribute('data-slider-marker', window.requestAnimationFrame(draw));
        } else {
          el.removeAttribute('data-slider-marker');
          el.classList.add('collapsed');
          el.style.height = "";
          resolve(el);
        }
      }

      el.setAttribute('data-slider-marker', window.requestAnimationFrame(draw));
    });
  };

  function afterAnimationEnds(el, callback) {
    el.classList.remove('visible');

    if (_.isFunction(callback)) {
      callback();
    }
  }

  u.fadeIn = function (el, callback) {
    if (_.isNil(el)) {
      logger.warn("Undefined or null element passed into fadeIn");
    }

    if (window.converse_disable_effects) {
      el.classList.remove('hidden');
      return afterAnimationEnds(el, callback);
    }

    if (_.includes(el.classList, 'hidden')) {
      el.classList.add('visible');
      el.classList.remove('hidden');
      el.addEventListener("webkitAnimationEnd", _.partial(afterAnimationEnds, el, callback));
      el.addEventListener("animationend", _.partial(afterAnimationEnds, el, callback));
      el.addEventListener("oanimationend", _.partial(afterAnimationEnds, el, callback));
    } else {
      afterAnimationEnds(el, callback);
    }
  };

  u.isValidJID = function (jid) {
    return _.compact(jid.split('@')).length === 2 && !jid.startsWith('@') && !jid.endsWith('@');
  };

  u.isValidMUCJID = function (jid) {
    return !jid.startsWith('@') && !jid.endsWith('@');
  };

  u.isSameBareJID = function (jid1, jid2) {
    return Strophe.getBareJidFromJid(jid1).toLowerCase() === Strophe.getBareJidFromJid(jid2).toLowerCase();
  };

  u.getMostRecentMessage = function (model) {
    var messages = model.messages.filter('message');
    return messages[messages.length - 1];
  };

  u.isNewMessage = function (message) {
    /* Given a stanza, determine whether it's a new
     * message, i.e. not a MAM archived one.
     */
    if (_instanceof(message, Element)) {
      return !(sizzle("result[xmlns=\"".concat(Strophe.NS.MAM, "\"]"), message).length && sizzle("delay[xmlns=\"".concat(Strophe.NS.DELAY, "\"]"), message).length);
    } else {
      return !(message.get('is_delayed') && message.get('is_archived'));
    }
  };

  u.isOnlyChatStateNotification = function (attrs) {
    if (_instanceof(attrs, Backbone.Model)) {
      attrs = attrs.attributes;
    }

    return attrs['chat_state'] && !attrs['oob_url'] && !attrs['file'] && !attrs['message'];
  };

  u.isHeadlineMessage = function (_converse, message) {
    var from_jid = message.getAttribute('from');

    if (message.getAttribute('type') === 'headline') {
      return true;
    }

    var chatbox = _converse.chatboxes.get(Strophe.getBareJidFromJid(from_jid));

    if (chatbox && chatbox.get('type') === 'chatroom') {
      return false;
    }

    if (message.getAttribute('type') !== 'error' && !_.isNil(from_jid) && !_.includes(from_jid, '@')) {
      // Some servers (I'm looking at you Prosody) don't set the message
      // type to "headline" when sending server messages. For now we
      // check if an @ signal is included, and if not, we assume it's
      // a headline message.
      return true;
    }

    return false;
  };

  u.merge = function merge(first, second) {
    /* Merge the second object into the first one.
     */
    for (var k in second) {
      if (_.isObject(first[k])) {
        merge(first[k], second[k]);
      } else {
        first[k] = second[k];
      }
    }
  };

  u.applyUserSettings = function applyUserSettings(context, settings, user_settings) {
    /* Configuration settings might be nested objects. We only want to
     * add settings which are whitelisted.
     */
    for (var k in settings) {
      if (_.isUndefined(user_settings[k])) {
        continue;
      }

      if (_.isObject(settings[k]) && !_.isArray(settings[k])) {
        applyUserSettings(context[k], settings[k], user_settings[k]);
      } else {
        context[k] = user_settings[k];
      }
    }
  };

  u.stringToNode = function (s) {
    /* Converts an HTML string into a DOM Node.
     * Expects that the HTML string has only one top-level element,
     * i.e. not multiple ones.
     *
     * Parameters:
     *      (String) s - The HTML string
     */
    var div = document.createElement('div');
    div.innerHTML = s;
    return div.firstElementChild;
  };

  u.getOuterWidth = function (el) {
    var include_margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var width = el.offsetWidth;

    if (!include_margin) {
      return width;
    }

    var style = window.getComputedStyle(el);
    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);
    return width;
  };

  u.stringToElement = function (s) {
    /* Converts an HTML string into a DOM element.
     * Expects that the HTML string has only one top-level element,
     * i.e. not multiple ones.
     *
     * Parameters:
     *      (String) s - The HTML string
     */
    var div = document.createElement('div');
    div.innerHTML = s;
    return div.firstElementChild;
  };

  u.matchesSelector = function (el, selector) {
    /* Checks whether the DOM element matches the given selector.
     *
     * Parameters:
     *      (DOMElement) el - The DOM element
     *      (String) selector - The selector
     */
    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);
  };

  u.queryChildren = function (el, selector) {
    /* Returns a list of children of the DOM element that match the
     * selector.
     *
     *  Parameters:
     *      (DOMElement) el - the DOM element
     *      (String) selector - the selector they should be matched
     *          against.
     */
    return _.filter(el.childNodes, _.partial(u.matchesSelector, _, selector));
  };

  u.contains = function (attr, query) {
    return function (item) {
      if (_typeof(attr) === 'object') {
        var value = false;

        _.forEach(attr, function (a) {
          value = value || _.includes(item.get(a).toLowerCase(), query.toLowerCase());
        });

        return value;
      } else if (typeof attr === 'string') {
        return _.includes(item.get(attr).toLowerCase(), query.toLowerCase());
      } else {
        throw new TypeError('contains: wrong attribute type. Must be string or array.');
      }
    };
  };

  u.isOfType = function (type, item) {
    return item.get('type') == type;
  };

  u.isInstance = function (type, item) {
    return _instanceof(item, type);
  };

  u.getAttribute = function (key, item) {
    return item.get(key);
  };

  u.contains.not = function (attr, query) {
    return function (item) {
      return !u.contains(attr, query)(item);
    };
  };

  u.rootContains = function (root, el) {
    // The document element does not have the contains method in IE.
    if (root === document && !root.contains) {
      return document.head.contains(el) || document.body.contains(el);
    }

    return root.contains ? root.contains(el) : window.HTMLElement.prototype.contains.call(root, el);
  };

  u.createFragmentFromText = function (markup) {
    /* Returns a DocumentFragment containing DOM nodes based on the
     * passed-in markup text.
     */
    // http://stackoverflow.com/questions/9334645/create-node-from-markup-string
    var frag = document.createDocumentFragment(),
        tmp = document.createElement('body'),
        child;
    tmp.innerHTML = markup; // Append elements in a loop to a DocumentFragment, so that the
    // browser does not re-render the document for each node.

    while (child = tmp.firstChild) {
      // eslint-disable-line no-cond-assign
      frag.appendChild(child);
    }

    return frag;
  };

  u.isPersistableModel = function (model) {
    return model.collection && model.collection.browserStorage;
  };

  u.getResolveablePromise = function () {
    /* Returns a promise object on which `resolve` or `reject` can be
     * called.
     */
    var wrapper = {};
    var promise = new Promise(function (resolve, reject) {
      wrapper.resolve = resolve;
      wrapper.reject = reject;
    });

    _.assign(promise, wrapper);

    return promise;
  };

  u.interpolate = function (string, o) {
    return string.replace(/{{{([^{}]*)}}}/g, function (a, b) {
      var r = o[b];
      return typeof r === 'string' || typeof r === 'number' ? r : a;
    });
  };

  u.onMultipleEvents = function () {
    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var callback = arguments.length > 1 ? arguments[1] : undefined;

    /* Call the callback once all the events have been triggered
     *
     * Parameters:
     *  (Array) events: An array of objects, with keys `object` and
     *      `event`, representing the event name and the object it's
     *      triggered upon.
     *  (Function) callback: The function to call once all events have
     *      been triggered.
     */
    var triggered = [];

    function handler(result) {
      triggered.push(result);

      if (events.length === triggered.length) {
        callback(triggered);
        triggered = [];
      }
    }

    _.each(events, function (map) {
      return map.object.on(map.event, handler);
    });
  };

  u.safeSave = function (model, attributes) {
    if (u.isPersistableModel(model)) {
      model.save(attributes);
    } else {
      model.set(attributes);
    }
  };

  u.siblingIndex = function (el) {
    /* eslint-disable no-cond-assign */
    for (var i = 0; el = el.previousElementSibling; i++) {
      ;
    }

    return i;
  };

  u.getCurrentWord = function (input) {
    var cursor = input.selectionEnd || undefined;
    return _.last(input.value.slice(0, cursor).split(' '));
  };

  u.replaceCurrentWord = function (input, new_value) {
    var cursor = input.selectionEnd || undefined,
        current_word = _.last(input.value.slice(0, cursor).split(' ')),
        value = input.value;

    input.value = value.slice(0, cursor - current_word.length) + "".concat(new_value, " ") + value.slice(cursor);
    input.selectionEnd = cursor - current_word.length + new_value.length + 1;
  };

  u.isVisible = function (el) {
    if (u.hasClass('hidden', el)) {
      return false;
    } // XXX: Taken from jQuery's "visible" implementation


    return el.offsetWidth > 0 || el.offsetHeight > 0 || el.getClientRects().length > 0;
  };

  u.triggerEvent = function (el, name) {
    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Event";
    var bubbles = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
    var cancelable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
    var evt = document.createEvent(type);
    evt.initEvent(name, bubbles, cancelable);
    el.dispatchEvent(evt);
  };

  u.geoUriToHttp = function (text, geouri_replacement) {
    var regex = /geo:([\-0-9.]+),([\-0-9.]+)(?:,([\-0-9.]+))?(?:\?(.*))?/g;
    return text.replace(regex, geouri_replacement);
  };

  u.httpToGeoUri = function (text, _converse) {
    var replacement = 'geo:$1,$2';
    return text.replace(_converse.geouri_regex, replacement);
  };

  u.getSelectValues = function (select) {
    var result = [];
    var options = select && select.options;

    for (var i = 0, iLen = options.length; i < iLen; i++) {
      var opt = options[i];

      if (opt.selected) {
        result.push(opt.value || opt.text);
      }
    }

    return result;
  };

  u.formatFingerprint = function (fp) {
    fp = fp.replace(/^05/, '');
    var arr = [];

    for (var i = 1; i < 8; i++) {
      var idx = i * 8 + i - 1;
      fp = fp.slice(0, idx) + ' ' + fp.slice(idx);
    }

    return fp;
  };

  u.appendArrayBuffer = function (buffer1, buffer2) {
    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);
    tmp.set(new Uint8Array(buffer1), 0);
    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);
    return tmp.buffer;
  };

  u.arrayBufferToHex = function (ab) {
    // https://stackoverflow.com/questions/40031688/javascript-arraybuffer-to-hex#40031979
    return Array.prototype.map.call(new Uint8Array(ab), function (x) {
      return ('00' + x.toString(16)).slice(-2);
    }).join('');
  };

  u.arrayBufferToString = function (ab) {
    return new Uint8Array(ab).reduce(function (data, byte) {
      return data + String.fromCharCode(byte);
    }, '');
  };

  u.stringToArrayBuffer = function (string) {
    var len = string.length,
        bytes = new Uint8Array(len);

    for (var i = 0; i < len; i++) {
      bytes[i] = string.charCodeAt(i);
    }

    return bytes.buffer;
  };

  u.arrayBufferToBase64 = function (ab) {
    return btoa(new Uint8Array(ab).reduce(function (data, byte) {
      return data + String.fromCharCode(byte);
    }, ''));
  };

  u.base64ToArrayBuffer = function (b64) {
    var binary_string = window.atob(b64),
        len = binary_string.length,
        bytes = new Uint8Array(len);

    for (var i = 0; i < len; i++) {
      bytes[i] = binary_string.charCodeAt(i);
    }

    return bytes.buffer;
  };

  u.getRandomInt = function (max) {
    return Math.floor(Math.random() * Math.floor(max));
  };

  u.putCurserAtEnd = function (textarea) {
    if (textarea !== document.activeElement) {
      textarea.focus();
    } // Double the length because Opera is inconsistent about whether a carriage return is one character or two.


    var len = textarea.value.length * 2; // Timeout seems to be required for Blink

    setTimeout(function () {
      return textarea.setSelectionRange(len, len);
    }, 1); // Scroll to the bottom, in case we're in a tall textarea
    // (Necessary for Firefox and Chrome)

    this.scrollTop = 999999;
  };

  u.getUniqueId = function () {
    return 'xxxxxxxx-xxxx'.replace(/[x]/g, function (c) {
      var r = Math.random() * 16 | 0,
          v = c === 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  };

  return u;
});

/***/ }),

/***/ "./src/utils/emoji.js":
/*!****************************!*\
  !*** ./src/utils/emoji.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! lodash.noconflict */ "lodash.noconflict"), __webpack_require__(/*! utils/core */ "./src/utils/core.js"), __webpack_require__(/*! twemoji */ "./node_modules/twemoji/2/esm.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (_, u, twemoji) {
  "use strict";

  var emoji_list = {
    ":kiss_mm:": {
      "uc_base": "1f468-2764-1f48b-1f468",
      "uc_output": "1f468-200d-2764-fe0f-200d-1f48b-200d-1f468",
      "uc_match": "1f468-2764-fe0f-1f48b-1f468",
      "uc_greedy": "1f468-2764-1f48b-1f468",
      "shortnames": [":couplekiss_mm:"],
      "category": "people"
    },
    ":kiss_woman_man:": {
      "uc_base": "1f469-2764-1f48b-1f468",
      "uc_output": "1f469-200d-2764-fe0f-200d-1f48b-200d-1f468",
      "uc_match": "1f469-2764-fe0f-1f48b-1f468",
      "uc_greedy": "1f469-2764-1f48b-1f468",
      "shortnames": [],
      "category": "people"
    },
    ":kiss_ww:": {
      "uc_base": "1f469-2764-1f48b-1f469",
      "uc_output": "1f469-200d-2764-fe0f-200d-1f48b-200d-1f469",
      "uc_match": "1f469-2764-fe0f-1f48b-1f469",
      "uc_greedy": "1f469-2764-1f48b-1f469",
      "shortnames": [":couplekiss_ww:"],
      "category": "people"
    },
    ":england:": {
      "uc_base": "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f",
      "uc_output": "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f",
      "uc_match": "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f",
      "uc_greedy": "1f3f4-e0067-e0062-e0065-e006e-e0067-e007f",
      "shortnames": [],
      "category": "flags"
    },
    ":scotland:": {
      "uc_base": "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f",
      "uc_output": "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f",
      "uc_match": "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f",
      "uc_greedy": "1f3f4-e0067-e0062-e0073-e0063-e0074-e007f",
      "shortnames": [],
      "category": "flags"
    },
    ":wales:": {
      "uc_base": "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f",
      "uc_output": "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f",
      "uc_match": "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f",
      "uc_greedy": "1f3f4-e0067-e0062-e0077-e006c-e0073-e007f",
      "shortnames": [],
      "category": "flags"
    },
    ":family_mmbb:": {
      "uc_base": "1f468-1f468-1f466-1f466",
      "uc_output": "1f468-200d-1f468-200d-1f466-200d-1f466",
      "uc_match": "1f468-1f468-1f466-1f466",
      "uc_greedy": "1f468-1f468-1f466-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mmgb:": {
      "uc_base": "1f468-1f468-1f467-1f466",
      "uc_output": "1f468-200d-1f468-200d-1f467-200d-1f466",
      "uc_match": "1f468-1f468-1f467-1f466",
      "uc_greedy": "1f468-1f468-1f467-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mmgg:": {
      "uc_base": "1f468-1f468-1f467-1f467",
      "uc_output": "1f468-200d-1f468-200d-1f467-200d-1f467",
      "uc_match": "1f468-1f468-1f467-1f467",
      "uc_greedy": "1f468-1f468-1f467-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_mwbb:": {
      "uc_base": "1f468-1f469-1f466-1f466",
      "uc_output": "1f468-200d-1f469-200d-1f466-200d-1f466",
      "uc_match": "1f468-1f469-1f466-1f466",
      "uc_greedy": "1f468-1f469-1f466-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mwgb:": {
      "uc_base": "1f468-1f469-1f467-1f466",
      "uc_output": "1f468-200d-1f469-200d-1f467-200d-1f466",
      "uc_match": "1f468-1f469-1f467-1f466",
      "uc_greedy": "1f468-1f469-1f467-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mwgg:": {
      "uc_base": "1f468-1f469-1f467-1f467",
      "uc_output": "1f468-200d-1f469-200d-1f467-200d-1f467",
      "uc_match": "1f468-1f469-1f467-1f467",
      "uc_greedy": "1f468-1f469-1f467-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_wwbb:": {
      "uc_base": "1f469-1f469-1f466-1f466",
      "uc_output": "1f469-200d-1f469-200d-1f466-200d-1f466",
      "uc_match": "1f469-1f469-1f466-1f466",
      "uc_greedy": "1f469-1f469-1f466-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_wwgb:": {
      "uc_base": "1f469-1f469-1f467-1f466",
      "uc_output": "1f469-200d-1f469-200d-1f467-200d-1f466",
      "uc_match": "1f469-1f469-1f467-1f466",
      "uc_greedy": "1f469-1f469-1f467-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_wwgg:": {
      "uc_base": "1f469-1f469-1f467-1f467",
      "uc_output": "1f469-200d-1f469-200d-1f467-200d-1f467",
      "uc_match": "1f469-1f469-1f467-1f467",
      "uc_greedy": "1f469-1f469-1f467-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":couple_mm:": {
      "uc_base": "1f468-2764-1f468",
      "uc_output": "1f468-200d-2764-fe0f-200d-1f468",
      "uc_match": "1f468-2764-fe0f-1f468",
      "uc_greedy": "1f468-2764-1f468",
      "shortnames": [":couple_with_heart_mm:"],
      "category": "people"
    },
    ":couple_with_heart_woman_man:": {
      "uc_base": "1f469-2764-1f468",
      "uc_output": "1f469-200d-2764-fe0f-200d-1f468",
      "uc_match": "1f469-2764-fe0f-1f468",
      "uc_greedy": "1f469-2764-1f468",
      "shortnames": [],
      "category": "people"
    },
    ":couple_ww:": {
      "uc_base": "1f469-2764-1f469",
      "uc_output": "1f469-200d-2764-fe0f-200d-1f469",
      "uc_match": "1f469-2764-fe0f-1f469",
      "uc_greedy": "1f469-2764-1f469",
      "shortnames": [":couple_with_heart_ww:"],
      "category": "people"
    },
    ":family_man_boy_boy:": {
      "uc_base": "1f468-1f466-1f466",
      "uc_output": "1f468-200d-1f466-200d-1f466",
      "uc_match": "1f468-1f466-1f466",
      "uc_greedy": "1f468-1f466-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_man_girl_boy:": {
      "uc_base": "1f468-1f467-1f466",
      "uc_output": "1f468-200d-1f467-200d-1f466",
      "uc_match": "1f468-1f467-1f466",
      "uc_greedy": "1f468-1f467-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_man_girl_girl:": {
      "uc_base": "1f468-1f467-1f467",
      "uc_output": "1f468-200d-1f467-200d-1f467",
      "uc_match": "1f468-1f467-1f467",
      "uc_greedy": "1f468-1f467-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_man_woman_boy:": {
      "uc_base": "1f468-1f469-1f466",
      "uc_output": "1f468-200d-1f469-200d-1f466",
      "uc_match": "1f468-1f469-1f466",
      "uc_greedy": "1f468-1f469-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mmb:": {
      "uc_base": "1f468-1f468-1f466",
      "uc_output": "1f468-200d-1f468-200d-1f466",
      "uc_match": "1f468-1f468-1f466",
      "uc_greedy": "1f468-1f468-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_mmg:": {
      "uc_base": "1f468-1f468-1f467",
      "uc_output": "1f468-200d-1f468-200d-1f467",
      "uc_match": "1f468-1f468-1f467",
      "uc_greedy": "1f468-1f468-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_mwg:": {
      "uc_base": "1f468-1f469-1f467",
      "uc_output": "1f468-200d-1f469-200d-1f467",
      "uc_match": "1f468-1f469-1f467",
      "uc_greedy": "1f468-1f469-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_woman_boy_boy:": {
      "uc_base": "1f469-1f466-1f466",
      "uc_output": "1f469-200d-1f466-200d-1f466",
      "uc_match": "1f469-1f466-1f466",
      "uc_greedy": "1f469-1f466-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_woman_girl_boy:": {
      "uc_base": "1f469-1f467-1f466",
      "uc_output": "1f469-200d-1f467-200d-1f466",
      "uc_match": "1f469-1f467-1f466",
      "uc_greedy": "1f469-1f467-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_woman_girl_girl:": {
      "uc_base": "1f469-1f467-1f467",
      "uc_output": "1f469-200d-1f467-200d-1f467",
      "uc_match": "1f469-1f467-1f467",
      "uc_greedy": "1f469-1f467-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_wwb:": {
      "uc_base": "1f469-1f469-1f466",
      "uc_output": "1f469-200d-1f469-200d-1f466",
      "uc_match": "1f469-1f469-1f466",
      "uc_greedy": "1f469-1f469-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_wwg:": {
      "uc_base": "1f469-1f469-1f467",
      "uc_output": "1f469-200d-1f469-200d-1f467",
      "uc_match": "1f469-1f469-1f467",
      "uc_greedy": "1f469-1f469-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":blond-haired_man_tone1:": {
      "uc_base": "1f471-1f3fb-2642",
      "uc_output": "1f471-1f3fb-200d-2642-fe0f",
      "uc_match": "1f471-1f3fb-2642-fe0f",
      "uc_greedy": "1f471-1f3fb-2642",
      "shortnames": [":blond-haired_man_light_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_man_tone2:": {
      "uc_base": "1f471-1f3fc-2642",
      "uc_output": "1f471-1f3fc-200d-2642-fe0f",
      "uc_match": "1f471-1f3fc-2642-fe0f",
      "uc_greedy": "1f471-1f3fc-2642",
      "shortnames": [":blond-haired_man_medium_light_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_man_tone3:": {
      "uc_base": "1f471-1f3fd-2642",
      "uc_output": "1f471-1f3fd-200d-2642-fe0f",
      "uc_match": "1f471-1f3fd-2642-fe0f",
      "uc_greedy": "1f471-1f3fd-2642",
      "shortnames": [":blond-haired_man_medium_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_man_tone4:": {
      "uc_base": "1f471-1f3fe-2642",
      "uc_output": "1f471-1f3fe-200d-2642-fe0f",
      "uc_match": "1f471-1f3fe-2642-fe0f",
      "uc_greedy": "1f471-1f3fe-2642",
      "shortnames": [":blond-haired_man_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_man_tone5:": {
      "uc_base": "1f471-1f3ff-2642",
      "uc_output": "1f471-1f3ff-200d-2642-fe0f",
      "uc_match": "1f471-1f3ff-2642-fe0f",
      "uc_greedy": "1f471-1f3ff-2642",
      "shortnames": [":blond-haired_man_dark_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_woman_tone1:": {
      "uc_base": "1f471-1f3fb-2640",
      "uc_output": "1f471-1f3fb-200d-2640-fe0f",
      "uc_match": "1f471-1f3fb-2640-fe0f",
      "uc_greedy": "1f471-1f3fb-2640",
      "shortnames": [":blond-haired_woman_light_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_woman_tone2:": {
      "uc_base": "1f471-1f3fc-2640",
      "uc_output": "1f471-1f3fc-200d-2640-fe0f",
      "uc_match": "1f471-1f3fc-2640-fe0f",
      "uc_greedy": "1f471-1f3fc-2640",
      "shortnames": [":blond-haired_woman_medium_light_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_woman_tone3:": {
      "uc_base": "1f471-1f3fd-2640",
      "uc_output": "1f471-1f3fd-200d-2640-fe0f",
      "uc_match": "1f471-1f3fd-2640-fe0f",
      "uc_greedy": "1f471-1f3fd-2640",
      "shortnames": [":blond-haired_woman_medium_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_woman_tone4:": {
      "uc_base": "1f471-1f3fe-2640",
      "uc_output": "1f471-1f3fe-200d-2640-fe0f",
      "uc_match": "1f471-1f3fe-2640-fe0f",
      "uc_greedy": "1f471-1f3fe-2640",
      "shortnames": [":blond-haired_woman_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":blond-haired_woman_tone5:": {
      "uc_base": "1f471-1f3ff-2640",
      "uc_output": "1f471-1f3ff-200d-2640-fe0f",
      "uc_match": "1f471-1f3ff-2640-fe0f",
      "uc_greedy": "1f471-1f3ff-2640",
      "shortnames": [":blond-haired_woman_dark_skin_tone:"],
      "category": "people"
    },
    ":eye_in_speech_bubble:": {
      "uc_base": "1f441-1f5e8",
      "uc_output": "1f441-fe0f-200d-1f5e8-fe0f",
      "uc_match": "1f441-fe0f-200d-1f5e8",
      "uc_greedy": "1f441-1f5e8",
      "shortnames": [],
      "category": "symbols"
    },
    ":man_biking_tone1:": {
      "uc_base": "1f6b4-1f3fb-2642",
      "uc_output": "1f6b4-1f3fb-200d-2642-fe0f",
      "uc_match": "1f6b4-1f3fb-2642-fe0f",
      "uc_greedy": "1f6b4-1f3fb-2642",
      "shortnames": [":man_biking_light_skin_tone:"],
      "category": "activity"
    },
    ":man_biking_tone2:": {
      "uc_base": "1f6b4-1f3fc-2642",
      "uc_output": "1f6b4-1f3fc-200d-2642-fe0f",
      "uc_match": "1f6b4-1f3fc-2642-fe0f",
      "uc_greedy": "1f6b4-1f3fc-2642",
      "shortnames": [":man_biking_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_biking_tone3:": {
      "uc_base": "1f6b4-1f3fd-2642",
      "uc_output": "1f6b4-1f3fd-200d-2642-fe0f",
      "uc_match": "1f6b4-1f3fd-2642-fe0f",
      "uc_greedy": "1f6b4-1f3fd-2642",
      "shortnames": [":man_biking_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_biking_tone4:": {
      "uc_base": "1f6b4-1f3fe-2642",
      "uc_output": "1f6b4-1f3fe-200d-2642-fe0f",
      "uc_match": "1f6b4-1f3fe-2642-fe0f",
      "uc_greedy": "1f6b4-1f3fe-2642",
      "shortnames": [":man_biking_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_biking_tone5:": {
      "uc_base": "1f6b4-1f3ff-2642",
      "uc_output": "1f6b4-1f3ff-200d-2642-fe0f",
      "uc_match": "1f6b4-1f3ff-2642-fe0f",
      "uc_greedy": "1f6b4-1f3ff-2642",
      "shortnames": [":man_biking_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_bowing_tone1:": {
      "uc_base": "1f647-1f3fb-2642",
      "uc_output": "1f647-1f3fb-200d-2642-fe0f",
      "uc_match": "1f647-1f3fb-2642-fe0f",
      "uc_greedy": "1f647-1f3fb-2642",
      "shortnames": [":man_bowing_light_skin_tone:"],
      "category": "people"
    },
    ":man_bowing_tone2:": {
      "uc_base": "1f647-1f3fc-2642",
      "uc_output": "1f647-1f3fc-200d-2642-fe0f",
      "uc_match": "1f647-1f3fc-2642-fe0f",
      "uc_greedy": "1f647-1f3fc-2642",
      "shortnames": [":man_bowing_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_bowing_tone3:": {
      "uc_base": "1f647-1f3fd-2642",
      "uc_output": "1f647-1f3fd-200d-2642-fe0f",
      "uc_match": "1f647-1f3fd-2642-fe0f",
      "uc_greedy": "1f647-1f3fd-2642",
      "shortnames": [":man_bowing_medium_skin_tone:"],
      "category": "people"
    },
    ":man_bowing_tone4:": {
      "uc_base": "1f647-1f3fe-2642",
      "uc_output": "1f647-1f3fe-200d-2642-fe0f",
      "uc_match": "1f647-1f3fe-2642-fe0f",
      "uc_greedy": "1f647-1f3fe-2642",
      "shortnames": [":man_bowing_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_bowing_tone5:": {
      "uc_base": "1f647-1f3ff-2642",
      "uc_output": "1f647-1f3ff-200d-2642-fe0f",
      "uc_match": "1f647-1f3ff-2642-fe0f",
      "uc_greedy": "1f647-1f3ff-2642",
      "shortnames": [":man_bowing_dark_skin_tone:"],
      "category": "people"
    },
    ":man_cartwheeling_tone1:": {
      "uc_base": "1f938-1f3fb-2642",
      "uc_output": "1f938-1f3fb-200d-2642-fe0f",
      "uc_match": "1f938-1f3fb-2642-fe0f",
      "uc_greedy": "1f938-1f3fb-2642",
      "shortnames": [":man_cartwheeling_light_skin_tone:"],
      "category": "activity"
    },
    ":man_cartwheeling_tone2:": {
      "uc_base": "1f938-1f3fc-2642",
      "uc_output": "1f938-1f3fc-200d-2642-fe0f",
      "uc_match": "1f938-1f3fc-2642-fe0f",
      "uc_greedy": "1f938-1f3fc-2642",
      "shortnames": [":man_cartwheeling_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_cartwheeling_tone3:": {
      "uc_base": "1f938-1f3fd-2642",
      "uc_output": "1f938-1f3fd-200d-2642-fe0f",
      "uc_match": "1f938-1f3fd-2642-fe0f",
      "uc_greedy": "1f938-1f3fd-2642",
      "shortnames": [":man_cartwheeling_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_cartwheeling_tone4:": {
      "uc_base": "1f938-1f3fe-2642",
      "uc_output": "1f938-1f3fe-200d-2642-fe0f",
      "uc_match": "1f938-1f3fe-2642-fe0f",
      "uc_greedy": "1f938-1f3fe-2642",
      "shortnames": [":man_cartwheeling_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_cartwheeling_tone5:": {
      "uc_base": "1f938-1f3ff-2642",
      "uc_output": "1f938-1f3ff-200d-2642-fe0f",
      "uc_match": "1f938-1f3ff-2642-fe0f",
      "uc_greedy": "1f938-1f3ff-2642",
      "shortnames": [":man_cartwheeling_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_climbing_tone1:": {
      "uc_base": "1f9d7-1f3fb-2642",
      "uc_output": "1f9d7-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9d7-1f3fb-2642-fe0f",
      "uc_greedy": "1f9d7-1f3fb-2642",
      "shortnames": [":man_climbing_light_skin_tone:"],
      "category": "activity"
    },
    ":man_climbing_tone2:": {
      "uc_base": "1f9d7-1f3fc-2642",
      "uc_output": "1f9d7-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9d7-1f3fc-2642-fe0f",
      "uc_greedy": "1f9d7-1f3fc-2642",
      "shortnames": [":man_climbing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_climbing_tone3:": {
      "uc_base": "1f9d7-1f3fd-2642",
      "uc_output": "1f9d7-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9d7-1f3fd-2642-fe0f",
      "uc_greedy": "1f9d7-1f3fd-2642",
      "shortnames": [":man_climbing_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_climbing_tone4:": {
      "uc_base": "1f9d7-1f3fe-2642",
      "uc_output": "1f9d7-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9d7-1f3fe-2642-fe0f",
      "uc_greedy": "1f9d7-1f3fe-2642",
      "shortnames": [":man_climbing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_climbing_tone5:": {
      "uc_base": "1f9d7-1f3ff-2642",
      "uc_output": "1f9d7-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9d7-1f3ff-2642-fe0f",
      "uc_greedy": "1f9d7-1f3ff-2642",
      "shortnames": [":man_climbing_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_construction_worker_tone1:": {
      "uc_base": "1f477-1f3fb-2642",
      "uc_output": "1f477-1f3fb-200d-2642-fe0f",
      "uc_match": "1f477-1f3fb-2642-fe0f",
      "uc_greedy": "1f477-1f3fb-2642",
      "shortnames": [":man_construction_worker_light_skin_tone:"],
      "category": "people"
    },
    ":man_construction_worker_tone2:": {
      "uc_base": "1f477-1f3fc-2642",
      "uc_output": "1f477-1f3fc-200d-2642-fe0f",
      "uc_match": "1f477-1f3fc-2642-fe0f",
      "uc_greedy": "1f477-1f3fc-2642",
      "shortnames": [":man_construction_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_construction_worker_tone3:": {
      "uc_base": "1f477-1f3fd-2642",
      "uc_output": "1f477-1f3fd-200d-2642-fe0f",
      "uc_match": "1f477-1f3fd-2642-fe0f",
      "uc_greedy": "1f477-1f3fd-2642",
      "shortnames": [":man_construction_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":man_construction_worker_tone4:": {
      "uc_base": "1f477-1f3fe-2642",
      "uc_output": "1f477-1f3fe-200d-2642-fe0f",
      "uc_match": "1f477-1f3fe-2642-fe0f",
      "uc_greedy": "1f477-1f3fe-2642",
      "shortnames": [":man_construction_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_construction_worker_tone5:": {
      "uc_base": "1f477-1f3ff-2642",
      "uc_output": "1f477-1f3ff-200d-2642-fe0f",
      "uc_match": "1f477-1f3ff-2642-fe0f",
      "uc_greedy": "1f477-1f3ff-2642",
      "shortnames": [":man_construction_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":man_detective_tone1:": {
      "uc_base": "1f575-1f3fb-2642",
      "uc_output": "1f575-1f3fb-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-1f3fb-2642-fe0f",
      "uc_greedy": "1f575-1f3fb-2642",
      "shortnames": [":man_detective_light_skin_tone:"],
      "category": "people"
    },
    ":man_detective_tone2:": {
      "uc_base": "1f575-1f3fc-2642",
      "uc_output": "1f575-1f3fc-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-1f3fc-2642-fe0f",
      "uc_greedy": "1f575-1f3fc-2642",
      "shortnames": [":man_detective_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_detective_tone3:": {
      "uc_base": "1f575-1f3fd-2642",
      "uc_output": "1f575-1f3fd-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-1f3fd-2642-fe0f",
      "uc_greedy": "1f575-1f3fd-2642",
      "shortnames": [":man_detective_medium_skin_tone:"],
      "category": "people"
    },
    ":man_detective_tone4:": {
      "uc_base": "1f575-1f3fe-2642",
      "uc_output": "1f575-1f3fe-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-1f3fe-2642-fe0f",
      "uc_greedy": "1f575-1f3fe-2642",
      "shortnames": [":man_detective_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_detective_tone5:": {
      "uc_base": "1f575-1f3ff-2642",
      "uc_output": "1f575-1f3ff-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-1f3ff-2642-fe0f",
      "uc_greedy": "1f575-1f3ff-2642",
      "shortnames": [":man_detective_dark_skin_tone:"],
      "category": "people"
    },
    ":man_elf_tone1:": {
      "uc_base": "1f9dd-1f3fb-2642",
      "uc_output": "1f9dd-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9dd-1f3fb-2642-fe0f",
      "uc_greedy": "1f9dd-1f3fb-2642",
      "shortnames": [":man_elf_light_skin_tone:"],
      "category": "people"
    },
    ":man_elf_tone2:": {
      "uc_base": "1f9dd-1f3fc-2642",
      "uc_output": "1f9dd-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9dd-1f3fc-2642-fe0f",
      "uc_greedy": "1f9dd-1f3fc-2642",
      "shortnames": [":man_elf_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_elf_tone3:": {
      "uc_base": "1f9dd-1f3fd-2642",
      "uc_output": "1f9dd-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9dd-1f3fd-2642-fe0f",
      "uc_greedy": "1f9dd-1f3fd-2642",
      "shortnames": [":man_elf_medium_skin_tone:"],
      "category": "people"
    },
    ":man_elf_tone4:": {
      "uc_base": "1f9dd-1f3fe-2642",
      "uc_output": "1f9dd-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9dd-1f3fe-2642-fe0f",
      "uc_greedy": "1f9dd-1f3fe-2642",
      "shortnames": [":man_elf_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_elf_tone5:": {
      "uc_base": "1f9dd-1f3ff-2642",
      "uc_output": "1f9dd-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9dd-1f3ff-2642-fe0f",
      "uc_greedy": "1f9dd-1f3ff-2642",
      "shortnames": [":man_elf_dark_skin_tone:"],
      "category": "people"
    },
    ":man_facepalming_tone1:": {
      "uc_base": "1f926-1f3fb-2642",
      "uc_output": "1f926-1f3fb-200d-2642-fe0f",
      "uc_match": "1f926-1f3fb-2642-fe0f",
      "uc_greedy": "1f926-1f3fb-2642",
      "shortnames": [":man_facepalming_light_skin_tone:"],
      "category": "people"
    },
    ":man_facepalming_tone2:": {
      "uc_base": "1f926-1f3fc-2642",
      "uc_output": "1f926-1f3fc-200d-2642-fe0f",
      "uc_match": "1f926-1f3fc-2642-fe0f",
      "uc_greedy": "1f926-1f3fc-2642",
      "shortnames": [":man_facepalming_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_facepalming_tone3:": {
      "uc_base": "1f926-1f3fd-2642",
      "uc_output": "1f926-1f3fd-200d-2642-fe0f",
      "uc_match": "1f926-1f3fd-2642-fe0f",
      "uc_greedy": "1f926-1f3fd-2642",
      "shortnames": [":man_facepalming_medium_skin_tone:"],
      "category": "people"
    },
    ":man_facepalming_tone4:": {
      "uc_base": "1f926-1f3fe-2642",
      "uc_output": "1f926-1f3fe-200d-2642-fe0f",
      "uc_match": "1f926-1f3fe-2642-fe0f",
      "uc_greedy": "1f926-1f3fe-2642",
      "shortnames": [":man_facepalming_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_facepalming_tone5:": {
      "uc_base": "1f926-1f3ff-2642",
      "uc_output": "1f926-1f3ff-200d-2642-fe0f",
      "uc_match": "1f926-1f3ff-2642-fe0f",
      "uc_greedy": "1f926-1f3ff-2642",
      "shortnames": [":man_facepalming_dark_skin_tone:"],
      "category": "people"
    },
    ":man_fairy_tone1:": {
      "uc_base": "1f9da-1f3fb-2642",
      "uc_output": "1f9da-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9da-1f3fb-2642-fe0f",
      "uc_greedy": "1f9da-1f3fb-2642",
      "shortnames": [":man_fairy_light_skin_tone:"],
      "category": "people"
    },
    ":man_fairy_tone2:": {
      "uc_base": "1f9da-1f3fc-2642",
      "uc_output": "1f9da-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9da-1f3fc-2642-fe0f",
      "uc_greedy": "1f9da-1f3fc-2642",
      "shortnames": [":man_fairy_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_fairy_tone3:": {
      "uc_base": "1f9da-1f3fd-2642",
      "uc_output": "1f9da-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9da-1f3fd-2642-fe0f",
      "uc_greedy": "1f9da-1f3fd-2642",
      "shortnames": [":man_fairy_medium_skin_tone:"],
      "category": "people"
    },
    ":man_fairy_tone4:": {
      "uc_base": "1f9da-1f3fe-2642",
      "uc_output": "1f9da-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9da-1f3fe-2642-fe0f",
      "uc_greedy": "1f9da-1f3fe-2642",
      "shortnames": [":man_fairy_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_fairy_tone5:": {
      "uc_base": "1f9da-1f3ff-2642",
      "uc_output": "1f9da-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9da-1f3ff-2642-fe0f",
      "uc_greedy": "1f9da-1f3ff-2642",
      "shortnames": [":man_fairy_dark_skin_tone:"],
      "category": "people"
    },
    ":man_frowning_tone1:": {
      "uc_base": "1f64d-1f3fb-2642",
      "uc_output": "1f64d-1f3fb-200d-2642-fe0f",
      "uc_match": "1f64d-1f3fb-2642-fe0f",
      "uc_greedy": "1f64d-1f3fb-2642",
      "shortnames": [":man_frowning_light_skin_tone:"],
      "category": "people"
    },
    ":man_frowning_tone2:": {
      "uc_base": "1f64d-1f3fc-2642",
      "uc_output": "1f64d-1f3fc-200d-2642-fe0f",
      "uc_match": "1f64d-1f3fc-2642-fe0f",
      "uc_greedy": "1f64d-1f3fc-2642",
      "shortnames": [":man_frowning_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_frowning_tone3:": {
      "uc_base": "1f64d-1f3fd-2642",
      "uc_output": "1f64d-1f3fd-200d-2642-fe0f",
      "uc_match": "1f64d-1f3fd-2642-fe0f",
      "uc_greedy": "1f64d-1f3fd-2642",
      "shortnames": [":man_frowning_medium_skin_tone:"],
      "category": "people"
    },
    ":man_frowning_tone4:": {
      "uc_base": "1f64d-1f3fe-2642",
      "uc_output": "1f64d-1f3fe-200d-2642-fe0f",
      "uc_match": "1f64d-1f3fe-2642-fe0f",
      "uc_greedy": "1f64d-1f3fe-2642",
      "shortnames": [":man_frowning_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_frowning_tone5:": {
      "uc_base": "1f64d-1f3ff-2642",
      "uc_output": "1f64d-1f3ff-200d-2642-fe0f",
      "uc_match": "1f64d-1f3ff-2642-fe0f",
      "uc_greedy": "1f64d-1f3ff-2642",
      "shortnames": [":man_frowning_dark_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_no_tone1:": {
      "uc_base": "1f645-1f3fb-2642",
      "uc_output": "1f645-1f3fb-200d-2642-fe0f",
      "uc_match": "1f645-1f3fb-2642-fe0f",
      "uc_greedy": "1f645-1f3fb-2642",
      "shortnames": [":man_gesturing_no_light_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_no_tone2:": {
      "uc_base": "1f645-1f3fc-2642",
      "uc_output": "1f645-1f3fc-200d-2642-fe0f",
      "uc_match": "1f645-1f3fc-2642-fe0f",
      "uc_greedy": "1f645-1f3fc-2642",
      "shortnames": [":man_gesturing_no_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_no_tone3:": {
      "uc_base": "1f645-1f3fd-2642",
      "uc_output": "1f645-1f3fd-200d-2642-fe0f",
      "uc_match": "1f645-1f3fd-2642-fe0f",
      "uc_greedy": "1f645-1f3fd-2642",
      "shortnames": [":man_gesturing_no_medium_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_no_tone4:": {
      "uc_base": "1f645-1f3fe-2642",
      "uc_output": "1f645-1f3fe-200d-2642-fe0f",
      "uc_match": "1f645-1f3fe-2642-fe0f",
      "uc_greedy": "1f645-1f3fe-2642",
      "shortnames": [":man_gesturing_no_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_no_tone5:": {
      "uc_base": "1f645-1f3ff-2642",
      "uc_output": "1f645-1f3ff-200d-2642-fe0f",
      "uc_match": "1f645-1f3ff-2642-fe0f",
      "uc_greedy": "1f645-1f3ff-2642",
      "shortnames": [":man_gesturing_no_dark_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_ok_tone1:": {
      "uc_base": "1f646-1f3fb-2642",
      "uc_output": "1f646-1f3fb-200d-2642-fe0f",
      "uc_match": "1f646-1f3fb-2642-fe0f",
      "uc_greedy": "1f646-1f3fb-2642",
      "shortnames": [":man_gesturing_ok_light_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_ok_tone2:": {
      "uc_base": "1f646-1f3fc-2642",
      "uc_output": "1f646-1f3fc-200d-2642-fe0f",
      "uc_match": "1f646-1f3fc-2642-fe0f",
      "uc_greedy": "1f646-1f3fc-2642",
      "shortnames": [":man_gesturing_ok_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_ok_tone3:": {
      "uc_base": "1f646-1f3fd-2642",
      "uc_output": "1f646-1f3fd-200d-2642-fe0f",
      "uc_match": "1f646-1f3fd-2642-fe0f",
      "uc_greedy": "1f646-1f3fd-2642",
      "shortnames": [":man_gesturing_ok_medium_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_ok_tone4:": {
      "uc_base": "1f646-1f3fe-2642",
      "uc_output": "1f646-1f3fe-200d-2642-fe0f",
      "uc_match": "1f646-1f3fe-2642-fe0f",
      "uc_greedy": "1f646-1f3fe-2642",
      "shortnames": [":man_gesturing_ok_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_gesturing_ok_tone5:": {
      "uc_base": "1f646-1f3ff-2642",
      "uc_output": "1f646-1f3ff-200d-2642-fe0f",
      "uc_match": "1f646-1f3ff-2642-fe0f",
      "uc_greedy": "1f646-1f3ff-2642",
      "shortnames": [":man_gesturing_ok_dark_skin_tone:"],
      "category": "people"
    },
    ":man_getting_face_massage_tone1:": {
      "uc_base": "1f486-1f3fb-2642",
      "uc_output": "1f486-1f3fb-200d-2642-fe0f",
      "uc_match": "1f486-1f3fb-2642-fe0f",
      "uc_greedy": "1f486-1f3fb-2642",
      "shortnames": [":man_getting_face_massage_light_skin_tone:"],
      "category": "people"
    },
    ":man_getting_face_massage_tone2:": {
      "uc_base": "1f486-1f3fc-2642",
      "uc_output": "1f486-1f3fc-200d-2642-fe0f",
      "uc_match": "1f486-1f3fc-2642-fe0f",
      "uc_greedy": "1f486-1f3fc-2642",
      "shortnames": [":man_getting_face_massage_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_getting_face_massage_tone3:": {
      "uc_base": "1f486-1f3fd-2642",
      "uc_output": "1f486-1f3fd-200d-2642-fe0f",
      "uc_match": "1f486-1f3fd-2642-fe0f",
      "uc_greedy": "1f486-1f3fd-2642",
      "shortnames": [":man_getting_face_massage_medium_skin_tone:"],
      "category": "people"
    },
    ":man_getting_face_massage_tone4:": {
      "uc_base": "1f486-1f3fe-2642",
      "uc_output": "1f486-1f3fe-200d-2642-fe0f",
      "uc_match": "1f486-1f3fe-2642-fe0f",
      "uc_greedy": "1f486-1f3fe-2642",
      "shortnames": [":man_getting_face_massage_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_getting_face_massage_tone5:": {
      "uc_base": "1f486-1f3ff-2642",
      "uc_output": "1f486-1f3ff-200d-2642-fe0f",
      "uc_match": "1f486-1f3ff-2642-fe0f",
      "uc_greedy": "1f486-1f3ff-2642",
      "shortnames": [":man_getting_face_massage_dark_skin_tone:"],
      "category": "people"
    },
    ":man_getting_haircut_tone1:": {
      "uc_base": "1f487-1f3fb-2642",
      "uc_output": "1f487-1f3fb-200d-2642-fe0f",
      "uc_match": "1f487-1f3fb-2642-fe0f",
      "uc_greedy": "1f487-1f3fb-2642",
      "shortnames": [":man_getting_haircut_light_skin_tone:"],
      "category": "people"
    },
    ":man_getting_haircut_tone2:": {
      "uc_base": "1f487-1f3fc-2642",
      "uc_output": "1f487-1f3fc-200d-2642-fe0f",
      "uc_match": "1f487-1f3fc-2642-fe0f",
      "uc_greedy": "1f487-1f3fc-2642",
      "shortnames": [":man_getting_haircut_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_getting_haircut_tone3:": {
      "uc_base": "1f487-1f3fd-2642",
      "uc_output": "1f487-1f3fd-200d-2642-fe0f",
      "uc_match": "1f487-1f3fd-2642-fe0f",
      "uc_greedy": "1f487-1f3fd-2642",
      "shortnames": [":man_getting_haircut_medium_skin_tone:"],
      "category": "people"
    },
    ":man_getting_haircut_tone4:": {
      "uc_base": "1f487-1f3fe-2642",
      "uc_output": "1f487-1f3fe-200d-2642-fe0f",
      "uc_match": "1f487-1f3fe-2642-fe0f",
      "uc_greedy": "1f487-1f3fe-2642",
      "shortnames": [":man_getting_haircut_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_getting_haircut_tone5:": {
      "uc_base": "1f487-1f3ff-2642",
      "uc_output": "1f487-1f3ff-200d-2642-fe0f",
      "uc_match": "1f487-1f3ff-2642-fe0f",
      "uc_greedy": "1f487-1f3ff-2642",
      "shortnames": [":man_getting_haircut_dark_skin_tone:"],
      "category": "people"
    },
    ":man_golfing_tone1:": {
      "uc_base": "1f3cc-1f3fb-2642",
      "uc_output": "1f3cc-1f3fb-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fb-2642-fe0f",
      "uc_greedy": "1f3cc-1f3fb-2642",
      "shortnames": [":man_golfing_light_skin_tone:"],
      "category": "activity"
    },
    ":man_golfing_tone2:": {
      "uc_base": "1f3cc-1f3fc-2642",
      "uc_output": "1f3cc-1f3fc-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fc-2642-fe0f",
      "uc_greedy": "1f3cc-1f3fc-2642",
      "shortnames": [":man_golfing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_golfing_tone3:": {
      "uc_base": "1f3cc-1f3fd-2642",
      "uc_output": "1f3cc-1f3fd-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fd-2642-fe0f",
      "uc_greedy": "1f3cc-1f3fd-2642",
      "shortnames": [":man_golfing_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_golfing_tone4:": {
      "uc_base": "1f3cc-1f3fe-2642",
      "uc_output": "1f3cc-1f3fe-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fe-2642-fe0f",
      "uc_greedy": "1f3cc-1f3fe-2642",
      "shortnames": [":man_golfing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_golfing_tone5:": {
      "uc_base": "1f3cc-1f3ff-2642",
      "uc_output": "1f3cc-1f3ff-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-1f3ff-2642-fe0f",
      "uc_greedy": "1f3cc-1f3ff-2642",
      "shortnames": [":man_golfing_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_guard_tone1:": {
      "uc_base": "1f482-1f3fb-2642",
      "uc_output": "1f482-1f3fb-200d-2642-fe0f",
      "uc_match": "1f482-1f3fb-2642-fe0f",
      "uc_greedy": "1f482-1f3fb-2642",
      "shortnames": [":man_guard_light_skin_tone:"],
      "category": "people"
    },
    ":man_guard_tone2:": {
      "uc_base": "1f482-1f3fc-2642",
      "uc_output": "1f482-1f3fc-200d-2642-fe0f",
      "uc_match": "1f482-1f3fc-2642-fe0f",
      "uc_greedy": "1f482-1f3fc-2642",
      "shortnames": [":man_guard_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_guard_tone3:": {
      "uc_base": "1f482-1f3fd-2642",
      "uc_output": "1f482-1f3fd-200d-2642-fe0f",
      "uc_match": "1f482-1f3fd-2642-fe0f",
      "uc_greedy": "1f482-1f3fd-2642",
      "shortnames": [":man_guard_medium_skin_tone:"],
      "category": "people"
    },
    ":man_guard_tone4:": {
      "uc_base": "1f482-1f3fe-2642",
      "uc_output": "1f482-1f3fe-200d-2642-fe0f",
      "uc_match": "1f482-1f3fe-2642-fe0f",
      "uc_greedy": "1f482-1f3fe-2642",
      "shortnames": [":man_guard_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_guard_tone5:": {
      "uc_base": "1f482-1f3ff-2642",
      "uc_output": "1f482-1f3ff-200d-2642-fe0f",
      "uc_match": "1f482-1f3ff-2642-fe0f",
      "uc_greedy": "1f482-1f3ff-2642",
      "shortnames": [":man_guard_dark_skin_tone:"],
      "category": "people"
    },
    ":man_health_worker_tone1:": {
      "uc_base": "1f468-1f3fb-2695",
      "uc_output": "1f468-1f3fb-200d-2695-fe0f",
      "uc_match": "1f468-1f3fb-2695-fe0f",
      "uc_greedy": "1f468-1f3fb-2695",
      "shortnames": [":man_health_worker_light_skin_tone:"],
      "category": "people"
    },
    ":man_health_worker_tone2:": {
      "uc_base": "1f468-1f3fc-2695",
      "uc_output": "1f468-1f3fc-200d-2695-fe0f",
      "uc_match": "1f468-1f3fc-2695-fe0f",
      "uc_greedy": "1f468-1f3fc-2695",
      "shortnames": [":man_health_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_health_worker_tone3:": {
      "uc_base": "1f468-1f3fd-2695",
      "uc_output": "1f468-1f3fd-200d-2695-fe0f",
      "uc_match": "1f468-1f3fd-2695-fe0f",
      "uc_greedy": "1f468-1f3fd-2695",
      "shortnames": [":man_health_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":man_health_worker_tone4:": {
      "uc_base": "1f468-1f3fe-2695",
      "uc_output": "1f468-1f3fe-200d-2695-fe0f",
      "uc_match": "1f468-1f3fe-2695-fe0f",
      "uc_greedy": "1f468-1f3fe-2695",
      "shortnames": [":man_health_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_health_worker_tone5:": {
      "uc_base": "1f468-1f3ff-2695",
      "uc_output": "1f468-1f3ff-200d-2695-fe0f",
      "uc_match": "1f468-1f3ff-2695-fe0f",
      "uc_greedy": "1f468-1f3ff-2695",
      "shortnames": [":man_health_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":man_in_lotus_position_tone1:": {
      "uc_base": "1f9d8-1f3fb-2642",
      "uc_output": "1f9d8-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9d8-1f3fb-2642-fe0f",
      "uc_greedy": "1f9d8-1f3fb-2642",
      "shortnames": [":man_in_lotus_position_light_skin_tone:"],
      "category": "activity"
    },
    ":man_in_lotus_position_tone2:": {
      "uc_base": "1f9d8-1f3fc-2642",
      "uc_output": "1f9d8-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9d8-1f3fc-2642-fe0f",
      "uc_greedy": "1f9d8-1f3fc-2642",
      "shortnames": [":man_in_lotus_position_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_in_lotus_position_tone3:": {
      "uc_base": "1f9d8-1f3fd-2642",
      "uc_output": "1f9d8-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9d8-1f3fd-2642-fe0f",
      "uc_greedy": "1f9d8-1f3fd-2642",
      "shortnames": [":man_in_lotus_position_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_in_lotus_position_tone4:": {
      "uc_base": "1f9d8-1f3fe-2642",
      "uc_output": "1f9d8-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9d8-1f3fe-2642-fe0f",
      "uc_greedy": "1f9d8-1f3fe-2642",
      "shortnames": [":man_in_lotus_position_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_in_lotus_position_tone5:": {
      "uc_base": "1f9d8-1f3ff-2642",
      "uc_output": "1f9d8-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9d8-1f3ff-2642-fe0f",
      "uc_greedy": "1f9d8-1f3ff-2642",
      "shortnames": [":man_in_lotus_position_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_in_steamy_room_tone1:": {
      "uc_base": "1f9d6-1f3fb-2642",
      "uc_output": "1f9d6-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9d6-1f3fb-2642-fe0f",
      "uc_greedy": "1f9d6-1f3fb-2642",
      "shortnames": [":man_in_steamy_room_light_skin_tone:"],
      "category": "people"
    },
    ":man_in_steamy_room_tone2:": {
      "uc_base": "1f9d6-1f3fc-2642",
      "uc_output": "1f9d6-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9d6-1f3fc-2642-fe0f",
      "uc_greedy": "1f9d6-1f3fc-2642",
      "shortnames": [":man_in_steamy_room_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_in_steamy_room_tone3:": {
      "uc_base": "1f9d6-1f3fd-2642",
      "uc_output": "1f9d6-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9d6-1f3fd-2642-fe0f",
      "uc_greedy": "1f9d6-1f3fd-2642",
      "shortnames": [":man_in_steamy_room_medium_skin_tone:"],
      "category": "people"
    },
    ":man_in_steamy_room_tone4:": {
      "uc_base": "1f9d6-1f3fe-2642",
      "uc_output": "1f9d6-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9d6-1f3fe-2642-fe0f",
      "uc_greedy": "1f9d6-1f3fe-2642",
      "shortnames": [":man_in_steamy_room_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_in_steamy_room_tone5:": {
      "uc_base": "1f9d6-1f3ff-2642",
      "uc_output": "1f9d6-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9d6-1f3ff-2642-fe0f",
      "uc_greedy": "1f9d6-1f3ff-2642",
      "shortnames": [":man_in_steamy_room_dark_skin_tone:"],
      "category": "people"
    },
    ":man_judge_tone1:": {
      "uc_base": "1f468-1f3fb-2696",
      "uc_output": "1f468-1f3fb-200d-2696-fe0f",
      "uc_match": "1f468-1f3fb-2696-fe0f",
      "uc_greedy": "1f468-1f3fb-2696",
      "shortnames": [":man_judge_light_skin_tone:"],
      "category": "people"
    },
    ":man_judge_tone2:": {
      "uc_base": "1f468-1f3fc-2696",
      "uc_output": "1f468-1f3fc-200d-2696-fe0f",
      "uc_match": "1f468-1f3fc-2696-fe0f",
      "uc_greedy": "1f468-1f3fc-2696",
      "shortnames": [":man_judge_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_judge_tone3:": {
      "uc_base": "1f468-1f3fd-2696",
      "uc_output": "1f468-1f3fd-200d-2696-fe0f",
      "uc_match": "1f468-1f3fd-2696-fe0f",
      "uc_greedy": "1f468-1f3fd-2696",
      "shortnames": [":man_judge_medium_skin_tone:"],
      "category": "people"
    },
    ":man_judge_tone4:": {
      "uc_base": "1f468-1f3fe-2696",
      "uc_output": "1f468-1f3fe-200d-2696-fe0f",
      "uc_match": "1f468-1f3fe-2696-fe0f",
      "uc_greedy": "1f468-1f3fe-2696",
      "shortnames": [":man_judge_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_judge_tone5:": {
      "uc_base": "1f468-1f3ff-2696",
      "uc_output": "1f468-1f3ff-200d-2696-fe0f",
      "uc_match": "1f468-1f3ff-2696-fe0f",
      "uc_greedy": "1f468-1f3ff-2696",
      "shortnames": [":man_judge_dark_skin_tone:"],
      "category": "people"
    },
    ":man_juggling_tone1:": {
      "uc_base": "1f939-1f3fb-2642",
      "uc_output": "1f939-1f3fb-200d-2642-fe0f",
      "uc_match": "1f939-1f3fb-2642-fe0f",
      "uc_greedy": "1f939-1f3fb-2642",
      "shortnames": [":man_juggling_light_skin_tone:"],
      "category": "activity"
    },
    ":man_juggling_tone2:": {
      "uc_base": "1f939-1f3fc-2642",
      "uc_output": "1f939-1f3fc-200d-2642-fe0f",
      "uc_match": "1f939-1f3fc-2642-fe0f",
      "uc_greedy": "1f939-1f3fc-2642",
      "shortnames": [":man_juggling_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_juggling_tone3:": {
      "uc_base": "1f939-1f3fd-2642",
      "uc_output": "1f939-1f3fd-200d-2642-fe0f",
      "uc_match": "1f939-1f3fd-2642-fe0f",
      "uc_greedy": "1f939-1f3fd-2642",
      "shortnames": [":man_juggling_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_juggling_tone4:": {
      "uc_base": "1f939-1f3fe-2642",
      "uc_output": "1f939-1f3fe-200d-2642-fe0f",
      "uc_match": "1f939-1f3fe-2642-fe0f",
      "uc_greedy": "1f939-1f3fe-2642",
      "shortnames": [":man_juggling_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_juggling_tone5:": {
      "uc_base": "1f939-1f3ff-2642",
      "uc_output": "1f939-1f3ff-200d-2642-fe0f",
      "uc_match": "1f939-1f3ff-2642-fe0f",
      "uc_greedy": "1f939-1f3ff-2642",
      "shortnames": [":man_juggling_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_lifting_weights_tone1:": {
      "uc_base": "1f3cb-1f3fb-2642",
      "uc_output": "1f3cb-1f3fb-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fb-2642-fe0f",
      "uc_greedy": "1f3cb-1f3fb-2642",
      "shortnames": [":man_lifting_weights_light_skin_tone:"],
      "category": "activity"
    },
    ":man_lifting_weights_tone2:": {
      "uc_base": "1f3cb-1f3fc-2642",
      "uc_output": "1f3cb-1f3fc-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fc-2642-fe0f",
      "uc_greedy": "1f3cb-1f3fc-2642",
      "shortnames": [":man_lifting_weights_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_lifting_weights_tone3:": {
      "uc_base": "1f3cb-1f3fd-2642",
      "uc_output": "1f3cb-1f3fd-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fd-2642-fe0f",
      "uc_greedy": "1f3cb-1f3fd-2642",
      "shortnames": [":man_lifting_weights_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_lifting_weights_tone4:": {
      "uc_base": "1f3cb-1f3fe-2642",
      "uc_output": "1f3cb-1f3fe-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fe-2642-fe0f",
      "uc_greedy": "1f3cb-1f3fe-2642",
      "shortnames": [":man_lifting_weights_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_lifting_weights_tone5:": {
      "uc_base": "1f3cb-1f3ff-2642",
      "uc_output": "1f3cb-1f3ff-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-1f3ff-2642-fe0f",
      "uc_greedy": "1f3cb-1f3ff-2642",
      "shortnames": [":man_lifting_weights_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_mage_tone1:": {
      "uc_base": "1f9d9-1f3fb-2642",
      "uc_output": "1f9d9-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9d9-1f3fb-2642-fe0f",
      "uc_greedy": "1f9d9-1f3fb-2642",
      "shortnames": [":man_mage_light_skin_tone:"],
      "category": "people"
    },
    ":man_mage_tone2:": {
      "uc_base": "1f9d9-1f3fc-2642",
      "uc_output": "1f9d9-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9d9-1f3fc-2642-fe0f",
      "uc_greedy": "1f9d9-1f3fc-2642",
      "shortnames": [":man_mage_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_mage_tone3:": {
      "uc_base": "1f9d9-1f3fd-2642",
      "uc_output": "1f9d9-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9d9-1f3fd-2642-fe0f",
      "uc_greedy": "1f9d9-1f3fd-2642",
      "shortnames": [":man_mage_medium_skin_tone:"],
      "category": "people"
    },
    ":man_mage_tone4:": {
      "uc_base": "1f9d9-1f3fe-2642",
      "uc_output": "1f9d9-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9d9-1f3fe-2642-fe0f",
      "uc_greedy": "1f9d9-1f3fe-2642",
      "shortnames": [":man_mage_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_mage_tone5:": {
      "uc_base": "1f9d9-1f3ff-2642",
      "uc_output": "1f9d9-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9d9-1f3ff-2642-fe0f",
      "uc_greedy": "1f9d9-1f3ff-2642",
      "shortnames": [":man_mage_dark_skin_tone:"],
      "category": "people"
    },
    ":man_mountain_biking_tone1:": {
      "uc_base": "1f6b5-1f3fb-2642",
      "uc_output": "1f6b5-1f3fb-200d-2642-fe0f",
      "uc_match": "1f6b5-1f3fb-2642-fe0f",
      "uc_greedy": "1f6b5-1f3fb-2642",
      "shortnames": [":man_mountain_biking_light_skin_tone:"],
      "category": "activity"
    },
    ":man_mountain_biking_tone2:": {
      "uc_base": "1f6b5-1f3fc-2642",
      "uc_output": "1f6b5-1f3fc-200d-2642-fe0f",
      "uc_match": "1f6b5-1f3fc-2642-fe0f",
      "uc_greedy": "1f6b5-1f3fc-2642",
      "shortnames": [":man_mountain_biking_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_mountain_biking_tone3:": {
      "uc_base": "1f6b5-1f3fd-2642",
      "uc_output": "1f6b5-1f3fd-200d-2642-fe0f",
      "uc_match": "1f6b5-1f3fd-2642-fe0f",
      "uc_greedy": "1f6b5-1f3fd-2642",
      "shortnames": [":man_mountain_biking_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_mountain_biking_tone4:": {
      "uc_base": "1f6b5-1f3fe-2642",
      "uc_output": "1f6b5-1f3fe-200d-2642-fe0f",
      "uc_match": "1f6b5-1f3fe-2642-fe0f",
      "uc_greedy": "1f6b5-1f3fe-2642",
      "shortnames": [":man_mountain_biking_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_mountain_biking_tone5:": {
      "uc_base": "1f6b5-1f3ff-2642",
      "uc_output": "1f6b5-1f3ff-200d-2642-fe0f",
      "uc_match": "1f6b5-1f3ff-2642-fe0f",
      "uc_greedy": "1f6b5-1f3ff-2642",
      "shortnames": [":man_mountain_biking_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_pilot_tone1:": {
      "uc_base": "1f468-1f3fb-2708",
      "uc_output": "1f468-1f3fb-200d-2708-fe0f",
      "uc_match": "1f468-1f3fb-2708-fe0f",
      "uc_greedy": "1f468-1f3fb-2708",
      "shortnames": [":man_pilot_light_skin_tone:"],
      "category": "people"
    },
    ":man_pilot_tone2:": {
      "uc_base": "1f468-1f3fc-2708",
      "uc_output": "1f468-1f3fc-200d-2708-fe0f",
      "uc_match": "1f468-1f3fc-2708-fe0f",
      "uc_greedy": "1f468-1f3fc-2708",
      "shortnames": [":man_pilot_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_pilot_tone3:": {
      "uc_base": "1f468-1f3fd-2708",
      "uc_output": "1f468-1f3fd-200d-2708-fe0f",
      "uc_match": "1f468-1f3fd-2708-fe0f",
      "uc_greedy": "1f468-1f3fd-2708",
      "shortnames": [":man_pilot_medium_skin_tone:"],
      "category": "people"
    },
    ":man_pilot_tone4:": {
      "uc_base": "1f468-1f3fe-2708",
      "uc_output": "1f468-1f3fe-200d-2708-fe0f",
      "uc_match": "1f468-1f3fe-2708-fe0f",
      "uc_greedy": "1f468-1f3fe-2708",
      "shortnames": [":man_pilot_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_pilot_tone5:": {
      "uc_base": "1f468-1f3ff-2708",
      "uc_output": "1f468-1f3ff-200d-2708-fe0f",
      "uc_match": "1f468-1f3ff-2708-fe0f",
      "uc_greedy": "1f468-1f3ff-2708",
      "shortnames": [":man_pilot_dark_skin_tone:"],
      "category": "people"
    },
    ":man_playing_handball_tone1:": {
      "uc_base": "1f93e-1f3fb-2642",
      "uc_output": "1f93e-1f3fb-200d-2642-fe0f",
      "uc_match": "1f93e-1f3fb-2642-fe0f",
      "uc_greedy": "1f93e-1f3fb-2642",
      "shortnames": [":man_playing_handball_light_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_handball_tone2:": {
      "uc_base": "1f93e-1f3fc-2642",
      "uc_output": "1f93e-1f3fc-200d-2642-fe0f",
      "uc_match": "1f93e-1f3fc-2642-fe0f",
      "uc_greedy": "1f93e-1f3fc-2642",
      "shortnames": [":man_playing_handball_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_handball_tone3:": {
      "uc_base": "1f93e-1f3fd-2642",
      "uc_output": "1f93e-1f3fd-200d-2642-fe0f",
      "uc_match": "1f93e-1f3fd-2642-fe0f",
      "uc_greedy": "1f93e-1f3fd-2642",
      "shortnames": [":man_playing_handball_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_handball_tone4:": {
      "uc_base": "1f93e-1f3fe-2642",
      "uc_output": "1f93e-1f3fe-200d-2642-fe0f",
      "uc_match": "1f93e-1f3fe-2642-fe0f",
      "uc_greedy": "1f93e-1f3fe-2642",
      "shortnames": [":man_playing_handball_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_handball_tone5:": {
      "uc_base": "1f93e-1f3ff-2642",
      "uc_output": "1f93e-1f3ff-200d-2642-fe0f",
      "uc_match": "1f93e-1f3ff-2642-fe0f",
      "uc_greedy": "1f93e-1f3ff-2642",
      "shortnames": [":man_playing_handball_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_water_polo_tone1:": {
      "uc_base": "1f93d-1f3fb-2642",
      "uc_output": "1f93d-1f3fb-200d-2642-fe0f",
      "uc_match": "1f93d-1f3fb-2642-fe0f",
      "uc_greedy": "1f93d-1f3fb-2642",
      "shortnames": [":man_playing_water_polo_light_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_water_polo_tone2:": {
      "uc_base": "1f93d-1f3fc-2642",
      "uc_output": "1f93d-1f3fc-200d-2642-fe0f",
      "uc_match": "1f93d-1f3fc-2642-fe0f",
      "uc_greedy": "1f93d-1f3fc-2642",
      "shortnames": [":man_playing_water_polo_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_water_polo_tone3:": {
      "uc_base": "1f93d-1f3fd-2642",
      "uc_output": "1f93d-1f3fd-200d-2642-fe0f",
      "uc_match": "1f93d-1f3fd-2642-fe0f",
      "uc_greedy": "1f93d-1f3fd-2642",
      "shortnames": [":man_playing_water_polo_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_water_polo_tone4:": {
      "uc_base": "1f93d-1f3fe-2642",
      "uc_output": "1f93d-1f3fe-200d-2642-fe0f",
      "uc_match": "1f93d-1f3fe-2642-fe0f",
      "uc_greedy": "1f93d-1f3fe-2642",
      "shortnames": [":man_playing_water_polo_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_playing_water_polo_tone5:": {
      "uc_base": "1f93d-1f3ff-2642",
      "uc_output": "1f93d-1f3ff-200d-2642-fe0f",
      "uc_match": "1f93d-1f3ff-2642-fe0f",
      "uc_greedy": "1f93d-1f3ff-2642",
      "shortnames": [":man_playing_water_polo_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_police_officer_tone1:": {
      "uc_base": "1f46e-1f3fb-2642",
      "uc_output": "1f46e-1f3fb-200d-2642-fe0f",
      "uc_match": "1f46e-1f3fb-2642-fe0f",
      "uc_greedy": "1f46e-1f3fb-2642",
      "shortnames": [":man_police_officer_light_skin_tone:"],
      "category": "people"
    },
    ":man_police_officer_tone2:": {
      "uc_base": "1f46e-1f3fc-2642",
      "uc_output": "1f46e-1f3fc-200d-2642-fe0f",
      "uc_match": "1f46e-1f3fc-2642-fe0f",
      "uc_greedy": "1f46e-1f3fc-2642",
      "shortnames": [":man_police_officer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_police_officer_tone3:": {
      "uc_base": "1f46e-1f3fd-2642",
      "uc_output": "1f46e-1f3fd-200d-2642-fe0f",
      "uc_match": "1f46e-1f3fd-2642-fe0f",
      "uc_greedy": "1f46e-1f3fd-2642",
      "shortnames": [":man_police_officer_medium_skin_tone:"],
      "category": "people"
    },
    ":man_police_officer_tone4:": {
      "uc_base": "1f46e-1f3fe-2642",
      "uc_output": "1f46e-1f3fe-200d-2642-fe0f",
      "uc_match": "1f46e-1f3fe-2642-fe0f",
      "uc_greedy": "1f46e-1f3fe-2642",
      "shortnames": [":man_police_officer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_police_officer_tone5:": {
      "uc_base": "1f46e-1f3ff-2642",
      "uc_output": "1f46e-1f3ff-200d-2642-fe0f",
      "uc_match": "1f46e-1f3ff-2642-fe0f",
      "uc_greedy": "1f46e-1f3ff-2642",
      "shortnames": [":man_police_officer_dark_skin_tone:"],
      "category": "people"
    },
    ":man_pouting_tone1:": {
      "uc_base": "1f64e-1f3fb-2642",
      "uc_output": "1f64e-1f3fb-200d-2642-fe0f",
      "uc_match": "1f64e-1f3fb-2642-fe0f",
      "uc_greedy": "1f64e-1f3fb-2642",
      "shortnames": [":man_pouting_light_skin_tone:"],
      "category": "people"
    },
    ":man_pouting_tone2:": {
      "uc_base": "1f64e-1f3fc-2642",
      "uc_output": "1f64e-1f3fc-200d-2642-fe0f",
      "uc_match": "1f64e-1f3fc-2642-fe0f",
      "uc_greedy": "1f64e-1f3fc-2642",
      "shortnames": [":man_pouting_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_pouting_tone3:": {
      "uc_base": "1f64e-1f3fd-2642",
      "uc_output": "1f64e-1f3fd-200d-2642-fe0f",
      "uc_match": "1f64e-1f3fd-2642-fe0f",
      "uc_greedy": "1f64e-1f3fd-2642",
      "shortnames": [":man_pouting_medium_skin_tone:"],
      "category": "people"
    },
    ":man_pouting_tone4:": {
      "uc_base": "1f64e-1f3fe-2642",
      "uc_output": "1f64e-1f3fe-200d-2642-fe0f",
      "uc_match": "1f64e-1f3fe-2642-fe0f",
      "uc_greedy": "1f64e-1f3fe-2642",
      "shortnames": [":man_pouting_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_pouting_tone5:": {
      "uc_base": "1f64e-1f3ff-2642",
      "uc_output": "1f64e-1f3ff-200d-2642-fe0f",
      "uc_match": "1f64e-1f3ff-2642-fe0f",
      "uc_greedy": "1f64e-1f3ff-2642",
      "shortnames": [":man_pouting_dark_skin_tone:"],
      "category": "people"
    },
    ":man_raising_hand_tone1:": {
      "uc_base": "1f64b-1f3fb-2642",
      "uc_output": "1f64b-1f3fb-200d-2642-fe0f",
      "uc_match": "1f64b-1f3fb-2642-fe0f",
      "uc_greedy": "1f64b-1f3fb-2642",
      "shortnames": [":man_raising_hand_light_skin_tone:"],
      "category": "people"
    },
    ":man_raising_hand_tone2:": {
      "uc_base": "1f64b-1f3fc-2642",
      "uc_output": "1f64b-1f3fc-200d-2642-fe0f",
      "uc_match": "1f64b-1f3fc-2642-fe0f",
      "uc_greedy": "1f64b-1f3fc-2642",
      "shortnames": [":man_raising_hand_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_raising_hand_tone3:": {
      "uc_base": "1f64b-1f3fd-2642",
      "uc_output": "1f64b-1f3fd-200d-2642-fe0f",
      "uc_match": "1f64b-1f3fd-2642-fe0f",
      "uc_greedy": "1f64b-1f3fd-2642",
      "shortnames": [":man_raising_hand_medium_skin_tone:"],
      "category": "people"
    },
    ":man_raising_hand_tone4:": {
      "uc_base": "1f64b-1f3fe-2642",
      "uc_output": "1f64b-1f3fe-200d-2642-fe0f",
      "uc_match": "1f64b-1f3fe-2642-fe0f",
      "uc_greedy": "1f64b-1f3fe-2642",
      "shortnames": [":man_raising_hand_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_raising_hand_tone5:": {
      "uc_base": "1f64b-1f3ff-2642",
      "uc_output": "1f64b-1f3ff-200d-2642-fe0f",
      "uc_match": "1f64b-1f3ff-2642-fe0f",
      "uc_greedy": "1f64b-1f3ff-2642",
      "shortnames": [":man_raising_hand_dark_skin_tone:"],
      "category": "people"
    },
    ":man_rowing_boat_tone1:": {
      "uc_base": "1f6a3-1f3fb-2642",
      "uc_output": "1f6a3-1f3fb-200d-2642-fe0f",
      "uc_match": "1f6a3-1f3fb-2642-fe0f",
      "uc_greedy": "1f6a3-1f3fb-2642",
      "shortnames": [":man_rowing_boat_light_skin_tone:"],
      "category": "activity"
    },
    ":man_rowing_boat_tone2:": {
      "uc_base": "1f6a3-1f3fc-2642",
      "uc_output": "1f6a3-1f3fc-200d-2642-fe0f",
      "uc_match": "1f6a3-1f3fc-2642-fe0f",
      "uc_greedy": "1f6a3-1f3fc-2642",
      "shortnames": [":man_rowing_boat_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_rowing_boat_tone3:": {
      "uc_base": "1f6a3-1f3fd-2642",
      "uc_output": "1f6a3-1f3fd-200d-2642-fe0f",
      "uc_match": "1f6a3-1f3fd-2642-fe0f",
      "uc_greedy": "1f6a3-1f3fd-2642",
      "shortnames": [":man_rowing_boat_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_rowing_boat_tone4:": {
      "uc_base": "1f6a3-1f3fe-2642",
      "uc_output": "1f6a3-1f3fe-200d-2642-fe0f",
      "uc_match": "1f6a3-1f3fe-2642-fe0f",
      "uc_greedy": "1f6a3-1f3fe-2642",
      "shortnames": [":man_rowing_boat_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_rowing_boat_tone5:": {
      "uc_base": "1f6a3-1f3ff-2642",
      "uc_output": "1f6a3-1f3ff-200d-2642-fe0f",
      "uc_match": "1f6a3-1f3ff-2642-fe0f",
      "uc_greedy": "1f6a3-1f3ff-2642",
      "shortnames": [":man_rowing_boat_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_running_tone1:": {
      "uc_base": "1f3c3-1f3fb-2642",
      "uc_output": "1f3c3-1f3fb-200d-2642-fe0f",
      "uc_match": "1f3c3-1f3fb-2642-fe0f",
      "uc_greedy": "1f3c3-1f3fb-2642",
      "shortnames": [":man_running_light_skin_tone:"],
      "category": "people"
    },
    ":man_running_tone2:": {
      "uc_base": "1f3c3-1f3fc-2642",
      "uc_output": "1f3c3-1f3fc-200d-2642-fe0f",
      "uc_match": "1f3c3-1f3fc-2642-fe0f",
      "uc_greedy": "1f3c3-1f3fc-2642",
      "shortnames": [":man_running_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_running_tone3:": {
      "uc_base": "1f3c3-1f3fd-2642",
      "uc_output": "1f3c3-1f3fd-200d-2642-fe0f",
      "uc_match": "1f3c3-1f3fd-2642-fe0f",
      "uc_greedy": "1f3c3-1f3fd-2642",
      "shortnames": [":man_running_medium_skin_tone:"],
      "category": "people"
    },
    ":man_running_tone4:": {
      "uc_base": "1f3c3-1f3fe-2642",
      "uc_output": "1f3c3-1f3fe-200d-2642-fe0f",
      "uc_match": "1f3c3-1f3fe-2642-fe0f",
      "uc_greedy": "1f3c3-1f3fe-2642",
      "shortnames": [":man_running_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_running_tone5:": {
      "uc_base": "1f3c3-1f3ff-2642",
      "uc_output": "1f3c3-1f3ff-200d-2642-fe0f",
      "uc_match": "1f3c3-1f3ff-2642-fe0f",
      "uc_greedy": "1f3c3-1f3ff-2642",
      "shortnames": [":man_running_dark_skin_tone:"],
      "category": "people"
    },
    ":man_shrugging_tone1:": {
      "uc_base": "1f937-1f3fb-2642",
      "uc_output": "1f937-1f3fb-200d-2642-fe0f",
      "uc_match": "1f937-1f3fb-2642-fe0f",
      "uc_greedy": "1f937-1f3fb-2642",
      "shortnames": [":man_shrugging_light_skin_tone:"],
      "category": "people"
    },
    ":man_shrugging_tone2:": {
      "uc_base": "1f937-1f3fc-2642",
      "uc_output": "1f937-1f3fc-200d-2642-fe0f",
      "uc_match": "1f937-1f3fc-2642-fe0f",
      "uc_greedy": "1f937-1f3fc-2642",
      "shortnames": [":man_shrugging_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_shrugging_tone3:": {
      "uc_base": "1f937-1f3fd-2642",
      "uc_output": "1f937-1f3fd-200d-2642-fe0f",
      "uc_match": "1f937-1f3fd-2642-fe0f",
      "uc_greedy": "1f937-1f3fd-2642",
      "shortnames": [":man_shrugging_medium_skin_tone:"],
      "category": "people"
    },
    ":man_shrugging_tone4:": {
      "uc_base": "1f937-1f3fe-2642",
      "uc_output": "1f937-1f3fe-200d-2642-fe0f",
      "uc_match": "1f937-1f3fe-2642-fe0f",
      "uc_greedy": "1f937-1f3fe-2642",
      "shortnames": [":man_shrugging_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_shrugging_tone5:": {
      "uc_base": "1f937-1f3ff-2642",
      "uc_output": "1f937-1f3ff-200d-2642-fe0f",
      "uc_match": "1f937-1f3ff-2642-fe0f",
      "uc_greedy": "1f937-1f3ff-2642",
      "shortnames": [":man_shrugging_dark_skin_tone:"],
      "category": "people"
    },
    ":man_surfing_tone1:": {
      "uc_base": "1f3c4-1f3fb-2642",
      "uc_output": "1f3c4-1f3fb-200d-2642-fe0f",
      "uc_match": "1f3c4-1f3fb-2642-fe0f",
      "uc_greedy": "1f3c4-1f3fb-2642",
      "shortnames": [":man_surfing_light_skin_tone:"],
      "category": "activity"
    },
    ":man_surfing_tone2:": {
      "uc_base": "1f3c4-1f3fc-2642",
      "uc_output": "1f3c4-1f3fc-200d-2642-fe0f",
      "uc_match": "1f3c4-1f3fc-2642-fe0f",
      "uc_greedy": "1f3c4-1f3fc-2642",
      "shortnames": [":man_surfing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_surfing_tone3:": {
      "uc_base": "1f3c4-1f3fd-2642",
      "uc_output": "1f3c4-1f3fd-200d-2642-fe0f",
      "uc_match": "1f3c4-1f3fd-2642-fe0f",
      "uc_greedy": "1f3c4-1f3fd-2642",
      "shortnames": [":man_surfing_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_surfing_tone4:": {
      "uc_base": "1f3c4-1f3fe-2642",
      "uc_output": "1f3c4-1f3fe-200d-2642-fe0f",
      "uc_match": "1f3c4-1f3fe-2642-fe0f",
      "uc_greedy": "1f3c4-1f3fe-2642",
      "shortnames": [":man_surfing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_surfing_tone5:": {
      "uc_base": "1f3c4-1f3ff-2642",
      "uc_output": "1f3c4-1f3ff-200d-2642-fe0f",
      "uc_match": "1f3c4-1f3ff-2642-fe0f",
      "uc_greedy": "1f3c4-1f3ff-2642",
      "shortnames": [":man_surfing_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_swimming_tone1:": {
      "uc_base": "1f3ca-1f3fb-2642",
      "uc_output": "1f3ca-1f3fb-200d-2642-fe0f",
      "uc_match": "1f3ca-1f3fb-2642-fe0f",
      "uc_greedy": "1f3ca-1f3fb-2642",
      "shortnames": [":man_swimming_light_skin_tone:"],
      "category": "activity"
    },
    ":man_swimming_tone2:": {
      "uc_base": "1f3ca-1f3fc-2642",
      "uc_output": "1f3ca-1f3fc-200d-2642-fe0f",
      "uc_match": "1f3ca-1f3fc-2642-fe0f",
      "uc_greedy": "1f3ca-1f3fc-2642",
      "shortnames": [":man_swimming_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_swimming_tone3:": {
      "uc_base": "1f3ca-1f3fd-2642",
      "uc_output": "1f3ca-1f3fd-200d-2642-fe0f",
      "uc_match": "1f3ca-1f3fd-2642-fe0f",
      "uc_greedy": "1f3ca-1f3fd-2642",
      "shortnames": [":man_swimming_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_swimming_tone4:": {
      "uc_base": "1f3ca-1f3fe-2642",
      "uc_output": "1f3ca-1f3fe-200d-2642-fe0f",
      "uc_match": "1f3ca-1f3fe-2642-fe0f",
      "uc_greedy": "1f3ca-1f3fe-2642",
      "shortnames": [":man_swimming_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_swimming_tone5:": {
      "uc_base": "1f3ca-1f3ff-2642",
      "uc_output": "1f3ca-1f3ff-200d-2642-fe0f",
      "uc_match": "1f3ca-1f3ff-2642-fe0f",
      "uc_greedy": "1f3ca-1f3ff-2642",
      "shortnames": [":man_swimming_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_tipping_hand_tone1:": {
      "uc_base": "1f481-1f3fb-2642",
      "uc_output": "1f481-1f3fb-200d-2642-fe0f",
      "uc_match": "1f481-1f3fb-2642-fe0f",
      "uc_greedy": "1f481-1f3fb-2642",
      "shortnames": [":man_tipping_hand_light_skin_tone:"],
      "category": "people"
    },
    ":man_tipping_hand_tone2:": {
      "uc_base": "1f481-1f3fc-2642",
      "uc_output": "1f481-1f3fc-200d-2642-fe0f",
      "uc_match": "1f481-1f3fc-2642-fe0f",
      "uc_greedy": "1f481-1f3fc-2642",
      "shortnames": [":man_tipping_hand_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_tipping_hand_tone3:": {
      "uc_base": "1f481-1f3fd-2642",
      "uc_output": "1f481-1f3fd-200d-2642-fe0f",
      "uc_match": "1f481-1f3fd-2642-fe0f",
      "uc_greedy": "1f481-1f3fd-2642",
      "shortnames": [":man_tipping_hand_medium_skin_tone:"],
      "category": "people"
    },
    ":man_tipping_hand_tone4:": {
      "uc_base": "1f481-1f3fe-2642",
      "uc_output": "1f481-1f3fe-200d-2642-fe0f",
      "uc_match": "1f481-1f3fe-2642-fe0f",
      "uc_greedy": "1f481-1f3fe-2642",
      "shortnames": [":man_tipping_hand_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_tipping_hand_tone5:": {
      "uc_base": "1f481-1f3ff-2642",
      "uc_output": "1f481-1f3ff-200d-2642-fe0f",
      "uc_match": "1f481-1f3ff-2642-fe0f",
      "uc_greedy": "1f481-1f3ff-2642",
      "shortnames": [":man_tipping_hand_dark_skin_tone:"],
      "category": "people"
    },
    ":man_vampire_tone1:": {
      "uc_base": "1f9db-1f3fb-2642",
      "uc_output": "1f9db-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9db-1f3fb-2642-fe0f",
      "uc_greedy": "1f9db-1f3fb-2642",
      "shortnames": [":man_vampire_light_skin_tone:"],
      "category": "people"
    },
    ":man_vampire_tone2:": {
      "uc_base": "1f9db-1f3fc-2642",
      "uc_output": "1f9db-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9db-1f3fc-2642-fe0f",
      "uc_greedy": "1f9db-1f3fc-2642",
      "shortnames": [":man_vampire_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_vampire_tone3:": {
      "uc_base": "1f9db-1f3fd-2642",
      "uc_output": "1f9db-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9db-1f3fd-2642-fe0f",
      "uc_greedy": "1f9db-1f3fd-2642",
      "shortnames": [":man_vampire_medium_skin_tone:"],
      "category": "people"
    },
    ":man_vampire_tone4:": {
      "uc_base": "1f9db-1f3fe-2642",
      "uc_output": "1f9db-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9db-1f3fe-2642-fe0f",
      "uc_greedy": "1f9db-1f3fe-2642",
      "shortnames": [":man_vampire_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_vampire_tone5:": {
      "uc_base": "1f9db-1f3ff-2642",
      "uc_output": "1f9db-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9db-1f3ff-2642-fe0f",
      "uc_greedy": "1f9db-1f3ff-2642",
      "shortnames": [":man_vampire_dark_skin_tone:"],
      "category": "people"
    },
    ":man_walking_tone1:": {
      "uc_base": "1f6b6-1f3fb-2642",
      "uc_output": "1f6b6-1f3fb-200d-2642-fe0f",
      "uc_match": "1f6b6-1f3fb-2642-fe0f",
      "uc_greedy": "1f6b6-1f3fb-2642",
      "shortnames": [":man_walking_light_skin_tone:"],
      "category": "people"
    },
    ":man_walking_tone2:": {
      "uc_base": "1f6b6-1f3fc-2642",
      "uc_output": "1f6b6-1f3fc-200d-2642-fe0f",
      "uc_match": "1f6b6-1f3fc-2642-fe0f",
      "uc_greedy": "1f6b6-1f3fc-2642",
      "shortnames": [":man_walking_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_walking_tone3:": {
      "uc_base": "1f6b6-1f3fd-2642",
      "uc_output": "1f6b6-1f3fd-200d-2642-fe0f",
      "uc_match": "1f6b6-1f3fd-2642-fe0f",
      "uc_greedy": "1f6b6-1f3fd-2642",
      "shortnames": [":man_walking_medium_skin_tone:"],
      "category": "people"
    },
    ":man_walking_tone4:": {
      "uc_base": "1f6b6-1f3fe-2642",
      "uc_output": "1f6b6-1f3fe-200d-2642-fe0f",
      "uc_match": "1f6b6-1f3fe-2642-fe0f",
      "uc_greedy": "1f6b6-1f3fe-2642",
      "shortnames": [":man_walking_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_walking_tone5:": {
      "uc_base": "1f6b6-1f3ff-2642",
      "uc_output": "1f6b6-1f3ff-200d-2642-fe0f",
      "uc_match": "1f6b6-1f3ff-2642-fe0f",
      "uc_greedy": "1f6b6-1f3ff-2642",
      "shortnames": [":man_walking_dark_skin_tone:"],
      "category": "people"
    },
    ":man_wearing_turban_tone1:": {
      "uc_base": "1f473-1f3fb-2642",
      "uc_output": "1f473-1f3fb-200d-2642-fe0f",
      "uc_match": "1f473-1f3fb-2642-fe0f",
      "uc_greedy": "1f473-1f3fb-2642",
      "shortnames": [":man_wearing_turban_light_skin_tone:"],
      "category": "people"
    },
    ":man_wearing_turban_tone2:": {
      "uc_base": "1f473-1f3fc-2642",
      "uc_output": "1f473-1f3fc-200d-2642-fe0f",
      "uc_match": "1f473-1f3fc-2642-fe0f",
      "uc_greedy": "1f473-1f3fc-2642",
      "shortnames": [":man_wearing_turban_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_wearing_turban_tone3:": {
      "uc_base": "1f473-1f3fd-2642",
      "uc_output": "1f473-1f3fd-200d-2642-fe0f",
      "uc_match": "1f473-1f3fd-2642-fe0f",
      "uc_greedy": "1f473-1f3fd-2642",
      "shortnames": [":man_wearing_turban_medium_skin_tone:"],
      "category": "people"
    },
    ":man_wearing_turban_tone4:": {
      "uc_base": "1f473-1f3fe-2642",
      "uc_output": "1f473-1f3fe-200d-2642-fe0f",
      "uc_match": "1f473-1f3fe-2642-fe0f",
      "uc_greedy": "1f473-1f3fe-2642",
      "shortnames": [":man_wearing_turban_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_wearing_turban_tone5:": {
      "uc_base": "1f473-1f3ff-2642",
      "uc_output": "1f473-1f3ff-200d-2642-fe0f",
      "uc_match": "1f473-1f3ff-2642-fe0f",
      "uc_greedy": "1f473-1f3ff-2642",
      "shortnames": [":man_wearing_turban_dark_skin_tone:"],
      "category": "people"
    },
    ":mermaid_tone1:": {
      "uc_base": "1f9dc-1f3fb-2640",
      "uc_output": "1f9dc-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9dc-1f3fb-2640-fe0f",
      "uc_greedy": "1f9dc-1f3fb-2640",
      "shortnames": [":mermaid_light_skin_tone:"],
      "category": "people"
    },
    ":mermaid_tone2:": {
      "uc_base": "1f9dc-1f3fc-2640",
      "uc_output": "1f9dc-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9dc-1f3fc-2640-fe0f",
      "uc_greedy": "1f9dc-1f3fc-2640",
      "shortnames": [":mermaid_medium_light_skin_tone:"],
      "category": "people"
    },
    ":mermaid_tone3:": {
      "uc_base": "1f9dc-1f3fd-2640",
      "uc_output": "1f9dc-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9dc-1f3fd-2640-fe0f",
      "uc_greedy": "1f9dc-1f3fd-2640",
      "shortnames": [":mermaid_medium_skin_tone:"],
      "category": "people"
    },
    ":mermaid_tone4:": {
      "uc_base": "1f9dc-1f3fe-2640",
      "uc_output": "1f9dc-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9dc-1f3fe-2640-fe0f",
      "uc_greedy": "1f9dc-1f3fe-2640",
      "shortnames": [":mermaid_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":mermaid_tone5:": {
      "uc_base": "1f9dc-1f3ff-2640",
      "uc_output": "1f9dc-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9dc-1f3ff-2640-fe0f",
      "uc_greedy": "1f9dc-1f3ff-2640",
      "shortnames": [":mermaid_dark_skin_tone:"],
      "category": "people"
    },
    ":merman_tone1:": {
      "uc_base": "1f9dc-1f3fb-2642",
      "uc_output": "1f9dc-1f3fb-200d-2642-fe0f",
      "uc_match": "1f9dc-1f3fb-2642-fe0f",
      "uc_greedy": "1f9dc-1f3fb-2642",
      "shortnames": [":merman_light_skin_tone:"],
      "category": "people"
    },
    ":merman_tone2:": {
      "uc_base": "1f9dc-1f3fc-2642",
      "uc_output": "1f9dc-1f3fc-200d-2642-fe0f",
      "uc_match": "1f9dc-1f3fc-2642-fe0f",
      "uc_greedy": "1f9dc-1f3fc-2642",
      "shortnames": [":merman_medium_light_skin_tone:"],
      "category": "people"
    },
    ":merman_tone3:": {
      "uc_base": "1f9dc-1f3fd-2642",
      "uc_output": "1f9dc-1f3fd-200d-2642-fe0f",
      "uc_match": "1f9dc-1f3fd-2642-fe0f",
      "uc_greedy": "1f9dc-1f3fd-2642",
      "shortnames": [":merman_medium_skin_tone:"],
      "category": "people"
    },
    ":merman_tone4:": {
      "uc_base": "1f9dc-1f3fe-2642",
      "uc_output": "1f9dc-1f3fe-200d-2642-fe0f",
      "uc_match": "1f9dc-1f3fe-2642-fe0f",
      "uc_greedy": "1f9dc-1f3fe-2642",
      "shortnames": [":merman_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":merman_tone5:": {
      "uc_base": "1f9dc-1f3ff-2642",
      "uc_output": "1f9dc-1f3ff-200d-2642-fe0f",
      "uc_match": "1f9dc-1f3ff-2642-fe0f",
      "uc_greedy": "1f9dc-1f3ff-2642",
      "shortnames": [":merman_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_biking_tone1:": {
      "uc_base": "1f6b4-1f3fb-2640",
      "uc_output": "1f6b4-1f3fb-200d-2640-fe0f",
      "uc_match": "1f6b4-1f3fb-2640-fe0f",
      "uc_greedy": "1f6b4-1f3fb-2640",
      "shortnames": [":woman_biking_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_biking_tone2:": {
      "uc_base": "1f6b4-1f3fc-2640",
      "uc_output": "1f6b4-1f3fc-200d-2640-fe0f",
      "uc_match": "1f6b4-1f3fc-2640-fe0f",
      "uc_greedy": "1f6b4-1f3fc-2640",
      "shortnames": [":woman_biking_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_biking_tone3:": {
      "uc_base": "1f6b4-1f3fd-2640",
      "uc_output": "1f6b4-1f3fd-200d-2640-fe0f",
      "uc_match": "1f6b4-1f3fd-2640-fe0f",
      "uc_greedy": "1f6b4-1f3fd-2640",
      "shortnames": [":woman_biking_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_biking_tone4:": {
      "uc_base": "1f6b4-1f3fe-2640",
      "uc_output": "1f6b4-1f3fe-200d-2640-fe0f",
      "uc_match": "1f6b4-1f3fe-2640-fe0f",
      "uc_greedy": "1f6b4-1f3fe-2640",
      "shortnames": [":woman_biking_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_biking_tone5:": {
      "uc_base": "1f6b4-1f3ff-2640",
      "uc_output": "1f6b4-1f3ff-200d-2640-fe0f",
      "uc_match": "1f6b4-1f3ff-2640-fe0f",
      "uc_greedy": "1f6b4-1f3ff-2640",
      "shortnames": [":woman_biking_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_bowing_tone1:": {
      "uc_base": "1f647-1f3fb-2640",
      "uc_output": "1f647-1f3fb-200d-2640-fe0f",
      "uc_match": "1f647-1f3fb-2640-fe0f",
      "uc_greedy": "1f647-1f3fb-2640",
      "shortnames": [":woman_bowing_light_skin_tone:"],
      "category": "people"
    },
    ":woman_bowing_tone2:": {
      "uc_base": "1f647-1f3fc-2640",
      "uc_output": "1f647-1f3fc-200d-2640-fe0f",
      "uc_match": "1f647-1f3fc-2640-fe0f",
      "uc_greedy": "1f647-1f3fc-2640",
      "shortnames": [":woman_bowing_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_bowing_tone3:": {
      "uc_base": "1f647-1f3fd-2640",
      "uc_output": "1f647-1f3fd-200d-2640-fe0f",
      "uc_match": "1f647-1f3fd-2640-fe0f",
      "uc_greedy": "1f647-1f3fd-2640",
      "shortnames": [":woman_bowing_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_bowing_tone4:": {
      "uc_base": "1f647-1f3fe-2640",
      "uc_output": "1f647-1f3fe-200d-2640-fe0f",
      "uc_match": "1f647-1f3fe-2640-fe0f",
      "uc_greedy": "1f647-1f3fe-2640",
      "shortnames": [":woman_bowing_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_bowing_tone5:": {
      "uc_base": "1f647-1f3ff-2640",
      "uc_output": "1f647-1f3ff-200d-2640-fe0f",
      "uc_match": "1f647-1f3ff-2640-fe0f",
      "uc_greedy": "1f647-1f3ff-2640",
      "shortnames": [":woman_bowing_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_cartwheeling_tone1:": {
      "uc_base": "1f938-1f3fb-2640",
      "uc_output": "1f938-1f3fb-200d-2640-fe0f",
      "uc_match": "1f938-1f3fb-2640-fe0f",
      "uc_greedy": "1f938-1f3fb-2640",
      "shortnames": [":woman_cartwheeling_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_cartwheeling_tone2:": {
      "uc_base": "1f938-1f3fc-2640",
      "uc_output": "1f938-1f3fc-200d-2640-fe0f",
      "uc_match": "1f938-1f3fc-2640-fe0f",
      "uc_greedy": "1f938-1f3fc-2640",
      "shortnames": [":woman_cartwheeling_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_cartwheeling_tone3:": {
      "uc_base": "1f938-1f3fd-2640",
      "uc_output": "1f938-1f3fd-200d-2640-fe0f",
      "uc_match": "1f938-1f3fd-2640-fe0f",
      "uc_greedy": "1f938-1f3fd-2640",
      "shortnames": [":woman_cartwheeling_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_cartwheeling_tone4:": {
      "uc_base": "1f938-1f3fe-2640",
      "uc_output": "1f938-1f3fe-200d-2640-fe0f",
      "uc_match": "1f938-1f3fe-2640-fe0f",
      "uc_greedy": "1f938-1f3fe-2640",
      "shortnames": [":woman_cartwheeling_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_cartwheeling_tone5:": {
      "uc_base": "1f938-1f3ff-2640",
      "uc_output": "1f938-1f3ff-200d-2640-fe0f",
      "uc_match": "1f938-1f3ff-2640-fe0f",
      "uc_greedy": "1f938-1f3ff-2640",
      "shortnames": [":woman_cartwheeling_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_climbing_tone1:": {
      "uc_base": "1f9d7-1f3fb-2640",
      "uc_output": "1f9d7-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9d7-1f3fb-2640-fe0f",
      "uc_greedy": "1f9d7-1f3fb-2640",
      "shortnames": [":woman_climbing_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_climbing_tone2:": {
      "uc_base": "1f9d7-1f3fc-2640",
      "uc_output": "1f9d7-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9d7-1f3fc-2640-fe0f",
      "uc_greedy": "1f9d7-1f3fc-2640",
      "shortnames": [":woman_climbing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_climbing_tone3:": {
      "uc_base": "1f9d7-1f3fd-2640",
      "uc_output": "1f9d7-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9d7-1f3fd-2640-fe0f",
      "uc_greedy": "1f9d7-1f3fd-2640",
      "shortnames": [":woman_climbing_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_climbing_tone4:": {
      "uc_base": "1f9d7-1f3fe-2640",
      "uc_output": "1f9d7-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9d7-1f3fe-2640-fe0f",
      "uc_greedy": "1f9d7-1f3fe-2640",
      "shortnames": [":woman_climbing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_climbing_tone5:": {
      "uc_base": "1f9d7-1f3ff-2640",
      "uc_output": "1f9d7-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9d7-1f3ff-2640-fe0f",
      "uc_greedy": "1f9d7-1f3ff-2640",
      "shortnames": [":woman_climbing_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_construction_worker_tone1:": {
      "uc_base": "1f477-1f3fb-2640",
      "uc_output": "1f477-1f3fb-200d-2640-fe0f",
      "uc_match": "1f477-1f3fb-2640-fe0f",
      "uc_greedy": "1f477-1f3fb-2640",
      "shortnames": [":woman_construction_worker_light_skin_tone:"],
      "category": "people"
    },
    ":woman_construction_worker_tone2:": {
      "uc_base": "1f477-1f3fc-2640",
      "uc_output": "1f477-1f3fc-200d-2640-fe0f",
      "uc_match": "1f477-1f3fc-2640-fe0f",
      "uc_greedy": "1f477-1f3fc-2640",
      "shortnames": [":woman_construction_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_construction_worker_tone3:": {
      "uc_base": "1f477-1f3fd-2640",
      "uc_output": "1f477-1f3fd-200d-2640-fe0f",
      "uc_match": "1f477-1f3fd-2640-fe0f",
      "uc_greedy": "1f477-1f3fd-2640",
      "shortnames": [":woman_construction_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_construction_worker_tone4:": {
      "uc_base": "1f477-1f3fe-2640",
      "uc_output": "1f477-1f3fe-200d-2640-fe0f",
      "uc_match": "1f477-1f3fe-2640-fe0f",
      "uc_greedy": "1f477-1f3fe-2640",
      "shortnames": [":woman_construction_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_construction_worker_tone5:": {
      "uc_base": "1f477-1f3ff-2640",
      "uc_output": "1f477-1f3ff-200d-2640-fe0f",
      "uc_match": "1f477-1f3ff-2640-fe0f",
      "uc_greedy": "1f477-1f3ff-2640",
      "shortnames": [":woman_construction_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_detective_tone1:": {
      "uc_base": "1f575-1f3fb-2640",
      "uc_output": "1f575-1f3fb-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-1f3fb-2640-fe0f",
      "uc_greedy": "1f575-1f3fb-2640",
      "shortnames": [":woman_detective_light_skin_tone:"],
      "category": "people"
    },
    ":woman_detective_tone2:": {
      "uc_base": "1f575-1f3fc-2640",
      "uc_output": "1f575-1f3fc-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-1f3fc-2640-fe0f",
      "uc_greedy": "1f575-1f3fc-2640",
      "shortnames": [":woman_detective_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_detective_tone3:": {
      "uc_base": "1f575-1f3fd-2640",
      "uc_output": "1f575-1f3fd-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-1f3fd-2640-fe0f",
      "uc_greedy": "1f575-1f3fd-2640",
      "shortnames": [":woman_detective_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_detective_tone4:": {
      "uc_base": "1f575-1f3fe-2640",
      "uc_output": "1f575-1f3fe-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-1f3fe-2640-fe0f",
      "uc_greedy": "1f575-1f3fe-2640",
      "shortnames": [":woman_detective_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_detective_tone5:": {
      "uc_base": "1f575-1f3ff-2640",
      "uc_output": "1f575-1f3ff-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-1f3ff-2640-fe0f",
      "uc_greedy": "1f575-1f3ff-2640",
      "shortnames": [":woman_detective_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_elf_tone1:": {
      "uc_base": "1f9dd-1f3fb-2640",
      "uc_output": "1f9dd-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9dd-1f3fb-2640-fe0f",
      "uc_greedy": "1f9dd-1f3fb-2640",
      "shortnames": [":woman_elf_light_skin_tone:"],
      "category": "people"
    },
    ":woman_elf_tone2:": {
      "uc_base": "1f9dd-1f3fc-2640",
      "uc_output": "1f9dd-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9dd-1f3fc-2640-fe0f",
      "uc_greedy": "1f9dd-1f3fc-2640",
      "shortnames": [":woman_elf_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_elf_tone3:": {
      "uc_base": "1f9dd-1f3fd-2640",
      "uc_output": "1f9dd-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9dd-1f3fd-2640-fe0f",
      "uc_greedy": "1f9dd-1f3fd-2640",
      "shortnames": [":woman_elf_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_elf_tone4:": {
      "uc_base": "1f9dd-1f3fe-2640",
      "uc_output": "1f9dd-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9dd-1f3fe-2640-fe0f",
      "uc_greedy": "1f9dd-1f3fe-2640",
      "shortnames": [":woman_elf_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_elf_tone5:": {
      "uc_base": "1f9dd-1f3ff-2640",
      "uc_output": "1f9dd-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9dd-1f3ff-2640-fe0f",
      "uc_greedy": "1f9dd-1f3ff-2640",
      "shortnames": [":woman_elf_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_facepalming_tone1:": {
      "uc_base": "1f926-1f3fb-2640",
      "uc_output": "1f926-1f3fb-200d-2640-fe0f",
      "uc_match": "1f926-1f3fb-2640-fe0f",
      "uc_greedy": "1f926-1f3fb-2640",
      "shortnames": [":woman_facepalming_light_skin_tone:"],
      "category": "people"
    },
    ":woman_facepalming_tone2:": {
      "uc_base": "1f926-1f3fc-2640",
      "uc_output": "1f926-1f3fc-200d-2640-fe0f",
      "uc_match": "1f926-1f3fc-2640-fe0f",
      "uc_greedy": "1f926-1f3fc-2640",
      "shortnames": [":woman_facepalming_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_facepalming_tone3:": {
      "uc_base": "1f926-1f3fd-2640",
      "uc_output": "1f926-1f3fd-200d-2640-fe0f",
      "uc_match": "1f926-1f3fd-2640-fe0f",
      "uc_greedy": "1f926-1f3fd-2640",
      "shortnames": [":woman_facepalming_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_facepalming_tone4:": {
      "uc_base": "1f926-1f3fe-2640",
      "uc_output": "1f926-1f3fe-200d-2640-fe0f",
      "uc_match": "1f926-1f3fe-2640-fe0f",
      "uc_greedy": "1f926-1f3fe-2640",
      "shortnames": [":woman_facepalming_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_facepalming_tone5:": {
      "uc_base": "1f926-1f3ff-2640",
      "uc_output": "1f926-1f3ff-200d-2640-fe0f",
      "uc_match": "1f926-1f3ff-2640-fe0f",
      "uc_greedy": "1f926-1f3ff-2640",
      "shortnames": [":woman_facepalming_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_fairy_tone1:": {
      "uc_base": "1f9da-1f3fb-2640",
      "uc_output": "1f9da-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9da-1f3fb-2640-fe0f",
      "uc_greedy": "1f9da-1f3fb-2640",
      "shortnames": [":woman_fairy_light_skin_tone:"],
      "category": "people"
    },
    ":woman_fairy_tone2:": {
      "uc_base": "1f9da-1f3fc-2640",
      "uc_output": "1f9da-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9da-1f3fc-2640-fe0f",
      "uc_greedy": "1f9da-1f3fc-2640",
      "shortnames": [":woman_fairy_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_fairy_tone3:": {
      "uc_base": "1f9da-1f3fd-2640",
      "uc_output": "1f9da-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9da-1f3fd-2640-fe0f",
      "uc_greedy": "1f9da-1f3fd-2640",
      "shortnames": [":woman_fairy_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_fairy_tone4:": {
      "uc_base": "1f9da-1f3fe-2640",
      "uc_output": "1f9da-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9da-1f3fe-2640-fe0f",
      "uc_greedy": "1f9da-1f3fe-2640",
      "shortnames": [":woman_fairy_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_fairy_tone5:": {
      "uc_base": "1f9da-1f3ff-2640",
      "uc_output": "1f9da-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9da-1f3ff-2640-fe0f",
      "uc_greedy": "1f9da-1f3ff-2640",
      "shortnames": [":woman_fairy_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_frowning_tone1:": {
      "uc_base": "1f64d-1f3fb-2640",
      "uc_output": "1f64d-1f3fb-200d-2640-fe0f",
      "uc_match": "1f64d-1f3fb-2640-fe0f",
      "uc_greedy": "1f64d-1f3fb-2640",
      "shortnames": [":woman_frowning_light_skin_tone:"],
      "category": "people"
    },
    ":woman_frowning_tone2:": {
      "uc_base": "1f64d-1f3fc-2640",
      "uc_output": "1f64d-1f3fc-200d-2640-fe0f",
      "uc_match": "1f64d-1f3fc-2640-fe0f",
      "uc_greedy": "1f64d-1f3fc-2640",
      "shortnames": [":woman_frowning_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_frowning_tone3:": {
      "uc_base": "1f64d-1f3fd-2640",
      "uc_output": "1f64d-1f3fd-200d-2640-fe0f",
      "uc_match": "1f64d-1f3fd-2640-fe0f",
      "uc_greedy": "1f64d-1f3fd-2640",
      "shortnames": [":woman_frowning_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_frowning_tone4:": {
      "uc_base": "1f64d-1f3fe-2640",
      "uc_output": "1f64d-1f3fe-200d-2640-fe0f",
      "uc_match": "1f64d-1f3fe-2640-fe0f",
      "uc_greedy": "1f64d-1f3fe-2640",
      "shortnames": [":woman_frowning_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_frowning_tone5:": {
      "uc_base": "1f64d-1f3ff-2640",
      "uc_output": "1f64d-1f3ff-200d-2640-fe0f",
      "uc_match": "1f64d-1f3ff-2640-fe0f",
      "uc_greedy": "1f64d-1f3ff-2640",
      "shortnames": [":woman_frowning_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_no_tone1:": {
      "uc_base": "1f645-1f3fb-2640",
      "uc_output": "1f645-1f3fb-200d-2640-fe0f",
      "uc_match": "1f645-1f3fb-2640-fe0f",
      "uc_greedy": "1f645-1f3fb-2640",
      "shortnames": [":woman_gesturing_no_light_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_no_tone2:": {
      "uc_base": "1f645-1f3fc-2640",
      "uc_output": "1f645-1f3fc-200d-2640-fe0f",
      "uc_match": "1f645-1f3fc-2640-fe0f",
      "uc_greedy": "1f645-1f3fc-2640",
      "shortnames": [":woman_gesturing_no_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_no_tone3:": {
      "uc_base": "1f645-1f3fd-2640",
      "uc_output": "1f645-1f3fd-200d-2640-fe0f",
      "uc_match": "1f645-1f3fd-2640-fe0f",
      "uc_greedy": "1f645-1f3fd-2640",
      "shortnames": [":woman_gesturing_no_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_no_tone4:": {
      "uc_base": "1f645-1f3fe-2640",
      "uc_output": "1f645-1f3fe-200d-2640-fe0f",
      "uc_match": "1f645-1f3fe-2640-fe0f",
      "uc_greedy": "1f645-1f3fe-2640",
      "shortnames": [":woman_gesturing_no_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_no_tone5:": {
      "uc_base": "1f645-1f3ff-2640",
      "uc_output": "1f645-1f3ff-200d-2640-fe0f",
      "uc_match": "1f645-1f3ff-2640-fe0f",
      "uc_greedy": "1f645-1f3ff-2640",
      "shortnames": [":woman_gesturing_no_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_ok_tone1:": {
      "uc_base": "1f646-1f3fb-2640",
      "uc_output": "1f646-1f3fb-200d-2640-fe0f",
      "uc_match": "1f646-1f3fb-2640-fe0f",
      "uc_greedy": "1f646-1f3fb-2640",
      "shortnames": [":woman_gesturing_ok_light_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_ok_tone2:": {
      "uc_base": "1f646-1f3fc-2640",
      "uc_output": "1f646-1f3fc-200d-2640-fe0f",
      "uc_match": "1f646-1f3fc-2640-fe0f",
      "uc_greedy": "1f646-1f3fc-2640",
      "shortnames": [":woman_gesturing_ok_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_ok_tone3:": {
      "uc_base": "1f646-1f3fd-2640",
      "uc_output": "1f646-1f3fd-200d-2640-fe0f",
      "uc_match": "1f646-1f3fd-2640-fe0f",
      "uc_greedy": "1f646-1f3fd-2640",
      "shortnames": [":woman_gesturing_ok_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_ok_tone4:": {
      "uc_base": "1f646-1f3fe-2640",
      "uc_output": "1f646-1f3fe-200d-2640-fe0f",
      "uc_match": "1f646-1f3fe-2640-fe0f",
      "uc_greedy": "1f646-1f3fe-2640",
      "shortnames": [":woman_gesturing_ok_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_gesturing_ok_tone5:": {
      "uc_base": "1f646-1f3ff-2640",
      "uc_output": "1f646-1f3ff-200d-2640-fe0f",
      "uc_match": "1f646-1f3ff-2640-fe0f",
      "uc_greedy": "1f646-1f3ff-2640",
      "shortnames": [":woman_gesturing_ok_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_face_massage_tone1:": {
      "uc_base": "1f486-1f3fb-2640",
      "uc_output": "1f486-1f3fb-200d-2640-fe0f",
      "uc_match": "1f486-1f3fb-2640-fe0f",
      "uc_greedy": "1f486-1f3fb-2640",
      "shortnames": [":woman_getting_face_massage_light_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_face_massage_tone2:": {
      "uc_base": "1f486-1f3fc-2640",
      "uc_output": "1f486-1f3fc-200d-2640-fe0f",
      "uc_match": "1f486-1f3fc-2640-fe0f",
      "uc_greedy": "1f486-1f3fc-2640",
      "shortnames": [":woman_getting_face_massage_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_face_massage_tone3:": {
      "uc_base": "1f486-1f3fd-2640",
      "uc_output": "1f486-1f3fd-200d-2640-fe0f",
      "uc_match": "1f486-1f3fd-2640-fe0f",
      "uc_greedy": "1f486-1f3fd-2640",
      "shortnames": [":woman_getting_face_massage_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_face_massage_tone4:": {
      "uc_base": "1f486-1f3fe-2640",
      "uc_output": "1f486-1f3fe-200d-2640-fe0f",
      "uc_match": "1f486-1f3fe-2640-fe0f",
      "uc_greedy": "1f486-1f3fe-2640",
      "shortnames": [":woman_getting_face_massage_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_face_massage_tone5:": {
      "uc_base": "1f486-1f3ff-2640",
      "uc_output": "1f486-1f3ff-200d-2640-fe0f",
      "uc_match": "1f486-1f3ff-2640-fe0f",
      "uc_greedy": "1f486-1f3ff-2640",
      "shortnames": [":woman_getting_face_massage_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_haircut_tone1:": {
      "uc_base": "1f487-1f3fb-2640",
      "uc_output": "1f487-1f3fb-200d-2640-fe0f",
      "uc_match": "1f487-1f3fb-2640-fe0f",
      "uc_greedy": "1f487-1f3fb-2640",
      "shortnames": [":woman_getting_haircut_light_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_haircut_tone2:": {
      "uc_base": "1f487-1f3fc-2640",
      "uc_output": "1f487-1f3fc-200d-2640-fe0f",
      "uc_match": "1f487-1f3fc-2640-fe0f",
      "uc_greedy": "1f487-1f3fc-2640",
      "shortnames": [":woman_getting_haircut_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_haircut_tone3:": {
      "uc_base": "1f487-1f3fd-2640",
      "uc_output": "1f487-1f3fd-200d-2640-fe0f",
      "uc_match": "1f487-1f3fd-2640-fe0f",
      "uc_greedy": "1f487-1f3fd-2640",
      "shortnames": [":woman_getting_haircut_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_haircut_tone4:": {
      "uc_base": "1f487-1f3fe-2640",
      "uc_output": "1f487-1f3fe-200d-2640-fe0f",
      "uc_match": "1f487-1f3fe-2640-fe0f",
      "uc_greedy": "1f487-1f3fe-2640",
      "shortnames": [":woman_getting_haircut_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_getting_haircut_tone5:": {
      "uc_base": "1f487-1f3ff-2640",
      "uc_output": "1f487-1f3ff-200d-2640-fe0f",
      "uc_match": "1f487-1f3ff-2640-fe0f",
      "uc_greedy": "1f487-1f3ff-2640",
      "shortnames": [":woman_getting_haircut_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_golfing_tone1:": {
      "uc_base": "1f3cc-1f3fb-2640",
      "uc_output": "1f3cc-1f3fb-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fb-2640-fe0f",
      "uc_greedy": "1f3cc-1f3fb-2640",
      "shortnames": [":woman_golfing_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_golfing_tone2:": {
      "uc_base": "1f3cc-1f3fc-2640",
      "uc_output": "1f3cc-1f3fc-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fc-2640-fe0f",
      "uc_greedy": "1f3cc-1f3fc-2640",
      "shortnames": [":woman_golfing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_golfing_tone3:": {
      "uc_base": "1f3cc-1f3fd-2640",
      "uc_output": "1f3cc-1f3fd-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fd-2640-fe0f",
      "uc_greedy": "1f3cc-1f3fd-2640",
      "shortnames": [":woman_golfing_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_golfing_tone4:": {
      "uc_base": "1f3cc-1f3fe-2640",
      "uc_output": "1f3cc-1f3fe-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-1f3fe-2640-fe0f",
      "uc_greedy": "1f3cc-1f3fe-2640",
      "shortnames": [":woman_golfing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_golfing_tone5:": {
      "uc_base": "1f3cc-1f3ff-2640",
      "uc_output": "1f3cc-1f3ff-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-1f3ff-2640-fe0f",
      "uc_greedy": "1f3cc-1f3ff-2640",
      "shortnames": [":woman_golfing_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_guard_tone1:": {
      "uc_base": "1f482-1f3fb-2640",
      "uc_output": "1f482-1f3fb-200d-2640-fe0f",
      "uc_match": "1f482-1f3fb-2640-fe0f",
      "uc_greedy": "1f482-1f3fb-2640",
      "shortnames": [":woman_guard_light_skin_tone:"],
      "category": "people"
    },
    ":woman_guard_tone2:": {
      "uc_base": "1f482-1f3fc-2640",
      "uc_output": "1f482-1f3fc-200d-2640-fe0f",
      "uc_match": "1f482-1f3fc-2640-fe0f",
      "uc_greedy": "1f482-1f3fc-2640",
      "shortnames": [":woman_guard_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_guard_tone3:": {
      "uc_base": "1f482-1f3fd-2640",
      "uc_output": "1f482-1f3fd-200d-2640-fe0f",
      "uc_match": "1f482-1f3fd-2640-fe0f",
      "uc_greedy": "1f482-1f3fd-2640",
      "shortnames": [":woman_guard_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_guard_tone4:": {
      "uc_base": "1f482-1f3fe-2640",
      "uc_output": "1f482-1f3fe-200d-2640-fe0f",
      "uc_match": "1f482-1f3fe-2640-fe0f",
      "uc_greedy": "1f482-1f3fe-2640",
      "shortnames": [":woman_guard_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_guard_tone5:": {
      "uc_base": "1f482-1f3ff-2640",
      "uc_output": "1f482-1f3ff-200d-2640-fe0f",
      "uc_match": "1f482-1f3ff-2640-fe0f",
      "uc_greedy": "1f482-1f3ff-2640",
      "shortnames": [":woman_guard_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_health_worker_tone1:": {
      "uc_base": "1f469-1f3fb-2695",
      "uc_output": "1f469-1f3fb-200d-2695-fe0f",
      "uc_match": "1f469-1f3fb-2695-fe0f",
      "uc_greedy": "1f469-1f3fb-2695",
      "shortnames": [":woman_health_worker_light_skin_tone:"],
      "category": "people"
    },
    ":woman_health_worker_tone2:": {
      "uc_base": "1f469-1f3fc-2695",
      "uc_output": "1f469-1f3fc-200d-2695-fe0f",
      "uc_match": "1f469-1f3fc-2695-fe0f",
      "uc_greedy": "1f469-1f3fc-2695",
      "shortnames": [":woman_health_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_health_worker_tone3:": {
      "uc_base": "1f469-1f3fd-2695",
      "uc_output": "1f469-1f3fd-200d-2695-fe0f",
      "uc_match": "1f469-1f3fd-2695-fe0f",
      "uc_greedy": "1f469-1f3fd-2695",
      "shortnames": [":woman_health_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_health_worker_tone4:": {
      "uc_base": "1f469-1f3fe-2695",
      "uc_output": "1f469-1f3fe-200d-2695-fe0f",
      "uc_match": "1f469-1f3fe-2695-fe0f",
      "uc_greedy": "1f469-1f3fe-2695",
      "shortnames": [":woman_health_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_health_worker_tone5:": {
      "uc_base": "1f469-1f3ff-2695",
      "uc_output": "1f469-1f3ff-200d-2695-fe0f",
      "uc_match": "1f469-1f3ff-2695-fe0f",
      "uc_greedy": "1f469-1f3ff-2695",
      "shortnames": [":woman_health_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_in_lotus_position_tone1:": {
      "uc_base": "1f9d8-1f3fb-2640",
      "uc_output": "1f9d8-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9d8-1f3fb-2640-fe0f",
      "uc_greedy": "1f9d8-1f3fb-2640",
      "shortnames": [":woman_in_lotus_position_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_in_lotus_position_tone2:": {
      "uc_base": "1f9d8-1f3fc-2640",
      "uc_output": "1f9d8-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9d8-1f3fc-2640-fe0f",
      "uc_greedy": "1f9d8-1f3fc-2640",
      "shortnames": [":woman_in_lotus_position_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_in_lotus_position_tone3:": {
      "uc_base": "1f9d8-1f3fd-2640",
      "uc_output": "1f9d8-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9d8-1f3fd-2640-fe0f",
      "uc_greedy": "1f9d8-1f3fd-2640",
      "shortnames": [":woman_in_lotus_position_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_in_lotus_position_tone4:": {
      "uc_base": "1f9d8-1f3fe-2640",
      "uc_output": "1f9d8-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9d8-1f3fe-2640-fe0f",
      "uc_greedy": "1f9d8-1f3fe-2640",
      "shortnames": [":woman_in_lotus_position_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_in_lotus_position_tone5:": {
      "uc_base": "1f9d8-1f3ff-2640",
      "uc_output": "1f9d8-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9d8-1f3ff-2640-fe0f",
      "uc_greedy": "1f9d8-1f3ff-2640",
      "shortnames": [":woman_in_lotus_position_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_in_steamy_room_tone1:": {
      "uc_base": "1f9d6-1f3fb-2640",
      "uc_output": "1f9d6-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9d6-1f3fb-2640-fe0f",
      "uc_greedy": "1f9d6-1f3fb-2640",
      "shortnames": [":woman_in_steamy_room_light_skin_tone:"],
      "category": "people"
    },
    ":woman_in_steamy_room_tone2:": {
      "uc_base": "1f9d6-1f3fc-2640",
      "uc_output": "1f9d6-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9d6-1f3fc-2640-fe0f",
      "uc_greedy": "1f9d6-1f3fc-2640",
      "shortnames": [":woman_in_steamy_room_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_in_steamy_room_tone3:": {
      "uc_base": "1f9d6-1f3fd-2640",
      "uc_output": "1f9d6-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9d6-1f3fd-2640-fe0f",
      "uc_greedy": "1f9d6-1f3fd-2640",
      "shortnames": [":woman_in_steamy_room_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_in_steamy_room_tone4:": {
      "uc_base": "1f9d6-1f3fe-2640",
      "uc_output": "1f9d6-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9d6-1f3fe-2640-fe0f",
      "uc_greedy": "1f9d6-1f3fe-2640",
      "shortnames": [":woman_in_steamy_room_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_in_steamy_room_tone5:": {
      "uc_base": "1f9d6-1f3ff-2640",
      "uc_output": "1f9d6-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9d6-1f3ff-2640-fe0f",
      "uc_greedy": "1f9d6-1f3ff-2640",
      "shortnames": [":woman_in_steamy_room_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_judge_tone1:": {
      "uc_base": "1f469-1f3fb-2696",
      "uc_output": "1f469-1f3fb-200d-2696-fe0f",
      "uc_match": "1f469-1f3fb-2696-fe0f",
      "uc_greedy": "1f469-1f3fb-2696",
      "shortnames": [":woman_judge_light_skin_tone:"],
      "category": "people"
    },
    ":woman_judge_tone2:": {
      "uc_base": "1f469-1f3fc-2696",
      "uc_output": "1f469-1f3fc-200d-2696-fe0f",
      "uc_match": "1f469-1f3fc-2696-fe0f",
      "uc_greedy": "1f469-1f3fc-2696",
      "shortnames": [":woman_judge_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_judge_tone3:": {
      "uc_base": "1f469-1f3fd-2696",
      "uc_output": "1f469-1f3fd-200d-2696-fe0f",
      "uc_match": "1f469-1f3fd-2696-fe0f",
      "uc_greedy": "1f469-1f3fd-2696",
      "shortnames": [":woman_judge_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_judge_tone4:": {
      "uc_base": "1f469-1f3fe-2696",
      "uc_output": "1f469-1f3fe-200d-2696-fe0f",
      "uc_match": "1f469-1f3fe-2696-fe0f",
      "uc_greedy": "1f469-1f3fe-2696",
      "shortnames": [":woman_judge_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_judge_tone5:": {
      "uc_base": "1f469-1f3ff-2696",
      "uc_output": "1f469-1f3ff-200d-2696-fe0f",
      "uc_match": "1f469-1f3ff-2696-fe0f",
      "uc_greedy": "1f469-1f3ff-2696",
      "shortnames": [":woman_judge_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_juggling_tone1:": {
      "uc_base": "1f939-1f3fb-2640",
      "uc_output": "1f939-1f3fb-200d-2640-fe0f",
      "uc_match": "1f939-1f3fb-2640-fe0f",
      "uc_greedy": "1f939-1f3fb-2640",
      "shortnames": [":woman_juggling_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_juggling_tone2:": {
      "uc_base": "1f939-1f3fc-2640",
      "uc_output": "1f939-1f3fc-200d-2640-fe0f",
      "uc_match": "1f939-1f3fc-2640-fe0f",
      "uc_greedy": "1f939-1f3fc-2640",
      "shortnames": [":woman_juggling_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_juggling_tone3:": {
      "uc_base": "1f939-1f3fd-2640",
      "uc_output": "1f939-1f3fd-200d-2640-fe0f",
      "uc_match": "1f939-1f3fd-2640-fe0f",
      "uc_greedy": "1f939-1f3fd-2640",
      "shortnames": [":woman_juggling_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_juggling_tone4:": {
      "uc_base": "1f939-1f3fe-2640",
      "uc_output": "1f939-1f3fe-200d-2640-fe0f",
      "uc_match": "1f939-1f3fe-2640-fe0f",
      "uc_greedy": "1f939-1f3fe-2640",
      "shortnames": [":woman_juggling_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_juggling_tone5:": {
      "uc_base": "1f939-1f3ff-2640",
      "uc_output": "1f939-1f3ff-200d-2640-fe0f",
      "uc_match": "1f939-1f3ff-2640-fe0f",
      "uc_greedy": "1f939-1f3ff-2640",
      "shortnames": [":woman_juggling_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_lifting_weights_tone1:": {
      "uc_base": "1f3cb-1f3fb-2640",
      "uc_output": "1f3cb-1f3fb-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fb-2640-fe0f",
      "uc_greedy": "1f3cb-1f3fb-2640",
      "shortnames": [":woman_lifting_weights_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_lifting_weights_tone2:": {
      "uc_base": "1f3cb-1f3fc-2640",
      "uc_output": "1f3cb-1f3fc-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fc-2640-fe0f",
      "uc_greedy": "1f3cb-1f3fc-2640",
      "shortnames": [":woman_lifting_weights_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_lifting_weights_tone3:": {
      "uc_base": "1f3cb-1f3fd-2640",
      "uc_output": "1f3cb-1f3fd-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fd-2640-fe0f",
      "uc_greedy": "1f3cb-1f3fd-2640",
      "shortnames": [":woman_lifting_weights_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_lifting_weights_tone4:": {
      "uc_base": "1f3cb-1f3fe-2640",
      "uc_output": "1f3cb-1f3fe-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-1f3fe-2640-fe0f",
      "uc_greedy": "1f3cb-1f3fe-2640",
      "shortnames": [":woman_lifting_weights_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_lifting_weights_tone5:": {
      "uc_base": "1f3cb-1f3ff-2640",
      "uc_output": "1f3cb-1f3ff-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-1f3ff-2640-fe0f",
      "uc_greedy": "1f3cb-1f3ff-2640",
      "shortnames": [":woman_lifting_weights_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_mage_tone1:": {
      "uc_base": "1f9d9-1f3fb-2640",
      "uc_output": "1f9d9-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9d9-1f3fb-2640-fe0f",
      "uc_greedy": "1f9d9-1f3fb-2640",
      "shortnames": [":woman_mage_light_skin_tone:"],
      "category": "people"
    },
    ":woman_mage_tone2:": {
      "uc_base": "1f9d9-1f3fc-2640",
      "uc_output": "1f9d9-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9d9-1f3fc-2640-fe0f",
      "uc_greedy": "1f9d9-1f3fc-2640",
      "shortnames": [":woman_mage_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_mage_tone3:": {
      "uc_base": "1f9d9-1f3fd-2640",
      "uc_output": "1f9d9-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9d9-1f3fd-2640-fe0f",
      "uc_greedy": "1f9d9-1f3fd-2640",
      "shortnames": [":woman_mage_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_mage_tone4:": {
      "uc_base": "1f9d9-1f3fe-2640",
      "uc_output": "1f9d9-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9d9-1f3fe-2640-fe0f",
      "uc_greedy": "1f9d9-1f3fe-2640",
      "shortnames": [":woman_mage_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_mage_tone5:": {
      "uc_base": "1f9d9-1f3ff-2640",
      "uc_output": "1f9d9-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9d9-1f3ff-2640-fe0f",
      "uc_greedy": "1f9d9-1f3ff-2640",
      "shortnames": [":woman_mage_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_mountain_biking_tone1:": {
      "uc_base": "1f6b5-1f3fb-2640",
      "uc_output": "1f6b5-1f3fb-200d-2640-fe0f",
      "uc_match": "1f6b5-1f3fb-2640-fe0f",
      "uc_greedy": "1f6b5-1f3fb-2640",
      "shortnames": [":woman_mountain_biking_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_mountain_biking_tone2:": {
      "uc_base": "1f6b5-1f3fc-2640",
      "uc_output": "1f6b5-1f3fc-200d-2640-fe0f",
      "uc_match": "1f6b5-1f3fc-2640-fe0f",
      "uc_greedy": "1f6b5-1f3fc-2640",
      "shortnames": [":woman_mountain_biking_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_mountain_biking_tone3:": {
      "uc_base": "1f6b5-1f3fd-2640",
      "uc_output": "1f6b5-1f3fd-200d-2640-fe0f",
      "uc_match": "1f6b5-1f3fd-2640-fe0f",
      "uc_greedy": "1f6b5-1f3fd-2640",
      "shortnames": [":woman_mountain_biking_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_mountain_biking_tone4:": {
      "uc_base": "1f6b5-1f3fe-2640",
      "uc_output": "1f6b5-1f3fe-200d-2640-fe0f",
      "uc_match": "1f6b5-1f3fe-2640-fe0f",
      "uc_greedy": "1f6b5-1f3fe-2640",
      "shortnames": [":woman_mountain_biking_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_mountain_biking_tone5:": {
      "uc_base": "1f6b5-1f3ff-2640",
      "uc_output": "1f6b5-1f3ff-200d-2640-fe0f",
      "uc_match": "1f6b5-1f3ff-2640-fe0f",
      "uc_greedy": "1f6b5-1f3ff-2640",
      "shortnames": [":woman_mountain_biking_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_pilot_tone1:": {
      "uc_base": "1f469-1f3fb-2708",
      "uc_output": "1f469-1f3fb-200d-2708-fe0f",
      "uc_match": "1f469-1f3fb-2708-fe0f",
      "uc_greedy": "1f469-1f3fb-2708",
      "shortnames": [":woman_pilot_light_skin_tone:"],
      "category": "people"
    },
    ":woman_pilot_tone2:": {
      "uc_base": "1f469-1f3fc-2708",
      "uc_output": "1f469-1f3fc-200d-2708-fe0f",
      "uc_match": "1f469-1f3fc-2708-fe0f",
      "uc_greedy": "1f469-1f3fc-2708",
      "shortnames": [":woman_pilot_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_pilot_tone3:": {
      "uc_base": "1f469-1f3fd-2708",
      "uc_output": "1f469-1f3fd-200d-2708-fe0f",
      "uc_match": "1f469-1f3fd-2708-fe0f",
      "uc_greedy": "1f469-1f3fd-2708",
      "shortnames": [":woman_pilot_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_pilot_tone4:": {
      "uc_base": "1f469-1f3fe-2708",
      "uc_output": "1f469-1f3fe-200d-2708-fe0f",
      "uc_match": "1f469-1f3fe-2708-fe0f",
      "uc_greedy": "1f469-1f3fe-2708",
      "shortnames": [":woman_pilot_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_pilot_tone5:": {
      "uc_base": "1f469-1f3ff-2708",
      "uc_output": "1f469-1f3ff-200d-2708-fe0f",
      "uc_match": "1f469-1f3ff-2708-fe0f",
      "uc_greedy": "1f469-1f3ff-2708",
      "shortnames": [":woman_pilot_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_playing_handball_tone1:": {
      "uc_base": "1f93e-1f3fb-2640",
      "uc_output": "1f93e-1f3fb-200d-2640-fe0f",
      "uc_match": "1f93e-1f3fb-2640-fe0f",
      "uc_greedy": "1f93e-1f3fb-2640",
      "shortnames": [":woman_playing_handball_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_handball_tone2:": {
      "uc_base": "1f93e-1f3fc-2640",
      "uc_output": "1f93e-1f3fc-200d-2640-fe0f",
      "uc_match": "1f93e-1f3fc-2640-fe0f",
      "uc_greedy": "1f93e-1f3fc-2640",
      "shortnames": [":woman_playing_handball_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_handball_tone3:": {
      "uc_base": "1f93e-1f3fd-2640",
      "uc_output": "1f93e-1f3fd-200d-2640-fe0f",
      "uc_match": "1f93e-1f3fd-2640-fe0f",
      "uc_greedy": "1f93e-1f3fd-2640",
      "shortnames": [":woman_playing_handball_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_handball_tone4:": {
      "uc_base": "1f93e-1f3fe-2640",
      "uc_output": "1f93e-1f3fe-200d-2640-fe0f",
      "uc_match": "1f93e-1f3fe-2640-fe0f",
      "uc_greedy": "1f93e-1f3fe-2640",
      "shortnames": [":woman_playing_handball_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_handball_tone5:": {
      "uc_base": "1f93e-1f3ff-2640",
      "uc_output": "1f93e-1f3ff-200d-2640-fe0f",
      "uc_match": "1f93e-1f3ff-2640-fe0f",
      "uc_greedy": "1f93e-1f3ff-2640",
      "shortnames": [":woman_playing_handball_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_water_polo_tone1:": {
      "uc_base": "1f93d-1f3fb-2640",
      "uc_output": "1f93d-1f3fb-200d-2640-fe0f",
      "uc_match": "1f93d-1f3fb-2640-fe0f",
      "uc_greedy": "1f93d-1f3fb-2640",
      "shortnames": [":woman_playing_water_polo_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_water_polo_tone2:": {
      "uc_base": "1f93d-1f3fc-2640",
      "uc_output": "1f93d-1f3fc-200d-2640-fe0f",
      "uc_match": "1f93d-1f3fc-2640-fe0f",
      "uc_greedy": "1f93d-1f3fc-2640",
      "shortnames": [":woman_playing_water_polo_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_water_polo_tone3:": {
      "uc_base": "1f93d-1f3fd-2640",
      "uc_output": "1f93d-1f3fd-200d-2640-fe0f",
      "uc_match": "1f93d-1f3fd-2640-fe0f",
      "uc_greedy": "1f93d-1f3fd-2640",
      "shortnames": [":woman_playing_water_polo_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_water_polo_tone4:": {
      "uc_base": "1f93d-1f3fe-2640",
      "uc_output": "1f93d-1f3fe-200d-2640-fe0f",
      "uc_match": "1f93d-1f3fe-2640-fe0f",
      "uc_greedy": "1f93d-1f3fe-2640",
      "shortnames": [":woman_playing_water_polo_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_playing_water_polo_tone5:": {
      "uc_base": "1f93d-1f3ff-2640",
      "uc_output": "1f93d-1f3ff-200d-2640-fe0f",
      "uc_match": "1f93d-1f3ff-2640-fe0f",
      "uc_greedy": "1f93d-1f3ff-2640",
      "shortnames": [":woman_playing_water_polo_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_police_officer_tone1:": {
      "uc_base": "1f46e-1f3fb-2640",
      "uc_output": "1f46e-1f3fb-200d-2640-fe0f",
      "uc_match": "1f46e-1f3fb-2640-fe0f",
      "uc_greedy": "1f46e-1f3fb-2640",
      "shortnames": [":woman_police_officer_light_skin_tone:"],
      "category": "people"
    },
    ":woman_police_officer_tone2:": {
      "uc_base": "1f46e-1f3fc-2640",
      "uc_output": "1f46e-1f3fc-200d-2640-fe0f",
      "uc_match": "1f46e-1f3fc-2640-fe0f",
      "uc_greedy": "1f46e-1f3fc-2640",
      "shortnames": [":woman_police_officer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_police_officer_tone3:": {
      "uc_base": "1f46e-1f3fd-2640",
      "uc_output": "1f46e-1f3fd-200d-2640-fe0f",
      "uc_match": "1f46e-1f3fd-2640-fe0f",
      "uc_greedy": "1f46e-1f3fd-2640",
      "shortnames": [":woman_police_officer_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_police_officer_tone4:": {
      "uc_base": "1f46e-1f3fe-2640",
      "uc_output": "1f46e-1f3fe-200d-2640-fe0f",
      "uc_match": "1f46e-1f3fe-2640-fe0f",
      "uc_greedy": "1f46e-1f3fe-2640",
      "shortnames": [":woman_police_officer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_police_officer_tone5:": {
      "uc_base": "1f46e-1f3ff-2640",
      "uc_output": "1f46e-1f3ff-200d-2640-fe0f",
      "uc_match": "1f46e-1f3ff-2640-fe0f",
      "uc_greedy": "1f46e-1f3ff-2640",
      "shortnames": [":woman_police_officer_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_pouting_tone1:": {
      "uc_base": "1f64e-1f3fb-2640",
      "uc_output": "1f64e-1f3fb-200d-2640-fe0f",
      "uc_match": "1f64e-1f3fb-2640-fe0f",
      "uc_greedy": "1f64e-1f3fb-2640",
      "shortnames": [":woman_pouting_light_skin_tone:"],
      "category": "people"
    },
    ":woman_pouting_tone2:": {
      "uc_base": "1f64e-1f3fc-2640",
      "uc_output": "1f64e-1f3fc-200d-2640-fe0f",
      "uc_match": "1f64e-1f3fc-2640-fe0f",
      "uc_greedy": "1f64e-1f3fc-2640",
      "shortnames": [":woman_pouting_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_pouting_tone3:": {
      "uc_base": "1f64e-1f3fd-2640",
      "uc_output": "1f64e-1f3fd-200d-2640-fe0f",
      "uc_match": "1f64e-1f3fd-2640-fe0f",
      "uc_greedy": "1f64e-1f3fd-2640",
      "shortnames": [":woman_pouting_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_pouting_tone4:": {
      "uc_base": "1f64e-1f3fe-2640",
      "uc_output": "1f64e-1f3fe-200d-2640-fe0f",
      "uc_match": "1f64e-1f3fe-2640-fe0f",
      "uc_greedy": "1f64e-1f3fe-2640",
      "shortnames": [":woman_pouting_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_pouting_tone5:": {
      "uc_base": "1f64e-1f3ff-2640",
      "uc_output": "1f64e-1f3ff-200d-2640-fe0f",
      "uc_match": "1f64e-1f3ff-2640-fe0f",
      "uc_greedy": "1f64e-1f3ff-2640",
      "shortnames": [":woman_pouting_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_raising_hand_tone1:": {
      "uc_base": "1f64b-1f3fb-2640",
      "uc_output": "1f64b-1f3fb-200d-2640-fe0f",
      "uc_match": "1f64b-1f3fb-2640-fe0f",
      "uc_greedy": "1f64b-1f3fb-2640",
      "shortnames": [":woman_raising_hand_light_skin_tone:"],
      "category": "people"
    },
    ":woman_raising_hand_tone2:": {
      "uc_base": "1f64b-1f3fc-2640",
      "uc_output": "1f64b-1f3fc-200d-2640-fe0f",
      "uc_match": "1f64b-1f3fc-2640-fe0f",
      "uc_greedy": "1f64b-1f3fc-2640",
      "shortnames": [":woman_raising_hand_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_raising_hand_tone3:": {
      "uc_base": "1f64b-1f3fd-2640",
      "uc_output": "1f64b-1f3fd-200d-2640-fe0f",
      "uc_match": "1f64b-1f3fd-2640-fe0f",
      "uc_greedy": "1f64b-1f3fd-2640",
      "shortnames": [":woman_raising_hand_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_raising_hand_tone4:": {
      "uc_base": "1f64b-1f3fe-2640",
      "uc_output": "1f64b-1f3fe-200d-2640-fe0f",
      "uc_match": "1f64b-1f3fe-2640-fe0f",
      "uc_greedy": "1f64b-1f3fe-2640",
      "shortnames": [":woman_raising_hand_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_raising_hand_tone5:": {
      "uc_base": "1f64b-1f3ff-2640",
      "uc_output": "1f64b-1f3ff-200d-2640-fe0f",
      "uc_match": "1f64b-1f3ff-2640-fe0f",
      "uc_greedy": "1f64b-1f3ff-2640",
      "shortnames": [":woman_raising_hand_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_rowing_boat_tone1:": {
      "uc_base": "1f6a3-1f3fb-2640",
      "uc_output": "1f6a3-1f3fb-200d-2640-fe0f",
      "uc_match": "1f6a3-1f3fb-2640-fe0f",
      "uc_greedy": "1f6a3-1f3fb-2640",
      "shortnames": [":woman_rowing_boat_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_rowing_boat_tone2:": {
      "uc_base": "1f6a3-1f3fc-2640",
      "uc_output": "1f6a3-1f3fc-200d-2640-fe0f",
      "uc_match": "1f6a3-1f3fc-2640-fe0f",
      "uc_greedy": "1f6a3-1f3fc-2640",
      "shortnames": [":woman_rowing_boat_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_rowing_boat_tone3:": {
      "uc_base": "1f6a3-1f3fd-2640",
      "uc_output": "1f6a3-1f3fd-200d-2640-fe0f",
      "uc_match": "1f6a3-1f3fd-2640-fe0f",
      "uc_greedy": "1f6a3-1f3fd-2640",
      "shortnames": [":woman_rowing_boat_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_rowing_boat_tone4:": {
      "uc_base": "1f6a3-1f3fe-2640",
      "uc_output": "1f6a3-1f3fe-200d-2640-fe0f",
      "uc_match": "1f6a3-1f3fe-2640-fe0f",
      "uc_greedy": "1f6a3-1f3fe-2640",
      "shortnames": [":woman_rowing_boat_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_rowing_boat_tone5:": {
      "uc_base": "1f6a3-1f3ff-2640",
      "uc_output": "1f6a3-1f3ff-200d-2640-fe0f",
      "uc_match": "1f6a3-1f3ff-2640-fe0f",
      "uc_greedy": "1f6a3-1f3ff-2640",
      "shortnames": [":woman_rowing_boat_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_running_tone1:": {
      "uc_base": "1f3c3-1f3fb-2640",
      "uc_output": "1f3c3-1f3fb-200d-2640-fe0f",
      "uc_match": "1f3c3-1f3fb-2640-fe0f",
      "uc_greedy": "1f3c3-1f3fb-2640",
      "shortnames": [":woman_running_light_skin_tone:"],
      "category": "people"
    },
    ":woman_running_tone2:": {
      "uc_base": "1f3c3-1f3fc-2640",
      "uc_output": "1f3c3-1f3fc-200d-2640-fe0f",
      "uc_match": "1f3c3-1f3fc-2640-fe0f",
      "uc_greedy": "1f3c3-1f3fc-2640",
      "shortnames": [":woman_running_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_running_tone3:": {
      "uc_base": "1f3c3-1f3fd-2640",
      "uc_output": "1f3c3-1f3fd-200d-2640-fe0f",
      "uc_match": "1f3c3-1f3fd-2640-fe0f",
      "uc_greedy": "1f3c3-1f3fd-2640",
      "shortnames": [":woman_running_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_running_tone4:": {
      "uc_base": "1f3c3-1f3fe-2640",
      "uc_output": "1f3c3-1f3fe-200d-2640-fe0f",
      "uc_match": "1f3c3-1f3fe-2640-fe0f",
      "uc_greedy": "1f3c3-1f3fe-2640",
      "shortnames": [":woman_running_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_running_tone5:": {
      "uc_base": "1f3c3-1f3ff-2640",
      "uc_output": "1f3c3-1f3ff-200d-2640-fe0f",
      "uc_match": "1f3c3-1f3ff-2640-fe0f",
      "uc_greedy": "1f3c3-1f3ff-2640",
      "shortnames": [":woman_running_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_shrugging_tone1:": {
      "uc_base": "1f937-1f3fb-2640",
      "uc_output": "1f937-1f3fb-200d-2640-fe0f",
      "uc_match": "1f937-1f3fb-2640-fe0f",
      "uc_greedy": "1f937-1f3fb-2640",
      "shortnames": [":woman_shrugging_light_skin_tone:"],
      "category": "people"
    },
    ":woman_shrugging_tone2:": {
      "uc_base": "1f937-1f3fc-2640",
      "uc_output": "1f937-1f3fc-200d-2640-fe0f",
      "uc_match": "1f937-1f3fc-2640-fe0f",
      "uc_greedy": "1f937-1f3fc-2640",
      "shortnames": [":woman_shrugging_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_shrugging_tone3:": {
      "uc_base": "1f937-1f3fd-2640",
      "uc_output": "1f937-1f3fd-200d-2640-fe0f",
      "uc_match": "1f937-1f3fd-2640-fe0f",
      "uc_greedy": "1f937-1f3fd-2640",
      "shortnames": [":woman_shrugging_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_shrugging_tone4:": {
      "uc_base": "1f937-1f3fe-2640",
      "uc_output": "1f937-1f3fe-200d-2640-fe0f",
      "uc_match": "1f937-1f3fe-2640-fe0f",
      "uc_greedy": "1f937-1f3fe-2640",
      "shortnames": [":woman_shrugging_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_shrugging_tone5:": {
      "uc_base": "1f937-1f3ff-2640",
      "uc_output": "1f937-1f3ff-200d-2640-fe0f",
      "uc_match": "1f937-1f3ff-2640-fe0f",
      "uc_greedy": "1f937-1f3ff-2640",
      "shortnames": [":woman_shrugging_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_surfing_tone1:": {
      "uc_base": "1f3c4-1f3fb-2640",
      "uc_output": "1f3c4-1f3fb-200d-2640-fe0f",
      "uc_match": "1f3c4-1f3fb-2640-fe0f",
      "uc_greedy": "1f3c4-1f3fb-2640",
      "shortnames": [":woman_surfing_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_surfing_tone2:": {
      "uc_base": "1f3c4-1f3fc-2640",
      "uc_output": "1f3c4-1f3fc-200d-2640-fe0f",
      "uc_match": "1f3c4-1f3fc-2640-fe0f",
      "uc_greedy": "1f3c4-1f3fc-2640",
      "shortnames": [":woman_surfing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_surfing_tone3:": {
      "uc_base": "1f3c4-1f3fd-2640",
      "uc_output": "1f3c4-1f3fd-200d-2640-fe0f",
      "uc_match": "1f3c4-1f3fd-2640-fe0f",
      "uc_greedy": "1f3c4-1f3fd-2640",
      "shortnames": [":woman_surfing_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_surfing_tone4:": {
      "uc_base": "1f3c4-1f3fe-2640",
      "uc_output": "1f3c4-1f3fe-200d-2640-fe0f",
      "uc_match": "1f3c4-1f3fe-2640-fe0f",
      "uc_greedy": "1f3c4-1f3fe-2640",
      "shortnames": [":woman_surfing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_surfing_tone5:": {
      "uc_base": "1f3c4-1f3ff-2640",
      "uc_output": "1f3c4-1f3ff-200d-2640-fe0f",
      "uc_match": "1f3c4-1f3ff-2640-fe0f",
      "uc_greedy": "1f3c4-1f3ff-2640",
      "shortnames": [":woman_surfing_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_swimming_tone1:": {
      "uc_base": "1f3ca-1f3fb-2640",
      "uc_output": "1f3ca-1f3fb-200d-2640-fe0f",
      "uc_match": "1f3ca-1f3fb-2640-fe0f",
      "uc_greedy": "1f3ca-1f3fb-2640",
      "shortnames": [":woman_swimming_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_swimming_tone2:": {
      "uc_base": "1f3ca-1f3fc-2640",
      "uc_output": "1f3ca-1f3fc-200d-2640-fe0f",
      "uc_match": "1f3ca-1f3fc-2640-fe0f",
      "uc_greedy": "1f3ca-1f3fc-2640",
      "shortnames": [":woman_swimming_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_swimming_tone3:": {
      "uc_base": "1f3ca-1f3fd-2640",
      "uc_output": "1f3ca-1f3fd-200d-2640-fe0f",
      "uc_match": "1f3ca-1f3fd-2640-fe0f",
      "uc_greedy": "1f3ca-1f3fd-2640",
      "shortnames": [":woman_swimming_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_swimming_tone4:": {
      "uc_base": "1f3ca-1f3fe-2640",
      "uc_output": "1f3ca-1f3fe-200d-2640-fe0f",
      "uc_match": "1f3ca-1f3fe-2640-fe0f",
      "uc_greedy": "1f3ca-1f3fe-2640",
      "shortnames": [":woman_swimming_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_swimming_tone5:": {
      "uc_base": "1f3ca-1f3ff-2640",
      "uc_output": "1f3ca-1f3ff-200d-2640-fe0f",
      "uc_match": "1f3ca-1f3ff-2640-fe0f",
      "uc_greedy": "1f3ca-1f3ff-2640",
      "shortnames": [":woman_swimming_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_tipping_hand_tone1:": {
      "uc_base": "1f481-1f3fb-2640",
      "uc_output": "1f481-1f3fb-200d-2640-fe0f",
      "uc_match": "1f481-1f3fb-2640-fe0f",
      "uc_greedy": "1f481-1f3fb-2640",
      "shortnames": [":woman_tipping_hand_light_skin_tone:"],
      "category": "people"
    },
    ":woman_tipping_hand_tone2:": {
      "uc_base": "1f481-1f3fc-2640",
      "uc_output": "1f481-1f3fc-200d-2640-fe0f",
      "uc_match": "1f481-1f3fc-2640-fe0f",
      "uc_greedy": "1f481-1f3fc-2640",
      "shortnames": [":woman_tipping_hand_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_tipping_hand_tone3:": {
      "uc_base": "1f481-1f3fd-2640",
      "uc_output": "1f481-1f3fd-200d-2640-fe0f",
      "uc_match": "1f481-1f3fd-2640-fe0f",
      "uc_greedy": "1f481-1f3fd-2640",
      "shortnames": [":woman_tipping_hand_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_tipping_hand_tone4:": {
      "uc_base": "1f481-1f3fe-2640",
      "uc_output": "1f481-1f3fe-200d-2640-fe0f",
      "uc_match": "1f481-1f3fe-2640-fe0f",
      "uc_greedy": "1f481-1f3fe-2640",
      "shortnames": [":woman_tipping_hand_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_tipping_hand_tone5:": {
      "uc_base": "1f481-1f3ff-2640",
      "uc_output": "1f481-1f3ff-200d-2640-fe0f",
      "uc_match": "1f481-1f3ff-2640-fe0f",
      "uc_greedy": "1f481-1f3ff-2640",
      "shortnames": [":woman_tipping_hand_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_vampire_tone1:": {
      "uc_base": "1f9db-1f3fb-2640",
      "uc_output": "1f9db-1f3fb-200d-2640-fe0f",
      "uc_match": "1f9db-1f3fb-2640-fe0f",
      "uc_greedy": "1f9db-1f3fb-2640",
      "shortnames": [":woman_vampire_light_skin_tone:"],
      "category": "people"
    },
    ":woman_vampire_tone2:": {
      "uc_base": "1f9db-1f3fc-2640",
      "uc_output": "1f9db-1f3fc-200d-2640-fe0f",
      "uc_match": "1f9db-1f3fc-2640-fe0f",
      "uc_greedy": "1f9db-1f3fc-2640",
      "shortnames": [":woman_vampire_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_vampire_tone3:": {
      "uc_base": "1f9db-1f3fd-2640",
      "uc_output": "1f9db-1f3fd-200d-2640-fe0f",
      "uc_match": "1f9db-1f3fd-2640-fe0f",
      "uc_greedy": "1f9db-1f3fd-2640",
      "shortnames": [":woman_vampire_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_vampire_tone4:": {
      "uc_base": "1f9db-1f3fe-2640",
      "uc_output": "1f9db-1f3fe-200d-2640-fe0f",
      "uc_match": "1f9db-1f3fe-2640-fe0f",
      "uc_greedy": "1f9db-1f3fe-2640",
      "shortnames": [":woman_vampire_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_vampire_tone5:": {
      "uc_base": "1f9db-1f3ff-2640",
      "uc_output": "1f9db-1f3ff-200d-2640-fe0f",
      "uc_match": "1f9db-1f3ff-2640-fe0f",
      "uc_greedy": "1f9db-1f3ff-2640",
      "shortnames": [":woman_vampire_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_walking_tone1:": {
      "uc_base": "1f6b6-1f3fb-2640",
      "uc_output": "1f6b6-1f3fb-200d-2640-fe0f",
      "uc_match": "1f6b6-1f3fb-2640-fe0f",
      "uc_greedy": "1f6b6-1f3fb-2640",
      "shortnames": [":woman_walking_light_skin_tone:"],
      "category": "people"
    },
    ":woman_walking_tone2:": {
      "uc_base": "1f6b6-1f3fc-2640",
      "uc_output": "1f6b6-1f3fc-200d-2640-fe0f",
      "uc_match": "1f6b6-1f3fc-2640-fe0f",
      "uc_greedy": "1f6b6-1f3fc-2640",
      "shortnames": [":woman_walking_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_walking_tone3:": {
      "uc_base": "1f6b6-1f3fd-2640",
      "uc_output": "1f6b6-1f3fd-200d-2640-fe0f",
      "uc_match": "1f6b6-1f3fd-2640-fe0f",
      "uc_greedy": "1f6b6-1f3fd-2640",
      "shortnames": [":woman_walking_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_walking_tone4:": {
      "uc_base": "1f6b6-1f3fe-2640",
      "uc_output": "1f6b6-1f3fe-200d-2640-fe0f",
      "uc_match": "1f6b6-1f3fe-2640-fe0f",
      "uc_greedy": "1f6b6-1f3fe-2640",
      "shortnames": [":woman_walking_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_walking_tone5:": {
      "uc_base": "1f6b6-1f3ff-2640",
      "uc_output": "1f6b6-1f3ff-200d-2640-fe0f",
      "uc_match": "1f6b6-1f3ff-2640-fe0f",
      "uc_greedy": "1f6b6-1f3ff-2640",
      "shortnames": [":woman_walking_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_wearing_turban_tone1:": {
      "uc_base": "1f473-1f3fb-2640",
      "uc_output": "1f473-1f3fb-200d-2640-fe0f",
      "uc_match": "1f473-1f3fb-2640-fe0f",
      "uc_greedy": "1f473-1f3fb-2640",
      "shortnames": [":woman_wearing_turban_light_skin_tone:"],
      "category": "people"
    },
    ":woman_wearing_turban_tone2:": {
      "uc_base": "1f473-1f3fc-2640",
      "uc_output": "1f473-1f3fc-200d-2640-fe0f",
      "uc_match": "1f473-1f3fc-2640-fe0f",
      "uc_greedy": "1f473-1f3fc-2640",
      "shortnames": [":woman_wearing_turban_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_wearing_turban_tone3:": {
      "uc_base": "1f473-1f3fd-2640",
      "uc_output": "1f473-1f3fd-200d-2640-fe0f",
      "uc_match": "1f473-1f3fd-2640-fe0f",
      "uc_greedy": "1f473-1f3fd-2640",
      "shortnames": [":woman_wearing_turban_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_wearing_turban_tone4:": {
      "uc_base": "1f473-1f3fe-2640",
      "uc_output": "1f473-1f3fe-200d-2640-fe0f",
      "uc_match": "1f473-1f3fe-2640-fe0f",
      "uc_greedy": "1f473-1f3fe-2640",
      "shortnames": [":woman_wearing_turban_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_wearing_turban_tone5:": {
      "uc_base": "1f473-1f3ff-2640",
      "uc_output": "1f473-1f3ff-200d-2640-fe0f",
      "uc_match": "1f473-1f3ff-2640-fe0f",
      "uc_greedy": "1f473-1f3ff-2640",
      "shortnames": [":woman_wearing_turban_dark_skin_tone:"],
      "category": "people"
    },
    ":man_bouncing_ball_tone1:": {
      "uc_base": "26f9-1f3fb-2642",
      "uc_output": "26f9-1f3fb-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-1f3fb-2642-fe0f",
      "uc_greedy": "26f9-1f3fb-2642",
      "shortnames": [":man_bouncing_ball_light_skin_tone:"],
      "category": "activity"
    },
    ":man_bouncing_ball_tone2:": {
      "uc_base": "26f9-1f3fc-2642",
      "uc_output": "26f9-1f3fc-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-1f3fc-2642-fe0f",
      "uc_greedy": "26f9-1f3fc-2642",
      "shortnames": [":man_bouncing_ball_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":man_bouncing_ball_tone3:": {
      "uc_base": "26f9-1f3fd-2642",
      "uc_output": "26f9-1f3fd-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-1f3fd-2642-fe0f",
      "uc_greedy": "26f9-1f3fd-2642",
      "shortnames": [":man_bouncing_ball_medium_skin_tone:"],
      "category": "activity"
    },
    ":man_bouncing_ball_tone4:": {
      "uc_base": "26f9-1f3fe-2642",
      "uc_output": "26f9-1f3fe-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-1f3fe-2642-fe0f",
      "uc_greedy": "26f9-1f3fe-2642",
      "shortnames": [":man_bouncing_ball_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_bouncing_ball_tone5:": {
      "uc_base": "26f9-1f3ff-2642",
      "uc_output": "26f9-1f3ff-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-1f3ff-2642-fe0f",
      "uc_greedy": "26f9-1f3ff-2642",
      "shortnames": [":man_bouncing_ball_dark_skin_tone:"],
      "category": "activity"
    },
    ":man_detective:": {
      "uc_base": "1f575-2642",
      "uc_output": "1f575-fe0f-200d-2642-fe0f",
      "uc_match": "1f575-fe0f-200d-2642",
      "uc_greedy": "1f575-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_golfing:": {
      "uc_base": "1f3cc-2642",
      "uc_output": "1f3cc-fe0f-200d-2642-fe0f",
      "uc_match": "1f3cc-fe0f-200d-2642",
      "uc_greedy": "1f3cc-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_lifting_weights:": {
      "uc_base": "1f3cb-2642",
      "uc_output": "1f3cb-fe0f-200d-2642-fe0f",
      "uc_match": "1f3cb-fe0f-200d-2642",
      "uc_greedy": "1f3cb-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_bouncing_ball_tone1:": {
      "uc_base": "26f9-1f3fb-2640",
      "uc_output": "26f9-1f3fb-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-1f3fb-2640-fe0f",
      "uc_greedy": "26f9-1f3fb-2640",
      "shortnames": [":woman_bouncing_ball_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_bouncing_ball_tone2:": {
      "uc_base": "26f9-1f3fc-2640",
      "uc_output": "26f9-1f3fc-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-1f3fc-2640-fe0f",
      "uc_greedy": "26f9-1f3fc-2640",
      "shortnames": [":woman_bouncing_ball_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":woman_bouncing_ball_tone3:": {
      "uc_base": "26f9-1f3fd-2640",
      "uc_output": "26f9-1f3fd-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-1f3fd-2640-fe0f",
      "uc_greedy": "26f9-1f3fd-2640",
      "shortnames": [":woman_bouncing_ball_medium_skin_tone:"],
      "category": "activity"
    },
    ":woman_bouncing_ball_tone4:": {
      "uc_base": "26f9-1f3fe-2640",
      "uc_output": "26f9-1f3fe-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-1f3fe-2640-fe0f",
      "uc_greedy": "26f9-1f3fe-2640",
      "shortnames": [":woman_bouncing_ball_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_bouncing_ball_tone5:": {
      "uc_base": "26f9-1f3ff-2640",
      "uc_output": "26f9-1f3ff-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-1f3ff-2640-fe0f",
      "uc_greedy": "26f9-1f3ff-2640",
      "shortnames": [":woman_bouncing_ball_dark_skin_tone:"],
      "category": "activity"
    },
    ":woman_detective:": {
      "uc_base": "1f575-2640",
      "uc_output": "1f575-fe0f-200d-2640-fe0f",
      "uc_match": "1f575-fe0f-200d-2640",
      "uc_greedy": "1f575-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_golfing:": {
      "uc_base": "1f3cc-2640",
      "uc_output": "1f3cc-fe0f-200d-2640-fe0f",
      "uc_match": "1f3cc-fe0f-200d-2640",
      "uc_greedy": "1f3cc-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_lifting_weights:": {
      "uc_base": "1f3cb-2640",
      "uc_output": "1f3cb-fe0f-200d-2640-fe0f",
      "uc_match": "1f3cb-fe0f-200d-2640",
      "uc_greedy": "1f3cb-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":man_bouncing_ball:": {
      "uc_base": "26f9-2642",
      "uc_output": "26f9-fe0f-200d-2642-fe0f",
      "uc_match": "26f9-fe0f-200d-2642",
      "uc_greedy": "26f9-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_bouncing_ball:": {
      "uc_base": "26f9-2640",
      "uc_output": "26f9-fe0f-200d-2640-fe0f",
      "uc_match": "26f9-fe0f-200d-2640",
      "uc_greedy": "26f9-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":man_artist_tone1:": {
      "uc_base": "1f468-1f3fb-1f3a8",
      "uc_output": "1f468-1f3fb-200d-1f3a8",
      "uc_match": "1f468-1f3fb-1f3a8",
      "uc_greedy": "1f468-1f3fb-1f3a8",
      "shortnames": [":man_artist_light_skin_tone:"],
      "category": "people"
    },
    ":man_artist_tone2:": {
      "uc_base": "1f468-1f3fc-1f3a8",
      "uc_output": "1f468-1f3fc-200d-1f3a8",
      "uc_match": "1f468-1f3fc-1f3a8",
      "uc_greedy": "1f468-1f3fc-1f3a8",
      "shortnames": [":man_artist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_artist_tone3:": {
      "uc_base": "1f468-1f3fd-1f3a8",
      "uc_output": "1f468-1f3fd-200d-1f3a8",
      "uc_match": "1f468-1f3fd-1f3a8",
      "uc_greedy": "1f468-1f3fd-1f3a8",
      "shortnames": [":man_artist_medium_skin_tone:"],
      "category": "people"
    },
    ":man_artist_tone4:": {
      "uc_base": "1f468-1f3fe-1f3a8",
      "uc_output": "1f468-1f3fe-200d-1f3a8",
      "uc_match": "1f468-1f3fe-1f3a8",
      "uc_greedy": "1f468-1f3fe-1f3a8",
      "shortnames": [":man_artist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_artist_tone5:": {
      "uc_base": "1f468-1f3ff-1f3a8",
      "uc_output": "1f468-1f3ff-200d-1f3a8",
      "uc_match": "1f468-1f3ff-1f3a8",
      "uc_greedy": "1f468-1f3ff-1f3a8",
      "shortnames": [":man_artist_dark_skin_tone:"],
      "category": "people"
    },
    ":man_astronaut_tone1:": {
      "uc_base": "1f468-1f3fb-1f680",
      "uc_output": "1f468-1f3fb-200d-1f680",
      "uc_match": "1f468-1f3fb-1f680",
      "uc_greedy": "1f468-1f3fb-1f680",
      "shortnames": [":man_astronaut_light_skin_tone:"],
      "category": "people"
    },
    ":man_astronaut_tone2:": {
      "uc_base": "1f468-1f3fc-1f680",
      "uc_output": "1f468-1f3fc-200d-1f680",
      "uc_match": "1f468-1f3fc-1f680",
      "uc_greedy": "1f468-1f3fc-1f680",
      "shortnames": [":man_astronaut_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_astronaut_tone3:": {
      "uc_base": "1f468-1f3fd-1f680",
      "uc_output": "1f468-1f3fd-200d-1f680",
      "uc_match": "1f468-1f3fd-1f680",
      "uc_greedy": "1f468-1f3fd-1f680",
      "shortnames": [":man_astronaut_medium_skin_tone:"],
      "category": "people"
    },
    ":man_astronaut_tone4:": {
      "uc_base": "1f468-1f3fe-1f680",
      "uc_output": "1f468-1f3fe-200d-1f680",
      "uc_match": "1f468-1f3fe-1f680",
      "uc_greedy": "1f468-1f3fe-1f680",
      "shortnames": [":man_astronaut_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_astronaut_tone5:": {
      "uc_base": "1f468-1f3ff-1f680",
      "uc_output": "1f468-1f3ff-200d-1f680",
      "uc_match": "1f468-1f3ff-1f680",
      "uc_greedy": "1f468-1f3ff-1f680",
      "shortnames": [":man_astronaut_dark_skin_tone:"],
      "category": "people"
    },
    ":man_cook_tone1:": {
      "uc_base": "1f468-1f3fb-1f373",
      "uc_output": "1f468-1f3fb-200d-1f373",
      "uc_match": "1f468-1f3fb-1f373",
      "uc_greedy": "1f468-1f3fb-1f373",
      "shortnames": [":man_cook_light_skin_tone:"],
      "category": "people"
    },
    ":man_cook_tone2:": {
      "uc_base": "1f468-1f3fc-1f373",
      "uc_output": "1f468-1f3fc-200d-1f373",
      "uc_match": "1f468-1f3fc-1f373",
      "uc_greedy": "1f468-1f3fc-1f373",
      "shortnames": [":man_cook_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_cook_tone3:": {
      "uc_base": "1f468-1f3fd-1f373",
      "uc_output": "1f468-1f3fd-200d-1f373",
      "uc_match": "1f468-1f3fd-1f373",
      "uc_greedy": "1f468-1f3fd-1f373",
      "shortnames": [":man_cook_medium_skin_tone:"],
      "category": "people"
    },
    ":man_cook_tone4:": {
      "uc_base": "1f468-1f3fe-1f373",
      "uc_output": "1f468-1f3fe-200d-1f373",
      "uc_match": "1f468-1f3fe-1f373",
      "uc_greedy": "1f468-1f3fe-1f373",
      "shortnames": [":man_cook_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_cook_tone5:": {
      "uc_base": "1f468-1f3ff-1f373",
      "uc_output": "1f468-1f3ff-200d-1f373",
      "uc_match": "1f468-1f3ff-1f373",
      "uc_greedy": "1f468-1f3ff-1f373",
      "shortnames": [":man_cook_dark_skin_tone:"],
      "category": "people"
    },
    ":man_factory_worker_tone1:": {
      "uc_base": "1f468-1f3fb-1f3ed",
      "uc_output": "1f468-1f3fb-200d-1f3ed",
      "uc_match": "1f468-1f3fb-1f3ed",
      "uc_greedy": "1f468-1f3fb-1f3ed",
      "shortnames": [":man_factory_worker_light_skin_tone:"],
      "category": "people"
    },
    ":man_factory_worker_tone2:": {
      "uc_base": "1f468-1f3fc-1f3ed",
      "uc_output": "1f468-1f3fc-200d-1f3ed",
      "uc_match": "1f468-1f3fc-1f3ed",
      "uc_greedy": "1f468-1f3fc-1f3ed",
      "shortnames": [":man_factory_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_factory_worker_tone3:": {
      "uc_base": "1f468-1f3fd-1f3ed",
      "uc_output": "1f468-1f3fd-200d-1f3ed",
      "uc_match": "1f468-1f3fd-1f3ed",
      "uc_greedy": "1f468-1f3fd-1f3ed",
      "shortnames": [":man_factory_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":man_factory_worker_tone4:": {
      "uc_base": "1f468-1f3fe-1f3ed",
      "uc_output": "1f468-1f3fe-200d-1f3ed",
      "uc_match": "1f468-1f3fe-1f3ed",
      "uc_greedy": "1f468-1f3fe-1f3ed",
      "shortnames": [":man_factory_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_factory_worker_tone5:": {
      "uc_base": "1f468-1f3ff-1f3ed",
      "uc_output": "1f468-1f3ff-200d-1f3ed",
      "uc_match": "1f468-1f3ff-1f3ed",
      "uc_greedy": "1f468-1f3ff-1f3ed",
      "shortnames": [":man_factory_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":man_farmer_tone1:": {
      "uc_base": "1f468-1f3fb-1f33e",
      "uc_output": "1f468-1f3fb-200d-1f33e",
      "uc_match": "1f468-1f3fb-1f33e",
      "uc_greedy": "1f468-1f3fb-1f33e",
      "shortnames": [":man_farmer_light_skin_tone:"],
      "category": "people"
    },
    ":man_farmer_tone2:": {
      "uc_base": "1f468-1f3fc-1f33e",
      "uc_output": "1f468-1f3fc-200d-1f33e",
      "uc_match": "1f468-1f3fc-1f33e",
      "uc_greedy": "1f468-1f3fc-1f33e",
      "shortnames": [":man_farmer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_farmer_tone3:": {
      "uc_base": "1f468-1f3fd-1f33e",
      "uc_output": "1f468-1f3fd-200d-1f33e",
      "uc_match": "1f468-1f3fd-1f33e",
      "uc_greedy": "1f468-1f3fd-1f33e",
      "shortnames": [":man_farmer_medium_skin_tone:"],
      "category": "people"
    },
    ":man_farmer_tone4:": {
      "uc_base": "1f468-1f3fe-1f33e",
      "uc_output": "1f468-1f3fe-200d-1f33e",
      "uc_match": "1f468-1f3fe-1f33e",
      "uc_greedy": "1f468-1f3fe-1f33e",
      "shortnames": [":man_farmer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_farmer_tone5:": {
      "uc_base": "1f468-1f3ff-1f33e",
      "uc_output": "1f468-1f3ff-200d-1f33e",
      "uc_match": "1f468-1f3ff-1f33e",
      "uc_greedy": "1f468-1f3ff-1f33e",
      "shortnames": [":man_farmer_dark_skin_tone:"],
      "category": "people"
    },
    ":man_firefighter_tone1:": {
      "uc_base": "1f468-1f3fb-1f692",
      "uc_output": "1f468-1f3fb-200d-1f692",
      "uc_match": "1f468-1f3fb-1f692",
      "uc_greedy": "1f468-1f3fb-1f692",
      "shortnames": [":man_firefighter_light_skin_tone:"],
      "category": "people"
    },
    ":man_firefighter_tone2:": {
      "uc_base": "1f468-1f3fc-1f692",
      "uc_output": "1f468-1f3fc-200d-1f692",
      "uc_match": "1f468-1f3fc-1f692",
      "uc_greedy": "1f468-1f3fc-1f692",
      "shortnames": [":man_firefighter_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_firefighter_tone3:": {
      "uc_base": "1f468-1f3fd-1f692",
      "uc_output": "1f468-1f3fd-200d-1f692",
      "uc_match": "1f468-1f3fd-1f692",
      "uc_greedy": "1f468-1f3fd-1f692",
      "shortnames": [":man_firefighter_medium_skin_tone:"],
      "category": "people"
    },
    ":man_firefighter_tone4:": {
      "uc_base": "1f468-1f3fe-1f692",
      "uc_output": "1f468-1f3fe-200d-1f692",
      "uc_match": "1f468-1f3fe-1f692",
      "uc_greedy": "1f468-1f3fe-1f692",
      "shortnames": [":man_firefighter_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_firefighter_tone5:": {
      "uc_base": "1f468-1f3ff-1f692",
      "uc_output": "1f468-1f3ff-200d-1f692",
      "uc_match": "1f468-1f3ff-1f692",
      "uc_greedy": "1f468-1f3ff-1f692",
      "shortnames": [":man_firefighter_dark_skin_tone:"],
      "category": "people"
    },
    ":man_mechanic_tone1:": {
      "uc_base": "1f468-1f3fb-1f527",
      "uc_output": "1f468-1f3fb-200d-1f527",
      "uc_match": "1f468-1f3fb-1f527",
      "uc_greedy": "1f468-1f3fb-1f527",
      "shortnames": [":man_mechanic_light_skin_tone:"],
      "category": "people"
    },
    ":man_mechanic_tone2:": {
      "uc_base": "1f468-1f3fc-1f527",
      "uc_output": "1f468-1f3fc-200d-1f527",
      "uc_match": "1f468-1f3fc-1f527",
      "uc_greedy": "1f468-1f3fc-1f527",
      "shortnames": [":man_mechanic_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_mechanic_tone3:": {
      "uc_base": "1f468-1f3fd-1f527",
      "uc_output": "1f468-1f3fd-200d-1f527",
      "uc_match": "1f468-1f3fd-1f527",
      "uc_greedy": "1f468-1f3fd-1f527",
      "shortnames": [":man_mechanic_medium_skin_tone:"],
      "category": "people"
    },
    ":man_mechanic_tone4:": {
      "uc_base": "1f468-1f3fe-1f527",
      "uc_output": "1f468-1f3fe-200d-1f527",
      "uc_match": "1f468-1f3fe-1f527",
      "uc_greedy": "1f468-1f3fe-1f527",
      "shortnames": [":man_mechanic_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_mechanic_tone5:": {
      "uc_base": "1f468-1f3ff-1f527",
      "uc_output": "1f468-1f3ff-200d-1f527",
      "uc_match": "1f468-1f3ff-1f527",
      "uc_greedy": "1f468-1f3ff-1f527",
      "shortnames": [":man_mechanic_dark_skin_tone:"],
      "category": "people"
    },
    ":man_office_worker_tone1:": {
      "uc_base": "1f468-1f3fb-1f4bc",
      "uc_output": "1f468-1f3fb-200d-1f4bc",
      "uc_match": "1f468-1f3fb-1f4bc",
      "uc_greedy": "1f468-1f3fb-1f4bc",
      "shortnames": [":man_office_worker_light_skin_tone:"],
      "category": "people"
    },
    ":man_office_worker_tone2:": {
      "uc_base": "1f468-1f3fc-1f4bc",
      "uc_output": "1f468-1f3fc-200d-1f4bc",
      "uc_match": "1f468-1f3fc-1f4bc",
      "uc_greedy": "1f468-1f3fc-1f4bc",
      "shortnames": [":man_office_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_office_worker_tone3:": {
      "uc_base": "1f468-1f3fd-1f4bc",
      "uc_output": "1f468-1f3fd-200d-1f4bc",
      "uc_match": "1f468-1f3fd-1f4bc",
      "uc_greedy": "1f468-1f3fd-1f4bc",
      "shortnames": [":man_office_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":man_office_worker_tone4:": {
      "uc_base": "1f468-1f3fe-1f4bc",
      "uc_output": "1f468-1f3fe-200d-1f4bc",
      "uc_match": "1f468-1f3fe-1f4bc",
      "uc_greedy": "1f468-1f3fe-1f4bc",
      "shortnames": [":man_office_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_office_worker_tone5:": {
      "uc_base": "1f468-1f3ff-1f4bc",
      "uc_output": "1f468-1f3ff-200d-1f4bc",
      "uc_match": "1f468-1f3ff-1f4bc",
      "uc_greedy": "1f468-1f3ff-1f4bc",
      "shortnames": [":man_office_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":man_scientist_tone1:": {
      "uc_base": "1f468-1f3fb-1f52c",
      "uc_output": "1f468-1f3fb-200d-1f52c",
      "uc_match": "1f468-1f3fb-1f52c",
      "uc_greedy": "1f468-1f3fb-1f52c",
      "shortnames": [":man_scientist_light_skin_tone:"],
      "category": "people"
    },
    ":man_scientist_tone2:": {
      "uc_base": "1f468-1f3fc-1f52c",
      "uc_output": "1f468-1f3fc-200d-1f52c",
      "uc_match": "1f468-1f3fc-1f52c",
      "uc_greedy": "1f468-1f3fc-1f52c",
      "shortnames": [":man_scientist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_scientist_tone3:": {
      "uc_base": "1f468-1f3fd-1f52c",
      "uc_output": "1f468-1f3fd-200d-1f52c",
      "uc_match": "1f468-1f3fd-1f52c",
      "uc_greedy": "1f468-1f3fd-1f52c",
      "shortnames": [":man_scientist_medium_skin_tone:"],
      "category": "people"
    },
    ":man_scientist_tone4:": {
      "uc_base": "1f468-1f3fe-1f52c",
      "uc_output": "1f468-1f3fe-200d-1f52c",
      "uc_match": "1f468-1f3fe-1f52c",
      "uc_greedy": "1f468-1f3fe-1f52c",
      "shortnames": [":man_scientist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_scientist_tone5:": {
      "uc_base": "1f468-1f3ff-1f52c",
      "uc_output": "1f468-1f3ff-200d-1f52c",
      "uc_match": "1f468-1f3ff-1f52c",
      "uc_greedy": "1f468-1f3ff-1f52c",
      "shortnames": [":man_scientist_dark_skin_tone:"],
      "category": "people"
    },
    ":man_singer_tone1:": {
      "uc_base": "1f468-1f3fb-1f3a4",
      "uc_output": "1f468-1f3fb-200d-1f3a4",
      "uc_match": "1f468-1f3fb-1f3a4",
      "uc_greedy": "1f468-1f3fb-1f3a4",
      "shortnames": [":man_singer_light_skin_tone:"],
      "category": "people"
    },
    ":man_singer_tone2:": {
      "uc_base": "1f468-1f3fc-1f3a4",
      "uc_output": "1f468-1f3fc-200d-1f3a4",
      "uc_match": "1f468-1f3fc-1f3a4",
      "uc_greedy": "1f468-1f3fc-1f3a4",
      "shortnames": [":man_singer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_singer_tone3:": {
      "uc_base": "1f468-1f3fd-1f3a4",
      "uc_output": "1f468-1f3fd-200d-1f3a4",
      "uc_match": "1f468-1f3fd-1f3a4",
      "uc_greedy": "1f468-1f3fd-1f3a4",
      "shortnames": [":man_singer_medium_skin_tone:"],
      "category": "people"
    },
    ":man_singer_tone4:": {
      "uc_base": "1f468-1f3fe-1f3a4",
      "uc_output": "1f468-1f3fe-200d-1f3a4",
      "uc_match": "1f468-1f3fe-1f3a4",
      "uc_greedy": "1f468-1f3fe-1f3a4",
      "shortnames": [":man_singer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_singer_tone5:": {
      "uc_base": "1f468-1f3ff-1f3a4",
      "uc_output": "1f468-1f3ff-200d-1f3a4",
      "uc_match": "1f468-1f3ff-1f3a4",
      "uc_greedy": "1f468-1f3ff-1f3a4",
      "shortnames": [":man_singer_dark_skin_tone:"],
      "category": "people"
    },
    ":man_student_tone1:": {
      "uc_base": "1f468-1f3fb-1f393",
      "uc_output": "1f468-1f3fb-200d-1f393",
      "uc_match": "1f468-1f3fb-1f393",
      "uc_greedy": "1f468-1f3fb-1f393",
      "shortnames": [":man_student_light_skin_tone:"],
      "category": "people"
    },
    ":man_student_tone2:": {
      "uc_base": "1f468-1f3fc-1f393",
      "uc_output": "1f468-1f3fc-200d-1f393",
      "uc_match": "1f468-1f3fc-1f393",
      "uc_greedy": "1f468-1f3fc-1f393",
      "shortnames": [":man_student_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_student_tone3:": {
      "uc_base": "1f468-1f3fd-1f393",
      "uc_output": "1f468-1f3fd-200d-1f393",
      "uc_match": "1f468-1f3fd-1f393",
      "uc_greedy": "1f468-1f3fd-1f393",
      "shortnames": [":man_student_medium_skin_tone:"],
      "category": "people"
    },
    ":man_student_tone4:": {
      "uc_base": "1f468-1f3fe-1f393",
      "uc_output": "1f468-1f3fe-200d-1f393",
      "uc_match": "1f468-1f3fe-1f393",
      "uc_greedy": "1f468-1f3fe-1f393",
      "shortnames": [":man_student_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_student_tone5:": {
      "uc_base": "1f468-1f3ff-1f393",
      "uc_output": "1f468-1f3ff-200d-1f393",
      "uc_match": "1f468-1f3ff-1f393",
      "uc_greedy": "1f468-1f3ff-1f393",
      "shortnames": [":man_student_dark_skin_tone:"],
      "category": "people"
    },
    ":man_teacher_tone1:": {
      "uc_base": "1f468-1f3fb-1f3eb",
      "uc_output": "1f468-1f3fb-200d-1f3eb",
      "uc_match": "1f468-1f3fb-1f3eb",
      "uc_greedy": "1f468-1f3fb-1f3eb",
      "shortnames": [":man_teacher_light_skin_tone:"],
      "category": "people"
    },
    ":man_teacher_tone2:": {
      "uc_base": "1f468-1f3fc-1f3eb",
      "uc_output": "1f468-1f3fc-200d-1f3eb",
      "uc_match": "1f468-1f3fc-1f3eb",
      "uc_greedy": "1f468-1f3fc-1f3eb",
      "shortnames": [":man_teacher_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_teacher_tone3:": {
      "uc_base": "1f468-1f3fd-1f3eb",
      "uc_output": "1f468-1f3fd-200d-1f3eb",
      "uc_match": "1f468-1f3fd-1f3eb",
      "uc_greedy": "1f468-1f3fd-1f3eb",
      "shortnames": [":man_teacher_medium_skin_tone:"],
      "category": "people"
    },
    ":man_teacher_tone4:": {
      "uc_base": "1f468-1f3fe-1f3eb",
      "uc_output": "1f468-1f3fe-200d-1f3eb",
      "uc_match": "1f468-1f3fe-1f3eb",
      "uc_greedy": "1f468-1f3fe-1f3eb",
      "shortnames": [":man_teacher_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_teacher_tone5:": {
      "uc_base": "1f468-1f3ff-1f3eb",
      "uc_output": "1f468-1f3ff-200d-1f3eb",
      "uc_match": "1f468-1f3ff-1f3eb",
      "uc_greedy": "1f468-1f3ff-1f3eb",
      "shortnames": [":man_teacher_dark_skin_tone:"],
      "category": "people"
    },
    ":man_technologist_tone1:": {
      "uc_base": "1f468-1f3fb-1f4bb",
      "uc_output": "1f468-1f3fb-200d-1f4bb",
      "uc_match": "1f468-1f3fb-1f4bb",
      "uc_greedy": "1f468-1f3fb-1f4bb",
      "shortnames": [":man_technologist_light_skin_tone:"],
      "category": "people"
    },
    ":man_technologist_tone2:": {
      "uc_base": "1f468-1f3fc-1f4bb",
      "uc_output": "1f468-1f3fc-200d-1f4bb",
      "uc_match": "1f468-1f3fc-1f4bb",
      "uc_greedy": "1f468-1f3fc-1f4bb",
      "shortnames": [":man_technologist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":man_technologist_tone3:": {
      "uc_base": "1f468-1f3fd-1f4bb",
      "uc_output": "1f468-1f3fd-200d-1f4bb",
      "uc_match": "1f468-1f3fd-1f4bb",
      "uc_greedy": "1f468-1f3fd-1f4bb",
      "shortnames": [":man_technologist_medium_skin_tone:"],
      "category": "people"
    },
    ":man_technologist_tone4:": {
      "uc_base": "1f468-1f3fe-1f4bb",
      "uc_output": "1f468-1f3fe-200d-1f4bb",
      "uc_match": "1f468-1f3fe-1f4bb",
      "uc_greedy": "1f468-1f3fe-1f4bb",
      "shortnames": [":man_technologist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":man_technologist_tone5:": {
      "uc_base": "1f468-1f3ff-1f4bb",
      "uc_output": "1f468-1f3ff-200d-1f4bb",
      "uc_match": "1f468-1f3ff-1f4bb",
      "uc_greedy": "1f468-1f3ff-1f4bb",
      "shortnames": [":man_technologist_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_artist_tone1:": {
      "uc_base": "1f469-1f3fb-1f3a8",
      "uc_output": "1f469-1f3fb-200d-1f3a8",
      "uc_match": "1f469-1f3fb-1f3a8",
      "uc_greedy": "1f469-1f3fb-1f3a8",
      "shortnames": [":woman_artist_light_skin_tone:"],
      "category": "people"
    },
    ":woman_artist_tone2:": {
      "uc_base": "1f469-1f3fc-1f3a8",
      "uc_output": "1f469-1f3fc-200d-1f3a8",
      "uc_match": "1f469-1f3fc-1f3a8",
      "uc_greedy": "1f469-1f3fc-1f3a8",
      "shortnames": [":woman_artist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_artist_tone3:": {
      "uc_base": "1f469-1f3fd-1f3a8",
      "uc_output": "1f469-1f3fd-200d-1f3a8",
      "uc_match": "1f469-1f3fd-1f3a8",
      "uc_greedy": "1f469-1f3fd-1f3a8",
      "shortnames": [":woman_artist_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_artist_tone4:": {
      "uc_base": "1f469-1f3fe-1f3a8",
      "uc_output": "1f469-1f3fe-200d-1f3a8",
      "uc_match": "1f469-1f3fe-1f3a8",
      "uc_greedy": "1f469-1f3fe-1f3a8",
      "shortnames": [":woman_artist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_artist_tone5:": {
      "uc_base": "1f469-1f3ff-1f3a8",
      "uc_output": "1f469-1f3ff-200d-1f3a8",
      "uc_match": "1f469-1f3ff-1f3a8",
      "uc_greedy": "1f469-1f3ff-1f3a8",
      "shortnames": [":woman_artist_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_astronaut_tone1:": {
      "uc_base": "1f469-1f3fb-1f680",
      "uc_output": "1f469-1f3fb-200d-1f680",
      "uc_match": "1f469-1f3fb-1f680",
      "uc_greedy": "1f469-1f3fb-1f680",
      "shortnames": [":woman_astronaut_light_skin_tone:"],
      "category": "people"
    },
    ":woman_astronaut_tone2:": {
      "uc_base": "1f469-1f3fc-1f680",
      "uc_output": "1f469-1f3fc-200d-1f680",
      "uc_match": "1f469-1f3fc-1f680",
      "uc_greedy": "1f469-1f3fc-1f680",
      "shortnames": [":woman_astronaut_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_astronaut_tone3:": {
      "uc_base": "1f469-1f3fd-1f680",
      "uc_output": "1f469-1f3fd-200d-1f680",
      "uc_match": "1f469-1f3fd-1f680",
      "uc_greedy": "1f469-1f3fd-1f680",
      "shortnames": [":woman_astronaut_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_astronaut_tone4:": {
      "uc_base": "1f469-1f3fe-1f680",
      "uc_output": "1f469-1f3fe-200d-1f680",
      "uc_match": "1f469-1f3fe-1f680",
      "uc_greedy": "1f469-1f3fe-1f680",
      "shortnames": [":woman_astronaut_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_astronaut_tone5:": {
      "uc_base": "1f469-1f3ff-1f680",
      "uc_output": "1f469-1f3ff-200d-1f680",
      "uc_match": "1f469-1f3ff-1f680",
      "uc_greedy": "1f469-1f3ff-1f680",
      "shortnames": [":woman_astronaut_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_cook_tone1:": {
      "uc_base": "1f469-1f3fb-1f373",
      "uc_output": "1f469-1f3fb-200d-1f373",
      "uc_match": "1f469-1f3fb-1f373",
      "uc_greedy": "1f469-1f3fb-1f373",
      "shortnames": [":woman_cook_light_skin_tone:"],
      "category": "people"
    },
    ":woman_cook_tone2:": {
      "uc_base": "1f469-1f3fc-1f373",
      "uc_output": "1f469-1f3fc-200d-1f373",
      "uc_match": "1f469-1f3fc-1f373",
      "uc_greedy": "1f469-1f3fc-1f373",
      "shortnames": [":woman_cook_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_cook_tone3:": {
      "uc_base": "1f469-1f3fd-1f373",
      "uc_output": "1f469-1f3fd-200d-1f373",
      "uc_match": "1f469-1f3fd-1f373",
      "uc_greedy": "1f469-1f3fd-1f373",
      "shortnames": [":woman_cook_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_cook_tone4:": {
      "uc_base": "1f469-1f3fe-1f373",
      "uc_output": "1f469-1f3fe-200d-1f373",
      "uc_match": "1f469-1f3fe-1f373",
      "uc_greedy": "1f469-1f3fe-1f373",
      "shortnames": [":woman_cook_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_cook_tone5:": {
      "uc_base": "1f469-1f3ff-1f373",
      "uc_output": "1f469-1f3ff-200d-1f373",
      "uc_match": "1f469-1f3ff-1f373",
      "uc_greedy": "1f469-1f3ff-1f373",
      "shortnames": [":woman_cook_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_factory_worker_tone1:": {
      "uc_base": "1f469-1f3fb-1f3ed",
      "uc_output": "1f469-1f3fb-200d-1f3ed",
      "uc_match": "1f469-1f3fb-1f3ed",
      "uc_greedy": "1f469-1f3fb-1f3ed",
      "shortnames": [":woman_factory_worker_light_skin_tone:"],
      "category": "people"
    },
    ":woman_factory_worker_tone2:": {
      "uc_base": "1f469-1f3fc-1f3ed",
      "uc_output": "1f469-1f3fc-200d-1f3ed",
      "uc_match": "1f469-1f3fc-1f3ed",
      "uc_greedy": "1f469-1f3fc-1f3ed",
      "shortnames": [":woman_factory_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_factory_worker_tone3:": {
      "uc_base": "1f469-1f3fd-1f3ed",
      "uc_output": "1f469-1f3fd-200d-1f3ed",
      "uc_match": "1f469-1f3fd-1f3ed",
      "uc_greedy": "1f469-1f3fd-1f3ed",
      "shortnames": [":woman_factory_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_factory_worker_tone4:": {
      "uc_base": "1f469-1f3fe-1f3ed",
      "uc_output": "1f469-1f3fe-200d-1f3ed",
      "uc_match": "1f469-1f3fe-1f3ed",
      "uc_greedy": "1f469-1f3fe-1f3ed",
      "shortnames": [":woman_factory_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_factory_worker_tone5:": {
      "uc_base": "1f469-1f3ff-1f3ed",
      "uc_output": "1f469-1f3ff-200d-1f3ed",
      "uc_match": "1f469-1f3ff-1f3ed",
      "uc_greedy": "1f469-1f3ff-1f3ed",
      "shortnames": [":woman_factory_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_farmer_tone1:": {
      "uc_base": "1f469-1f3fb-1f33e",
      "uc_output": "1f469-1f3fb-200d-1f33e",
      "uc_match": "1f469-1f3fb-1f33e",
      "uc_greedy": "1f469-1f3fb-1f33e",
      "shortnames": [":woman_farmer_light_skin_tone:"],
      "category": "people"
    },
    ":woman_farmer_tone2:": {
      "uc_base": "1f469-1f3fc-1f33e",
      "uc_output": "1f469-1f3fc-200d-1f33e",
      "uc_match": "1f469-1f3fc-1f33e",
      "uc_greedy": "1f469-1f3fc-1f33e",
      "shortnames": [":woman_farmer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_farmer_tone3:": {
      "uc_base": "1f469-1f3fd-1f33e",
      "uc_output": "1f469-1f3fd-200d-1f33e",
      "uc_match": "1f469-1f3fd-1f33e",
      "uc_greedy": "1f469-1f3fd-1f33e",
      "shortnames": [":woman_farmer_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_farmer_tone4:": {
      "uc_base": "1f469-1f3fe-1f33e",
      "uc_output": "1f469-1f3fe-200d-1f33e",
      "uc_match": "1f469-1f3fe-1f33e",
      "uc_greedy": "1f469-1f3fe-1f33e",
      "shortnames": [":woman_farmer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_farmer_tone5:": {
      "uc_base": "1f469-1f3ff-1f33e",
      "uc_output": "1f469-1f3ff-200d-1f33e",
      "uc_match": "1f469-1f3ff-1f33e",
      "uc_greedy": "1f469-1f3ff-1f33e",
      "shortnames": [":woman_farmer_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_firefighter_tone1:": {
      "uc_base": "1f469-1f3fb-1f692",
      "uc_output": "1f469-1f3fb-200d-1f692",
      "uc_match": "1f469-1f3fb-1f692",
      "uc_greedy": "1f469-1f3fb-1f692",
      "shortnames": [":woman_firefighter_light_skin_tone:"],
      "category": "people"
    },
    ":woman_firefighter_tone2:": {
      "uc_base": "1f469-1f3fc-1f692",
      "uc_output": "1f469-1f3fc-200d-1f692",
      "uc_match": "1f469-1f3fc-1f692",
      "uc_greedy": "1f469-1f3fc-1f692",
      "shortnames": [":woman_firefighter_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_firefighter_tone3:": {
      "uc_base": "1f469-1f3fd-1f692",
      "uc_output": "1f469-1f3fd-200d-1f692",
      "uc_match": "1f469-1f3fd-1f692",
      "uc_greedy": "1f469-1f3fd-1f692",
      "shortnames": [":woman_firefighter_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_firefighter_tone4:": {
      "uc_base": "1f469-1f3fe-1f692",
      "uc_output": "1f469-1f3fe-200d-1f692",
      "uc_match": "1f469-1f3fe-1f692",
      "uc_greedy": "1f469-1f3fe-1f692",
      "shortnames": [":woman_firefighter_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_firefighter_tone5:": {
      "uc_base": "1f469-1f3ff-1f692",
      "uc_output": "1f469-1f3ff-200d-1f692",
      "uc_match": "1f469-1f3ff-1f692",
      "uc_greedy": "1f469-1f3ff-1f692",
      "shortnames": [":woman_firefighter_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_mechanic_tone1:": {
      "uc_base": "1f469-1f3fb-1f527",
      "uc_output": "1f469-1f3fb-200d-1f527",
      "uc_match": "1f469-1f3fb-1f527",
      "uc_greedy": "1f469-1f3fb-1f527",
      "shortnames": [":woman_mechanic_light_skin_tone:"],
      "category": "people"
    },
    ":woman_mechanic_tone2:": {
      "uc_base": "1f469-1f3fc-1f527",
      "uc_output": "1f469-1f3fc-200d-1f527",
      "uc_match": "1f469-1f3fc-1f527",
      "uc_greedy": "1f469-1f3fc-1f527",
      "shortnames": [":woman_mechanic_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_mechanic_tone3:": {
      "uc_base": "1f469-1f3fd-1f527",
      "uc_output": "1f469-1f3fd-200d-1f527",
      "uc_match": "1f469-1f3fd-1f527",
      "uc_greedy": "1f469-1f3fd-1f527",
      "shortnames": [":woman_mechanic_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_mechanic_tone4:": {
      "uc_base": "1f469-1f3fe-1f527",
      "uc_output": "1f469-1f3fe-200d-1f527",
      "uc_match": "1f469-1f3fe-1f527",
      "uc_greedy": "1f469-1f3fe-1f527",
      "shortnames": [":woman_mechanic_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_mechanic_tone5:": {
      "uc_base": "1f469-1f3ff-1f527",
      "uc_output": "1f469-1f3ff-200d-1f527",
      "uc_match": "1f469-1f3ff-1f527",
      "uc_greedy": "1f469-1f3ff-1f527",
      "shortnames": [":woman_mechanic_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_office_worker_tone1:": {
      "uc_base": "1f469-1f3fb-1f4bc",
      "uc_output": "1f469-1f3fb-200d-1f4bc",
      "uc_match": "1f469-1f3fb-1f4bc",
      "uc_greedy": "1f469-1f3fb-1f4bc",
      "shortnames": [":woman_office_worker_light_skin_tone:"],
      "category": "people"
    },
    ":woman_office_worker_tone2:": {
      "uc_base": "1f469-1f3fc-1f4bc",
      "uc_output": "1f469-1f3fc-200d-1f4bc",
      "uc_match": "1f469-1f3fc-1f4bc",
      "uc_greedy": "1f469-1f3fc-1f4bc",
      "shortnames": [":woman_office_worker_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_office_worker_tone3:": {
      "uc_base": "1f469-1f3fd-1f4bc",
      "uc_output": "1f469-1f3fd-200d-1f4bc",
      "uc_match": "1f469-1f3fd-1f4bc",
      "uc_greedy": "1f469-1f3fd-1f4bc",
      "shortnames": [":woman_office_worker_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_office_worker_tone4:": {
      "uc_base": "1f469-1f3fe-1f4bc",
      "uc_output": "1f469-1f3fe-200d-1f4bc",
      "uc_match": "1f469-1f3fe-1f4bc",
      "uc_greedy": "1f469-1f3fe-1f4bc",
      "shortnames": [":woman_office_worker_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_office_worker_tone5:": {
      "uc_base": "1f469-1f3ff-1f4bc",
      "uc_output": "1f469-1f3ff-200d-1f4bc",
      "uc_match": "1f469-1f3ff-1f4bc",
      "uc_greedy": "1f469-1f3ff-1f4bc",
      "shortnames": [":woman_office_worker_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_scientist_tone1:": {
      "uc_base": "1f469-1f3fb-1f52c",
      "uc_output": "1f469-1f3fb-200d-1f52c",
      "uc_match": "1f469-1f3fb-1f52c",
      "uc_greedy": "1f469-1f3fb-1f52c",
      "shortnames": [":woman_scientist_light_skin_tone:"],
      "category": "people"
    },
    ":woman_scientist_tone2:": {
      "uc_base": "1f469-1f3fc-1f52c",
      "uc_output": "1f469-1f3fc-200d-1f52c",
      "uc_match": "1f469-1f3fc-1f52c",
      "uc_greedy": "1f469-1f3fc-1f52c",
      "shortnames": [":woman_scientist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_scientist_tone3:": {
      "uc_base": "1f469-1f3fd-1f52c",
      "uc_output": "1f469-1f3fd-200d-1f52c",
      "uc_match": "1f469-1f3fd-1f52c",
      "uc_greedy": "1f469-1f3fd-1f52c",
      "shortnames": [":woman_scientist_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_scientist_tone4:": {
      "uc_base": "1f469-1f3fe-1f52c",
      "uc_output": "1f469-1f3fe-200d-1f52c",
      "uc_match": "1f469-1f3fe-1f52c",
      "uc_greedy": "1f469-1f3fe-1f52c",
      "shortnames": [":woman_scientist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_scientist_tone5:": {
      "uc_base": "1f469-1f3ff-1f52c",
      "uc_output": "1f469-1f3ff-200d-1f52c",
      "uc_match": "1f469-1f3ff-1f52c",
      "uc_greedy": "1f469-1f3ff-1f52c",
      "shortnames": [":woman_scientist_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_singer_tone1:": {
      "uc_base": "1f469-1f3fb-1f3a4",
      "uc_output": "1f469-1f3fb-200d-1f3a4",
      "uc_match": "1f469-1f3fb-1f3a4",
      "uc_greedy": "1f469-1f3fb-1f3a4",
      "shortnames": [":woman_singer_light_skin_tone:"],
      "category": "people"
    },
    ":woman_singer_tone2:": {
      "uc_base": "1f469-1f3fc-1f3a4",
      "uc_output": "1f469-1f3fc-200d-1f3a4",
      "uc_match": "1f469-1f3fc-1f3a4",
      "uc_greedy": "1f469-1f3fc-1f3a4",
      "shortnames": [":woman_singer_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_singer_tone3:": {
      "uc_base": "1f469-1f3fd-1f3a4",
      "uc_output": "1f469-1f3fd-200d-1f3a4",
      "uc_match": "1f469-1f3fd-1f3a4",
      "uc_greedy": "1f469-1f3fd-1f3a4",
      "shortnames": [":woman_singer_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_singer_tone4:": {
      "uc_base": "1f469-1f3fe-1f3a4",
      "uc_output": "1f469-1f3fe-200d-1f3a4",
      "uc_match": "1f469-1f3fe-1f3a4",
      "uc_greedy": "1f469-1f3fe-1f3a4",
      "shortnames": [":woman_singer_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_singer_tone5:": {
      "uc_base": "1f469-1f3ff-1f3a4",
      "uc_output": "1f469-1f3ff-200d-1f3a4",
      "uc_match": "1f469-1f3ff-1f3a4",
      "uc_greedy": "1f469-1f3ff-1f3a4",
      "shortnames": [":woman_singer_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_student_tone1:": {
      "uc_base": "1f469-1f3fb-1f393",
      "uc_output": "1f469-1f3fb-200d-1f393",
      "uc_match": "1f469-1f3fb-1f393",
      "uc_greedy": "1f469-1f3fb-1f393",
      "shortnames": [":woman_student_light_skin_tone:"],
      "category": "people"
    },
    ":woman_student_tone2:": {
      "uc_base": "1f469-1f3fc-1f393",
      "uc_output": "1f469-1f3fc-200d-1f393",
      "uc_match": "1f469-1f3fc-1f393",
      "uc_greedy": "1f469-1f3fc-1f393",
      "shortnames": [":woman_student_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_student_tone3:": {
      "uc_base": "1f469-1f3fd-1f393",
      "uc_output": "1f469-1f3fd-200d-1f393",
      "uc_match": "1f469-1f3fd-1f393",
      "uc_greedy": "1f469-1f3fd-1f393",
      "shortnames": [":woman_student_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_student_tone4:": {
      "uc_base": "1f469-1f3fe-1f393",
      "uc_output": "1f469-1f3fe-200d-1f393",
      "uc_match": "1f469-1f3fe-1f393",
      "uc_greedy": "1f469-1f3fe-1f393",
      "shortnames": [":woman_student_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_student_tone5:": {
      "uc_base": "1f469-1f3ff-1f393",
      "uc_output": "1f469-1f3ff-200d-1f393",
      "uc_match": "1f469-1f3ff-1f393",
      "uc_greedy": "1f469-1f3ff-1f393",
      "shortnames": [":woman_student_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_teacher_tone1:": {
      "uc_base": "1f469-1f3fb-1f3eb",
      "uc_output": "1f469-1f3fb-200d-1f3eb",
      "uc_match": "1f469-1f3fb-1f3eb",
      "uc_greedy": "1f469-1f3fb-1f3eb",
      "shortnames": [":woman_teacher_light_skin_tone:"],
      "category": "people"
    },
    ":woman_teacher_tone2:": {
      "uc_base": "1f469-1f3fc-1f3eb",
      "uc_output": "1f469-1f3fc-200d-1f3eb",
      "uc_match": "1f469-1f3fc-1f3eb",
      "uc_greedy": "1f469-1f3fc-1f3eb",
      "shortnames": [":woman_teacher_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_teacher_tone3:": {
      "uc_base": "1f469-1f3fd-1f3eb",
      "uc_output": "1f469-1f3fd-200d-1f3eb",
      "uc_match": "1f469-1f3fd-1f3eb",
      "uc_greedy": "1f469-1f3fd-1f3eb",
      "shortnames": [":woman_teacher_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_teacher_tone4:": {
      "uc_base": "1f469-1f3fe-1f3eb",
      "uc_output": "1f469-1f3fe-200d-1f3eb",
      "uc_match": "1f469-1f3fe-1f3eb",
      "uc_greedy": "1f469-1f3fe-1f3eb",
      "shortnames": [":woman_teacher_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_teacher_tone5:": {
      "uc_base": "1f469-1f3ff-1f3eb",
      "uc_output": "1f469-1f3ff-200d-1f3eb",
      "uc_match": "1f469-1f3ff-1f3eb",
      "uc_greedy": "1f469-1f3ff-1f3eb",
      "shortnames": [":woman_teacher_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_technologist_tone1:": {
      "uc_base": "1f469-1f3fb-1f4bb",
      "uc_output": "1f469-1f3fb-200d-1f4bb",
      "uc_match": "1f469-1f3fb-1f4bb",
      "uc_greedy": "1f469-1f3fb-1f4bb",
      "shortnames": [":woman_technologist_light_skin_tone:"],
      "category": "people"
    },
    ":woman_technologist_tone2:": {
      "uc_base": "1f469-1f3fc-1f4bb",
      "uc_output": "1f469-1f3fc-200d-1f4bb",
      "uc_match": "1f469-1f3fc-1f4bb",
      "uc_greedy": "1f469-1f3fc-1f4bb",
      "shortnames": [":woman_technologist_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_technologist_tone3:": {
      "uc_base": "1f469-1f3fd-1f4bb",
      "uc_output": "1f469-1f3fd-200d-1f4bb",
      "uc_match": "1f469-1f3fd-1f4bb",
      "uc_greedy": "1f469-1f3fd-1f4bb",
      "shortnames": [":woman_technologist_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_technologist_tone4:": {
      "uc_base": "1f469-1f3fe-1f4bb",
      "uc_output": "1f469-1f3fe-200d-1f4bb",
      "uc_match": "1f469-1f3fe-1f4bb",
      "uc_greedy": "1f469-1f3fe-1f4bb",
      "shortnames": [":woman_technologist_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_technologist_tone5:": {
      "uc_base": "1f469-1f3ff-1f4bb",
      "uc_output": "1f469-1f3ff-200d-1f4bb",
      "uc_match": "1f469-1f3ff-1f4bb",
      "uc_greedy": "1f469-1f3ff-1f4bb",
      "shortnames": [":woman_technologist_dark_skin_tone:"],
      "category": "people"
    },
    ":rainbow_flag:": {
      "uc_base": "1f3f3-1f308",
      "uc_output": "1f3f3-fe0f-200d-1f308",
      "uc_match": "1f3f3-fe0f-1f308",
      "uc_greedy": "1f3f3-1f308",
      "shortnames": [":gay_pride_flag:"],
      "category": "flags"
    },
    ":blond-haired_man:": {
      "uc_base": "1f471-2642",
      "uc_output": "1f471-200d-2642-fe0f",
      "uc_match": "1f471-2642-fe0f",
      "uc_greedy": "1f471-2642",
      "shortnames": [],
      "category": "people"
    },
    ":blond-haired_woman:": {
      "uc_base": "1f471-2640",
      "uc_output": "1f471-200d-2640-fe0f",
      "uc_match": "1f471-2640-fe0f",
      "uc_greedy": "1f471-2640",
      "shortnames": [],
      "category": "people"
    },
    ":man_biking:": {
      "uc_base": "1f6b4-2642",
      "uc_output": "1f6b4-200d-2642-fe0f",
      "uc_match": "1f6b4-2642-fe0f",
      "uc_greedy": "1f6b4-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_bowing:": {
      "uc_base": "1f647-2642",
      "uc_output": "1f647-200d-2642-fe0f",
      "uc_match": "1f647-2642-fe0f",
      "uc_greedy": "1f647-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_cartwheeling:": {
      "uc_base": "1f938-2642",
      "uc_output": "1f938-200d-2642-fe0f",
      "uc_match": "1f938-2642-fe0f",
      "uc_greedy": "1f938-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_climbing:": {
      "uc_base": "1f9d7-2642",
      "uc_output": "1f9d7-200d-2642-fe0f",
      "uc_match": "1f9d7-2642-fe0f",
      "uc_greedy": "1f9d7-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_construction_worker:": {
      "uc_base": "1f477-2642",
      "uc_output": "1f477-200d-2642-fe0f",
      "uc_match": "1f477-2642-fe0f",
      "uc_greedy": "1f477-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_elf:": {
      "uc_base": "1f9dd-2642",
      "uc_output": "1f9dd-200d-2642-fe0f",
      "uc_match": "1f9dd-2642-fe0f",
      "uc_greedy": "1f9dd-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_facepalming:": {
      "uc_base": "1f926-2642",
      "uc_output": "1f926-200d-2642-fe0f",
      "uc_match": "1f926-2642-fe0f",
      "uc_greedy": "1f926-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_fairy:": {
      "uc_base": "1f9da-2642",
      "uc_output": "1f9da-200d-2642-fe0f",
      "uc_match": "1f9da-2642-fe0f",
      "uc_greedy": "1f9da-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_frowning:": {
      "uc_base": "1f64d-2642",
      "uc_output": "1f64d-200d-2642-fe0f",
      "uc_match": "1f64d-2642-fe0f",
      "uc_greedy": "1f64d-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_genie:": {
      "uc_base": "1f9de-2642",
      "uc_output": "1f9de-200d-2642-fe0f",
      "uc_match": "1f9de-2642-fe0f",
      "uc_greedy": "1f9de-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_gesturing_no:": {
      "uc_base": "1f645-2642",
      "uc_output": "1f645-200d-2642-fe0f",
      "uc_match": "1f645-2642-fe0f",
      "uc_greedy": "1f645-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_gesturing_ok:": {
      "uc_base": "1f646-2642",
      "uc_output": "1f646-200d-2642-fe0f",
      "uc_match": "1f646-2642-fe0f",
      "uc_greedy": "1f646-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_getting_face_massage:": {
      "uc_base": "1f486-2642",
      "uc_output": "1f486-200d-2642-fe0f",
      "uc_match": "1f486-2642-fe0f",
      "uc_greedy": "1f486-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_getting_haircut:": {
      "uc_base": "1f487-2642",
      "uc_output": "1f487-200d-2642-fe0f",
      "uc_match": "1f487-2642-fe0f",
      "uc_greedy": "1f487-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_guard:": {
      "uc_base": "1f482-2642",
      "uc_output": "1f482-200d-2642-fe0f",
      "uc_match": "1f482-2642-fe0f",
      "uc_greedy": "1f482-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_health_worker:": {
      "uc_base": "1f468-2695",
      "uc_output": "1f468-200d-2695-fe0f",
      "uc_match": "1f468-2695-fe0f",
      "uc_greedy": "1f468-2695",
      "shortnames": [],
      "category": "people"
    },
    ":man_in_lotus_position:": {
      "uc_base": "1f9d8-2642",
      "uc_output": "1f9d8-200d-2642-fe0f",
      "uc_match": "1f9d8-2642-fe0f",
      "uc_greedy": "1f9d8-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_in_steamy_room:": {
      "uc_base": "1f9d6-2642",
      "uc_output": "1f9d6-200d-2642-fe0f",
      "uc_match": "1f9d6-2642-fe0f",
      "uc_greedy": "1f9d6-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_judge:": {
      "uc_base": "1f468-2696",
      "uc_output": "1f468-200d-2696-fe0f",
      "uc_match": "1f468-2696-fe0f",
      "uc_greedy": "1f468-2696",
      "shortnames": [],
      "category": "people"
    },
    ":man_juggling:": {
      "uc_base": "1f939-2642",
      "uc_output": "1f939-200d-2642-fe0f",
      "uc_match": "1f939-2642-fe0f",
      "uc_greedy": "1f939-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_mage:": {
      "uc_base": "1f9d9-2642",
      "uc_output": "1f9d9-200d-2642-fe0f",
      "uc_match": "1f9d9-2642-fe0f",
      "uc_greedy": "1f9d9-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_mountain_biking:": {
      "uc_base": "1f6b5-2642",
      "uc_output": "1f6b5-200d-2642-fe0f",
      "uc_match": "1f6b5-2642-fe0f",
      "uc_greedy": "1f6b5-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_pilot:": {
      "uc_base": "1f468-2708",
      "uc_output": "1f468-200d-2708-fe0f",
      "uc_match": "1f468-2708-fe0f",
      "uc_greedy": "1f468-2708",
      "shortnames": [],
      "category": "people"
    },
    ":man_playing_handball:": {
      "uc_base": "1f93e-2642",
      "uc_output": "1f93e-200d-2642-fe0f",
      "uc_match": "1f93e-2642-fe0f",
      "uc_greedy": "1f93e-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_playing_water_polo:": {
      "uc_base": "1f93d-2642",
      "uc_output": "1f93d-200d-2642-fe0f",
      "uc_match": "1f93d-2642-fe0f",
      "uc_greedy": "1f93d-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_police_officer:": {
      "uc_base": "1f46e-2642",
      "uc_output": "1f46e-200d-2642-fe0f",
      "uc_match": "1f46e-2642-fe0f",
      "uc_greedy": "1f46e-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_pouting:": {
      "uc_base": "1f64e-2642",
      "uc_output": "1f64e-200d-2642-fe0f",
      "uc_match": "1f64e-2642-fe0f",
      "uc_greedy": "1f64e-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_raising_hand:": {
      "uc_base": "1f64b-2642",
      "uc_output": "1f64b-200d-2642-fe0f",
      "uc_match": "1f64b-2642-fe0f",
      "uc_greedy": "1f64b-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_rowing_boat:": {
      "uc_base": "1f6a3-2642",
      "uc_output": "1f6a3-200d-2642-fe0f",
      "uc_match": "1f6a3-2642-fe0f",
      "uc_greedy": "1f6a3-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_running:": {
      "uc_base": "1f3c3-2642",
      "uc_output": "1f3c3-200d-2642-fe0f",
      "uc_match": "1f3c3-2642-fe0f",
      "uc_greedy": "1f3c3-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_shrugging:": {
      "uc_base": "1f937-2642",
      "uc_output": "1f937-200d-2642-fe0f",
      "uc_match": "1f937-2642-fe0f",
      "uc_greedy": "1f937-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_surfing:": {
      "uc_base": "1f3c4-2642",
      "uc_output": "1f3c4-200d-2642-fe0f",
      "uc_match": "1f3c4-2642-fe0f",
      "uc_greedy": "1f3c4-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_swimming:": {
      "uc_base": "1f3ca-2642",
      "uc_output": "1f3ca-200d-2642-fe0f",
      "uc_match": "1f3ca-2642-fe0f",
      "uc_greedy": "1f3ca-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":man_tipping_hand:": {
      "uc_base": "1f481-2642",
      "uc_output": "1f481-200d-2642-fe0f",
      "uc_match": "1f481-2642-fe0f",
      "uc_greedy": "1f481-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_vampire:": {
      "uc_base": "1f9db-2642",
      "uc_output": "1f9db-200d-2642-fe0f",
      "uc_match": "1f9db-2642-fe0f",
      "uc_greedy": "1f9db-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_walking:": {
      "uc_base": "1f6b6-2642",
      "uc_output": "1f6b6-200d-2642-fe0f",
      "uc_match": "1f6b6-2642-fe0f",
      "uc_greedy": "1f6b6-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_wearing_turban:": {
      "uc_base": "1f473-2642",
      "uc_output": "1f473-200d-2642-fe0f",
      "uc_match": "1f473-2642-fe0f",
      "uc_greedy": "1f473-2642",
      "shortnames": [],
      "category": "people"
    },
    ":man_zombie:": {
      "uc_base": "1f9df-2642",
      "uc_output": "1f9df-200d-2642-fe0f",
      "uc_match": "1f9df-2642-fe0f",
      "uc_greedy": "1f9df-2642",
      "shortnames": [],
      "category": "people"
    },
    ":men_with_bunny_ears_partying:": {
      "uc_base": "1f46f-2642",
      "uc_output": "1f46f-200d-2642-fe0f",
      "uc_match": "1f46f-2642-fe0f",
      "uc_greedy": "1f46f-2642",
      "shortnames": [],
      "category": "people"
    },
    ":men_wrestling:": {
      "uc_base": "1f93c-2642",
      "uc_output": "1f93c-200d-2642-fe0f",
      "uc_match": "1f93c-2642-fe0f",
      "uc_greedy": "1f93c-2642",
      "shortnames": [],
      "category": "activity"
    },
    ":mermaid:": {
      "uc_base": "1f9dc-2640",
      "uc_output": "1f9dc-200d-2640-fe0f",
      "uc_match": "1f9dc-2640-fe0f",
      "uc_greedy": "1f9dc-2640",
      "shortnames": [],
      "category": "people"
    },
    ":merman:": {
      "uc_base": "1f9dc-2642",
      "uc_output": "1f9dc-200d-2642-fe0f",
      "uc_match": "1f9dc-2642-fe0f",
      "uc_greedy": "1f9dc-2642",
      "shortnames": [],
      "category": "people"
    },
    ":woman_biking:": {
      "uc_base": "1f6b4-2640",
      "uc_output": "1f6b4-200d-2640-fe0f",
      "uc_match": "1f6b4-2640-fe0f",
      "uc_greedy": "1f6b4-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_bowing:": {
      "uc_base": "1f647-2640",
      "uc_output": "1f647-200d-2640-fe0f",
      "uc_match": "1f647-2640-fe0f",
      "uc_greedy": "1f647-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_cartwheeling:": {
      "uc_base": "1f938-2640",
      "uc_output": "1f938-200d-2640-fe0f",
      "uc_match": "1f938-2640-fe0f",
      "uc_greedy": "1f938-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_climbing:": {
      "uc_base": "1f9d7-2640",
      "uc_output": "1f9d7-200d-2640-fe0f",
      "uc_match": "1f9d7-2640-fe0f",
      "uc_greedy": "1f9d7-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_construction_worker:": {
      "uc_base": "1f477-2640",
      "uc_output": "1f477-200d-2640-fe0f",
      "uc_match": "1f477-2640-fe0f",
      "uc_greedy": "1f477-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_elf:": {
      "uc_base": "1f9dd-2640",
      "uc_output": "1f9dd-200d-2640-fe0f",
      "uc_match": "1f9dd-2640-fe0f",
      "uc_greedy": "1f9dd-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_facepalming:": {
      "uc_base": "1f926-2640",
      "uc_output": "1f926-200d-2640-fe0f",
      "uc_match": "1f926-2640-fe0f",
      "uc_greedy": "1f926-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_fairy:": {
      "uc_base": "1f9da-2640",
      "uc_output": "1f9da-200d-2640-fe0f",
      "uc_match": "1f9da-2640-fe0f",
      "uc_greedy": "1f9da-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_frowning:": {
      "uc_base": "1f64d-2640",
      "uc_output": "1f64d-200d-2640-fe0f",
      "uc_match": "1f64d-2640-fe0f",
      "uc_greedy": "1f64d-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_genie:": {
      "uc_base": "1f9de-2640",
      "uc_output": "1f9de-200d-2640-fe0f",
      "uc_match": "1f9de-2640-fe0f",
      "uc_greedy": "1f9de-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_gesturing_no:": {
      "uc_base": "1f645-2640",
      "uc_output": "1f645-200d-2640-fe0f",
      "uc_match": "1f645-2640-fe0f",
      "uc_greedy": "1f645-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_gesturing_ok:": {
      "uc_base": "1f646-2640",
      "uc_output": "1f646-200d-2640-fe0f",
      "uc_match": "1f646-2640-fe0f",
      "uc_greedy": "1f646-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_getting_face_massage:": {
      "uc_base": "1f486-2640",
      "uc_output": "1f486-200d-2640-fe0f",
      "uc_match": "1f486-2640-fe0f",
      "uc_greedy": "1f486-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_getting_haircut:": {
      "uc_base": "1f487-2640",
      "uc_output": "1f487-200d-2640-fe0f",
      "uc_match": "1f487-2640-fe0f",
      "uc_greedy": "1f487-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_guard:": {
      "uc_base": "1f482-2640",
      "uc_output": "1f482-200d-2640-fe0f",
      "uc_match": "1f482-2640-fe0f",
      "uc_greedy": "1f482-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_health_worker:": {
      "uc_base": "1f469-2695",
      "uc_output": "1f469-200d-2695-fe0f",
      "uc_match": "1f469-2695-fe0f",
      "uc_greedy": "1f469-2695",
      "shortnames": [],
      "category": "people"
    },
    ":woman_in_lotus_position:": {
      "uc_base": "1f9d8-2640",
      "uc_output": "1f9d8-200d-2640-fe0f",
      "uc_match": "1f9d8-2640-fe0f",
      "uc_greedy": "1f9d8-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_in_steamy_room:": {
      "uc_base": "1f9d6-2640",
      "uc_output": "1f9d6-200d-2640-fe0f",
      "uc_match": "1f9d6-2640-fe0f",
      "uc_greedy": "1f9d6-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_judge:": {
      "uc_base": "1f469-2696",
      "uc_output": "1f469-200d-2696-fe0f",
      "uc_match": "1f469-2696-fe0f",
      "uc_greedy": "1f469-2696",
      "shortnames": [],
      "category": "people"
    },
    ":woman_juggling:": {
      "uc_base": "1f939-2640",
      "uc_output": "1f939-200d-2640-fe0f",
      "uc_match": "1f939-2640-fe0f",
      "uc_greedy": "1f939-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_mage:": {
      "uc_base": "1f9d9-2640",
      "uc_output": "1f9d9-200d-2640-fe0f",
      "uc_match": "1f9d9-2640-fe0f",
      "uc_greedy": "1f9d9-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_mountain_biking:": {
      "uc_base": "1f6b5-2640",
      "uc_output": "1f6b5-200d-2640-fe0f",
      "uc_match": "1f6b5-2640-fe0f",
      "uc_greedy": "1f6b5-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_pilot:": {
      "uc_base": "1f469-2708",
      "uc_output": "1f469-200d-2708-fe0f",
      "uc_match": "1f469-2708-fe0f",
      "uc_greedy": "1f469-2708",
      "shortnames": [],
      "category": "people"
    },
    ":woman_playing_handball:": {
      "uc_base": "1f93e-2640",
      "uc_output": "1f93e-200d-2640-fe0f",
      "uc_match": "1f93e-2640-fe0f",
      "uc_greedy": "1f93e-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_playing_water_polo:": {
      "uc_base": "1f93d-2640",
      "uc_output": "1f93d-200d-2640-fe0f",
      "uc_match": "1f93d-2640-fe0f",
      "uc_greedy": "1f93d-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_police_officer:": {
      "uc_base": "1f46e-2640",
      "uc_output": "1f46e-200d-2640-fe0f",
      "uc_match": "1f46e-2640-fe0f",
      "uc_greedy": "1f46e-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_pouting:": {
      "uc_base": "1f64e-2640",
      "uc_output": "1f64e-200d-2640-fe0f",
      "uc_match": "1f64e-2640-fe0f",
      "uc_greedy": "1f64e-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_raising_hand:": {
      "uc_base": "1f64b-2640",
      "uc_output": "1f64b-200d-2640-fe0f",
      "uc_match": "1f64b-2640-fe0f",
      "uc_greedy": "1f64b-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_rowing_boat:": {
      "uc_base": "1f6a3-2640",
      "uc_output": "1f6a3-200d-2640-fe0f",
      "uc_match": "1f6a3-2640-fe0f",
      "uc_greedy": "1f6a3-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_running:": {
      "uc_base": "1f3c3-2640",
      "uc_output": "1f3c3-200d-2640-fe0f",
      "uc_match": "1f3c3-2640-fe0f",
      "uc_greedy": "1f3c3-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_shrugging:": {
      "uc_base": "1f937-2640",
      "uc_output": "1f937-200d-2640-fe0f",
      "uc_match": "1f937-2640-fe0f",
      "uc_greedy": "1f937-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_surfing:": {
      "uc_base": "1f3c4-2640",
      "uc_output": "1f3c4-200d-2640-fe0f",
      "uc_match": "1f3c4-2640-fe0f",
      "uc_greedy": "1f3c4-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_swimming:": {
      "uc_base": "1f3ca-2640",
      "uc_output": "1f3ca-200d-2640-fe0f",
      "uc_match": "1f3ca-2640-fe0f",
      "uc_greedy": "1f3ca-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":woman_tipping_hand:": {
      "uc_base": "1f481-2640",
      "uc_output": "1f481-200d-2640-fe0f",
      "uc_match": "1f481-2640-fe0f",
      "uc_greedy": "1f481-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_vampire:": {
      "uc_base": "1f9db-2640",
      "uc_output": "1f9db-200d-2640-fe0f",
      "uc_match": "1f9db-2640-fe0f",
      "uc_greedy": "1f9db-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_walking:": {
      "uc_base": "1f6b6-2640",
      "uc_output": "1f6b6-200d-2640-fe0f",
      "uc_match": "1f6b6-2640-fe0f",
      "uc_greedy": "1f6b6-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_wearing_turban:": {
      "uc_base": "1f473-2640",
      "uc_output": "1f473-200d-2640-fe0f",
      "uc_match": "1f473-2640-fe0f",
      "uc_greedy": "1f473-2640",
      "shortnames": [],
      "category": "people"
    },
    ":woman_zombie:": {
      "uc_base": "1f9df-2640",
      "uc_output": "1f9df-200d-2640-fe0f",
      "uc_match": "1f9df-2640-fe0f",
      "uc_greedy": "1f9df-2640",
      "shortnames": [],
      "category": "people"
    },
    ":women_with_bunny_ears_partying:": {
      "uc_base": "1f46f-2640",
      "uc_output": "1f46f-200d-2640-fe0f",
      "uc_match": "1f46f-2640-fe0f",
      "uc_greedy": "1f46f-2640",
      "shortnames": [],
      "category": "people"
    },
    ":women_wrestling:": {
      "uc_base": "1f93c-2640",
      "uc_output": "1f93c-200d-2640-fe0f",
      "uc_match": "1f93c-2640-fe0f",
      "uc_greedy": "1f93c-2640",
      "shortnames": [],
      "category": "activity"
    },
    ":family_man_boy:": {
      "uc_base": "1f468-1f466",
      "uc_output": "1f468-200d-1f466",
      "uc_match": "1f468-1f466",
      "uc_greedy": "1f468-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_man_girl:": {
      "uc_base": "1f468-1f467",
      "uc_output": "1f468-200d-1f467",
      "uc_match": "1f468-1f467",
      "uc_greedy": "1f468-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":family_woman_boy:": {
      "uc_base": "1f469-1f466",
      "uc_output": "1f469-200d-1f466",
      "uc_match": "1f469-1f466",
      "uc_greedy": "1f469-1f466",
      "shortnames": [],
      "category": "people"
    },
    ":family_woman_girl:": {
      "uc_base": "1f469-1f467",
      "uc_output": "1f469-200d-1f467",
      "uc_match": "1f469-1f467",
      "uc_greedy": "1f469-1f467",
      "shortnames": [],
      "category": "people"
    },
    ":man_artist:": {
      "uc_base": "1f468-1f3a8",
      "uc_output": "1f468-200d-1f3a8",
      "uc_match": "1f468-1f3a8",
      "uc_greedy": "1f468-1f3a8",
      "shortnames": [],
      "category": "people"
    },
    ":man_astronaut:": {
      "uc_base": "1f468-1f680",
      "uc_output": "1f468-200d-1f680",
      "uc_match": "1f468-1f680",
      "uc_greedy": "1f468-1f680",
      "shortnames": [],
      "category": "people"
    },
    ":man_cook:": {
      "uc_base": "1f468-1f373",
      "uc_output": "1f468-200d-1f373",
      "uc_match": "1f468-1f373",
      "uc_greedy": "1f468-1f373",
      "shortnames": [],
      "category": "people"
    },
    ":man_factory_worker:": {
      "uc_base": "1f468-1f3ed",
      "uc_output": "1f468-200d-1f3ed",
      "uc_match": "1f468-1f3ed",
      "uc_greedy": "1f468-1f3ed",
      "shortnames": [],
      "category": "people"
    },
    ":man_farmer:": {
      "uc_base": "1f468-1f33e",
      "uc_output": "1f468-200d-1f33e",
      "uc_match": "1f468-1f33e",
      "uc_greedy": "1f468-1f33e",
      "shortnames": [],
      "category": "people"
    },
    ":man_firefighter:": {
      "uc_base": "1f468-1f692",
      "uc_output": "1f468-200d-1f692",
      "uc_match": "1f468-1f692",
      "uc_greedy": "1f468-1f692",
      "shortnames": [],
      "category": "people"
    },
    ":man_mechanic:": {
      "uc_base": "1f468-1f527",
      "uc_output": "1f468-200d-1f527",
      "uc_match": "1f468-1f527",
      "uc_greedy": "1f468-1f527",
      "shortnames": [],
      "category": "people"
    },
    ":man_office_worker:": {
      "uc_base": "1f468-1f4bc",
      "uc_output": "1f468-200d-1f4bc",
      "uc_match": "1f468-1f4bc",
      "uc_greedy": "1f468-1f4bc",
      "shortnames": [],
      "category": "people"
    },
    ":man_scientist:": {
      "uc_base": "1f468-1f52c",
      "uc_output": "1f468-200d-1f52c",
      "uc_match": "1f468-1f52c",
      "uc_greedy": "1f468-1f52c",
      "shortnames": [],
      "category": "people"
    },
    ":man_singer:": {
      "uc_base": "1f468-1f3a4",
      "uc_output": "1f468-200d-1f3a4",
      "uc_match": "1f468-1f3a4",
      "uc_greedy": "1f468-1f3a4",
      "shortnames": [],
      "category": "people"
    },
    ":man_student:": {
      "uc_base": "1f468-1f393",
      "uc_output": "1f468-200d-1f393",
      "uc_match": "1f468-1f393",
      "uc_greedy": "1f468-1f393",
      "shortnames": [],
      "category": "people"
    },
    ":man_teacher:": {
      "uc_base": "1f468-1f3eb",
      "uc_output": "1f468-200d-1f3eb",
      "uc_match": "1f468-1f3eb",
      "uc_greedy": "1f468-1f3eb",
      "shortnames": [],
      "category": "people"
    },
    ":man_technologist:": {
      "uc_base": "1f468-1f4bb",
      "uc_output": "1f468-200d-1f4bb",
      "uc_match": "1f468-1f4bb",
      "uc_greedy": "1f468-1f4bb",
      "shortnames": [],
      "category": "people"
    },
    ":woman_artist:": {
      "uc_base": "1f469-1f3a8",
      "uc_output": "1f469-200d-1f3a8",
      "uc_match": "1f469-1f3a8",
      "uc_greedy": "1f469-1f3a8",
      "shortnames": [],
      "category": "people"
    },
    ":woman_astronaut:": {
      "uc_base": "1f469-1f680",
      "uc_output": "1f469-200d-1f680",
      "uc_match": "1f469-1f680",
      "uc_greedy": "1f469-1f680",
      "shortnames": [],
      "category": "people"
    },
    ":woman_cook:": {
      "uc_base": "1f469-1f373",
      "uc_output": "1f469-200d-1f373",
      "uc_match": "1f469-1f373",
      "uc_greedy": "1f469-1f373",
      "shortnames": [],
      "category": "people"
    },
    ":woman_factory_worker:": {
      "uc_base": "1f469-1f3ed",
      "uc_output": "1f469-200d-1f3ed",
      "uc_match": "1f469-1f3ed",
      "uc_greedy": "1f469-1f3ed",
      "shortnames": [],
      "category": "people"
    },
    ":woman_farmer:": {
      "uc_base": "1f469-1f33e",
      "uc_output": "1f469-200d-1f33e",
      "uc_match": "1f469-1f33e",
      "uc_greedy": "1f469-1f33e",
      "shortnames": [],
      "category": "people"
    },
    ":woman_firefighter:": {
      "uc_base": "1f469-1f692",
      "uc_output": "1f469-200d-1f692",
      "uc_match": "1f469-1f692",
      "uc_greedy": "1f469-1f692",
      "shortnames": [],
      "category": "people"
    },
    ":woman_mechanic:": {
      "uc_base": "1f469-1f527",
      "uc_output": "1f469-200d-1f527",
      "uc_match": "1f469-1f527",
      "uc_greedy": "1f469-1f527",
      "shortnames": [],
      "category": "people"
    },
    ":woman_office_worker:": {
      "uc_base": "1f469-1f4bc",
      "uc_output": "1f469-200d-1f4bc",
      "uc_match": "1f469-1f4bc",
      "uc_greedy": "1f469-1f4bc",
      "shortnames": [],
      "category": "people"
    },
    ":woman_scientist:": {
      "uc_base": "1f469-1f52c",
      "uc_output": "1f469-200d-1f52c",
      "uc_match": "1f469-1f52c",
      "uc_greedy": "1f469-1f52c",
      "shortnames": [],
      "category": "people"
    },
    ":woman_singer:": {
      "uc_base": "1f469-1f3a4",
      "uc_output": "1f469-200d-1f3a4",
      "uc_match": "1f469-1f3a4",
      "uc_greedy": "1f469-1f3a4",
      "shortnames": [],
      "category": "people"
    },
    ":woman_student:": {
      "uc_base": "1f469-1f393",
      "uc_output": "1f469-200d-1f393",
      "uc_match": "1f469-1f393",
      "uc_greedy": "1f469-1f393",
      "shortnames": [],
      "category": "people"
    },
    ":woman_teacher:": {
      "uc_base": "1f469-1f3eb",
      "uc_output": "1f469-200d-1f3eb",
      "uc_match": "1f469-1f3eb",
      "uc_greedy": "1f469-1f3eb",
      "shortnames": [],
      "category": "people"
    },
    ":woman_technologist:": {
      "uc_base": "1f469-1f4bb",
      "uc_output": "1f469-200d-1f4bb",
      "uc_match": "1f469-1f4bb",
      "uc_greedy": "1f469-1f4bb",
      "shortnames": [],
      "category": "people"
    },
    ":asterisk:": {
      "uc_base": "002a-20e3",
      "uc_output": "002a-fe0f-20e3",
      "uc_match": "002a-20e3",
      "uc_greedy": "002a-20e3",
      "shortnames": [":keycap_asterisk:"],
      "category": "symbols"
    },
    ":eight:": {
      "uc_base": "0038-20e3",
      "uc_output": "0038-fe0f-20e3",
      "uc_match": "0038-20e3",
      "uc_greedy": "0038-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":five:": {
      "uc_base": "0035-20e3",
      "uc_output": "0035-fe0f-20e3",
      "uc_match": "0035-20e3",
      "uc_greedy": "0035-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":four:": {
      "uc_base": "0034-20e3",
      "uc_output": "0034-fe0f-20e3",
      "uc_match": "0034-20e3",
      "uc_greedy": "0034-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":hash:": {
      "uc_base": "0023-20e3",
      "uc_output": "0023-fe0f-20e3",
      "uc_match": "0023-20e3",
      "uc_greedy": "0023-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":nine:": {
      "uc_base": "0039-20e3",
      "uc_output": "0039-fe0f-20e3",
      "uc_match": "0039-20e3",
      "uc_greedy": "0039-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":one:": {
      "uc_base": "0031-20e3",
      "uc_output": "0031-fe0f-20e3",
      "uc_match": "0031-20e3",
      "uc_greedy": "0031-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":seven:": {
      "uc_base": "0037-20e3",
      "uc_output": "0037-fe0f-20e3",
      "uc_match": "0037-20e3",
      "uc_greedy": "0037-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":six:": {
      "uc_base": "0036-20e3",
      "uc_output": "0036-fe0f-20e3",
      "uc_match": "0036-20e3",
      "uc_greedy": "0036-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":three:": {
      "uc_base": "0033-20e3",
      "uc_output": "0033-fe0f-20e3",
      "uc_match": "0033-20e3",
      "uc_greedy": "0033-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":two:": {
      "uc_base": "0032-20e3",
      "uc_output": "0032-fe0f-20e3",
      "uc_match": "0032-20e3",
      "uc_greedy": "0032-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":zero:": {
      "uc_base": "0030-20e3",
      "uc_output": "0030-fe0f-20e3",
      "uc_match": "0030-20e3",
      "uc_greedy": "0030-20e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":adult_tone1:": {
      "uc_base": "1f9d1-1f3fb",
      "uc_output": "1f9d1-1f3fb",
      "uc_match": "1f9d1-1f3fb",
      "uc_greedy": "1f9d1-1f3fb",
      "shortnames": [":adult_light_skin_tone:"],
      "category": "people"
    },
    ":adult_tone2:": {
      "uc_base": "1f9d1-1f3fc",
      "uc_output": "1f9d1-1f3fc",
      "uc_match": "1f9d1-1f3fc",
      "uc_greedy": "1f9d1-1f3fc",
      "shortnames": [":adult_medium_light_skin_tone:"],
      "category": "people"
    },
    ":adult_tone3:": {
      "uc_base": "1f9d1-1f3fd",
      "uc_output": "1f9d1-1f3fd",
      "uc_match": "1f9d1-1f3fd",
      "uc_greedy": "1f9d1-1f3fd",
      "shortnames": [":adult_medium_skin_tone:"],
      "category": "people"
    },
    ":adult_tone4:": {
      "uc_base": "1f9d1-1f3fe",
      "uc_output": "1f9d1-1f3fe",
      "uc_match": "1f9d1-1f3fe",
      "uc_greedy": "1f9d1-1f3fe",
      "shortnames": [":adult_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":adult_tone5:": {
      "uc_base": "1f9d1-1f3ff",
      "uc_output": "1f9d1-1f3ff",
      "uc_match": "1f9d1-1f3ff",
      "uc_greedy": "1f9d1-1f3ff",
      "shortnames": [":adult_dark_skin_tone:"],
      "category": "people"
    },
    ":angel_tone1:": {
      "uc_base": "1f47c-1f3fb",
      "uc_output": "1f47c-1f3fb",
      "uc_match": "1f47c-1f3fb",
      "uc_greedy": "1f47c-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":angel_tone2:": {
      "uc_base": "1f47c-1f3fc",
      "uc_output": "1f47c-1f3fc",
      "uc_match": "1f47c-1f3fc",
      "uc_greedy": "1f47c-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":angel_tone3:": {
      "uc_base": "1f47c-1f3fd",
      "uc_output": "1f47c-1f3fd",
      "uc_match": "1f47c-1f3fd",
      "uc_greedy": "1f47c-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":angel_tone4:": {
      "uc_base": "1f47c-1f3fe",
      "uc_output": "1f47c-1f3fe",
      "uc_match": "1f47c-1f3fe",
      "uc_greedy": "1f47c-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":angel_tone5:": {
      "uc_base": "1f47c-1f3ff",
      "uc_output": "1f47c-1f3ff",
      "uc_match": "1f47c-1f3ff",
      "uc_greedy": "1f47c-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":baby_tone1:": {
      "uc_base": "1f476-1f3fb",
      "uc_output": "1f476-1f3fb",
      "uc_match": "1f476-1f3fb",
      "uc_greedy": "1f476-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":baby_tone2:": {
      "uc_base": "1f476-1f3fc",
      "uc_output": "1f476-1f3fc",
      "uc_match": "1f476-1f3fc",
      "uc_greedy": "1f476-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":baby_tone3:": {
      "uc_base": "1f476-1f3fd",
      "uc_output": "1f476-1f3fd",
      "uc_match": "1f476-1f3fd",
      "uc_greedy": "1f476-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":baby_tone4:": {
      "uc_base": "1f476-1f3fe",
      "uc_output": "1f476-1f3fe",
      "uc_match": "1f476-1f3fe",
      "uc_greedy": "1f476-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":baby_tone5:": {
      "uc_base": "1f476-1f3ff",
      "uc_output": "1f476-1f3ff",
      "uc_match": "1f476-1f3ff",
      "uc_greedy": "1f476-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":bath_tone1:": {
      "uc_base": "1f6c0-1f3fb",
      "uc_output": "1f6c0-1f3fb",
      "uc_match": "1f6c0-1f3fb",
      "uc_greedy": "1f6c0-1f3fb",
      "shortnames": [],
      "category": "objects"
    },
    ":bath_tone2:": {
      "uc_base": "1f6c0-1f3fc",
      "uc_output": "1f6c0-1f3fc",
      "uc_match": "1f6c0-1f3fc",
      "uc_greedy": "1f6c0-1f3fc",
      "shortnames": [],
      "category": "objects"
    },
    ":bath_tone3:": {
      "uc_base": "1f6c0-1f3fd",
      "uc_output": "1f6c0-1f3fd",
      "uc_match": "1f6c0-1f3fd",
      "uc_greedy": "1f6c0-1f3fd",
      "shortnames": [],
      "category": "objects"
    },
    ":bath_tone4:": {
      "uc_base": "1f6c0-1f3fe",
      "uc_output": "1f6c0-1f3fe",
      "uc_match": "1f6c0-1f3fe",
      "uc_greedy": "1f6c0-1f3fe",
      "shortnames": [],
      "category": "objects"
    },
    ":bath_tone5:": {
      "uc_base": "1f6c0-1f3ff",
      "uc_output": "1f6c0-1f3ff",
      "uc_match": "1f6c0-1f3ff",
      "uc_greedy": "1f6c0-1f3ff",
      "shortnames": [],
      "category": "objects"
    },
    ":bearded_person_tone1:": {
      "uc_base": "1f9d4-1f3fb",
      "uc_output": "1f9d4-1f3fb",
      "uc_match": "1f9d4-1f3fb",
      "uc_greedy": "1f9d4-1f3fb",
      "shortnames": [":bearded_person_light_skin_tone:"],
      "category": "people"
    },
    ":bearded_person_tone2:": {
      "uc_base": "1f9d4-1f3fc",
      "uc_output": "1f9d4-1f3fc",
      "uc_match": "1f9d4-1f3fc",
      "uc_greedy": "1f9d4-1f3fc",
      "shortnames": [":bearded_person_medium_light_skin_tone:"],
      "category": "people"
    },
    ":bearded_person_tone3:": {
      "uc_base": "1f9d4-1f3fd",
      "uc_output": "1f9d4-1f3fd",
      "uc_match": "1f9d4-1f3fd",
      "uc_greedy": "1f9d4-1f3fd",
      "shortnames": [":bearded_person_medium_skin_tone:"],
      "category": "people"
    },
    ":bearded_person_tone4:": {
      "uc_base": "1f9d4-1f3fe",
      "uc_output": "1f9d4-1f3fe",
      "uc_match": "1f9d4-1f3fe",
      "uc_greedy": "1f9d4-1f3fe",
      "shortnames": [":bearded_person_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":bearded_person_tone5:": {
      "uc_base": "1f9d4-1f3ff",
      "uc_output": "1f9d4-1f3ff",
      "uc_match": "1f9d4-1f3ff",
      "uc_greedy": "1f9d4-1f3ff",
      "shortnames": [":bearded_person_dark_skin_tone:"],
      "category": "people"
    },
    ":blond_haired_person_tone1:": {
      "uc_base": "1f471-1f3fb",
      "uc_output": "1f471-1f3fb",
      "uc_match": "1f471-1f3fb",
      "uc_greedy": "1f471-1f3fb",
      "shortnames": [":person_with_blond_hair_tone1:"],
      "category": "people"
    },
    ":blond_haired_person_tone2:": {
      "uc_base": "1f471-1f3fc",
      "uc_output": "1f471-1f3fc",
      "uc_match": "1f471-1f3fc",
      "uc_greedy": "1f471-1f3fc",
      "shortnames": [":person_with_blond_hair_tone2:"],
      "category": "people"
    },
    ":blond_haired_person_tone3:": {
      "uc_base": "1f471-1f3fd",
      "uc_output": "1f471-1f3fd",
      "uc_match": "1f471-1f3fd",
      "uc_greedy": "1f471-1f3fd",
      "shortnames": [":person_with_blond_hair_tone3:"],
      "category": "people"
    },
    ":blond_haired_person_tone4:": {
      "uc_base": "1f471-1f3fe",
      "uc_output": "1f471-1f3fe",
      "uc_match": "1f471-1f3fe",
      "uc_greedy": "1f471-1f3fe",
      "shortnames": [":person_with_blond_hair_tone4:"],
      "category": "people"
    },
    ":blond_haired_person_tone5:": {
      "uc_base": "1f471-1f3ff",
      "uc_output": "1f471-1f3ff",
      "uc_match": "1f471-1f3ff",
      "uc_greedy": "1f471-1f3ff",
      "shortnames": [":person_with_blond_hair_tone5:"],
      "category": "people"
    },
    ":boy_tone1:": {
      "uc_base": "1f466-1f3fb",
      "uc_output": "1f466-1f3fb",
      "uc_match": "1f466-1f3fb",
      "uc_greedy": "1f466-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":boy_tone2:": {
      "uc_base": "1f466-1f3fc",
      "uc_output": "1f466-1f3fc",
      "uc_match": "1f466-1f3fc",
      "uc_greedy": "1f466-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":boy_tone3:": {
      "uc_base": "1f466-1f3fd",
      "uc_output": "1f466-1f3fd",
      "uc_match": "1f466-1f3fd",
      "uc_greedy": "1f466-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":boy_tone4:": {
      "uc_base": "1f466-1f3fe",
      "uc_output": "1f466-1f3fe",
      "uc_match": "1f466-1f3fe",
      "uc_greedy": "1f466-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":boy_tone5:": {
      "uc_base": "1f466-1f3ff",
      "uc_output": "1f466-1f3ff",
      "uc_match": "1f466-1f3ff",
      "uc_greedy": "1f466-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":breast_feeding_tone1:": {
      "uc_base": "1f931-1f3fb",
      "uc_output": "1f931-1f3fb",
      "uc_match": "1f931-1f3fb",
      "uc_greedy": "1f931-1f3fb",
      "shortnames": [":breast_feeding_light_skin_tone:"],
      "category": "people"
    },
    ":breast_feeding_tone2:": {
      "uc_base": "1f931-1f3fc",
      "uc_output": "1f931-1f3fc",
      "uc_match": "1f931-1f3fc",
      "uc_greedy": "1f931-1f3fc",
      "shortnames": [":breast_feeding_medium_light_skin_tone:"],
      "category": "people"
    },
    ":breast_feeding_tone3:": {
      "uc_base": "1f931-1f3fd",
      "uc_output": "1f931-1f3fd",
      "uc_match": "1f931-1f3fd",
      "uc_greedy": "1f931-1f3fd",
      "shortnames": [":breast_feeding_medium_skin_tone:"],
      "category": "people"
    },
    ":breast_feeding_tone4:": {
      "uc_base": "1f931-1f3fe",
      "uc_output": "1f931-1f3fe",
      "uc_match": "1f931-1f3fe",
      "uc_greedy": "1f931-1f3fe",
      "shortnames": [":breast_feeding_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":breast_feeding_tone5:": {
      "uc_base": "1f931-1f3ff",
      "uc_output": "1f931-1f3ff",
      "uc_match": "1f931-1f3ff",
      "uc_greedy": "1f931-1f3ff",
      "shortnames": [":breast_feeding_dark_skin_tone:"],
      "category": "people"
    },
    ":bride_with_veil_tone1:": {
      "uc_base": "1f470-1f3fb",
      "uc_output": "1f470-1f3fb",
      "uc_match": "1f470-1f3fb",
      "uc_greedy": "1f470-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":bride_with_veil_tone2:": {
      "uc_base": "1f470-1f3fc",
      "uc_output": "1f470-1f3fc",
      "uc_match": "1f470-1f3fc",
      "uc_greedy": "1f470-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":bride_with_veil_tone3:": {
      "uc_base": "1f470-1f3fd",
      "uc_output": "1f470-1f3fd",
      "uc_match": "1f470-1f3fd",
      "uc_greedy": "1f470-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":bride_with_veil_tone4:": {
      "uc_base": "1f470-1f3fe",
      "uc_output": "1f470-1f3fe",
      "uc_match": "1f470-1f3fe",
      "uc_greedy": "1f470-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":bride_with_veil_tone5:": {
      "uc_base": "1f470-1f3ff",
      "uc_output": "1f470-1f3ff",
      "uc_match": "1f470-1f3ff",
      "uc_greedy": "1f470-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":call_me_tone1:": {
      "uc_base": "1f919-1f3fb",
      "uc_output": "1f919-1f3fb",
      "uc_match": "1f919-1f3fb",
      "uc_greedy": "1f919-1f3fb",
      "shortnames": [":call_me_hand_tone1:"],
      "category": "people"
    },
    ":call_me_tone2:": {
      "uc_base": "1f919-1f3fc",
      "uc_output": "1f919-1f3fc",
      "uc_match": "1f919-1f3fc",
      "uc_greedy": "1f919-1f3fc",
      "shortnames": [":call_me_hand_tone2:"],
      "category": "people"
    },
    ":call_me_tone3:": {
      "uc_base": "1f919-1f3fd",
      "uc_output": "1f919-1f3fd",
      "uc_match": "1f919-1f3fd",
      "uc_greedy": "1f919-1f3fd",
      "shortnames": [":call_me_hand_tone3:"],
      "category": "people"
    },
    ":call_me_tone4:": {
      "uc_base": "1f919-1f3fe",
      "uc_output": "1f919-1f3fe",
      "uc_match": "1f919-1f3fe",
      "uc_greedy": "1f919-1f3fe",
      "shortnames": [":call_me_hand_tone4:"],
      "category": "people"
    },
    ":call_me_tone5:": {
      "uc_base": "1f919-1f3ff",
      "uc_output": "1f919-1f3ff",
      "uc_match": "1f919-1f3ff",
      "uc_greedy": "1f919-1f3ff",
      "shortnames": [":call_me_hand_tone5:"],
      "category": "people"
    },
    ":child_tone1:": {
      "uc_base": "1f9d2-1f3fb",
      "uc_output": "1f9d2-1f3fb",
      "uc_match": "1f9d2-1f3fb",
      "uc_greedy": "1f9d2-1f3fb",
      "shortnames": [":child_light_skin_tone:"],
      "category": "people"
    },
    ":child_tone2:": {
      "uc_base": "1f9d2-1f3fc",
      "uc_output": "1f9d2-1f3fc",
      "uc_match": "1f9d2-1f3fc",
      "uc_greedy": "1f9d2-1f3fc",
      "shortnames": [":child_medium_light_skin_tone:"],
      "category": "people"
    },
    ":child_tone3:": {
      "uc_base": "1f9d2-1f3fd",
      "uc_output": "1f9d2-1f3fd",
      "uc_match": "1f9d2-1f3fd",
      "uc_greedy": "1f9d2-1f3fd",
      "shortnames": [":child_medium_skin_tone:"],
      "category": "people"
    },
    ":child_tone4:": {
      "uc_base": "1f9d2-1f3fe",
      "uc_output": "1f9d2-1f3fe",
      "uc_match": "1f9d2-1f3fe",
      "uc_greedy": "1f9d2-1f3fe",
      "shortnames": [":child_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":child_tone5:": {
      "uc_base": "1f9d2-1f3ff",
      "uc_output": "1f9d2-1f3ff",
      "uc_match": "1f9d2-1f3ff",
      "uc_greedy": "1f9d2-1f3ff",
      "shortnames": [":child_dark_skin_tone:"],
      "category": "people"
    },
    ":clap_tone1:": {
      "uc_base": "1f44f-1f3fb",
      "uc_output": "1f44f-1f3fb",
      "uc_match": "1f44f-1f3fb",
      "uc_greedy": "1f44f-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":clap_tone2:": {
      "uc_base": "1f44f-1f3fc",
      "uc_output": "1f44f-1f3fc",
      "uc_match": "1f44f-1f3fc",
      "uc_greedy": "1f44f-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":clap_tone3:": {
      "uc_base": "1f44f-1f3fd",
      "uc_output": "1f44f-1f3fd",
      "uc_match": "1f44f-1f3fd",
      "uc_greedy": "1f44f-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":clap_tone4:": {
      "uc_base": "1f44f-1f3fe",
      "uc_output": "1f44f-1f3fe",
      "uc_match": "1f44f-1f3fe",
      "uc_greedy": "1f44f-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":clap_tone5:": {
      "uc_base": "1f44f-1f3ff",
      "uc_output": "1f44f-1f3ff",
      "uc_match": "1f44f-1f3ff",
      "uc_greedy": "1f44f-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":construction_worker_tone1:": {
      "uc_base": "1f477-1f3fb",
      "uc_output": "1f477-1f3fb",
      "uc_match": "1f477-1f3fb",
      "uc_greedy": "1f477-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":construction_worker_tone2:": {
      "uc_base": "1f477-1f3fc",
      "uc_output": "1f477-1f3fc",
      "uc_match": "1f477-1f3fc",
      "uc_greedy": "1f477-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":construction_worker_tone3:": {
      "uc_base": "1f477-1f3fd",
      "uc_output": "1f477-1f3fd",
      "uc_match": "1f477-1f3fd",
      "uc_greedy": "1f477-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":construction_worker_tone4:": {
      "uc_base": "1f477-1f3fe",
      "uc_output": "1f477-1f3fe",
      "uc_match": "1f477-1f3fe",
      "uc_greedy": "1f477-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":construction_worker_tone5:": {
      "uc_base": "1f477-1f3ff",
      "uc_output": "1f477-1f3ff",
      "uc_match": "1f477-1f3ff",
      "uc_greedy": "1f477-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":dancer_tone1:": {
      "uc_base": "1f483-1f3fb",
      "uc_output": "1f483-1f3fb",
      "uc_match": "1f483-1f3fb",
      "uc_greedy": "1f483-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":dancer_tone2:": {
      "uc_base": "1f483-1f3fc",
      "uc_output": "1f483-1f3fc",
      "uc_match": "1f483-1f3fc",
      "uc_greedy": "1f483-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":dancer_tone3:": {
      "uc_base": "1f483-1f3fd",
      "uc_output": "1f483-1f3fd",
      "uc_match": "1f483-1f3fd",
      "uc_greedy": "1f483-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":dancer_tone4:": {
      "uc_base": "1f483-1f3fe",
      "uc_output": "1f483-1f3fe",
      "uc_match": "1f483-1f3fe",
      "uc_greedy": "1f483-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":dancer_tone5:": {
      "uc_base": "1f483-1f3ff",
      "uc_output": "1f483-1f3ff",
      "uc_match": "1f483-1f3ff",
      "uc_greedy": "1f483-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":detective_tone1:": {
      "uc_base": "1f575-1f3fb",
      "uc_output": "1f575-1f3fb",
      "uc_match": "1f575-fe0f-1f3fb",
      "uc_greedy": "1f575-fe0f-1f3fb",
      "shortnames": [":spy_tone1:", ":sleuth_or_spy_tone1:"],
      "category": "people"
    },
    ":detective_tone2:": {
      "uc_base": "1f575-1f3fc",
      "uc_output": "1f575-1f3fc",
      "uc_match": "1f575-fe0f-1f3fc",
      "uc_greedy": "1f575-fe0f-1f3fc",
      "shortnames": [":spy_tone2:", ":sleuth_or_spy_tone2:"],
      "category": "people"
    },
    ":detective_tone3:": {
      "uc_base": "1f575-1f3fd",
      "uc_output": "1f575-1f3fd",
      "uc_match": "1f575-fe0f-1f3fd",
      "uc_greedy": "1f575-fe0f-1f3fd",
      "shortnames": [":spy_tone3:", ":sleuth_or_spy_tone3:"],
      "category": "people"
    },
    ":detective_tone4:": {
      "uc_base": "1f575-1f3fe",
      "uc_output": "1f575-1f3fe",
      "uc_match": "1f575-fe0f-1f3fe",
      "uc_greedy": "1f575-fe0f-1f3fe",
      "shortnames": [":spy_tone4:", ":sleuth_or_spy_tone4:"],
      "category": "people"
    },
    ":detective_tone5:": {
      "uc_base": "1f575-1f3ff",
      "uc_output": "1f575-1f3ff",
      "uc_match": "1f575-fe0f-1f3ff",
      "uc_greedy": "1f575-fe0f-1f3ff",
      "shortnames": [":spy_tone5:", ":sleuth_or_spy_tone5:"],
      "category": "people"
    },
    ":ear_tone1:": {
      "uc_base": "1f442-1f3fb",
      "uc_output": "1f442-1f3fb",
      "uc_match": "1f442-1f3fb",
      "uc_greedy": "1f442-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":ear_tone2:": {
      "uc_base": "1f442-1f3fc",
      "uc_output": "1f442-1f3fc",
      "uc_match": "1f442-1f3fc",
      "uc_greedy": "1f442-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":ear_tone3:": {
      "uc_base": "1f442-1f3fd",
      "uc_output": "1f442-1f3fd",
      "uc_match": "1f442-1f3fd",
      "uc_greedy": "1f442-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":ear_tone4:": {
      "uc_base": "1f442-1f3fe",
      "uc_output": "1f442-1f3fe",
      "uc_match": "1f442-1f3fe",
      "uc_greedy": "1f442-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":ear_tone5:": {
      "uc_base": "1f442-1f3ff",
      "uc_output": "1f442-1f3ff",
      "uc_match": "1f442-1f3ff",
      "uc_greedy": "1f442-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":elf_tone1:": {
      "uc_base": "1f9dd-1f3fb",
      "uc_output": "1f9dd-1f3fb",
      "uc_match": "1f9dd-1f3fb",
      "uc_greedy": "1f9dd-1f3fb",
      "shortnames": [":elf_light_skin_tone:"],
      "category": "people"
    },
    ":elf_tone2:": {
      "uc_base": "1f9dd-1f3fc",
      "uc_output": "1f9dd-1f3fc",
      "uc_match": "1f9dd-1f3fc",
      "uc_greedy": "1f9dd-1f3fc",
      "shortnames": [":elf_medium_light_skin_tone:"],
      "category": "people"
    },
    ":elf_tone3:": {
      "uc_base": "1f9dd-1f3fd",
      "uc_output": "1f9dd-1f3fd",
      "uc_match": "1f9dd-1f3fd",
      "uc_greedy": "1f9dd-1f3fd",
      "shortnames": [":elf_medium_skin_tone:"],
      "category": "people"
    },
    ":elf_tone4:": {
      "uc_base": "1f9dd-1f3fe",
      "uc_output": "1f9dd-1f3fe",
      "uc_match": "1f9dd-1f3fe",
      "uc_greedy": "1f9dd-1f3fe",
      "shortnames": [":elf_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":elf_tone5:": {
      "uc_base": "1f9dd-1f3ff",
      "uc_output": "1f9dd-1f3ff",
      "uc_match": "1f9dd-1f3ff",
      "uc_greedy": "1f9dd-1f3ff",
      "shortnames": [":elf_dark_skin_tone:"],
      "category": "people"
    },
    ":fairy_tone1:": {
      "uc_base": "1f9da-1f3fb",
      "uc_output": "1f9da-1f3fb",
      "uc_match": "1f9da-1f3fb",
      "uc_greedy": "1f9da-1f3fb",
      "shortnames": [":fairy_light_skin_tone:"],
      "category": "people"
    },
    ":fairy_tone2:": {
      "uc_base": "1f9da-1f3fc",
      "uc_output": "1f9da-1f3fc",
      "uc_match": "1f9da-1f3fc",
      "uc_greedy": "1f9da-1f3fc",
      "shortnames": [":fairy_medium_light_skin_tone:"],
      "category": "people"
    },
    ":fairy_tone3:": {
      "uc_base": "1f9da-1f3fd",
      "uc_output": "1f9da-1f3fd",
      "uc_match": "1f9da-1f3fd",
      "uc_greedy": "1f9da-1f3fd",
      "shortnames": [":fairy_medium_skin_tone:"],
      "category": "people"
    },
    ":fairy_tone4:": {
      "uc_base": "1f9da-1f3fe",
      "uc_output": "1f9da-1f3fe",
      "uc_match": "1f9da-1f3fe",
      "uc_greedy": "1f9da-1f3fe",
      "shortnames": [":fairy_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":fairy_tone5:": {
      "uc_base": "1f9da-1f3ff",
      "uc_output": "1f9da-1f3ff",
      "uc_match": "1f9da-1f3ff",
      "uc_greedy": "1f9da-1f3ff",
      "shortnames": [":fairy_dark_skin_tone:"],
      "category": "people"
    },
    ":fingers_crossed_tone1:": {
      "uc_base": "1f91e-1f3fb",
      "uc_output": "1f91e-1f3fb",
      "uc_match": "1f91e-1f3fb",
      "uc_greedy": "1f91e-1f3fb",
      "shortnames": [":hand_with_index_and_middle_fingers_crossed_tone1:"],
      "category": "people"
    },
    ":fingers_crossed_tone2:": {
      "uc_base": "1f91e-1f3fc",
      "uc_output": "1f91e-1f3fc",
      "uc_match": "1f91e-1f3fc",
      "uc_greedy": "1f91e-1f3fc",
      "shortnames": [":hand_with_index_and_middle_fingers_crossed_tone2:"],
      "category": "people"
    },
    ":fingers_crossed_tone3:": {
      "uc_base": "1f91e-1f3fd",
      "uc_output": "1f91e-1f3fd",
      "uc_match": "1f91e-1f3fd",
      "uc_greedy": "1f91e-1f3fd",
      "shortnames": [":hand_with_index_and_middle_fingers_crossed_tone3:"],
      "category": "people"
    },
    ":fingers_crossed_tone4:": {
      "uc_base": "1f91e-1f3fe",
      "uc_output": "1f91e-1f3fe",
      "uc_match": "1f91e-1f3fe",
      "uc_greedy": "1f91e-1f3fe",
      "shortnames": [":hand_with_index_and_middle_fingers_crossed_tone4:"],
      "category": "people"
    },
    ":fingers_crossed_tone5:": {
      "uc_base": "1f91e-1f3ff",
      "uc_output": "1f91e-1f3ff",
      "uc_match": "1f91e-1f3ff",
      "uc_greedy": "1f91e-1f3ff",
      "shortnames": [":hand_with_index_and_middle_fingers_crossed_tone5:"],
      "category": "people"
    },
    ":flag_ac:": {
      "uc_base": "1f1e6-1f1e8",
      "uc_output": "1f1e6-1f1e8",
      "uc_match": "1f1e6-1f1e8",
      "uc_greedy": "1f1e6-1f1e8",
      "shortnames": [":ac:"],
      "category": "flags"
    },
    ":flag_ad:": {
      "uc_base": "1f1e6-1f1e9",
      "uc_output": "1f1e6-1f1e9",
      "uc_match": "1f1e6-1f1e9",
      "uc_greedy": "1f1e6-1f1e9",
      "shortnames": [":ad:"],
      "category": "flags"
    },
    ":flag_ae:": {
      "uc_base": "1f1e6-1f1ea",
      "uc_output": "1f1e6-1f1ea",
      "uc_match": "1f1e6-1f1ea",
      "uc_greedy": "1f1e6-1f1ea",
      "shortnames": [":ae:"],
      "category": "flags"
    },
    ":flag_af:": {
      "uc_base": "1f1e6-1f1eb",
      "uc_output": "1f1e6-1f1eb",
      "uc_match": "1f1e6-1f1eb",
      "uc_greedy": "1f1e6-1f1eb",
      "shortnames": [":af:"],
      "category": "flags"
    },
    ":flag_ag:": {
      "uc_base": "1f1e6-1f1ec",
      "uc_output": "1f1e6-1f1ec",
      "uc_match": "1f1e6-1f1ec",
      "uc_greedy": "1f1e6-1f1ec",
      "shortnames": [":ag:"],
      "category": "flags"
    },
    ":flag_ai:": {
      "uc_base": "1f1e6-1f1ee",
      "uc_output": "1f1e6-1f1ee",
      "uc_match": "1f1e6-1f1ee",
      "uc_greedy": "1f1e6-1f1ee",
      "shortnames": [":ai:"],
      "category": "flags"
    },
    ":flag_al:": {
      "uc_base": "1f1e6-1f1f1",
      "uc_output": "1f1e6-1f1f1",
      "uc_match": "1f1e6-1f1f1",
      "uc_greedy": "1f1e6-1f1f1",
      "shortnames": [":al:"],
      "category": "flags"
    },
    ":flag_am:": {
      "uc_base": "1f1e6-1f1f2",
      "uc_output": "1f1e6-1f1f2",
      "uc_match": "1f1e6-1f1f2",
      "uc_greedy": "1f1e6-1f1f2",
      "shortnames": [":am:"],
      "category": "flags"
    },
    ":flag_ao:": {
      "uc_base": "1f1e6-1f1f4",
      "uc_output": "1f1e6-1f1f4",
      "uc_match": "1f1e6-1f1f4",
      "uc_greedy": "1f1e6-1f1f4",
      "shortnames": [":ao:"],
      "category": "flags"
    },
    ":flag_aq:": {
      "uc_base": "1f1e6-1f1f6",
      "uc_output": "1f1e6-1f1f6",
      "uc_match": "1f1e6-1f1f6",
      "uc_greedy": "1f1e6-1f1f6",
      "shortnames": [":aq:"],
      "category": "flags"
    },
    ":flag_ar:": {
      "uc_base": "1f1e6-1f1f7",
      "uc_output": "1f1e6-1f1f7",
      "uc_match": "1f1e6-1f1f7",
      "uc_greedy": "1f1e6-1f1f7",
      "shortnames": [":ar:"],
      "category": "flags"
    },
    ":flag_as:": {
      "uc_base": "1f1e6-1f1f8",
      "uc_output": "1f1e6-1f1f8",
      "uc_match": "1f1e6-1f1f8",
      "uc_greedy": "1f1e6-1f1f8",
      "shortnames": [":as:"],
      "category": "flags"
    },
    ":flag_at:": {
      "uc_base": "1f1e6-1f1f9",
      "uc_output": "1f1e6-1f1f9",
      "uc_match": "1f1e6-1f1f9",
      "uc_greedy": "1f1e6-1f1f9",
      "shortnames": [":at:"],
      "category": "flags"
    },
    ":flag_au:": {
      "uc_base": "1f1e6-1f1fa",
      "uc_output": "1f1e6-1f1fa",
      "uc_match": "1f1e6-1f1fa",
      "uc_greedy": "1f1e6-1f1fa",
      "shortnames": [":au:"],
      "category": "flags"
    },
    ":flag_aw:": {
      "uc_base": "1f1e6-1f1fc",
      "uc_output": "1f1e6-1f1fc",
      "uc_match": "1f1e6-1f1fc",
      "uc_greedy": "1f1e6-1f1fc",
      "shortnames": [":aw:"],
      "category": "flags"
    },
    ":flag_ax:": {
      "uc_base": "1f1e6-1f1fd",
      "uc_output": "1f1e6-1f1fd",
      "uc_match": "1f1e6-1f1fd",
      "uc_greedy": "1f1e6-1f1fd",
      "shortnames": [":ax:"],
      "category": "flags"
    },
    ":flag_az:": {
      "uc_base": "1f1e6-1f1ff",
      "uc_output": "1f1e6-1f1ff",
      "uc_match": "1f1e6-1f1ff",
      "uc_greedy": "1f1e6-1f1ff",
      "shortnames": [":az:"],
      "category": "flags"
    },
    ":flag_ba:": {
      "uc_base": "1f1e7-1f1e6",
      "uc_output": "1f1e7-1f1e6",
      "uc_match": "1f1e7-1f1e6",
      "uc_greedy": "1f1e7-1f1e6",
      "shortnames": [":ba:"],
      "category": "flags"
    },
    ":flag_bb:": {
      "uc_base": "1f1e7-1f1e7",
      "uc_output": "1f1e7-1f1e7",
      "uc_match": "1f1e7-1f1e7",
      "uc_greedy": "1f1e7-1f1e7",
      "shortnames": [":bb:"],
      "category": "flags"
    },
    ":flag_bd:": {
      "uc_base": "1f1e7-1f1e9",
      "uc_output": "1f1e7-1f1e9",
      "uc_match": "1f1e7-1f1e9",
      "uc_greedy": "1f1e7-1f1e9",
      "shortnames": [":bd:"],
      "category": "flags"
    },
    ":flag_be:": {
      "uc_base": "1f1e7-1f1ea",
      "uc_output": "1f1e7-1f1ea",
      "uc_match": "1f1e7-1f1ea",
      "uc_greedy": "1f1e7-1f1ea",
      "shortnames": [":be:"],
      "category": "flags"
    },
    ":flag_bf:": {
      "uc_base": "1f1e7-1f1eb",
      "uc_output": "1f1e7-1f1eb",
      "uc_match": "1f1e7-1f1eb",
      "uc_greedy": "1f1e7-1f1eb",
      "shortnames": [":bf:"],
      "category": "flags"
    },
    ":flag_bg:": {
      "uc_base": "1f1e7-1f1ec",
      "uc_output": "1f1e7-1f1ec",
      "uc_match": "1f1e7-1f1ec",
      "uc_greedy": "1f1e7-1f1ec",
      "shortnames": [":bg:"],
      "category": "flags"
    },
    ":flag_bh:": {
      "uc_base": "1f1e7-1f1ed",
      "uc_output": "1f1e7-1f1ed",
      "uc_match": "1f1e7-1f1ed",
      "uc_greedy": "1f1e7-1f1ed",
      "shortnames": [":bh:"],
      "category": "flags"
    },
    ":flag_bi:": {
      "uc_base": "1f1e7-1f1ee",
      "uc_output": "1f1e7-1f1ee",
      "uc_match": "1f1e7-1f1ee",
      "uc_greedy": "1f1e7-1f1ee",
      "shortnames": [":bi:"],
      "category": "flags"
    },
    ":flag_bj:": {
      "uc_base": "1f1e7-1f1ef",
      "uc_output": "1f1e7-1f1ef",
      "uc_match": "1f1e7-1f1ef",
      "uc_greedy": "1f1e7-1f1ef",
      "shortnames": [":bj:"],
      "category": "flags"
    },
    ":flag_bl:": {
      "uc_base": "1f1e7-1f1f1",
      "uc_output": "1f1e7-1f1f1",
      "uc_match": "1f1e7-1f1f1",
      "uc_greedy": "1f1e7-1f1f1",
      "shortnames": [":bl:"],
      "category": "flags"
    },
    ":flag_bm:": {
      "uc_base": "1f1e7-1f1f2",
      "uc_output": "1f1e7-1f1f2",
      "uc_match": "1f1e7-1f1f2",
      "uc_greedy": "1f1e7-1f1f2",
      "shortnames": [":bm:"],
      "category": "flags"
    },
    ":flag_bn:": {
      "uc_base": "1f1e7-1f1f3",
      "uc_output": "1f1e7-1f1f3",
      "uc_match": "1f1e7-1f1f3",
      "uc_greedy": "1f1e7-1f1f3",
      "shortnames": [":bn:"],
      "category": "flags"
    },
    ":flag_bo:": {
      "uc_base": "1f1e7-1f1f4",
      "uc_output": "1f1e7-1f1f4",
      "uc_match": "1f1e7-1f1f4",
      "uc_greedy": "1f1e7-1f1f4",
      "shortnames": [":bo:"],
      "category": "flags"
    },
    ":flag_bq:": {
      "uc_base": "1f1e7-1f1f6",
      "uc_output": "1f1e7-1f1f6",
      "uc_match": "1f1e7-1f1f6",
      "uc_greedy": "1f1e7-1f1f6",
      "shortnames": [":bq:"],
      "category": "flags"
    },
    ":flag_br:": {
      "uc_base": "1f1e7-1f1f7",
      "uc_output": "1f1e7-1f1f7",
      "uc_match": "1f1e7-1f1f7",
      "uc_greedy": "1f1e7-1f1f7",
      "shortnames": [":br:"],
      "category": "flags"
    },
    ":flag_bs:": {
      "uc_base": "1f1e7-1f1f8",
      "uc_output": "1f1e7-1f1f8",
      "uc_match": "1f1e7-1f1f8",
      "uc_greedy": "1f1e7-1f1f8",
      "shortnames": [":bs:"],
      "category": "flags"
    },
    ":flag_bt:": {
      "uc_base": "1f1e7-1f1f9",
      "uc_output": "1f1e7-1f1f9",
      "uc_match": "1f1e7-1f1f9",
      "uc_greedy": "1f1e7-1f1f9",
      "shortnames": [":bt:"],
      "category": "flags"
    },
    ":flag_bv:": {
      "uc_base": "1f1e7-1f1fb",
      "uc_output": "1f1e7-1f1fb",
      "uc_match": "1f1e7-1f1fb",
      "uc_greedy": "1f1e7-1f1fb",
      "shortnames": [":bv:"],
      "category": "flags"
    },
    ":flag_bw:": {
      "uc_base": "1f1e7-1f1fc",
      "uc_output": "1f1e7-1f1fc",
      "uc_match": "1f1e7-1f1fc",
      "uc_greedy": "1f1e7-1f1fc",
      "shortnames": [":bw:"],
      "category": "flags"
    },
    ":flag_by:": {
      "uc_base": "1f1e7-1f1fe",
      "uc_output": "1f1e7-1f1fe",
      "uc_match": "1f1e7-1f1fe",
      "uc_greedy": "1f1e7-1f1fe",
      "shortnames": [":by:"],
      "category": "flags"
    },
    ":flag_bz:": {
      "uc_base": "1f1e7-1f1ff",
      "uc_output": "1f1e7-1f1ff",
      "uc_match": "1f1e7-1f1ff",
      "uc_greedy": "1f1e7-1f1ff",
      "shortnames": [":bz:"],
      "category": "flags"
    },
    ":flag_ca:": {
      "uc_base": "1f1e8-1f1e6",
      "uc_output": "1f1e8-1f1e6",
      "uc_match": "1f1e8-1f1e6",
      "uc_greedy": "1f1e8-1f1e6",
      "shortnames": [":ca:"],
      "category": "flags"
    },
    ":flag_cc:": {
      "uc_base": "1f1e8-1f1e8",
      "uc_output": "1f1e8-1f1e8",
      "uc_match": "1f1e8-1f1e8",
      "uc_greedy": "1f1e8-1f1e8",
      "shortnames": [":cc:"],
      "category": "flags"
    },
    ":flag_cd:": {
      "uc_base": "1f1e8-1f1e9",
      "uc_output": "1f1e8-1f1e9",
      "uc_match": "1f1e8-1f1e9",
      "uc_greedy": "1f1e8-1f1e9",
      "shortnames": [":congo:"],
      "category": "flags"
    },
    ":flag_cf:": {
      "uc_base": "1f1e8-1f1eb",
      "uc_output": "1f1e8-1f1eb",
      "uc_match": "1f1e8-1f1eb",
      "uc_greedy": "1f1e8-1f1eb",
      "shortnames": [":cf:"],
      "category": "flags"
    },
    ":flag_cg:": {
      "uc_base": "1f1e8-1f1ec",
      "uc_output": "1f1e8-1f1ec",
      "uc_match": "1f1e8-1f1ec",
      "uc_greedy": "1f1e8-1f1ec",
      "shortnames": [":cg:"],
      "category": "flags"
    },
    ":flag_ch:": {
      "uc_base": "1f1e8-1f1ed",
      "uc_output": "1f1e8-1f1ed",
      "uc_match": "1f1e8-1f1ed",
      "uc_greedy": "1f1e8-1f1ed",
      "shortnames": [":ch:"],
      "category": "flags"
    },
    ":flag_ci:": {
      "uc_base": "1f1e8-1f1ee",
      "uc_output": "1f1e8-1f1ee",
      "uc_match": "1f1e8-1f1ee",
      "uc_greedy": "1f1e8-1f1ee",
      "shortnames": [":ci:"],
      "category": "flags"
    },
    ":flag_ck:": {
      "uc_base": "1f1e8-1f1f0",
      "uc_output": "1f1e8-1f1f0",
      "uc_match": "1f1e8-1f1f0",
      "uc_greedy": "1f1e8-1f1f0",
      "shortnames": [":ck:"],
      "category": "flags"
    },
    ":flag_cl:": {
      "uc_base": "1f1e8-1f1f1",
      "uc_output": "1f1e8-1f1f1",
      "uc_match": "1f1e8-1f1f1",
      "uc_greedy": "1f1e8-1f1f1",
      "shortnames": [":chile:"],
      "category": "flags"
    },
    ":flag_cm:": {
      "uc_base": "1f1e8-1f1f2",
      "uc_output": "1f1e8-1f1f2",
      "uc_match": "1f1e8-1f1f2",
      "uc_greedy": "1f1e8-1f1f2",
      "shortnames": [":cm:"],
      "category": "flags"
    },
    ":flag_cn:": {
      "uc_base": "1f1e8-1f1f3",
      "uc_output": "1f1e8-1f1f3",
      "uc_match": "1f1e8-1f1f3",
      "uc_greedy": "1f1e8-1f1f3",
      "shortnames": [":cn:"],
      "category": "flags"
    },
    ":flag_co:": {
      "uc_base": "1f1e8-1f1f4",
      "uc_output": "1f1e8-1f1f4",
      "uc_match": "1f1e8-1f1f4",
      "uc_greedy": "1f1e8-1f1f4",
      "shortnames": [":co:"],
      "category": "flags"
    },
    ":flag_cp:": {
      "uc_base": "1f1e8-1f1f5",
      "uc_output": "1f1e8-1f1f5",
      "uc_match": "1f1e8-1f1f5",
      "uc_greedy": "1f1e8-1f1f5",
      "shortnames": [":cp:"],
      "category": "flags"
    },
    ":flag_cr:": {
      "uc_base": "1f1e8-1f1f7",
      "uc_output": "1f1e8-1f1f7",
      "uc_match": "1f1e8-1f1f7",
      "uc_greedy": "1f1e8-1f1f7",
      "shortnames": [":cr:"],
      "category": "flags"
    },
    ":flag_cu:": {
      "uc_base": "1f1e8-1f1fa",
      "uc_output": "1f1e8-1f1fa",
      "uc_match": "1f1e8-1f1fa",
      "uc_greedy": "1f1e8-1f1fa",
      "shortnames": [":cu:"],
      "category": "flags"
    },
    ":flag_cv:": {
      "uc_base": "1f1e8-1f1fb",
      "uc_output": "1f1e8-1f1fb",
      "uc_match": "1f1e8-1f1fb",
      "uc_greedy": "1f1e8-1f1fb",
      "shortnames": [":cv:"],
      "category": "flags"
    },
    ":flag_cw:": {
      "uc_base": "1f1e8-1f1fc",
      "uc_output": "1f1e8-1f1fc",
      "uc_match": "1f1e8-1f1fc",
      "uc_greedy": "1f1e8-1f1fc",
      "shortnames": [":cw:"],
      "category": "flags"
    },
    ":flag_cx:": {
      "uc_base": "1f1e8-1f1fd",
      "uc_output": "1f1e8-1f1fd",
      "uc_match": "1f1e8-1f1fd",
      "uc_greedy": "1f1e8-1f1fd",
      "shortnames": [":cx:"],
      "category": "flags"
    },
    ":flag_cy:": {
      "uc_base": "1f1e8-1f1fe",
      "uc_output": "1f1e8-1f1fe",
      "uc_match": "1f1e8-1f1fe",
      "uc_greedy": "1f1e8-1f1fe",
      "shortnames": [":cy:"],
      "category": "flags"
    },
    ":flag_cz:": {
      "uc_base": "1f1e8-1f1ff",
      "uc_output": "1f1e8-1f1ff",
      "uc_match": "1f1e8-1f1ff",
      "uc_greedy": "1f1e8-1f1ff",
      "shortnames": [":cz:"],
      "category": "flags"
    },
    ":flag_de:": {
      "uc_base": "1f1e9-1f1ea",
      "uc_output": "1f1e9-1f1ea",
      "uc_match": "1f1e9-1f1ea",
      "uc_greedy": "1f1e9-1f1ea",
      "shortnames": [":de:"],
      "category": "flags"
    },
    ":flag_dg:": {
      "uc_base": "1f1e9-1f1ec",
      "uc_output": "1f1e9-1f1ec",
      "uc_match": "1f1e9-1f1ec",
      "uc_greedy": "1f1e9-1f1ec",
      "shortnames": [":dg:"],
      "category": "flags"
    },
    ":flag_dj:": {
      "uc_base": "1f1e9-1f1ef",
      "uc_output": "1f1e9-1f1ef",
      "uc_match": "1f1e9-1f1ef",
      "uc_greedy": "1f1e9-1f1ef",
      "shortnames": [":dj:"],
      "category": "flags"
    },
    ":flag_dk:": {
      "uc_base": "1f1e9-1f1f0",
      "uc_output": "1f1e9-1f1f0",
      "uc_match": "1f1e9-1f1f0",
      "uc_greedy": "1f1e9-1f1f0",
      "shortnames": [":dk:"],
      "category": "flags"
    },
    ":flag_dm:": {
      "uc_base": "1f1e9-1f1f2",
      "uc_output": "1f1e9-1f1f2",
      "uc_match": "1f1e9-1f1f2",
      "uc_greedy": "1f1e9-1f1f2",
      "shortnames": [":dm:"],
      "category": "flags"
    },
    ":flag_do:": {
      "uc_base": "1f1e9-1f1f4",
      "uc_output": "1f1e9-1f1f4",
      "uc_match": "1f1e9-1f1f4",
      "uc_greedy": "1f1e9-1f1f4",
      "shortnames": [":do:"],
      "category": "flags"
    },
    ":flag_dz:": {
      "uc_base": "1f1e9-1f1ff",
      "uc_output": "1f1e9-1f1ff",
      "uc_match": "1f1e9-1f1ff",
      "uc_greedy": "1f1e9-1f1ff",
      "shortnames": [":dz:"],
      "category": "flags"
    },
    ":flag_ea:": {
      "uc_base": "1f1ea-1f1e6",
      "uc_output": "1f1ea-1f1e6",
      "uc_match": "1f1ea-1f1e6",
      "uc_greedy": "1f1ea-1f1e6",
      "shortnames": [":ea:"],
      "category": "flags"
    },
    ":flag_ec:": {
      "uc_base": "1f1ea-1f1e8",
      "uc_output": "1f1ea-1f1e8",
      "uc_match": "1f1ea-1f1e8",
      "uc_greedy": "1f1ea-1f1e8",
      "shortnames": [":ec:"],
      "category": "flags"
    },
    ":flag_ee:": {
      "uc_base": "1f1ea-1f1ea",
      "uc_output": "1f1ea-1f1ea",
      "uc_match": "1f1ea-1f1ea",
      "uc_greedy": "1f1ea-1f1ea",
      "shortnames": [":ee:"],
      "category": "flags"
    },
    ":flag_eg:": {
      "uc_base": "1f1ea-1f1ec",
      "uc_output": "1f1ea-1f1ec",
      "uc_match": "1f1ea-1f1ec",
      "uc_greedy": "1f1ea-1f1ec",
      "shortnames": [":eg:"],
      "category": "flags"
    },
    ":flag_eh:": {
      "uc_base": "1f1ea-1f1ed",
      "uc_output": "1f1ea-1f1ed",
      "uc_match": "1f1ea-1f1ed",
      "uc_greedy": "1f1ea-1f1ed",
      "shortnames": [":eh:"],
      "category": "flags"
    },
    ":flag_er:": {
      "uc_base": "1f1ea-1f1f7",
      "uc_output": "1f1ea-1f1f7",
      "uc_match": "1f1ea-1f1f7",
      "uc_greedy": "1f1ea-1f1f7",
      "shortnames": [":er:"],
      "category": "flags"
    },
    ":flag_es:": {
      "uc_base": "1f1ea-1f1f8",
      "uc_output": "1f1ea-1f1f8",
      "uc_match": "1f1ea-1f1f8",
      "uc_greedy": "1f1ea-1f1f8",
      "shortnames": [":es:"],
      "category": "flags"
    },
    ":flag_et:": {
      "uc_base": "1f1ea-1f1f9",
      "uc_output": "1f1ea-1f1f9",
      "uc_match": "1f1ea-1f1f9",
      "uc_greedy": "1f1ea-1f1f9",
      "shortnames": [":et:"],
      "category": "flags"
    },
    ":flag_eu:": {
      "uc_base": "1f1ea-1f1fa",
      "uc_output": "1f1ea-1f1fa",
      "uc_match": "1f1ea-1f1fa",
      "uc_greedy": "1f1ea-1f1fa",
      "shortnames": [":eu:"],
      "category": "flags"
    },
    ":flag_fi:": {
      "uc_base": "1f1eb-1f1ee",
      "uc_output": "1f1eb-1f1ee",
      "uc_match": "1f1eb-1f1ee",
      "uc_greedy": "1f1eb-1f1ee",
      "shortnames": [":fi:"],
      "category": "flags"
    },
    ":flag_fj:": {
      "uc_base": "1f1eb-1f1ef",
      "uc_output": "1f1eb-1f1ef",
      "uc_match": "1f1eb-1f1ef",
      "uc_greedy": "1f1eb-1f1ef",
      "shortnames": [":fj:"],
      "category": "flags"
    },
    ":flag_fk:": {
      "uc_base": "1f1eb-1f1f0",
      "uc_output": "1f1eb-1f1f0",
      "uc_match": "1f1eb-1f1f0",
      "uc_greedy": "1f1eb-1f1f0",
      "shortnames": [":fk:"],
      "category": "flags"
    },
    ":flag_fm:": {
      "uc_base": "1f1eb-1f1f2",
      "uc_output": "1f1eb-1f1f2",
      "uc_match": "1f1eb-1f1f2",
      "uc_greedy": "1f1eb-1f1f2",
      "shortnames": [":fm:"],
      "category": "flags"
    },
    ":flag_fo:": {
      "uc_base": "1f1eb-1f1f4",
      "uc_output": "1f1eb-1f1f4",
      "uc_match": "1f1eb-1f1f4",
      "uc_greedy": "1f1eb-1f1f4",
      "shortnames": [":fo:"],
      "category": "flags"
    },
    ":flag_fr:": {
      "uc_base": "1f1eb-1f1f7",
      "uc_output": "1f1eb-1f1f7",
      "uc_match": "1f1eb-1f1f7",
      "uc_greedy": "1f1eb-1f1f7",
      "shortnames": [":fr:"],
      "category": "flags"
    },
    ":flag_ga:": {
      "uc_base": "1f1ec-1f1e6",
      "uc_output": "1f1ec-1f1e6",
      "uc_match": "1f1ec-1f1e6",
      "uc_greedy": "1f1ec-1f1e6",
      "shortnames": [":ga:"],
      "category": "flags"
    },
    ":flag_gb:": {
      "uc_base": "1f1ec-1f1e7",
      "uc_output": "1f1ec-1f1e7",
      "uc_match": "1f1ec-1f1e7",
      "uc_greedy": "1f1ec-1f1e7",
      "shortnames": [":gb:"],
      "category": "flags"
    },
    ":flag_gd:": {
      "uc_base": "1f1ec-1f1e9",
      "uc_output": "1f1ec-1f1e9",
      "uc_match": "1f1ec-1f1e9",
      "uc_greedy": "1f1ec-1f1e9",
      "shortnames": [":gd:"],
      "category": "flags"
    },
    ":flag_ge:": {
      "uc_base": "1f1ec-1f1ea",
      "uc_output": "1f1ec-1f1ea",
      "uc_match": "1f1ec-1f1ea",
      "uc_greedy": "1f1ec-1f1ea",
      "shortnames": [":ge:"],
      "category": "flags"
    },
    ":flag_gf:": {
      "uc_base": "1f1ec-1f1eb",
      "uc_output": "1f1ec-1f1eb",
      "uc_match": "1f1ec-1f1eb",
      "uc_greedy": "1f1ec-1f1eb",
      "shortnames": [":gf:"],
      "category": "flags"
    },
    ":flag_gg:": {
      "uc_base": "1f1ec-1f1ec",
      "uc_output": "1f1ec-1f1ec",
      "uc_match": "1f1ec-1f1ec",
      "uc_greedy": "1f1ec-1f1ec",
      "shortnames": [":gg:"],
      "category": "flags"
    },
    ":flag_gh:": {
      "uc_base": "1f1ec-1f1ed",
      "uc_output": "1f1ec-1f1ed",
      "uc_match": "1f1ec-1f1ed",
      "uc_greedy": "1f1ec-1f1ed",
      "shortnames": [":gh:"],
      "category": "flags"
    },
    ":flag_gi:": {
      "uc_base": "1f1ec-1f1ee",
      "uc_output": "1f1ec-1f1ee",
      "uc_match": "1f1ec-1f1ee",
      "uc_greedy": "1f1ec-1f1ee",
      "shortnames": [":gi:"],
      "category": "flags"
    },
    ":flag_gl:": {
      "uc_base": "1f1ec-1f1f1",
      "uc_output": "1f1ec-1f1f1",
      "uc_match": "1f1ec-1f1f1",
      "uc_greedy": "1f1ec-1f1f1",
      "shortnames": [":gl:"],
      "category": "flags"
    },
    ":flag_gm:": {
      "uc_base": "1f1ec-1f1f2",
      "uc_output": "1f1ec-1f1f2",
      "uc_match": "1f1ec-1f1f2",
      "uc_greedy": "1f1ec-1f1f2",
      "shortnames": [":gm:"],
      "category": "flags"
    },
    ":flag_gn:": {
      "uc_base": "1f1ec-1f1f3",
      "uc_output": "1f1ec-1f1f3",
      "uc_match": "1f1ec-1f1f3",
      "uc_greedy": "1f1ec-1f1f3",
      "shortnames": [":gn:"],
      "category": "flags"
    },
    ":flag_gp:": {
      "uc_base": "1f1ec-1f1f5",
      "uc_output": "1f1ec-1f1f5",
      "uc_match": "1f1ec-1f1f5",
      "uc_greedy": "1f1ec-1f1f5",
      "shortnames": [":gp:"],
      "category": "flags"
    },
    ":flag_gq:": {
      "uc_base": "1f1ec-1f1f6",
      "uc_output": "1f1ec-1f1f6",
      "uc_match": "1f1ec-1f1f6",
      "uc_greedy": "1f1ec-1f1f6",
      "shortnames": [":gq:"],
      "category": "flags"
    },
    ":flag_gr:": {
      "uc_base": "1f1ec-1f1f7",
      "uc_output": "1f1ec-1f1f7",
      "uc_match": "1f1ec-1f1f7",
      "uc_greedy": "1f1ec-1f1f7",
      "shortnames": [":gr:"],
      "category": "flags"
    },
    ":flag_gs:": {
      "uc_base": "1f1ec-1f1f8",
      "uc_output": "1f1ec-1f1f8",
      "uc_match": "1f1ec-1f1f8",
      "uc_greedy": "1f1ec-1f1f8",
      "shortnames": [":gs:"],
      "category": "flags"
    },
    ":flag_gt:": {
      "uc_base": "1f1ec-1f1f9",
      "uc_output": "1f1ec-1f1f9",
      "uc_match": "1f1ec-1f1f9",
      "uc_greedy": "1f1ec-1f1f9",
      "shortnames": [":gt:"],
      "category": "flags"
    },
    ":flag_gu:": {
      "uc_base": "1f1ec-1f1fa",
      "uc_output": "1f1ec-1f1fa",
      "uc_match": "1f1ec-1f1fa",
      "uc_greedy": "1f1ec-1f1fa",
      "shortnames": [":gu:"],
      "category": "flags"
    },
    ":flag_gw:": {
      "uc_base": "1f1ec-1f1fc",
      "uc_output": "1f1ec-1f1fc",
      "uc_match": "1f1ec-1f1fc",
      "uc_greedy": "1f1ec-1f1fc",
      "shortnames": [":gw:"],
      "category": "flags"
    },
    ":flag_gy:": {
      "uc_base": "1f1ec-1f1fe",
      "uc_output": "1f1ec-1f1fe",
      "uc_match": "1f1ec-1f1fe",
      "uc_greedy": "1f1ec-1f1fe",
      "shortnames": [":gy:"],
      "category": "flags"
    },
    ":flag_hk:": {
      "uc_base": "1f1ed-1f1f0",
      "uc_output": "1f1ed-1f1f0",
      "uc_match": "1f1ed-1f1f0",
      "uc_greedy": "1f1ed-1f1f0",
      "shortnames": [":hk:"],
      "category": "flags"
    },
    ":flag_hm:": {
      "uc_base": "1f1ed-1f1f2",
      "uc_output": "1f1ed-1f1f2",
      "uc_match": "1f1ed-1f1f2",
      "uc_greedy": "1f1ed-1f1f2",
      "shortnames": [":hm:"],
      "category": "flags"
    },
    ":flag_hn:": {
      "uc_base": "1f1ed-1f1f3",
      "uc_output": "1f1ed-1f1f3",
      "uc_match": "1f1ed-1f1f3",
      "uc_greedy": "1f1ed-1f1f3",
      "shortnames": [":hn:"],
      "category": "flags"
    },
    ":flag_hr:": {
      "uc_base": "1f1ed-1f1f7",
      "uc_output": "1f1ed-1f1f7",
      "uc_match": "1f1ed-1f1f7",
      "uc_greedy": "1f1ed-1f1f7",
      "shortnames": [":hr:"],
      "category": "flags"
    },
    ":flag_ht:": {
      "uc_base": "1f1ed-1f1f9",
      "uc_output": "1f1ed-1f1f9",
      "uc_match": "1f1ed-1f1f9",
      "uc_greedy": "1f1ed-1f1f9",
      "shortnames": [":ht:"],
      "category": "flags"
    },
    ":flag_hu:": {
      "uc_base": "1f1ed-1f1fa",
      "uc_output": "1f1ed-1f1fa",
      "uc_match": "1f1ed-1f1fa",
      "uc_greedy": "1f1ed-1f1fa",
      "shortnames": [":hu:"],
      "category": "flags"
    },
    ":flag_ic:": {
      "uc_base": "1f1ee-1f1e8",
      "uc_output": "1f1ee-1f1e8",
      "uc_match": "1f1ee-1f1e8",
      "uc_greedy": "1f1ee-1f1e8",
      "shortnames": [":ic:"],
      "category": "flags"
    },
    ":flag_id:": {
      "uc_base": "1f1ee-1f1e9",
      "uc_output": "1f1ee-1f1e9",
      "uc_match": "1f1ee-1f1e9",
      "uc_greedy": "1f1ee-1f1e9",
      "shortnames": [":indonesia:"],
      "category": "flags"
    },
    ":flag_ie:": {
      "uc_base": "1f1ee-1f1ea",
      "uc_output": "1f1ee-1f1ea",
      "uc_match": "1f1ee-1f1ea",
      "uc_greedy": "1f1ee-1f1ea",
      "shortnames": [":ie:"],
      "category": "flags"
    },
    ":flag_il:": {
      "uc_base": "1f1ee-1f1f1",
      "uc_output": "1f1ee-1f1f1",
      "uc_match": "1f1ee-1f1f1",
      "uc_greedy": "1f1ee-1f1f1",
      "shortnames": [":il:"],
      "category": "flags"
    },
    ":flag_im:": {
      "uc_base": "1f1ee-1f1f2",
      "uc_output": "1f1ee-1f1f2",
      "uc_match": "1f1ee-1f1f2",
      "uc_greedy": "1f1ee-1f1f2",
      "shortnames": [":im:"],
      "category": "flags"
    },
    ":flag_in:": {
      "uc_base": "1f1ee-1f1f3",
      "uc_output": "1f1ee-1f1f3",
      "uc_match": "1f1ee-1f1f3",
      "uc_greedy": "1f1ee-1f1f3",
      "shortnames": [":in:"],
      "category": "flags"
    },
    ":flag_io:": {
      "uc_base": "1f1ee-1f1f4",
      "uc_output": "1f1ee-1f1f4",
      "uc_match": "1f1ee-1f1f4",
      "uc_greedy": "1f1ee-1f1f4",
      "shortnames": [":io:"],
      "category": "flags"
    },
    ":flag_iq:": {
      "uc_base": "1f1ee-1f1f6",
      "uc_output": "1f1ee-1f1f6",
      "uc_match": "1f1ee-1f1f6",
      "uc_greedy": "1f1ee-1f1f6",
      "shortnames": [":iq:"],
      "category": "flags"
    },
    ":flag_ir:": {
      "uc_base": "1f1ee-1f1f7",
      "uc_output": "1f1ee-1f1f7",
      "uc_match": "1f1ee-1f1f7",
      "uc_greedy": "1f1ee-1f1f7",
      "shortnames": [":ir:"],
      "category": "flags"
    },
    ":flag_is:": {
      "uc_base": "1f1ee-1f1f8",
      "uc_output": "1f1ee-1f1f8",
      "uc_match": "1f1ee-1f1f8",
      "uc_greedy": "1f1ee-1f1f8",
      "shortnames": [":is:"],
      "category": "flags"
    },
    ":flag_it:": {
      "uc_base": "1f1ee-1f1f9",
      "uc_output": "1f1ee-1f1f9",
      "uc_match": "1f1ee-1f1f9",
      "uc_greedy": "1f1ee-1f1f9",
      "shortnames": [":it:"],
      "category": "flags"
    },
    ":flag_je:": {
      "uc_base": "1f1ef-1f1ea",
      "uc_output": "1f1ef-1f1ea",
      "uc_match": "1f1ef-1f1ea",
      "uc_greedy": "1f1ef-1f1ea",
      "shortnames": [":je:"],
      "category": "flags"
    },
    ":flag_jm:": {
      "uc_base": "1f1ef-1f1f2",
      "uc_output": "1f1ef-1f1f2",
      "uc_match": "1f1ef-1f1f2",
      "uc_greedy": "1f1ef-1f1f2",
      "shortnames": [":jm:"],
      "category": "flags"
    },
    ":flag_jo:": {
      "uc_base": "1f1ef-1f1f4",
      "uc_output": "1f1ef-1f1f4",
      "uc_match": "1f1ef-1f1f4",
      "uc_greedy": "1f1ef-1f1f4",
      "shortnames": [":jo:"],
      "category": "flags"
    },
    ":flag_jp:": {
      "uc_base": "1f1ef-1f1f5",
      "uc_output": "1f1ef-1f1f5",
      "uc_match": "1f1ef-1f1f5",
      "uc_greedy": "1f1ef-1f1f5",
      "shortnames": [":jp:"],
      "category": "flags"
    },
    ":flag_ke:": {
      "uc_base": "1f1f0-1f1ea",
      "uc_output": "1f1f0-1f1ea",
      "uc_match": "1f1f0-1f1ea",
      "uc_greedy": "1f1f0-1f1ea",
      "shortnames": [":ke:"],
      "category": "flags"
    },
    ":flag_kg:": {
      "uc_base": "1f1f0-1f1ec",
      "uc_output": "1f1f0-1f1ec",
      "uc_match": "1f1f0-1f1ec",
      "uc_greedy": "1f1f0-1f1ec",
      "shortnames": [":kg:"],
      "category": "flags"
    },
    ":flag_kh:": {
      "uc_base": "1f1f0-1f1ed",
      "uc_output": "1f1f0-1f1ed",
      "uc_match": "1f1f0-1f1ed",
      "uc_greedy": "1f1f0-1f1ed",
      "shortnames": [":kh:"],
      "category": "flags"
    },
    ":flag_ki:": {
      "uc_base": "1f1f0-1f1ee",
      "uc_output": "1f1f0-1f1ee",
      "uc_match": "1f1f0-1f1ee",
      "uc_greedy": "1f1f0-1f1ee",
      "shortnames": [":ki:"],
      "category": "flags"
    },
    ":flag_km:": {
      "uc_base": "1f1f0-1f1f2",
      "uc_output": "1f1f0-1f1f2",
      "uc_match": "1f1f0-1f1f2",
      "uc_greedy": "1f1f0-1f1f2",
      "shortnames": [":km:"],
      "category": "flags"
    },
    ":flag_kn:": {
      "uc_base": "1f1f0-1f1f3",
      "uc_output": "1f1f0-1f1f3",
      "uc_match": "1f1f0-1f1f3",
      "uc_greedy": "1f1f0-1f1f3",
      "shortnames": [":kn:"],
      "category": "flags"
    },
    ":flag_kp:": {
      "uc_base": "1f1f0-1f1f5",
      "uc_output": "1f1f0-1f1f5",
      "uc_match": "1f1f0-1f1f5",
      "uc_greedy": "1f1f0-1f1f5",
      "shortnames": [":kp:"],
      "category": "flags"
    },
    ":flag_kr:": {
      "uc_base": "1f1f0-1f1f7",
      "uc_output": "1f1f0-1f1f7",
      "uc_match": "1f1f0-1f1f7",
      "uc_greedy": "1f1f0-1f1f7",
      "shortnames": [":kr:"],
      "category": "flags"
    },
    ":flag_kw:": {
      "uc_base": "1f1f0-1f1fc",
      "uc_output": "1f1f0-1f1fc",
      "uc_match": "1f1f0-1f1fc",
      "uc_greedy": "1f1f0-1f1fc",
      "shortnames": [":kw:"],
      "category": "flags"
    },
    ":flag_ky:": {
      "uc_base": "1f1f0-1f1fe",
      "uc_output": "1f1f0-1f1fe",
      "uc_match": "1f1f0-1f1fe",
      "uc_greedy": "1f1f0-1f1fe",
      "shortnames": [":ky:"],
      "category": "flags"
    },
    ":flag_kz:": {
      "uc_base": "1f1f0-1f1ff",
      "uc_output": "1f1f0-1f1ff",
      "uc_match": "1f1f0-1f1ff",
      "uc_greedy": "1f1f0-1f1ff",
      "shortnames": [":kz:"],
      "category": "flags"
    },
    ":flag_la:": {
      "uc_base": "1f1f1-1f1e6",
      "uc_output": "1f1f1-1f1e6",
      "uc_match": "1f1f1-1f1e6",
      "uc_greedy": "1f1f1-1f1e6",
      "shortnames": [":la:"],
      "category": "flags"
    },
    ":flag_lb:": {
      "uc_base": "1f1f1-1f1e7",
      "uc_output": "1f1f1-1f1e7",
      "uc_match": "1f1f1-1f1e7",
      "uc_greedy": "1f1f1-1f1e7",
      "shortnames": [":lb:"],
      "category": "flags"
    },
    ":flag_lc:": {
      "uc_base": "1f1f1-1f1e8",
      "uc_output": "1f1f1-1f1e8",
      "uc_match": "1f1f1-1f1e8",
      "uc_greedy": "1f1f1-1f1e8",
      "shortnames": [":lc:"],
      "category": "flags"
    },
    ":flag_li:": {
      "uc_base": "1f1f1-1f1ee",
      "uc_output": "1f1f1-1f1ee",
      "uc_match": "1f1f1-1f1ee",
      "uc_greedy": "1f1f1-1f1ee",
      "shortnames": [":li:"],
      "category": "flags"
    },
    ":flag_lk:": {
      "uc_base": "1f1f1-1f1f0",
      "uc_output": "1f1f1-1f1f0",
      "uc_match": "1f1f1-1f1f0",
      "uc_greedy": "1f1f1-1f1f0",
      "shortnames": [":lk:"],
      "category": "flags"
    },
    ":flag_lr:": {
      "uc_base": "1f1f1-1f1f7",
      "uc_output": "1f1f1-1f1f7",
      "uc_match": "1f1f1-1f1f7",
      "uc_greedy": "1f1f1-1f1f7",
      "shortnames": [":lr:"],
      "category": "flags"
    },
    ":flag_ls:": {
      "uc_base": "1f1f1-1f1f8",
      "uc_output": "1f1f1-1f1f8",
      "uc_match": "1f1f1-1f1f8",
      "uc_greedy": "1f1f1-1f1f8",
      "shortnames": [":ls:"],
      "category": "flags"
    },
    ":flag_lt:": {
      "uc_base": "1f1f1-1f1f9",
      "uc_output": "1f1f1-1f1f9",
      "uc_match": "1f1f1-1f1f9",
      "uc_greedy": "1f1f1-1f1f9",
      "shortnames": [":lt:"],
      "category": "flags"
    },
    ":flag_lu:": {
      "uc_base": "1f1f1-1f1fa",
      "uc_output": "1f1f1-1f1fa",
      "uc_match": "1f1f1-1f1fa",
      "uc_greedy": "1f1f1-1f1fa",
      "shortnames": [":lu:"],
      "category": "flags"
    },
    ":flag_lv:": {
      "uc_base": "1f1f1-1f1fb",
      "uc_output": "1f1f1-1f1fb",
      "uc_match": "1f1f1-1f1fb",
      "uc_greedy": "1f1f1-1f1fb",
      "shortnames": [":lv:"],
      "category": "flags"
    },
    ":flag_ly:": {
      "uc_base": "1f1f1-1f1fe",
      "uc_output": "1f1f1-1f1fe",
      "uc_match": "1f1f1-1f1fe",
      "uc_greedy": "1f1f1-1f1fe",
      "shortnames": [":ly:"],
      "category": "flags"
    },
    ":flag_ma:": {
      "uc_base": "1f1f2-1f1e6",
      "uc_output": "1f1f2-1f1e6",
      "uc_match": "1f1f2-1f1e6",
      "uc_greedy": "1f1f2-1f1e6",
      "shortnames": [":ma:"],
      "category": "flags"
    },
    ":flag_mc:": {
      "uc_base": "1f1f2-1f1e8",
      "uc_output": "1f1f2-1f1e8",
      "uc_match": "1f1f2-1f1e8",
      "uc_greedy": "1f1f2-1f1e8",
      "shortnames": [":mc:"],
      "category": "flags"
    },
    ":flag_md:": {
      "uc_base": "1f1f2-1f1e9",
      "uc_output": "1f1f2-1f1e9",
      "uc_match": "1f1f2-1f1e9",
      "uc_greedy": "1f1f2-1f1e9",
      "shortnames": [":md:"],
      "category": "flags"
    },
    ":flag_me:": {
      "uc_base": "1f1f2-1f1ea",
      "uc_output": "1f1f2-1f1ea",
      "uc_match": "1f1f2-1f1ea",
      "uc_greedy": "1f1f2-1f1ea",
      "shortnames": [":me:"],
      "category": "flags"
    },
    ":flag_mf:": {
      "uc_base": "1f1f2-1f1eb",
      "uc_output": "1f1f2-1f1eb",
      "uc_match": "1f1f2-1f1eb",
      "uc_greedy": "1f1f2-1f1eb",
      "shortnames": [":mf:"],
      "category": "flags"
    },
    ":flag_mg:": {
      "uc_base": "1f1f2-1f1ec",
      "uc_output": "1f1f2-1f1ec",
      "uc_match": "1f1f2-1f1ec",
      "uc_greedy": "1f1f2-1f1ec",
      "shortnames": [":mg:"],
      "category": "flags"
    },
    ":flag_mh:": {
      "uc_base": "1f1f2-1f1ed",
      "uc_output": "1f1f2-1f1ed",
      "uc_match": "1f1f2-1f1ed",
      "uc_greedy": "1f1f2-1f1ed",
      "shortnames": [":mh:"],
      "category": "flags"
    },
    ":flag_mk:": {
      "uc_base": "1f1f2-1f1f0",
      "uc_output": "1f1f2-1f1f0",
      "uc_match": "1f1f2-1f1f0",
      "uc_greedy": "1f1f2-1f1f0",
      "shortnames": [":mk:"],
      "category": "flags"
    },
    ":flag_ml:": {
      "uc_base": "1f1f2-1f1f1",
      "uc_output": "1f1f2-1f1f1",
      "uc_match": "1f1f2-1f1f1",
      "uc_greedy": "1f1f2-1f1f1",
      "shortnames": [":ml:"],
      "category": "flags"
    },
    ":flag_mm:": {
      "uc_base": "1f1f2-1f1f2",
      "uc_output": "1f1f2-1f1f2",
      "uc_match": "1f1f2-1f1f2",
      "uc_greedy": "1f1f2-1f1f2",
      "shortnames": [":mm:"],
      "category": "flags"
    },
    ":flag_mn:": {
      "uc_base": "1f1f2-1f1f3",
      "uc_output": "1f1f2-1f1f3",
      "uc_match": "1f1f2-1f1f3",
      "uc_greedy": "1f1f2-1f1f3",
      "shortnames": [":mn:"],
      "category": "flags"
    },
    ":flag_mo:": {
      "uc_base": "1f1f2-1f1f4",
      "uc_output": "1f1f2-1f1f4",
      "uc_match": "1f1f2-1f1f4",
      "uc_greedy": "1f1f2-1f1f4",
      "shortnames": [":mo:"],
      "category": "flags"
    },
    ":flag_mp:": {
      "uc_base": "1f1f2-1f1f5",
      "uc_output": "1f1f2-1f1f5",
      "uc_match": "1f1f2-1f1f5",
      "uc_greedy": "1f1f2-1f1f5",
      "shortnames": [":mp:"],
      "category": "flags"
    },
    ":flag_mq:": {
      "uc_base": "1f1f2-1f1f6",
      "uc_output": "1f1f2-1f1f6",
      "uc_match": "1f1f2-1f1f6",
      "uc_greedy": "1f1f2-1f1f6",
      "shortnames": [":mq:"],
      "category": "flags"
    },
    ":flag_mr:": {
      "uc_base": "1f1f2-1f1f7",
      "uc_output": "1f1f2-1f1f7",
      "uc_match": "1f1f2-1f1f7",
      "uc_greedy": "1f1f2-1f1f7",
      "shortnames": [":mr:"],
      "category": "flags"
    },
    ":flag_ms:": {
      "uc_base": "1f1f2-1f1f8",
      "uc_output": "1f1f2-1f1f8",
      "uc_match": "1f1f2-1f1f8",
      "uc_greedy": "1f1f2-1f1f8",
      "shortnames": [":ms:"],
      "category": "flags"
    },
    ":flag_mt:": {
      "uc_base": "1f1f2-1f1f9",
      "uc_output": "1f1f2-1f1f9",
      "uc_match": "1f1f2-1f1f9",
      "uc_greedy": "1f1f2-1f1f9",
      "shortnames": [":mt:"],
      "category": "flags"
    },
    ":flag_mu:": {
      "uc_base": "1f1f2-1f1fa",
      "uc_output": "1f1f2-1f1fa",
      "uc_match": "1f1f2-1f1fa",
      "uc_greedy": "1f1f2-1f1fa",
      "shortnames": [":mu:"],
      "category": "flags"
    },
    ":flag_mv:": {
      "uc_base": "1f1f2-1f1fb",
      "uc_output": "1f1f2-1f1fb",
      "uc_match": "1f1f2-1f1fb",
      "uc_greedy": "1f1f2-1f1fb",
      "shortnames": [":mv:"],
      "category": "flags"
    },
    ":flag_mw:": {
      "uc_base": "1f1f2-1f1fc",
      "uc_output": "1f1f2-1f1fc",
      "uc_match": "1f1f2-1f1fc",
      "uc_greedy": "1f1f2-1f1fc",
      "shortnames": [":mw:"],
      "category": "flags"
    },
    ":flag_mx:": {
      "uc_base": "1f1f2-1f1fd",
      "uc_output": "1f1f2-1f1fd",
      "uc_match": "1f1f2-1f1fd",
      "uc_greedy": "1f1f2-1f1fd",
      "shortnames": [":mx:"],
      "category": "flags"
    },
    ":flag_my:": {
      "uc_base": "1f1f2-1f1fe",
      "uc_output": "1f1f2-1f1fe",
      "uc_match": "1f1f2-1f1fe",
      "uc_greedy": "1f1f2-1f1fe",
      "shortnames": [":my:"],
      "category": "flags"
    },
    ":flag_mz:": {
      "uc_base": "1f1f2-1f1ff",
      "uc_output": "1f1f2-1f1ff",
      "uc_match": "1f1f2-1f1ff",
      "uc_greedy": "1f1f2-1f1ff",
      "shortnames": [":mz:"],
      "category": "flags"
    },
    ":flag_na:": {
      "uc_base": "1f1f3-1f1e6",
      "uc_output": "1f1f3-1f1e6",
      "uc_match": "1f1f3-1f1e6",
      "uc_greedy": "1f1f3-1f1e6",
      "shortnames": [":na:"],
      "category": "flags"
    },
    ":flag_nc:": {
      "uc_base": "1f1f3-1f1e8",
      "uc_output": "1f1f3-1f1e8",
      "uc_match": "1f1f3-1f1e8",
      "uc_greedy": "1f1f3-1f1e8",
      "shortnames": [":nc:"],
      "category": "flags"
    },
    ":flag_ne:": {
      "uc_base": "1f1f3-1f1ea",
      "uc_output": "1f1f3-1f1ea",
      "uc_match": "1f1f3-1f1ea",
      "uc_greedy": "1f1f3-1f1ea",
      "shortnames": [":ne:"],
      "category": "flags"
    },
    ":flag_nf:": {
      "uc_base": "1f1f3-1f1eb",
      "uc_output": "1f1f3-1f1eb",
      "uc_match": "1f1f3-1f1eb",
      "uc_greedy": "1f1f3-1f1eb",
      "shortnames": [":nf:"],
      "category": "flags"
    },
    ":flag_ng:": {
      "uc_base": "1f1f3-1f1ec",
      "uc_output": "1f1f3-1f1ec",
      "uc_match": "1f1f3-1f1ec",
      "uc_greedy": "1f1f3-1f1ec",
      "shortnames": [":nigeria:"],
      "category": "flags"
    },
    ":flag_ni:": {
      "uc_base": "1f1f3-1f1ee",
      "uc_output": "1f1f3-1f1ee",
      "uc_match": "1f1f3-1f1ee",
      "uc_greedy": "1f1f3-1f1ee",
      "shortnames": [":ni:"],
      "category": "flags"
    },
    ":flag_nl:": {
      "uc_base": "1f1f3-1f1f1",
      "uc_output": "1f1f3-1f1f1",
      "uc_match": "1f1f3-1f1f1",
      "uc_greedy": "1f1f3-1f1f1",
      "shortnames": [":nl:"],
      "category": "flags"
    },
    ":flag_no:": {
      "uc_base": "1f1f3-1f1f4",
      "uc_output": "1f1f3-1f1f4",
      "uc_match": "1f1f3-1f1f4",
      "uc_greedy": "1f1f3-1f1f4",
      "shortnames": [":no:"],
      "category": "flags"
    },
    ":flag_np:": {
      "uc_base": "1f1f3-1f1f5",
      "uc_output": "1f1f3-1f1f5",
      "uc_match": "1f1f3-1f1f5",
      "uc_greedy": "1f1f3-1f1f5",
      "shortnames": [":np:"],
      "category": "flags"
    },
    ":flag_nr:": {
      "uc_base": "1f1f3-1f1f7",
      "uc_output": "1f1f3-1f1f7",
      "uc_match": "1f1f3-1f1f7",
      "uc_greedy": "1f1f3-1f1f7",
      "shortnames": [":nr:"],
      "category": "flags"
    },
    ":flag_nu:": {
      "uc_base": "1f1f3-1f1fa",
      "uc_output": "1f1f3-1f1fa",
      "uc_match": "1f1f3-1f1fa",
      "uc_greedy": "1f1f3-1f1fa",
      "shortnames": [":nu:"],
      "category": "flags"
    },
    ":flag_nz:": {
      "uc_base": "1f1f3-1f1ff",
      "uc_output": "1f1f3-1f1ff",
      "uc_match": "1f1f3-1f1ff",
      "uc_greedy": "1f1f3-1f1ff",
      "shortnames": [":nz:"],
      "category": "flags"
    },
    ":flag_om:": {
      "uc_base": "1f1f4-1f1f2",
      "uc_output": "1f1f4-1f1f2",
      "uc_match": "1f1f4-1f1f2",
      "uc_greedy": "1f1f4-1f1f2",
      "shortnames": [":om:"],
      "category": "flags"
    },
    ":flag_pa:": {
      "uc_base": "1f1f5-1f1e6",
      "uc_output": "1f1f5-1f1e6",
      "uc_match": "1f1f5-1f1e6",
      "uc_greedy": "1f1f5-1f1e6",
      "shortnames": [":pa:"],
      "category": "flags"
    },
    ":flag_pe:": {
      "uc_base": "1f1f5-1f1ea",
      "uc_output": "1f1f5-1f1ea",
      "uc_match": "1f1f5-1f1ea",
      "uc_greedy": "1f1f5-1f1ea",
      "shortnames": [":pe:"],
      "category": "flags"
    },
    ":flag_pf:": {
      "uc_base": "1f1f5-1f1eb",
      "uc_output": "1f1f5-1f1eb",
      "uc_match": "1f1f5-1f1eb",
      "uc_greedy": "1f1f5-1f1eb",
      "shortnames": [":pf:"],
      "category": "flags"
    },
    ":flag_pg:": {
      "uc_base": "1f1f5-1f1ec",
      "uc_output": "1f1f5-1f1ec",
      "uc_match": "1f1f5-1f1ec",
      "uc_greedy": "1f1f5-1f1ec",
      "shortnames": [":pg:"],
      "category": "flags"
    },
    ":flag_ph:": {
      "uc_base": "1f1f5-1f1ed",
      "uc_output": "1f1f5-1f1ed",
      "uc_match": "1f1f5-1f1ed",
      "uc_greedy": "1f1f5-1f1ed",
      "shortnames": [":ph:"],
      "category": "flags"
    },
    ":flag_pk:": {
      "uc_base": "1f1f5-1f1f0",
      "uc_output": "1f1f5-1f1f0",
      "uc_match": "1f1f5-1f1f0",
      "uc_greedy": "1f1f5-1f1f0",
      "shortnames": [":pk:"],
      "category": "flags"
    },
    ":flag_pl:": {
      "uc_base": "1f1f5-1f1f1",
      "uc_output": "1f1f5-1f1f1",
      "uc_match": "1f1f5-1f1f1",
      "uc_greedy": "1f1f5-1f1f1",
      "shortnames": [":pl:"],
      "category": "flags"
    },
    ":flag_pm:": {
      "uc_base": "1f1f5-1f1f2",
      "uc_output": "1f1f5-1f1f2",
      "uc_match": "1f1f5-1f1f2",
      "uc_greedy": "1f1f5-1f1f2",
      "shortnames": [":pm:"],
      "category": "flags"
    },
    ":flag_pn:": {
      "uc_base": "1f1f5-1f1f3",
      "uc_output": "1f1f5-1f1f3",
      "uc_match": "1f1f5-1f1f3",
      "uc_greedy": "1f1f5-1f1f3",
      "shortnames": [":pn:"],
      "category": "flags"
    },
    ":flag_pr:": {
      "uc_base": "1f1f5-1f1f7",
      "uc_output": "1f1f5-1f1f7",
      "uc_match": "1f1f5-1f1f7",
      "uc_greedy": "1f1f5-1f1f7",
      "shortnames": [":pr:"],
      "category": "flags"
    },
    ":flag_ps:": {
      "uc_base": "1f1f5-1f1f8",
      "uc_output": "1f1f5-1f1f8",
      "uc_match": "1f1f5-1f1f8",
      "uc_greedy": "1f1f5-1f1f8",
      "shortnames": [":ps:"],
      "category": "flags"
    },
    ":flag_pt:": {
      "uc_base": "1f1f5-1f1f9",
      "uc_output": "1f1f5-1f1f9",
      "uc_match": "1f1f5-1f1f9",
      "uc_greedy": "1f1f5-1f1f9",
      "shortnames": [":pt:"],
      "category": "flags"
    },
    ":flag_pw:": {
      "uc_base": "1f1f5-1f1fc",
      "uc_output": "1f1f5-1f1fc",
      "uc_match": "1f1f5-1f1fc",
      "uc_greedy": "1f1f5-1f1fc",
      "shortnames": [":pw:"],
      "category": "flags"
    },
    ":flag_py:": {
      "uc_base": "1f1f5-1f1fe",
      "uc_output": "1f1f5-1f1fe",
      "uc_match": "1f1f5-1f1fe",
      "uc_greedy": "1f1f5-1f1fe",
      "shortnames": [":py:"],
      "category": "flags"
    },
    ":flag_qa:": {
      "uc_base": "1f1f6-1f1e6",
      "uc_output": "1f1f6-1f1e6",
      "uc_match": "1f1f6-1f1e6",
      "uc_greedy": "1f1f6-1f1e6",
      "shortnames": [":qa:"],
      "category": "flags"
    },
    ":flag_re:": {
      "uc_base": "1f1f7-1f1ea",
      "uc_output": "1f1f7-1f1ea",
      "uc_match": "1f1f7-1f1ea",
      "uc_greedy": "1f1f7-1f1ea",
      "shortnames": [":re:"],
      "category": "flags"
    },
    ":flag_ro:": {
      "uc_base": "1f1f7-1f1f4",
      "uc_output": "1f1f7-1f1f4",
      "uc_match": "1f1f7-1f1f4",
      "uc_greedy": "1f1f7-1f1f4",
      "shortnames": [":ro:"],
      "category": "flags"
    },
    ":flag_rs:": {
      "uc_base": "1f1f7-1f1f8",
      "uc_output": "1f1f7-1f1f8",
      "uc_match": "1f1f7-1f1f8",
      "uc_greedy": "1f1f7-1f1f8",
      "shortnames": [":rs:"],
      "category": "flags"
    },
    ":flag_ru:": {
      "uc_base": "1f1f7-1f1fa",
      "uc_output": "1f1f7-1f1fa",
      "uc_match": "1f1f7-1f1fa",
      "uc_greedy": "1f1f7-1f1fa",
      "shortnames": [":ru:"],
      "category": "flags"
    },
    ":flag_rw:": {
      "uc_base": "1f1f7-1f1fc",
      "uc_output": "1f1f7-1f1fc",
      "uc_match": "1f1f7-1f1fc",
      "uc_greedy": "1f1f7-1f1fc",
      "shortnames": [":rw:"],
      "category": "flags"
    },
    ":flag_sa:": {
      "uc_base": "1f1f8-1f1e6",
      "uc_output": "1f1f8-1f1e6",
      "uc_match": "1f1f8-1f1e6",
      "uc_greedy": "1f1f8-1f1e6",
      "shortnames": [":saudiarabia:", ":saudi:"],
      "category": "flags"
    },
    ":flag_sb:": {
      "uc_base": "1f1f8-1f1e7",
      "uc_output": "1f1f8-1f1e7",
      "uc_match": "1f1f8-1f1e7",
      "uc_greedy": "1f1f8-1f1e7",
      "shortnames": [":sb:"],
      "category": "flags"
    },
    ":flag_sc:": {
      "uc_base": "1f1f8-1f1e8",
      "uc_output": "1f1f8-1f1e8",
      "uc_match": "1f1f8-1f1e8",
      "uc_greedy": "1f1f8-1f1e8",
      "shortnames": [":sc:"],
      "category": "flags"
    },
    ":flag_sd:": {
      "uc_base": "1f1f8-1f1e9",
      "uc_output": "1f1f8-1f1e9",
      "uc_match": "1f1f8-1f1e9",
      "uc_greedy": "1f1f8-1f1e9",
      "shortnames": [":sd:"],
      "category": "flags"
    },
    ":flag_se:": {
      "uc_base": "1f1f8-1f1ea",
      "uc_output": "1f1f8-1f1ea",
      "uc_match": "1f1f8-1f1ea",
      "uc_greedy": "1f1f8-1f1ea",
      "shortnames": [":se:"],
      "category": "flags"
    },
    ":flag_sg:": {
      "uc_base": "1f1f8-1f1ec",
      "uc_output": "1f1f8-1f1ec",
      "uc_match": "1f1f8-1f1ec",
      "uc_greedy": "1f1f8-1f1ec",
      "shortnames": [":sg:"],
      "category": "flags"
    },
    ":flag_sh:": {
      "uc_base": "1f1f8-1f1ed",
      "uc_output": "1f1f8-1f1ed",
      "uc_match": "1f1f8-1f1ed",
      "uc_greedy": "1f1f8-1f1ed",
      "shortnames": [":sh:"],
      "category": "flags"
    },
    ":flag_si:": {
      "uc_base": "1f1f8-1f1ee",
      "uc_output": "1f1f8-1f1ee",
      "uc_match": "1f1f8-1f1ee",
      "uc_greedy": "1f1f8-1f1ee",
      "shortnames": [":si:"],
      "category": "flags"
    },
    ":flag_sj:": {
      "uc_base": "1f1f8-1f1ef",
      "uc_output": "1f1f8-1f1ef",
      "uc_match": "1f1f8-1f1ef",
      "uc_greedy": "1f1f8-1f1ef",
      "shortnames": [":sj:"],
      "category": "flags"
    },
    ":flag_sk:": {
      "uc_base": "1f1f8-1f1f0",
      "uc_output": "1f1f8-1f1f0",
      "uc_match": "1f1f8-1f1f0",
      "uc_greedy": "1f1f8-1f1f0",
      "shortnames": [":sk:"],
      "category": "flags"
    },
    ":flag_sl:": {
      "uc_base": "1f1f8-1f1f1",
      "uc_output": "1f1f8-1f1f1",
      "uc_match": "1f1f8-1f1f1",
      "uc_greedy": "1f1f8-1f1f1",
      "shortnames": [":sl:"],
      "category": "flags"
    },
    ":flag_sm:": {
      "uc_base": "1f1f8-1f1f2",
      "uc_output": "1f1f8-1f1f2",
      "uc_match": "1f1f8-1f1f2",
      "uc_greedy": "1f1f8-1f1f2",
      "shortnames": [":sm:"],
      "category": "flags"
    },
    ":flag_sn:": {
      "uc_base": "1f1f8-1f1f3",
      "uc_output": "1f1f8-1f1f3",
      "uc_match": "1f1f8-1f1f3",
      "uc_greedy": "1f1f8-1f1f3",
      "shortnames": [":sn:"],
      "category": "flags"
    },
    ":flag_so:": {
      "uc_base": "1f1f8-1f1f4",
      "uc_output": "1f1f8-1f1f4",
      "uc_match": "1f1f8-1f1f4",
      "uc_greedy": "1f1f8-1f1f4",
      "shortnames": [":so:"],
      "category": "flags"
    },
    ":flag_sr:": {
      "uc_base": "1f1f8-1f1f7",
      "uc_output": "1f1f8-1f1f7",
      "uc_match": "1f1f8-1f1f7",
      "uc_greedy": "1f1f8-1f1f7",
      "shortnames": [":sr:"],
      "category": "flags"
    },
    ":flag_ss:": {
      "uc_base": "1f1f8-1f1f8",
      "uc_output": "1f1f8-1f1f8",
      "uc_match": "1f1f8-1f1f8",
      "uc_greedy": "1f1f8-1f1f8",
      "shortnames": [":ss:"],
      "category": "flags"
    },
    ":flag_st:": {
      "uc_base": "1f1f8-1f1f9",
      "uc_output": "1f1f8-1f1f9",
      "uc_match": "1f1f8-1f1f9",
      "uc_greedy": "1f1f8-1f1f9",
      "shortnames": [":st:"],
      "category": "flags"
    },
    ":flag_sv:": {
      "uc_base": "1f1f8-1f1fb",
      "uc_output": "1f1f8-1f1fb",
      "uc_match": "1f1f8-1f1fb",
      "uc_greedy": "1f1f8-1f1fb",
      "shortnames": [":sv:"],
      "category": "flags"
    },
    ":flag_sx:": {
      "uc_base": "1f1f8-1f1fd",
      "uc_output": "1f1f8-1f1fd",
      "uc_match": "1f1f8-1f1fd",
      "uc_greedy": "1f1f8-1f1fd",
      "shortnames": [":sx:"],
      "category": "flags"
    },
    ":flag_sy:": {
      "uc_base": "1f1f8-1f1fe",
      "uc_output": "1f1f8-1f1fe",
      "uc_match": "1f1f8-1f1fe",
      "uc_greedy": "1f1f8-1f1fe",
      "shortnames": [":sy:"],
      "category": "flags"
    },
    ":flag_sz:": {
      "uc_base": "1f1f8-1f1ff",
      "uc_output": "1f1f8-1f1ff",
      "uc_match": "1f1f8-1f1ff",
      "uc_greedy": "1f1f8-1f1ff",
      "shortnames": [":sz:"],
      "category": "flags"
    },
    ":flag_ta:": {
      "uc_base": "1f1f9-1f1e6",
      "uc_output": "1f1f9-1f1e6",
      "uc_match": "1f1f9-1f1e6",
      "uc_greedy": "1f1f9-1f1e6",
      "shortnames": [":ta:"],
      "category": "flags"
    },
    ":flag_tc:": {
      "uc_base": "1f1f9-1f1e8",
      "uc_output": "1f1f9-1f1e8",
      "uc_match": "1f1f9-1f1e8",
      "uc_greedy": "1f1f9-1f1e8",
      "shortnames": [":tc:"],
      "category": "flags"
    },
    ":flag_td:": {
      "uc_base": "1f1f9-1f1e9",
      "uc_output": "1f1f9-1f1e9",
      "uc_match": "1f1f9-1f1e9",
      "uc_greedy": "1f1f9-1f1e9",
      "shortnames": [":td:"],
      "category": "flags"
    },
    ":flag_tf:": {
      "uc_base": "1f1f9-1f1eb",
      "uc_output": "1f1f9-1f1eb",
      "uc_match": "1f1f9-1f1eb",
      "uc_greedy": "1f1f9-1f1eb",
      "shortnames": [":tf:"],
      "category": "flags"
    },
    ":flag_tg:": {
      "uc_base": "1f1f9-1f1ec",
      "uc_output": "1f1f9-1f1ec",
      "uc_match": "1f1f9-1f1ec",
      "uc_greedy": "1f1f9-1f1ec",
      "shortnames": [":tg:"],
      "category": "flags"
    },
    ":flag_th:": {
      "uc_base": "1f1f9-1f1ed",
      "uc_output": "1f1f9-1f1ed",
      "uc_match": "1f1f9-1f1ed",
      "uc_greedy": "1f1f9-1f1ed",
      "shortnames": [":th:"],
      "category": "flags"
    },
    ":flag_tj:": {
      "uc_base": "1f1f9-1f1ef",
      "uc_output": "1f1f9-1f1ef",
      "uc_match": "1f1f9-1f1ef",
      "uc_greedy": "1f1f9-1f1ef",
      "shortnames": [":tj:"],
      "category": "flags"
    },
    ":flag_tk:": {
      "uc_base": "1f1f9-1f1f0",
      "uc_output": "1f1f9-1f1f0",
      "uc_match": "1f1f9-1f1f0",
      "uc_greedy": "1f1f9-1f1f0",
      "shortnames": [":tk:"],
      "category": "flags"
    },
    ":flag_tl:": {
      "uc_base": "1f1f9-1f1f1",
      "uc_output": "1f1f9-1f1f1",
      "uc_match": "1f1f9-1f1f1",
      "uc_greedy": "1f1f9-1f1f1",
      "shortnames": [":tl:"],
      "category": "flags"
    },
    ":flag_tm:": {
      "uc_base": "1f1f9-1f1f2",
      "uc_output": "1f1f9-1f1f2",
      "uc_match": "1f1f9-1f1f2",
      "uc_greedy": "1f1f9-1f1f2",
      "shortnames": [":turkmenistan:"],
      "category": "flags"
    },
    ":flag_tn:": {
      "uc_base": "1f1f9-1f1f3",
      "uc_output": "1f1f9-1f1f3",
      "uc_match": "1f1f9-1f1f3",
      "uc_greedy": "1f1f9-1f1f3",
      "shortnames": [":tn:"],
      "category": "flags"
    },
    ":flag_to:": {
      "uc_base": "1f1f9-1f1f4",
      "uc_output": "1f1f9-1f1f4",
      "uc_match": "1f1f9-1f1f4",
      "uc_greedy": "1f1f9-1f1f4",
      "shortnames": [":to:"],
      "category": "flags"
    },
    ":flag_tr:": {
      "uc_base": "1f1f9-1f1f7",
      "uc_output": "1f1f9-1f1f7",
      "uc_match": "1f1f9-1f1f7",
      "uc_greedy": "1f1f9-1f1f7",
      "shortnames": [":tr:"],
      "category": "flags"
    },
    ":flag_tt:": {
      "uc_base": "1f1f9-1f1f9",
      "uc_output": "1f1f9-1f1f9",
      "uc_match": "1f1f9-1f1f9",
      "uc_greedy": "1f1f9-1f1f9",
      "shortnames": [":tt:"],
      "category": "flags"
    },
    ":flag_tv:": {
      "uc_base": "1f1f9-1f1fb",
      "uc_output": "1f1f9-1f1fb",
      "uc_match": "1f1f9-1f1fb",
      "uc_greedy": "1f1f9-1f1fb",
      "shortnames": [":tuvalu:"],
      "category": "flags"
    },
    ":flag_tw:": {
      "uc_base": "1f1f9-1f1fc",
      "uc_output": "1f1f9-1f1fc",
      "uc_match": "1f1f9-1f1fc",
      "uc_greedy": "1f1f9-1f1fc",
      "shortnames": [":tw:"],
      "category": "flags"
    },
    ":flag_tz:": {
      "uc_base": "1f1f9-1f1ff",
      "uc_output": "1f1f9-1f1ff",
      "uc_match": "1f1f9-1f1ff",
      "uc_greedy": "1f1f9-1f1ff",
      "shortnames": [":tz:"],
      "category": "flags"
    },
    ":flag_ua:": {
      "uc_base": "1f1fa-1f1e6",
      "uc_output": "1f1fa-1f1e6",
      "uc_match": "1f1fa-1f1e6",
      "uc_greedy": "1f1fa-1f1e6",
      "shortnames": [":ua:"],
      "category": "flags"
    },
    ":flag_ug:": {
      "uc_base": "1f1fa-1f1ec",
      "uc_output": "1f1fa-1f1ec",
      "uc_match": "1f1fa-1f1ec",
      "uc_greedy": "1f1fa-1f1ec",
      "shortnames": [":ug:"],
      "category": "flags"
    },
    ":flag_um:": {
      "uc_base": "1f1fa-1f1f2",
      "uc_output": "1f1fa-1f1f2",
      "uc_match": "1f1fa-1f1f2",
      "uc_greedy": "1f1fa-1f1f2",
      "shortnames": [":um:"],
      "category": "flags"
    },
    ":flag_us:": {
      "uc_base": "1f1fa-1f1f8",
      "uc_output": "1f1fa-1f1f8",
      "uc_match": "1f1fa-1f1f8",
      "uc_greedy": "1f1fa-1f1f8",
      "shortnames": [":us:"],
      "category": "flags"
    },
    ":flag_uy:": {
      "uc_base": "1f1fa-1f1fe",
      "uc_output": "1f1fa-1f1fe",
      "uc_match": "1f1fa-1f1fe",
      "uc_greedy": "1f1fa-1f1fe",
      "shortnames": [":uy:"],
      "category": "flags"
    },
    ":flag_uz:": {
      "uc_base": "1f1fa-1f1ff",
      "uc_output": "1f1fa-1f1ff",
      "uc_match": "1f1fa-1f1ff",
      "uc_greedy": "1f1fa-1f1ff",
      "shortnames": [":uz:"],
      "category": "flags"
    },
    ":flag_va:": {
      "uc_base": "1f1fb-1f1e6",
      "uc_output": "1f1fb-1f1e6",
      "uc_match": "1f1fb-1f1e6",
      "uc_greedy": "1f1fb-1f1e6",
      "shortnames": [":va:"],
      "category": "flags"
    },
    ":flag_vc:": {
      "uc_base": "1f1fb-1f1e8",
      "uc_output": "1f1fb-1f1e8",
      "uc_match": "1f1fb-1f1e8",
      "uc_greedy": "1f1fb-1f1e8",
      "shortnames": [":vc:"],
      "category": "flags"
    },
    ":flag_ve:": {
      "uc_base": "1f1fb-1f1ea",
      "uc_output": "1f1fb-1f1ea",
      "uc_match": "1f1fb-1f1ea",
      "uc_greedy": "1f1fb-1f1ea",
      "shortnames": [":ve:"],
      "category": "flags"
    },
    ":flag_vg:": {
      "uc_base": "1f1fb-1f1ec",
      "uc_output": "1f1fb-1f1ec",
      "uc_match": "1f1fb-1f1ec",
      "uc_greedy": "1f1fb-1f1ec",
      "shortnames": [":vg:"],
      "category": "flags"
    },
    ":flag_vi:": {
      "uc_base": "1f1fb-1f1ee",
      "uc_output": "1f1fb-1f1ee",
      "uc_match": "1f1fb-1f1ee",
      "uc_greedy": "1f1fb-1f1ee",
      "shortnames": [":vi:"],
      "category": "flags"
    },
    ":flag_vn:": {
      "uc_base": "1f1fb-1f1f3",
      "uc_output": "1f1fb-1f1f3",
      "uc_match": "1f1fb-1f1f3",
      "uc_greedy": "1f1fb-1f1f3",
      "shortnames": [":vn:"],
      "category": "flags"
    },
    ":flag_vu:": {
      "uc_base": "1f1fb-1f1fa",
      "uc_output": "1f1fb-1f1fa",
      "uc_match": "1f1fb-1f1fa",
      "uc_greedy": "1f1fb-1f1fa",
      "shortnames": [":vu:"],
      "category": "flags"
    },
    ":flag_wf:": {
      "uc_base": "1f1fc-1f1eb",
      "uc_output": "1f1fc-1f1eb",
      "uc_match": "1f1fc-1f1eb",
      "uc_greedy": "1f1fc-1f1eb",
      "shortnames": [":wf:"],
      "category": "flags"
    },
    ":flag_ws:": {
      "uc_base": "1f1fc-1f1f8",
      "uc_output": "1f1fc-1f1f8",
      "uc_match": "1f1fc-1f1f8",
      "uc_greedy": "1f1fc-1f1f8",
      "shortnames": [":ws:"],
      "category": "flags"
    },
    ":flag_xk:": {
      "uc_base": "1f1fd-1f1f0",
      "uc_output": "1f1fd-1f1f0",
      "uc_match": "1f1fd-1f1f0",
      "uc_greedy": "1f1fd-1f1f0",
      "shortnames": [":xk:"],
      "category": "flags"
    },
    ":flag_ye:": {
      "uc_base": "1f1fe-1f1ea",
      "uc_output": "1f1fe-1f1ea",
      "uc_match": "1f1fe-1f1ea",
      "uc_greedy": "1f1fe-1f1ea",
      "shortnames": [":ye:"],
      "category": "flags"
    },
    ":flag_yt:": {
      "uc_base": "1f1fe-1f1f9",
      "uc_output": "1f1fe-1f1f9",
      "uc_match": "1f1fe-1f1f9",
      "uc_greedy": "1f1fe-1f1f9",
      "shortnames": [":yt:"],
      "category": "flags"
    },
    ":flag_za:": {
      "uc_base": "1f1ff-1f1e6",
      "uc_output": "1f1ff-1f1e6",
      "uc_match": "1f1ff-1f1e6",
      "uc_greedy": "1f1ff-1f1e6",
      "shortnames": [":za:"],
      "category": "flags"
    },
    ":flag_zm:": {
      "uc_base": "1f1ff-1f1f2",
      "uc_output": "1f1ff-1f1f2",
      "uc_match": "1f1ff-1f1f2",
      "uc_greedy": "1f1ff-1f1f2",
      "shortnames": [":zm:"],
      "category": "flags"
    },
    ":flag_zw:": {
      "uc_base": "1f1ff-1f1fc",
      "uc_output": "1f1ff-1f1fc",
      "uc_match": "1f1ff-1f1fc",
      "uc_greedy": "1f1ff-1f1fc",
      "shortnames": [":zw:"],
      "category": "flags"
    },
    ":girl_tone1:": {
      "uc_base": "1f467-1f3fb",
      "uc_output": "1f467-1f3fb",
      "uc_match": "1f467-1f3fb",
      "uc_greedy": "1f467-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":girl_tone2:": {
      "uc_base": "1f467-1f3fc",
      "uc_output": "1f467-1f3fc",
      "uc_match": "1f467-1f3fc",
      "uc_greedy": "1f467-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":girl_tone3:": {
      "uc_base": "1f467-1f3fd",
      "uc_output": "1f467-1f3fd",
      "uc_match": "1f467-1f3fd",
      "uc_greedy": "1f467-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":girl_tone4:": {
      "uc_base": "1f467-1f3fe",
      "uc_output": "1f467-1f3fe",
      "uc_match": "1f467-1f3fe",
      "uc_greedy": "1f467-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":girl_tone5:": {
      "uc_base": "1f467-1f3ff",
      "uc_output": "1f467-1f3ff",
      "uc_match": "1f467-1f3ff",
      "uc_greedy": "1f467-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":guard_tone1:": {
      "uc_base": "1f482-1f3fb",
      "uc_output": "1f482-1f3fb",
      "uc_match": "1f482-1f3fb",
      "uc_greedy": "1f482-1f3fb",
      "shortnames": [":guardsman_tone1:"],
      "category": "people"
    },
    ":guard_tone2:": {
      "uc_base": "1f482-1f3fc",
      "uc_output": "1f482-1f3fc",
      "uc_match": "1f482-1f3fc",
      "uc_greedy": "1f482-1f3fc",
      "shortnames": [":guardsman_tone2:"],
      "category": "people"
    },
    ":guard_tone3:": {
      "uc_base": "1f482-1f3fd",
      "uc_output": "1f482-1f3fd",
      "uc_match": "1f482-1f3fd",
      "uc_greedy": "1f482-1f3fd",
      "shortnames": [":guardsman_tone3:"],
      "category": "people"
    },
    ":guard_tone4:": {
      "uc_base": "1f482-1f3fe",
      "uc_output": "1f482-1f3fe",
      "uc_match": "1f482-1f3fe",
      "uc_greedy": "1f482-1f3fe",
      "shortnames": [":guardsman_tone4:"],
      "category": "people"
    },
    ":guard_tone5:": {
      "uc_base": "1f482-1f3ff",
      "uc_output": "1f482-1f3ff",
      "uc_match": "1f482-1f3ff",
      "uc_greedy": "1f482-1f3ff",
      "shortnames": [":guardsman_tone5:"],
      "category": "people"
    },
    ":hand_splayed_tone1:": {
      "uc_base": "1f590-1f3fb",
      "uc_output": "1f590-1f3fb",
      "uc_match": "1f590-fe0f-1f3fb",
      "uc_greedy": "1f590-fe0f-1f3fb",
      "shortnames": [":raised_hand_with_fingers_splayed_tone1:"],
      "category": "people"
    },
    ":hand_splayed_tone2:": {
      "uc_base": "1f590-1f3fc",
      "uc_output": "1f590-1f3fc",
      "uc_match": "1f590-fe0f-1f3fc",
      "uc_greedy": "1f590-fe0f-1f3fc",
      "shortnames": [":raised_hand_with_fingers_splayed_tone2:"],
      "category": "people"
    },
    ":hand_splayed_tone3:": {
      "uc_base": "1f590-1f3fd",
      "uc_output": "1f590-1f3fd",
      "uc_match": "1f590-fe0f-1f3fd",
      "uc_greedy": "1f590-fe0f-1f3fd",
      "shortnames": [":raised_hand_with_fingers_splayed_tone3:"],
      "category": "people"
    },
    ":hand_splayed_tone4:": {
      "uc_base": "1f590-1f3fe",
      "uc_output": "1f590-1f3fe",
      "uc_match": "1f590-fe0f-1f3fe",
      "uc_greedy": "1f590-fe0f-1f3fe",
      "shortnames": [":raised_hand_with_fingers_splayed_tone4:"],
      "category": "people"
    },
    ":hand_splayed_tone5:": {
      "uc_base": "1f590-1f3ff",
      "uc_output": "1f590-1f3ff",
      "uc_match": "1f590-fe0f-1f3ff",
      "uc_greedy": "1f590-fe0f-1f3ff",
      "shortnames": [":raised_hand_with_fingers_splayed_tone5:"],
      "category": "people"
    },
    ":horse_racing_tone1:": {
      "uc_base": "1f3c7-1f3fb",
      "uc_output": "1f3c7-1f3fb",
      "uc_match": "1f3c7-1f3fb",
      "uc_greedy": "1f3c7-1f3fb",
      "shortnames": [],
      "category": "activity"
    },
    ":horse_racing_tone2:": {
      "uc_base": "1f3c7-1f3fc",
      "uc_output": "1f3c7-1f3fc",
      "uc_match": "1f3c7-1f3fc",
      "uc_greedy": "1f3c7-1f3fc",
      "shortnames": [],
      "category": "activity"
    },
    ":horse_racing_tone3:": {
      "uc_base": "1f3c7-1f3fd",
      "uc_output": "1f3c7-1f3fd",
      "uc_match": "1f3c7-1f3fd",
      "uc_greedy": "1f3c7-1f3fd",
      "shortnames": [],
      "category": "activity"
    },
    ":horse_racing_tone4:": {
      "uc_base": "1f3c7-1f3fe",
      "uc_output": "1f3c7-1f3fe",
      "uc_match": "1f3c7-1f3fe",
      "uc_greedy": "1f3c7-1f3fe",
      "shortnames": [],
      "category": "activity"
    },
    ":horse_racing_tone5:": {
      "uc_base": "1f3c7-1f3ff",
      "uc_output": "1f3c7-1f3ff",
      "uc_match": "1f3c7-1f3ff",
      "uc_greedy": "1f3c7-1f3ff",
      "shortnames": [],
      "category": "activity"
    },
    ":left_facing_fist_tone1:": {
      "uc_base": "1f91b-1f3fb",
      "uc_output": "1f91b-1f3fb",
      "uc_match": "1f91b-1f3fb",
      "uc_greedy": "1f91b-1f3fb",
      "shortnames": [":left_fist_tone1:"],
      "category": "people"
    },
    ":left_facing_fist_tone2:": {
      "uc_base": "1f91b-1f3fc",
      "uc_output": "1f91b-1f3fc",
      "uc_match": "1f91b-1f3fc",
      "uc_greedy": "1f91b-1f3fc",
      "shortnames": [":left_fist_tone2:"],
      "category": "people"
    },
    ":left_facing_fist_tone3:": {
      "uc_base": "1f91b-1f3fd",
      "uc_output": "1f91b-1f3fd",
      "uc_match": "1f91b-1f3fd",
      "uc_greedy": "1f91b-1f3fd",
      "shortnames": [":left_fist_tone3:"],
      "category": "people"
    },
    ":left_facing_fist_tone4:": {
      "uc_base": "1f91b-1f3fe",
      "uc_output": "1f91b-1f3fe",
      "uc_match": "1f91b-1f3fe",
      "uc_greedy": "1f91b-1f3fe",
      "shortnames": [":left_fist_tone4:"],
      "category": "people"
    },
    ":left_facing_fist_tone5:": {
      "uc_base": "1f91b-1f3ff",
      "uc_output": "1f91b-1f3ff",
      "uc_match": "1f91b-1f3ff",
      "uc_greedy": "1f91b-1f3ff",
      "shortnames": [":left_fist_tone5:"],
      "category": "people"
    },
    ":levitate_tone1:": {
      "uc_base": "1f574-1f3fb",
      "uc_output": "1f574-1f3fb",
      "uc_match": "1f574-fe0f-1f3fb",
      "uc_greedy": "1f574-fe0f-1f3fb",
      "shortnames": [":man_in_business_suit_levitating_tone1:", ":man_in_business_suit_levitating_light_skin_tone:"],
      "category": "people"
    },
    ":levitate_tone2:": {
      "uc_base": "1f574-1f3fc",
      "uc_output": "1f574-1f3fc",
      "uc_match": "1f574-fe0f-1f3fc",
      "uc_greedy": "1f574-fe0f-1f3fc",
      "shortnames": [":man_in_business_suit_levitating_tone2:", ":man_in_business_suit_levitating_medium_light_skin_tone:"],
      "category": "people"
    },
    ":levitate_tone3:": {
      "uc_base": "1f574-1f3fd",
      "uc_output": "1f574-1f3fd",
      "uc_match": "1f574-fe0f-1f3fd",
      "uc_greedy": "1f574-fe0f-1f3fd",
      "shortnames": [":man_in_business_suit_levitating_tone3:", ":man_in_business_suit_levitating_medium_skin_tone:"],
      "category": "people"
    },
    ":levitate_tone4:": {
      "uc_base": "1f574-1f3fe",
      "uc_output": "1f574-1f3fe",
      "uc_match": "1f574-fe0f-1f3fe",
      "uc_greedy": "1f574-fe0f-1f3fe",
      "shortnames": [":man_in_business_suit_levitating_tone4:", ":man_in_business_suit_levitating_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":levitate_tone5:": {
      "uc_base": "1f574-1f3ff",
      "uc_output": "1f574-1f3ff",
      "uc_match": "1f574-fe0f-1f3ff",
      "uc_greedy": "1f574-fe0f-1f3ff",
      "shortnames": [":man_in_business_suit_levitating_tone5:", ":man_in_business_suit_levitating_dark_skin_tone:"],
      "category": "people"
    },
    ":love_you_gesture_tone1:": {
      "uc_base": "1f91f-1f3fb",
      "uc_output": "1f91f-1f3fb",
      "uc_match": "1f91f-1f3fb",
      "uc_greedy": "1f91f-1f3fb",
      "shortnames": [":love_you_gesture_light_skin_tone:"],
      "category": "people"
    },
    ":love_you_gesture_tone2:": {
      "uc_base": "1f91f-1f3fc",
      "uc_output": "1f91f-1f3fc",
      "uc_match": "1f91f-1f3fc",
      "uc_greedy": "1f91f-1f3fc",
      "shortnames": [":love_you_gesture_medium_light_skin_tone:"],
      "category": "people"
    },
    ":love_you_gesture_tone3:": {
      "uc_base": "1f91f-1f3fd",
      "uc_output": "1f91f-1f3fd",
      "uc_match": "1f91f-1f3fd",
      "uc_greedy": "1f91f-1f3fd",
      "shortnames": [":love_you_gesture_medium_skin_tone:"],
      "category": "people"
    },
    ":love_you_gesture_tone4:": {
      "uc_base": "1f91f-1f3fe",
      "uc_output": "1f91f-1f3fe",
      "uc_match": "1f91f-1f3fe",
      "uc_greedy": "1f91f-1f3fe",
      "shortnames": [":love_you_gesture_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":love_you_gesture_tone5:": {
      "uc_base": "1f91f-1f3ff",
      "uc_output": "1f91f-1f3ff",
      "uc_match": "1f91f-1f3ff",
      "uc_greedy": "1f91f-1f3ff",
      "shortnames": [":love_you_gesture_dark_skin_tone:"],
      "category": "people"
    },
    ":mage_tone1:": {
      "uc_base": "1f9d9-1f3fb",
      "uc_output": "1f9d9-1f3fb",
      "uc_match": "1f9d9-1f3fb",
      "uc_greedy": "1f9d9-1f3fb",
      "shortnames": [":mage_light_skin_tone:"],
      "category": "people"
    },
    ":mage_tone2:": {
      "uc_base": "1f9d9-1f3fc",
      "uc_output": "1f9d9-1f3fc",
      "uc_match": "1f9d9-1f3fc",
      "uc_greedy": "1f9d9-1f3fc",
      "shortnames": [":mage_medium_light_skin_tone:"],
      "category": "people"
    },
    ":mage_tone3:": {
      "uc_base": "1f9d9-1f3fd",
      "uc_output": "1f9d9-1f3fd",
      "uc_match": "1f9d9-1f3fd",
      "uc_greedy": "1f9d9-1f3fd",
      "shortnames": [":mage_medium_skin_tone:"],
      "category": "people"
    },
    ":mage_tone4:": {
      "uc_base": "1f9d9-1f3fe",
      "uc_output": "1f9d9-1f3fe",
      "uc_match": "1f9d9-1f3fe",
      "uc_greedy": "1f9d9-1f3fe",
      "shortnames": [":mage_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":mage_tone5:": {
      "uc_base": "1f9d9-1f3ff",
      "uc_output": "1f9d9-1f3ff",
      "uc_match": "1f9d9-1f3ff",
      "uc_greedy": "1f9d9-1f3ff",
      "shortnames": [":mage_dark_skin_tone:"],
      "category": "people"
    },
    ":man_dancing_tone1:": {
      "uc_base": "1f57a-1f3fb",
      "uc_output": "1f57a-1f3fb",
      "uc_match": "1f57a-1f3fb",
      "uc_greedy": "1f57a-1f3fb",
      "shortnames": [":male_dancer_tone1:"],
      "category": "people"
    },
    ":man_dancing_tone2:": {
      "uc_base": "1f57a-1f3fc",
      "uc_output": "1f57a-1f3fc",
      "uc_match": "1f57a-1f3fc",
      "uc_greedy": "1f57a-1f3fc",
      "shortnames": [":male_dancer_tone2:"],
      "category": "people"
    },
    ":man_dancing_tone3:": {
      "uc_base": "1f57a-1f3fd",
      "uc_output": "1f57a-1f3fd",
      "uc_match": "1f57a-1f3fd",
      "uc_greedy": "1f57a-1f3fd",
      "shortnames": [":male_dancer_tone3:"],
      "category": "people"
    },
    ":man_dancing_tone4:": {
      "uc_base": "1f57a-1f3fe",
      "uc_output": "1f57a-1f3fe",
      "uc_match": "1f57a-1f3fe",
      "uc_greedy": "1f57a-1f3fe",
      "shortnames": [":male_dancer_tone4:"],
      "category": "people"
    },
    ":man_dancing_tone5:": {
      "uc_base": "1f57a-1f3ff",
      "uc_output": "1f57a-1f3ff",
      "uc_match": "1f57a-1f3ff",
      "uc_greedy": "1f57a-1f3ff",
      "shortnames": [":male_dancer_tone5:"],
      "category": "people"
    },
    ":man_in_tuxedo_tone1:": {
      "uc_base": "1f935-1f3fb",
      "uc_output": "1f935-1f3fb",
      "uc_match": "1f935-1f3fb",
      "uc_greedy": "1f935-1f3fb",
      "shortnames": [":tuxedo_tone1:"],
      "category": "people"
    },
    ":man_in_tuxedo_tone2:": {
      "uc_base": "1f935-1f3fc",
      "uc_output": "1f935-1f3fc",
      "uc_match": "1f935-1f3fc",
      "uc_greedy": "1f935-1f3fc",
      "shortnames": [":tuxedo_tone2:"],
      "category": "people"
    },
    ":man_in_tuxedo_tone3:": {
      "uc_base": "1f935-1f3fd",
      "uc_output": "1f935-1f3fd",
      "uc_match": "1f935-1f3fd",
      "uc_greedy": "1f935-1f3fd",
      "shortnames": [":tuxedo_tone3:"],
      "category": "people"
    },
    ":man_in_tuxedo_tone4:": {
      "uc_base": "1f935-1f3fe",
      "uc_output": "1f935-1f3fe",
      "uc_match": "1f935-1f3fe",
      "uc_greedy": "1f935-1f3fe",
      "shortnames": [":tuxedo_tone4:"],
      "category": "people"
    },
    ":man_in_tuxedo_tone5:": {
      "uc_base": "1f935-1f3ff",
      "uc_output": "1f935-1f3ff",
      "uc_match": "1f935-1f3ff",
      "uc_greedy": "1f935-1f3ff",
      "shortnames": [":tuxedo_tone5:"],
      "category": "people"
    },
    ":man_tone1:": {
      "uc_base": "1f468-1f3fb",
      "uc_output": "1f468-1f3fb",
      "uc_match": "1f468-1f3fb",
      "uc_greedy": "1f468-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":man_tone2:": {
      "uc_base": "1f468-1f3fc",
      "uc_output": "1f468-1f3fc",
      "uc_match": "1f468-1f3fc",
      "uc_greedy": "1f468-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":man_tone3:": {
      "uc_base": "1f468-1f3fd",
      "uc_output": "1f468-1f3fd",
      "uc_match": "1f468-1f3fd",
      "uc_greedy": "1f468-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":man_tone4:": {
      "uc_base": "1f468-1f3fe",
      "uc_output": "1f468-1f3fe",
      "uc_match": "1f468-1f3fe",
      "uc_greedy": "1f468-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":man_tone5:": {
      "uc_base": "1f468-1f3ff",
      "uc_output": "1f468-1f3ff",
      "uc_match": "1f468-1f3ff",
      "uc_greedy": "1f468-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":man_with_chinese_cap_tone1:": {
      "uc_base": "1f472-1f3fb",
      "uc_output": "1f472-1f3fb",
      "uc_match": "1f472-1f3fb",
      "uc_greedy": "1f472-1f3fb",
      "shortnames": [":man_with_gua_pi_mao_tone1:"],
      "category": "people"
    },
    ":man_with_chinese_cap_tone2:": {
      "uc_base": "1f472-1f3fc",
      "uc_output": "1f472-1f3fc",
      "uc_match": "1f472-1f3fc",
      "uc_greedy": "1f472-1f3fc",
      "shortnames": [":man_with_gua_pi_mao_tone2:"],
      "category": "people"
    },
    ":man_with_chinese_cap_tone3:": {
      "uc_base": "1f472-1f3fd",
      "uc_output": "1f472-1f3fd",
      "uc_match": "1f472-1f3fd",
      "uc_greedy": "1f472-1f3fd",
      "shortnames": [":man_with_gua_pi_mao_tone3:"],
      "category": "people"
    },
    ":man_with_chinese_cap_tone4:": {
      "uc_base": "1f472-1f3fe",
      "uc_output": "1f472-1f3fe",
      "uc_match": "1f472-1f3fe",
      "uc_greedy": "1f472-1f3fe",
      "shortnames": [":man_with_gua_pi_mao_tone4:"],
      "category": "people"
    },
    ":man_with_chinese_cap_tone5:": {
      "uc_base": "1f472-1f3ff",
      "uc_output": "1f472-1f3ff",
      "uc_match": "1f472-1f3ff",
      "uc_greedy": "1f472-1f3ff",
      "shortnames": [":man_with_gua_pi_mao_tone5:"],
      "category": "people"
    },
    ":merperson_tone1:": {
      "uc_base": "1f9dc-1f3fb",
      "uc_output": "1f9dc-1f3fb",
      "uc_match": "1f9dc-1f3fb",
      "uc_greedy": "1f9dc-1f3fb",
      "shortnames": [":merperson_light_skin_tone:"],
      "category": "people"
    },
    ":merperson_tone2:": {
      "uc_base": "1f9dc-1f3fc",
      "uc_output": "1f9dc-1f3fc",
      "uc_match": "1f9dc-1f3fc",
      "uc_greedy": "1f9dc-1f3fc",
      "shortnames": [":merperson_medium_light_skin_tone:"],
      "category": "people"
    },
    ":merperson_tone3:": {
      "uc_base": "1f9dc-1f3fd",
      "uc_output": "1f9dc-1f3fd",
      "uc_match": "1f9dc-1f3fd",
      "uc_greedy": "1f9dc-1f3fd",
      "shortnames": [":merperson_medium_skin_tone:"],
      "category": "people"
    },
    ":merperson_tone4:": {
      "uc_base": "1f9dc-1f3fe",
      "uc_output": "1f9dc-1f3fe",
      "uc_match": "1f9dc-1f3fe",
      "uc_greedy": "1f9dc-1f3fe",
      "shortnames": [":merperson_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":merperson_tone5:": {
      "uc_base": "1f9dc-1f3ff",
      "uc_output": "1f9dc-1f3ff",
      "uc_match": "1f9dc-1f3ff",
      "uc_greedy": "1f9dc-1f3ff",
      "shortnames": [":merperson_dark_skin_tone:"],
      "category": "people"
    },
    ":metal_tone1:": {
      "uc_base": "1f918-1f3fb",
      "uc_output": "1f918-1f3fb",
      "uc_match": "1f918-1f3fb",
      "uc_greedy": "1f918-1f3fb",
      "shortnames": [":sign_of_the_horns_tone1:"],
      "category": "people"
    },
    ":metal_tone2:": {
      "uc_base": "1f918-1f3fc",
      "uc_output": "1f918-1f3fc",
      "uc_match": "1f918-1f3fc",
      "uc_greedy": "1f918-1f3fc",
      "shortnames": [":sign_of_the_horns_tone2:"],
      "category": "people"
    },
    ":metal_tone3:": {
      "uc_base": "1f918-1f3fd",
      "uc_output": "1f918-1f3fd",
      "uc_match": "1f918-1f3fd",
      "uc_greedy": "1f918-1f3fd",
      "shortnames": [":sign_of_the_horns_tone3:"],
      "category": "people"
    },
    ":metal_tone4:": {
      "uc_base": "1f918-1f3fe",
      "uc_output": "1f918-1f3fe",
      "uc_match": "1f918-1f3fe",
      "uc_greedy": "1f918-1f3fe",
      "shortnames": [":sign_of_the_horns_tone4:"],
      "category": "people"
    },
    ":metal_tone5:": {
      "uc_base": "1f918-1f3ff",
      "uc_output": "1f918-1f3ff",
      "uc_match": "1f918-1f3ff",
      "uc_greedy": "1f918-1f3ff",
      "shortnames": [":sign_of_the_horns_tone5:"],
      "category": "people"
    },
    ":middle_finger_tone1:": {
      "uc_base": "1f595-1f3fb",
      "uc_output": "1f595-1f3fb",
      "uc_match": "1f595-1f3fb",
      "uc_greedy": "1f595-1f3fb",
      "shortnames": [":reversed_hand_with_middle_finger_extended_tone1:"],
      "category": "people"
    },
    ":middle_finger_tone2:": {
      "uc_base": "1f595-1f3fc",
      "uc_output": "1f595-1f3fc",
      "uc_match": "1f595-1f3fc",
      "uc_greedy": "1f595-1f3fc",
      "shortnames": [":reversed_hand_with_middle_finger_extended_tone2:"],
      "category": "people"
    },
    ":middle_finger_tone3:": {
      "uc_base": "1f595-1f3fd",
      "uc_output": "1f595-1f3fd",
      "uc_match": "1f595-1f3fd",
      "uc_greedy": "1f595-1f3fd",
      "shortnames": [":reversed_hand_with_middle_finger_extended_tone3:"],
      "category": "people"
    },
    ":middle_finger_tone4:": {
      "uc_base": "1f595-1f3fe",
      "uc_output": "1f595-1f3fe",
      "uc_match": "1f595-1f3fe",
      "uc_greedy": "1f595-1f3fe",
      "shortnames": [":reversed_hand_with_middle_finger_extended_tone4:"],
      "category": "people"
    },
    ":middle_finger_tone5:": {
      "uc_base": "1f595-1f3ff",
      "uc_output": "1f595-1f3ff",
      "uc_match": "1f595-1f3ff",
      "uc_greedy": "1f595-1f3ff",
      "shortnames": [":reversed_hand_with_middle_finger_extended_tone5:"],
      "category": "people"
    },
    ":mrs_claus_tone1:": {
      "uc_base": "1f936-1f3fb",
      "uc_output": "1f936-1f3fb",
      "uc_match": "1f936-1f3fb",
      "uc_greedy": "1f936-1f3fb",
      "shortnames": [":mother_christmas_tone1:"],
      "category": "people"
    },
    ":mrs_claus_tone2:": {
      "uc_base": "1f936-1f3fc",
      "uc_output": "1f936-1f3fc",
      "uc_match": "1f936-1f3fc",
      "uc_greedy": "1f936-1f3fc",
      "shortnames": [":mother_christmas_tone2:"],
      "category": "people"
    },
    ":mrs_claus_tone3:": {
      "uc_base": "1f936-1f3fd",
      "uc_output": "1f936-1f3fd",
      "uc_match": "1f936-1f3fd",
      "uc_greedy": "1f936-1f3fd",
      "shortnames": [":mother_christmas_tone3:"],
      "category": "people"
    },
    ":mrs_claus_tone4:": {
      "uc_base": "1f936-1f3fe",
      "uc_output": "1f936-1f3fe",
      "uc_match": "1f936-1f3fe",
      "uc_greedy": "1f936-1f3fe",
      "shortnames": [":mother_christmas_tone4:"],
      "category": "people"
    },
    ":mrs_claus_tone5:": {
      "uc_base": "1f936-1f3ff",
      "uc_output": "1f936-1f3ff",
      "uc_match": "1f936-1f3ff",
      "uc_greedy": "1f936-1f3ff",
      "shortnames": [":mother_christmas_tone5:"],
      "category": "people"
    },
    ":muscle_tone1:": {
      "uc_base": "1f4aa-1f3fb",
      "uc_output": "1f4aa-1f3fb",
      "uc_match": "1f4aa-1f3fb",
      "uc_greedy": "1f4aa-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":muscle_tone2:": {
      "uc_base": "1f4aa-1f3fc",
      "uc_output": "1f4aa-1f3fc",
      "uc_match": "1f4aa-1f3fc",
      "uc_greedy": "1f4aa-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":muscle_tone3:": {
      "uc_base": "1f4aa-1f3fd",
      "uc_output": "1f4aa-1f3fd",
      "uc_match": "1f4aa-1f3fd",
      "uc_greedy": "1f4aa-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":muscle_tone4:": {
      "uc_base": "1f4aa-1f3fe",
      "uc_output": "1f4aa-1f3fe",
      "uc_match": "1f4aa-1f3fe",
      "uc_greedy": "1f4aa-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":muscle_tone5:": {
      "uc_base": "1f4aa-1f3ff",
      "uc_output": "1f4aa-1f3ff",
      "uc_match": "1f4aa-1f3ff",
      "uc_greedy": "1f4aa-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":nail_care_tone1:": {
      "uc_base": "1f485-1f3fb",
      "uc_output": "1f485-1f3fb",
      "uc_match": "1f485-1f3fb",
      "uc_greedy": "1f485-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":nail_care_tone2:": {
      "uc_base": "1f485-1f3fc",
      "uc_output": "1f485-1f3fc",
      "uc_match": "1f485-1f3fc",
      "uc_greedy": "1f485-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":nail_care_tone3:": {
      "uc_base": "1f485-1f3fd",
      "uc_output": "1f485-1f3fd",
      "uc_match": "1f485-1f3fd",
      "uc_greedy": "1f485-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":nail_care_tone4:": {
      "uc_base": "1f485-1f3fe",
      "uc_output": "1f485-1f3fe",
      "uc_match": "1f485-1f3fe",
      "uc_greedy": "1f485-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":nail_care_tone5:": {
      "uc_base": "1f485-1f3ff",
      "uc_output": "1f485-1f3ff",
      "uc_match": "1f485-1f3ff",
      "uc_greedy": "1f485-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":nose_tone1:": {
      "uc_base": "1f443-1f3fb",
      "uc_output": "1f443-1f3fb",
      "uc_match": "1f443-1f3fb",
      "uc_greedy": "1f443-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":nose_tone2:": {
      "uc_base": "1f443-1f3fc",
      "uc_output": "1f443-1f3fc",
      "uc_match": "1f443-1f3fc",
      "uc_greedy": "1f443-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":nose_tone3:": {
      "uc_base": "1f443-1f3fd",
      "uc_output": "1f443-1f3fd",
      "uc_match": "1f443-1f3fd",
      "uc_greedy": "1f443-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":nose_tone4:": {
      "uc_base": "1f443-1f3fe",
      "uc_output": "1f443-1f3fe",
      "uc_match": "1f443-1f3fe",
      "uc_greedy": "1f443-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":nose_tone5:": {
      "uc_base": "1f443-1f3ff",
      "uc_output": "1f443-1f3ff",
      "uc_match": "1f443-1f3ff",
      "uc_greedy": "1f443-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":ok_hand_tone1:": {
      "uc_base": "1f44c-1f3fb",
      "uc_output": "1f44c-1f3fb",
      "uc_match": "1f44c-1f3fb",
      "uc_greedy": "1f44c-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":ok_hand_tone2:": {
      "uc_base": "1f44c-1f3fc",
      "uc_output": "1f44c-1f3fc",
      "uc_match": "1f44c-1f3fc",
      "uc_greedy": "1f44c-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":ok_hand_tone3:": {
      "uc_base": "1f44c-1f3fd",
      "uc_output": "1f44c-1f3fd",
      "uc_match": "1f44c-1f3fd",
      "uc_greedy": "1f44c-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":ok_hand_tone4:": {
      "uc_base": "1f44c-1f3fe",
      "uc_output": "1f44c-1f3fe",
      "uc_match": "1f44c-1f3fe",
      "uc_greedy": "1f44c-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":ok_hand_tone5:": {
      "uc_base": "1f44c-1f3ff",
      "uc_output": "1f44c-1f3ff",
      "uc_match": "1f44c-1f3ff",
      "uc_greedy": "1f44c-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":older_adult_tone1:": {
      "uc_base": "1f9d3-1f3fb",
      "uc_output": "1f9d3-1f3fb",
      "uc_match": "1f9d3-1f3fb",
      "uc_greedy": "1f9d3-1f3fb",
      "shortnames": [":older_adult_light_skin_tone:"],
      "category": "people"
    },
    ":older_adult_tone2:": {
      "uc_base": "1f9d3-1f3fc",
      "uc_output": "1f9d3-1f3fc",
      "uc_match": "1f9d3-1f3fc",
      "uc_greedy": "1f9d3-1f3fc",
      "shortnames": [":older_adult_medium_light_skin_tone:"],
      "category": "people"
    },
    ":older_adult_tone3:": {
      "uc_base": "1f9d3-1f3fd",
      "uc_output": "1f9d3-1f3fd",
      "uc_match": "1f9d3-1f3fd",
      "uc_greedy": "1f9d3-1f3fd",
      "shortnames": [":older_adult_medium_skin_tone:"],
      "category": "people"
    },
    ":older_adult_tone4:": {
      "uc_base": "1f9d3-1f3fe",
      "uc_output": "1f9d3-1f3fe",
      "uc_match": "1f9d3-1f3fe",
      "uc_greedy": "1f9d3-1f3fe",
      "shortnames": [":older_adult_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":older_adult_tone5:": {
      "uc_base": "1f9d3-1f3ff",
      "uc_output": "1f9d3-1f3ff",
      "uc_match": "1f9d3-1f3ff",
      "uc_greedy": "1f9d3-1f3ff",
      "shortnames": [":older_adult_dark_skin_tone:"],
      "category": "people"
    },
    ":older_man_tone1:": {
      "uc_base": "1f474-1f3fb",
      "uc_output": "1f474-1f3fb",
      "uc_match": "1f474-1f3fb",
      "uc_greedy": "1f474-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":older_man_tone2:": {
      "uc_base": "1f474-1f3fc",
      "uc_output": "1f474-1f3fc",
      "uc_match": "1f474-1f3fc",
      "uc_greedy": "1f474-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":older_man_tone3:": {
      "uc_base": "1f474-1f3fd",
      "uc_output": "1f474-1f3fd",
      "uc_match": "1f474-1f3fd",
      "uc_greedy": "1f474-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":older_man_tone4:": {
      "uc_base": "1f474-1f3fe",
      "uc_output": "1f474-1f3fe",
      "uc_match": "1f474-1f3fe",
      "uc_greedy": "1f474-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":older_man_tone5:": {
      "uc_base": "1f474-1f3ff",
      "uc_output": "1f474-1f3ff",
      "uc_match": "1f474-1f3ff",
      "uc_greedy": "1f474-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":older_woman_tone1:": {
      "uc_base": "1f475-1f3fb",
      "uc_output": "1f475-1f3fb",
      "uc_match": "1f475-1f3fb",
      "uc_greedy": "1f475-1f3fb",
      "shortnames": [":grandma_tone1:"],
      "category": "people"
    },
    ":older_woman_tone2:": {
      "uc_base": "1f475-1f3fc",
      "uc_output": "1f475-1f3fc",
      "uc_match": "1f475-1f3fc",
      "uc_greedy": "1f475-1f3fc",
      "shortnames": [":grandma_tone2:"],
      "category": "people"
    },
    ":older_woman_tone3:": {
      "uc_base": "1f475-1f3fd",
      "uc_output": "1f475-1f3fd",
      "uc_match": "1f475-1f3fd",
      "uc_greedy": "1f475-1f3fd",
      "shortnames": [":grandma_tone3:"],
      "category": "people"
    },
    ":older_woman_tone4:": {
      "uc_base": "1f475-1f3fe",
      "uc_output": "1f475-1f3fe",
      "uc_match": "1f475-1f3fe",
      "uc_greedy": "1f475-1f3fe",
      "shortnames": [":grandma_tone4:"],
      "category": "people"
    },
    ":older_woman_tone5:": {
      "uc_base": "1f475-1f3ff",
      "uc_output": "1f475-1f3ff",
      "uc_match": "1f475-1f3ff",
      "uc_greedy": "1f475-1f3ff",
      "shortnames": [":grandma_tone5:"],
      "category": "people"
    },
    ":open_hands_tone1:": {
      "uc_base": "1f450-1f3fb",
      "uc_output": "1f450-1f3fb",
      "uc_match": "1f450-1f3fb",
      "uc_greedy": "1f450-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":open_hands_tone2:": {
      "uc_base": "1f450-1f3fc",
      "uc_output": "1f450-1f3fc",
      "uc_match": "1f450-1f3fc",
      "uc_greedy": "1f450-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":open_hands_tone3:": {
      "uc_base": "1f450-1f3fd",
      "uc_output": "1f450-1f3fd",
      "uc_match": "1f450-1f3fd",
      "uc_greedy": "1f450-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":open_hands_tone4:": {
      "uc_base": "1f450-1f3fe",
      "uc_output": "1f450-1f3fe",
      "uc_match": "1f450-1f3fe",
      "uc_greedy": "1f450-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":open_hands_tone5:": {
      "uc_base": "1f450-1f3ff",
      "uc_output": "1f450-1f3ff",
      "uc_match": "1f450-1f3ff",
      "uc_greedy": "1f450-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":palms_up_together_tone1:": {
      "uc_base": "1f932-1f3fb",
      "uc_output": "1f932-1f3fb",
      "uc_match": "1f932-1f3fb",
      "uc_greedy": "1f932-1f3fb",
      "shortnames": [":palms_up_together_light_skin_tone:"],
      "category": "people"
    },
    ":palms_up_together_tone2:": {
      "uc_base": "1f932-1f3fc",
      "uc_output": "1f932-1f3fc",
      "uc_match": "1f932-1f3fc",
      "uc_greedy": "1f932-1f3fc",
      "shortnames": [":palms_up_together_medium_light_skin_tone:"],
      "category": "people"
    },
    ":palms_up_together_tone3:": {
      "uc_base": "1f932-1f3fd",
      "uc_output": "1f932-1f3fd",
      "uc_match": "1f932-1f3fd",
      "uc_greedy": "1f932-1f3fd",
      "shortnames": [":palms_up_together_medium_skin_tone:"],
      "category": "people"
    },
    ":palms_up_together_tone4:": {
      "uc_base": "1f932-1f3fe",
      "uc_output": "1f932-1f3fe",
      "uc_match": "1f932-1f3fe",
      "uc_greedy": "1f932-1f3fe",
      "shortnames": [":palms_up_together_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":palms_up_together_tone5:": {
      "uc_base": "1f932-1f3ff",
      "uc_output": "1f932-1f3ff",
      "uc_match": "1f932-1f3ff",
      "uc_greedy": "1f932-1f3ff",
      "shortnames": [":palms_up_together_dark_skin_tone:"],
      "category": "people"
    },
    ":person_biking_tone1:": {
      "uc_base": "1f6b4-1f3fb",
      "uc_output": "1f6b4-1f3fb",
      "uc_match": "1f6b4-1f3fb",
      "uc_greedy": "1f6b4-1f3fb",
      "shortnames": [":bicyclist_tone1:"],
      "category": "activity"
    },
    ":person_biking_tone2:": {
      "uc_base": "1f6b4-1f3fc",
      "uc_output": "1f6b4-1f3fc",
      "uc_match": "1f6b4-1f3fc",
      "uc_greedy": "1f6b4-1f3fc",
      "shortnames": [":bicyclist_tone2:"],
      "category": "activity"
    },
    ":person_biking_tone3:": {
      "uc_base": "1f6b4-1f3fd",
      "uc_output": "1f6b4-1f3fd",
      "uc_match": "1f6b4-1f3fd",
      "uc_greedy": "1f6b4-1f3fd",
      "shortnames": [":bicyclist_tone3:"],
      "category": "activity"
    },
    ":person_biking_tone4:": {
      "uc_base": "1f6b4-1f3fe",
      "uc_output": "1f6b4-1f3fe",
      "uc_match": "1f6b4-1f3fe",
      "uc_greedy": "1f6b4-1f3fe",
      "shortnames": [":bicyclist_tone4:"],
      "category": "activity"
    },
    ":person_biking_tone5:": {
      "uc_base": "1f6b4-1f3ff",
      "uc_output": "1f6b4-1f3ff",
      "uc_match": "1f6b4-1f3ff",
      "uc_greedy": "1f6b4-1f3ff",
      "shortnames": [":bicyclist_tone5:"],
      "category": "activity"
    },
    ":person_bowing_tone1:": {
      "uc_base": "1f647-1f3fb",
      "uc_output": "1f647-1f3fb",
      "uc_match": "1f647-1f3fb",
      "uc_greedy": "1f647-1f3fb",
      "shortnames": [":bow_tone1:"],
      "category": "people"
    },
    ":person_bowing_tone2:": {
      "uc_base": "1f647-1f3fc",
      "uc_output": "1f647-1f3fc",
      "uc_match": "1f647-1f3fc",
      "uc_greedy": "1f647-1f3fc",
      "shortnames": [":bow_tone2:"],
      "category": "people"
    },
    ":person_bowing_tone3:": {
      "uc_base": "1f647-1f3fd",
      "uc_output": "1f647-1f3fd",
      "uc_match": "1f647-1f3fd",
      "uc_greedy": "1f647-1f3fd",
      "shortnames": [":bow_tone3:"],
      "category": "people"
    },
    ":person_bowing_tone4:": {
      "uc_base": "1f647-1f3fe",
      "uc_output": "1f647-1f3fe",
      "uc_match": "1f647-1f3fe",
      "uc_greedy": "1f647-1f3fe",
      "shortnames": [":bow_tone4:"],
      "category": "people"
    },
    ":person_bowing_tone5:": {
      "uc_base": "1f647-1f3ff",
      "uc_output": "1f647-1f3ff",
      "uc_match": "1f647-1f3ff",
      "uc_greedy": "1f647-1f3ff",
      "shortnames": [":bow_tone5:"],
      "category": "people"
    },
    ":person_climbing_tone1:": {
      "uc_base": "1f9d7-1f3fb",
      "uc_output": "1f9d7-1f3fb",
      "uc_match": "1f9d7-1f3fb",
      "uc_greedy": "1f9d7-1f3fb",
      "shortnames": [":person_climbing_light_skin_tone:"],
      "category": "activity"
    },
    ":person_climbing_tone2:": {
      "uc_base": "1f9d7-1f3fc",
      "uc_output": "1f9d7-1f3fc",
      "uc_match": "1f9d7-1f3fc",
      "uc_greedy": "1f9d7-1f3fc",
      "shortnames": [":person_climbing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":person_climbing_tone3:": {
      "uc_base": "1f9d7-1f3fd",
      "uc_output": "1f9d7-1f3fd",
      "uc_match": "1f9d7-1f3fd",
      "uc_greedy": "1f9d7-1f3fd",
      "shortnames": [":person_climbing_medium_skin_tone:"],
      "category": "activity"
    },
    ":person_climbing_tone4:": {
      "uc_base": "1f9d7-1f3fe",
      "uc_output": "1f9d7-1f3fe",
      "uc_match": "1f9d7-1f3fe",
      "uc_greedy": "1f9d7-1f3fe",
      "shortnames": [":person_climbing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_climbing_tone5:": {
      "uc_base": "1f9d7-1f3ff",
      "uc_output": "1f9d7-1f3ff",
      "uc_match": "1f9d7-1f3ff",
      "uc_greedy": "1f9d7-1f3ff",
      "shortnames": [":person_climbing_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_doing_cartwheel_tone1:": {
      "uc_base": "1f938-1f3fb",
      "uc_output": "1f938-1f3fb",
      "uc_match": "1f938-1f3fb",
      "uc_greedy": "1f938-1f3fb",
      "shortnames": [":cartwheel_tone1:"],
      "category": "activity"
    },
    ":person_doing_cartwheel_tone2:": {
      "uc_base": "1f938-1f3fc",
      "uc_output": "1f938-1f3fc",
      "uc_match": "1f938-1f3fc",
      "uc_greedy": "1f938-1f3fc",
      "shortnames": [":cartwheel_tone2:"],
      "category": "activity"
    },
    ":person_doing_cartwheel_tone3:": {
      "uc_base": "1f938-1f3fd",
      "uc_output": "1f938-1f3fd",
      "uc_match": "1f938-1f3fd",
      "uc_greedy": "1f938-1f3fd",
      "shortnames": [":cartwheel_tone3:"],
      "category": "activity"
    },
    ":person_doing_cartwheel_tone4:": {
      "uc_base": "1f938-1f3fe",
      "uc_output": "1f938-1f3fe",
      "uc_match": "1f938-1f3fe",
      "uc_greedy": "1f938-1f3fe",
      "shortnames": [":cartwheel_tone4:"],
      "category": "activity"
    },
    ":person_doing_cartwheel_tone5:": {
      "uc_base": "1f938-1f3ff",
      "uc_output": "1f938-1f3ff",
      "uc_match": "1f938-1f3ff",
      "uc_greedy": "1f938-1f3ff",
      "shortnames": [":cartwheel_tone5:"],
      "category": "activity"
    },
    ":person_facepalming_tone1:": {
      "uc_base": "1f926-1f3fb",
      "uc_output": "1f926-1f3fb",
      "uc_match": "1f926-1f3fb",
      "uc_greedy": "1f926-1f3fb",
      "shortnames": [":face_palm_tone1:", ":facepalm_tone1:"],
      "category": "people"
    },
    ":person_facepalming_tone2:": {
      "uc_base": "1f926-1f3fc",
      "uc_output": "1f926-1f3fc",
      "uc_match": "1f926-1f3fc",
      "uc_greedy": "1f926-1f3fc",
      "shortnames": [":face_palm_tone2:", ":facepalm_tone2:"],
      "category": "people"
    },
    ":person_facepalming_tone3:": {
      "uc_base": "1f926-1f3fd",
      "uc_output": "1f926-1f3fd",
      "uc_match": "1f926-1f3fd",
      "uc_greedy": "1f926-1f3fd",
      "shortnames": [":face_palm_tone3:", ":facepalm_tone3:"],
      "category": "people"
    },
    ":person_facepalming_tone4:": {
      "uc_base": "1f926-1f3fe",
      "uc_output": "1f926-1f3fe",
      "uc_match": "1f926-1f3fe",
      "uc_greedy": "1f926-1f3fe",
      "shortnames": [":face_palm_tone4:", ":facepalm_tone4:"],
      "category": "people"
    },
    ":person_facepalming_tone5:": {
      "uc_base": "1f926-1f3ff",
      "uc_output": "1f926-1f3ff",
      "uc_match": "1f926-1f3ff",
      "uc_greedy": "1f926-1f3ff",
      "shortnames": [":face_palm_tone5:", ":facepalm_tone5:"],
      "category": "people"
    },
    ":person_frowning_tone1:": {
      "uc_base": "1f64d-1f3fb",
      "uc_output": "1f64d-1f3fb",
      "uc_match": "1f64d-1f3fb",
      "uc_greedy": "1f64d-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":person_frowning_tone2:": {
      "uc_base": "1f64d-1f3fc",
      "uc_output": "1f64d-1f3fc",
      "uc_match": "1f64d-1f3fc",
      "uc_greedy": "1f64d-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":person_frowning_tone3:": {
      "uc_base": "1f64d-1f3fd",
      "uc_output": "1f64d-1f3fd",
      "uc_match": "1f64d-1f3fd",
      "uc_greedy": "1f64d-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":person_frowning_tone4:": {
      "uc_base": "1f64d-1f3fe",
      "uc_output": "1f64d-1f3fe",
      "uc_match": "1f64d-1f3fe",
      "uc_greedy": "1f64d-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":person_frowning_tone5:": {
      "uc_base": "1f64d-1f3ff",
      "uc_output": "1f64d-1f3ff",
      "uc_match": "1f64d-1f3ff",
      "uc_greedy": "1f64d-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":person_gesturing_no_tone1:": {
      "uc_base": "1f645-1f3fb",
      "uc_output": "1f645-1f3fb",
      "uc_match": "1f645-1f3fb",
      "uc_greedy": "1f645-1f3fb",
      "shortnames": [":no_good_tone1:"],
      "category": "people"
    },
    ":person_gesturing_no_tone2:": {
      "uc_base": "1f645-1f3fc",
      "uc_output": "1f645-1f3fc",
      "uc_match": "1f645-1f3fc",
      "uc_greedy": "1f645-1f3fc",
      "shortnames": [":no_good_tone2:"],
      "category": "people"
    },
    ":person_gesturing_no_tone3:": {
      "uc_base": "1f645-1f3fd",
      "uc_output": "1f645-1f3fd",
      "uc_match": "1f645-1f3fd",
      "uc_greedy": "1f645-1f3fd",
      "shortnames": [":no_good_tone3:"],
      "category": "people"
    },
    ":person_gesturing_no_tone4:": {
      "uc_base": "1f645-1f3fe",
      "uc_output": "1f645-1f3fe",
      "uc_match": "1f645-1f3fe",
      "uc_greedy": "1f645-1f3fe",
      "shortnames": [":no_good_tone4:"],
      "category": "people"
    },
    ":person_gesturing_no_tone5:": {
      "uc_base": "1f645-1f3ff",
      "uc_output": "1f645-1f3ff",
      "uc_match": "1f645-1f3ff",
      "uc_greedy": "1f645-1f3ff",
      "shortnames": [":no_good_tone5:"],
      "category": "people"
    },
    ":person_gesturing_ok_tone1:": {
      "uc_base": "1f646-1f3fb",
      "uc_output": "1f646-1f3fb",
      "uc_match": "1f646-1f3fb",
      "uc_greedy": "1f646-1f3fb",
      "shortnames": [":ok_woman_tone1:"],
      "category": "people"
    },
    ":person_gesturing_ok_tone2:": {
      "uc_base": "1f646-1f3fc",
      "uc_output": "1f646-1f3fc",
      "uc_match": "1f646-1f3fc",
      "uc_greedy": "1f646-1f3fc",
      "shortnames": [":ok_woman_tone2:"],
      "category": "people"
    },
    ":person_gesturing_ok_tone3:": {
      "uc_base": "1f646-1f3fd",
      "uc_output": "1f646-1f3fd",
      "uc_match": "1f646-1f3fd",
      "uc_greedy": "1f646-1f3fd",
      "shortnames": [":ok_woman_tone3:"],
      "category": "people"
    },
    ":person_gesturing_ok_tone4:": {
      "uc_base": "1f646-1f3fe",
      "uc_output": "1f646-1f3fe",
      "uc_match": "1f646-1f3fe",
      "uc_greedy": "1f646-1f3fe",
      "shortnames": [":ok_woman_tone4:"],
      "category": "people"
    },
    ":person_gesturing_ok_tone5:": {
      "uc_base": "1f646-1f3ff",
      "uc_output": "1f646-1f3ff",
      "uc_match": "1f646-1f3ff",
      "uc_greedy": "1f646-1f3ff",
      "shortnames": [":ok_woman_tone5:"],
      "category": "people"
    },
    ":person_getting_haircut_tone1:": {
      "uc_base": "1f487-1f3fb",
      "uc_output": "1f487-1f3fb",
      "uc_match": "1f487-1f3fb",
      "uc_greedy": "1f487-1f3fb",
      "shortnames": [":haircut_tone1:"],
      "category": "people"
    },
    ":person_getting_haircut_tone2:": {
      "uc_base": "1f487-1f3fc",
      "uc_output": "1f487-1f3fc",
      "uc_match": "1f487-1f3fc",
      "uc_greedy": "1f487-1f3fc",
      "shortnames": [":haircut_tone2:"],
      "category": "people"
    },
    ":person_getting_haircut_tone3:": {
      "uc_base": "1f487-1f3fd",
      "uc_output": "1f487-1f3fd",
      "uc_match": "1f487-1f3fd",
      "uc_greedy": "1f487-1f3fd",
      "shortnames": [":haircut_tone3:"],
      "category": "people"
    },
    ":person_getting_haircut_tone4:": {
      "uc_base": "1f487-1f3fe",
      "uc_output": "1f487-1f3fe",
      "uc_match": "1f487-1f3fe",
      "uc_greedy": "1f487-1f3fe",
      "shortnames": [":haircut_tone4:"],
      "category": "people"
    },
    ":person_getting_haircut_tone5:": {
      "uc_base": "1f487-1f3ff",
      "uc_output": "1f487-1f3ff",
      "uc_match": "1f487-1f3ff",
      "uc_greedy": "1f487-1f3ff",
      "shortnames": [":haircut_tone5:"],
      "category": "people"
    },
    ":person_getting_massage_tone1:": {
      "uc_base": "1f486-1f3fb",
      "uc_output": "1f486-1f3fb",
      "uc_match": "1f486-1f3fb",
      "uc_greedy": "1f486-1f3fb",
      "shortnames": [":massage_tone1:"],
      "category": "people"
    },
    ":person_getting_massage_tone2:": {
      "uc_base": "1f486-1f3fc",
      "uc_output": "1f486-1f3fc",
      "uc_match": "1f486-1f3fc",
      "uc_greedy": "1f486-1f3fc",
      "shortnames": [":massage_tone2:"],
      "category": "people"
    },
    ":person_getting_massage_tone3:": {
      "uc_base": "1f486-1f3fd",
      "uc_output": "1f486-1f3fd",
      "uc_match": "1f486-1f3fd",
      "uc_greedy": "1f486-1f3fd",
      "shortnames": [":massage_tone3:"],
      "category": "people"
    },
    ":person_getting_massage_tone4:": {
      "uc_base": "1f486-1f3fe",
      "uc_output": "1f486-1f3fe",
      "uc_match": "1f486-1f3fe",
      "uc_greedy": "1f486-1f3fe",
      "shortnames": [":massage_tone4:"],
      "category": "people"
    },
    ":person_getting_massage_tone5:": {
      "uc_base": "1f486-1f3ff",
      "uc_output": "1f486-1f3ff",
      "uc_match": "1f486-1f3ff",
      "uc_greedy": "1f486-1f3ff",
      "shortnames": [":massage_tone5:"],
      "category": "people"
    },
    ":person_golfing_tone1:": {
      "uc_base": "1f3cc-1f3fb",
      "uc_output": "1f3cc-1f3fb",
      "uc_match": "1f3cc-fe0f-1f3fb",
      "uc_greedy": "1f3cc-fe0f-1f3fb",
      "shortnames": [":person_golfing_light_skin_tone:"],
      "category": "activity"
    },
    ":person_golfing_tone2:": {
      "uc_base": "1f3cc-1f3fc",
      "uc_output": "1f3cc-1f3fc",
      "uc_match": "1f3cc-fe0f-1f3fc",
      "uc_greedy": "1f3cc-fe0f-1f3fc",
      "shortnames": [":person_golfing_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":person_golfing_tone3:": {
      "uc_base": "1f3cc-1f3fd",
      "uc_output": "1f3cc-1f3fd",
      "uc_match": "1f3cc-fe0f-1f3fd",
      "uc_greedy": "1f3cc-fe0f-1f3fd",
      "shortnames": [":person_golfing_medium_skin_tone:"],
      "category": "activity"
    },
    ":person_golfing_tone4:": {
      "uc_base": "1f3cc-1f3fe",
      "uc_output": "1f3cc-1f3fe",
      "uc_match": "1f3cc-fe0f-1f3fe",
      "uc_greedy": "1f3cc-fe0f-1f3fe",
      "shortnames": [":person_golfing_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_golfing_tone5:": {
      "uc_base": "1f3cc-1f3ff",
      "uc_output": "1f3cc-1f3ff",
      "uc_match": "1f3cc-fe0f-1f3ff",
      "uc_greedy": "1f3cc-fe0f-1f3ff",
      "shortnames": [":person_golfing_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_in_bed_tone1:": {
      "uc_base": "1f6cc-1f3fb",
      "uc_output": "1f6cc-1f3fb",
      "uc_match": "1f6cc-1f3fb",
      "uc_greedy": "1f6cc-1f3fb",
      "shortnames": [":person_in_bed_light_skin_tone:"],
      "category": "objects"
    },
    ":person_in_bed_tone2:": {
      "uc_base": "1f6cc-1f3fc",
      "uc_output": "1f6cc-1f3fc",
      "uc_match": "1f6cc-1f3fc",
      "uc_greedy": "1f6cc-1f3fc",
      "shortnames": [":person_in_bed_medium_light_skin_tone:"],
      "category": "objects"
    },
    ":person_in_bed_tone3:": {
      "uc_base": "1f6cc-1f3fd",
      "uc_output": "1f6cc-1f3fd",
      "uc_match": "1f6cc-1f3fd",
      "uc_greedy": "1f6cc-1f3fd",
      "shortnames": [":person_in_bed_medium_skin_tone:"],
      "category": "objects"
    },
    ":person_in_bed_tone4:": {
      "uc_base": "1f6cc-1f3fe",
      "uc_output": "1f6cc-1f3fe",
      "uc_match": "1f6cc-1f3fe",
      "uc_greedy": "1f6cc-1f3fe",
      "shortnames": [":person_in_bed_medium_dark_skin_tone:"],
      "category": "objects"
    },
    ":person_in_bed_tone5:": {
      "uc_base": "1f6cc-1f3ff",
      "uc_output": "1f6cc-1f3ff",
      "uc_match": "1f6cc-1f3ff",
      "uc_greedy": "1f6cc-1f3ff",
      "shortnames": [":person_in_bed_dark_skin_tone:"],
      "category": "objects"
    },
    ":person_in_lotus_position_tone1:": {
      "uc_base": "1f9d8-1f3fb",
      "uc_output": "1f9d8-1f3fb",
      "uc_match": "1f9d8-1f3fb",
      "uc_greedy": "1f9d8-1f3fb",
      "shortnames": [":person_in_lotus_position_light_skin_tone:"],
      "category": "activity"
    },
    ":person_in_lotus_position_tone2:": {
      "uc_base": "1f9d8-1f3fc",
      "uc_output": "1f9d8-1f3fc",
      "uc_match": "1f9d8-1f3fc",
      "uc_greedy": "1f9d8-1f3fc",
      "shortnames": [":person_in_lotus_position_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":person_in_lotus_position_tone3:": {
      "uc_base": "1f9d8-1f3fd",
      "uc_output": "1f9d8-1f3fd",
      "uc_match": "1f9d8-1f3fd",
      "uc_greedy": "1f9d8-1f3fd",
      "shortnames": [":person_in_lotus_position_medium_skin_tone:"],
      "category": "activity"
    },
    ":person_in_lotus_position_tone4:": {
      "uc_base": "1f9d8-1f3fe",
      "uc_output": "1f9d8-1f3fe",
      "uc_match": "1f9d8-1f3fe",
      "uc_greedy": "1f9d8-1f3fe",
      "shortnames": [":person_in_lotus_position_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_in_lotus_position_tone5:": {
      "uc_base": "1f9d8-1f3ff",
      "uc_output": "1f9d8-1f3ff",
      "uc_match": "1f9d8-1f3ff",
      "uc_greedy": "1f9d8-1f3ff",
      "shortnames": [":person_in_lotus_position_dark_skin_tone:"],
      "category": "activity"
    },
    ":person_in_steamy_room_tone1:": {
      "uc_base": "1f9d6-1f3fb",
      "uc_output": "1f9d6-1f3fb",
      "uc_match": "1f9d6-1f3fb",
      "uc_greedy": "1f9d6-1f3fb",
      "shortnames": [":person_in_steamy_room_light_skin_tone:"],
      "category": "people"
    },
    ":person_in_steamy_room_tone2:": {
      "uc_base": "1f9d6-1f3fc",
      "uc_output": "1f9d6-1f3fc",
      "uc_match": "1f9d6-1f3fc",
      "uc_greedy": "1f9d6-1f3fc",
      "shortnames": [":person_in_steamy_room_medium_light_skin_tone:"],
      "category": "people"
    },
    ":person_in_steamy_room_tone3:": {
      "uc_base": "1f9d6-1f3fd",
      "uc_output": "1f9d6-1f3fd",
      "uc_match": "1f9d6-1f3fd",
      "uc_greedy": "1f9d6-1f3fd",
      "shortnames": [":person_in_steamy_room_medium_skin_tone:"],
      "category": "people"
    },
    ":person_in_steamy_room_tone4:": {
      "uc_base": "1f9d6-1f3fe",
      "uc_output": "1f9d6-1f3fe",
      "uc_match": "1f9d6-1f3fe",
      "uc_greedy": "1f9d6-1f3fe",
      "shortnames": [":person_in_steamy_room_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":person_in_steamy_room_tone5:": {
      "uc_base": "1f9d6-1f3ff",
      "uc_output": "1f9d6-1f3ff",
      "uc_match": "1f9d6-1f3ff",
      "uc_greedy": "1f9d6-1f3ff",
      "shortnames": [":person_in_steamy_room_dark_skin_tone:"],
      "category": "people"
    },
    ":person_juggling_tone1:": {
      "uc_base": "1f939-1f3fb",
      "uc_output": "1f939-1f3fb",
      "uc_match": "1f939-1f3fb",
      "uc_greedy": "1f939-1f3fb",
      "shortnames": [":juggling_tone1:", ":juggler_tone1:"],
      "category": "activity"
    },
    ":person_juggling_tone2:": {
      "uc_base": "1f939-1f3fc",
      "uc_output": "1f939-1f3fc",
      "uc_match": "1f939-1f3fc",
      "uc_greedy": "1f939-1f3fc",
      "shortnames": [":juggling_tone2:", ":juggler_tone2:"],
      "category": "activity"
    },
    ":person_juggling_tone3:": {
      "uc_base": "1f939-1f3fd",
      "uc_output": "1f939-1f3fd",
      "uc_match": "1f939-1f3fd",
      "uc_greedy": "1f939-1f3fd",
      "shortnames": [":juggling_tone3:", ":juggler_tone3:"],
      "category": "activity"
    },
    ":person_juggling_tone4:": {
      "uc_base": "1f939-1f3fe",
      "uc_output": "1f939-1f3fe",
      "uc_match": "1f939-1f3fe",
      "uc_greedy": "1f939-1f3fe",
      "shortnames": [":juggling_tone4:", ":juggler_tone4:"],
      "category": "activity"
    },
    ":person_juggling_tone5:": {
      "uc_base": "1f939-1f3ff",
      "uc_output": "1f939-1f3ff",
      "uc_match": "1f939-1f3ff",
      "uc_greedy": "1f939-1f3ff",
      "shortnames": [":juggling_tone5:", ":juggler_tone5:"],
      "category": "activity"
    },
    ":person_lifting_weights_tone1:": {
      "uc_base": "1f3cb-1f3fb",
      "uc_output": "1f3cb-1f3fb",
      "uc_match": "1f3cb-fe0f-1f3fb",
      "uc_greedy": "1f3cb-fe0f-1f3fb",
      "shortnames": [":lifter_tone1:", ":weight_lifter_tone1:"],
      "category": "activity"
    },
    ":person_lifting_weights_tone2:": {
      "uc_base": "1f3cb-1f3fc",
      "uc_output": "1f3cb-1f3fc",
      "uc_match": "1f3cb-fe0f-1f3fc",
      "uc_greedy": "1f3cb-fe0f-1f3fc",
      "shortnames": [":lifter_tone2:", ":weight_lifter_tone2:"],
      "category": "activity"
    },
    ":person_lifting_weights_tone3:": {
      "uc_base": "1f3cb-1f3fd",
      "uc_output": "1f3cb-1f3fd",
      "uc_match": "1f3cb-fe0f-1f3fd",
      "uc_greedy": "1f3cb-fe0f-1f3fd",
      "shortnames": [":lifter_tone3:", ":weight_lifter_tone3:"],
      "category": "activity"
    },
    ":person_lifting_weights_tone4:": {
      "uc_base": "1f3cb-1f3fe",
      "uc_output": "1f3cb-1f3fe",
      "uc_match": "1f3cb-fe0f-1f3fe",
      "uc_greedy": "1f3cb-fe0f-1f3fe",
      "shortnames": [":lifter_tone4:", ":weight_lifter_tone4:"],
      "category": "activity"
    },
    ":person_lifting_weights_tone5:": {
      "uc_base": "1f3cb-1f3ff",
      "uc_output": "1f3cb-1f3ff",
      "uc_match": "1f3cb-fe0f-1f3ff",
      "uc_greedy": "1f3cb-fe0f-1f3ff",
      "shortnames": [":lifter_tone5:", ":weight_lifter_tone5:"],
      "category": "activity"
    },
    ":person_mountain_biking_tone1:": {
      "uc_base": "1f6b5-1f3fb",
      "uc_output": "1f6b5-1f3fb",
      "uc_match": "1f6b5-1f3fb",
      "uc_greedy": "1f6b5-1f3fb",
      "shortnames": [":mountain_bicyclist_tone1:"],
      "category": "activity"
    },
    ":person_mountain_biking_tone2:": {
      "uc_base": "1f6b5-1f3fc",
      "uc_output": "1f6b5-1f3fc",
      "uc_match": "1f6b5-1f3fc",
      "uc_greedy": "1f6b5-1f3fc",
      "shortnames": [":mountain_bicyclist_tone2:"],
      "category": "activity"
    },
    ":person_mountain_biking_tone3:": {
      "uc_base": "1f6b5-1f3fd",
      "uc_output": "1f6b5-1f3fd",
      "uc_match": "1f6b5-1f3fd",
      "uc_greedy": "1f6b5-1f3fd",
      "shortnames": [":mountain_bicyclist_tone3:"],
      "category": "activity"
    },
    ":person_mountain_biking_tone4:": {
      "uc_base": "1f6b5-1f3fe",
      "uc_output": "1f6b5-1f3fe",
      "uc_match": "1f6b5-1f3fe",
      "uc_greedy": "1f6b5-1f3fe",
      "shortnames": [":mountain_bicyclist_tone4:"],
      "category": "activity"
    },
    ":person_mountain_biking_tone5:": {
      "uc_base": "1f6b5-1f3ff",
      "uc_output": "1f6b5-1f3ff",
      "uc_match": "1f6b5-1f3ff",
      "uc_greedy": "1f6b5-1f3ff",
      "shortnames": [":mountain_bicyclist_tone5:"],
      "category": "activity"
    },
    ":person_playing_handball_tone1:": {
      "uc_base": "1f93e-1f3fb",
      "uc_output": "1f93e-1f3fb",
      "uc_match": "1f93e-1f3fb",
      "uc_greedy": "1f93e-1f3fb",
      "shortnames": [":handball_tone1:"],
      "category": "activity"
    },
    ":person_playing_handball_tone2:": {
      "uc_base": "1f93e-1f3fc",
      "uc_output": "1f93e-1f3fc",
      "uc_match": "1f93e-1f3fc",
      "uc_greedy": "1f93e-1f3fc",
      "shortnames": [":handball_tone2:"],
      "category": "activity"
    },
    ":person_playing_handball_tone3:": {
      "uc_base": "1f93e-1f3fd",
      "uc_output": "1f93e-1f3fd",
      "uc_match": "1f93e-1f3fd",
      "uc_greedy": "1f93e-1f3fd",
      "shortnames": [":handball_tone3:"],
      "category": "activity"
    },
    ":person_playing_handball_tone4:": {
      "uc_base": "1f93e-1f3fe",
      "uc_output": "1f93e-1f3fe",
      "uc_match": "1f93e-1f3fe",
      "uc_greedy": "1f93e-1f3fe",
      "shortnames": [":handball_tone4:"],
      "category": "activity"
    },
    ":person_playing_handball_tone5:": {
      "uc_base": "1f93e-1f3ff",
      "uc_output": "1f93e-1f3ff",
      "uc_match": "1f93e-1f3ff",
      "uc_greedy": "1f93e-1f3ff",
      "shortnames": [":handball_tone5:"],
      "category": "activity"
    },
    ":person_playing_water_polo_tone1:": {
      "uc_base": "1f93d-1f3fb",
      "uc_output": "1f93d-1f3fb",
      "uc_match": "1f93d-1f3fb",
      "uc_greedy": "1f93d-1f3fb",
      "shortnames": [":water_polo_tone1:"],
      "category": "activity"
    },
    ":person_playing_water_polo_tone2:": {
      "uc_base": "1f93d-1f3fc",
      "uc_output": "1f93d-1f3fc",
      "uc_match": "1f93d-1f3fc",
      "uc_greedy": "1f93d-1f3fc",
      "shortnames": [":water_polo_tone2:"],
      "category": "activity"
    },
    ":person_playing_water_polo_tone3:": {
      "uc_base": "1f93d-1f3fd",
      "uc_output": "1f93d-1f3fd",
      "uc_match": "1f93d-1f3fd",
      "uc_greedy": "1f93d-1f3fd",
      "shortnames": [":water_polo_tone3:"],
      "category": "activity"
    },
    ":person_playing_water_polo_tone4:": {
      "uc_base": "1f93d-1f3fe",
      "uc_output": "1f93d-1f3fe",
      "uc_match": "1f93d-1f3fe",
      "uc_greedy": "1f93d-1f3fe",
      "shortnames": [":water_polo_tone4:"],
      "category": "activity"
    },
    ":person_playing_water_polo_tone5:": {
      "uc_base": "1f93d-1f3ff",
      "uc_output": "1f93d-1f3ff",
      "uc_match": "1f93d-1f3ff",
      "uc_greedy": "1f93d-1f3ff",
      "shortnames": [":water_polo_tone5:"],
      "category": "activity"
    },
    ":person_pouting_tone1:": {
      "uc_base": "1f64e-1f3fb",
      "uc_output": "1f64e-1f3fb",
      "uc_match": "1f64e-1f3fb",
      "uc_greedy": "1f64e-1f3fb",
      "shortnames": [":person_with_pouting_face_tone1:"],
      "category": "people"
    },
    ":person_pouting_tone2:": {
      "uc_base": "1f64e-1f3fc",
      "uc_output": "1f64e-1f3fc",
      "uc_match": "1f64e-1f3fc",
      "uc_greedy": "1f64e-1f3fc",
      "shortnames": [":person_with_pouting_face_tone2:"],
      "category": "people"
    },
    ":person_pouting_tone3:": {
      "uc_base": "1f64e-1f3fd",
      "uc_output": "1f64e-1f3fd",
      "uc_match": "1f64e-1f3fd",
      "uc_greedy": "1f64e-1f3fd",
      "shortnames": [":person_with_pouting_face_tone3:"],
      "category": "people"
    },
    ":person_pouting_tone4:": {
      "uc_base": "1f64e-1f3fe",
      "uc_output": "1f64e-1f3fe",
      "uc_match": "1f64e-1f3fe",
      "uc_greedy": "1f64e-1f3fe",
      "shortnames": [":person_with_pouting_face_tone4:"],
      "category": "people"
    },
    ":person_pouting_tone5:": {
      "uc_base": "1f64e-1f3ff",
      "uc_output": "1f64e-1f3ff",
      "uc_match": "1f64e-1f3ff",
      "uc_greedy": "1f64e-1f3ff",
      "shortnames": [":person_with_pouting_face_tone5:"],
      "category": "people"
    },
    ":person_raising_hand_tone1:": {
      "uc_base": "1f64b-1f3fb",
      "uc_output": "1f64b-1f3fb",
      "uc_match": "1f64b-1f3fb",
      "uc_greedy": "1f64b-1f3fb",
      "shortnames": [":raising_hand_tone1:"],
      "category": "people"
    },
    ":person_raising_hand_tone2:": {
      "uc_base": "1f64b-1f3fc",
      "uc_output": "1f64b-1f3fc",
      "uc_match": "1f64b-1f3fc",
      "uc_greedy": "1f64b-1f3fc",
      "shortnames": [":raising_hand_tone2:"],
      "category": "people"
    },
    ":person_raising_hand_tone3:": {
      "uc_base": "1f64b-1f3fd",
      "uc_output": "1f64b-1f3fd",
      "uc_match": "1f64b-1f3fd",
      "uc_greedy": "1f64b-1f3fd",
      "shortnames": [":raising_hand_tone3:"],
      "category": "people"
    },
    ":person_raising_hand_tone4:": {
      "uc_base": "1f64b-1f3fe",
      "uc_output": "1f64b-1f3fe",
      "uc_match": "1f64b-1f3fe",
      "uc_greedy": "1f64b-1f3fe",
      "shortnames": [":raising_hand_tone4:"],
      "category": "people"
    },
    ":person_raising_hand_tone5:": {
      "uc_base": "1f64b-1f3ff",
      "uc_output": "1f64b-1f3ff",
      "uc_match": "1f64b-1f3ff",
      "uc_greedy": "1f64b-1f3ff",
      "shortnames": [":raising_hand_tone5:"],
      "category": "people"
    },
    ":person_rowing_boat_tone1:": {
      "uc_base": "1f6a3-1f3fb",
      "uc_output": "1f6a3-1f3fb",
      "uc_match": "1f6a3-1f3fb",
      "uc_greedy": "1f6a3-1f3fb",
      "shortnames": [":rowboat_tone1:"],
      "category": "activity"
    },
    ":person_rowing_boat_tone2:": {
      "uc_base": "1f6a3-1f3fc",
      "uc_output": "1f6a3-1f3fc",
      "uc_match": "1f6a3-1f3fc",
      "uc_greedy": "1f6a3-1f3fc",
      "shortnames": [":rowboat_tone2:"],
      "category": "activity"
    },
    ":person_rowing_boat_tone3:": {
      "uc_base": "1f6a3-1f3fd",
      "uc_output": "1f6a3-1f3fd",
      "uc_match": "1f6a3-1f3fd",
      "uc_greedy": "1f6a3-1f3fd",
      "shortnames": [":rowboat_tone3:"],
      "category": "activity"
    },
    ":person_rowing_boat_tone4:": {
      "uc_base": "1f6a3-1f3fe",
      "uc_output": "1f6a3-1f3fe",
      "uc_match": "1f6a3-1f3fe",
      "uc_greedy": "1f6a3-1f3fe",
      "shortnames": [":rowboat_tone4:"],
      "category": "activity"
    },
    ":person_rowing_boat_tone5:": {
      "uc_base": "1f6a3-1f3ff",
      "uc_output": "1f6a3-1f3ff",
      "uc_match": "1f6a3-1f3ff",
      "uc_greedy": "1f6a3-1f3ff",
      "shortnames": [":rowboat_tone5:"],
      "category": "activity"
    },
    ":person_running_tone1:": {
      "uc_base": "1f3c3-1f3fb",
      "uc_output": "1f3c3-1f3fb",
      "uc_match": "1f3c3-1f3fb",
      "uc_greedy": "1f3c3-1f3fb",
      "shortnames": [":runner_tone1:"],
      "category": "people"
    },
    ":person_running_tone2:": {
      "uc_base": "1f3c3-1f3fc",
      "uc_output": "1f3c3-1f3fc",
      "uc_match": "1f3c3-1f3fc",
      "uc_greedy": "1f3c3-1f3fc",
      "shortnames": [":runner_tone2:"],
      "category": "people"
    },
    ":person_running_tone3:": {
      "uc_base": "1f3c3-1f3fd",
      "uc_output": "1f3c3-1f3fd",
      "uc_match": "1f3c3-1f3fd",
      "uc_greedy": "1f3c3-1f3fd",
      "shortnames": [":runner_tone3:"],
      "category": "people"
    },
    ":person_running_tone4:": {
      "uc_base": "1f3c3-1f3fe",
      "uc_output": "1f3c3-1f3fe",
      "uc_match": "1f3c3-1f3fe",
      "uc_greedy": "1f3c3-1f3fe",
      "shortnames": [":runner_tone4:"],
      "category": "people"
    },
    ":person_running_tone5:": {
      "uc_base": "1f3c3-1f3ff",
      "uc_output": "1f3c3-1f3ff",
      "uc_match": "1f3c3-1f3ff",
      "uc_greedy": "1f3c3-1f3ff",
      "shortnames": [":runner_tone5:"],
      "category": "people"
    },
    ":person_shrugging_tone1:": {
      "uc_base": "1f937-1f3fb",
      "uc_output": "1f937-1f3fb",
      "uc_match": "1f937-1f3fb",
      "uc_greedy": "1f937-1f3fb",
      "shortnames": [":shrug_tone1:"],
      "category": "people"
    },
    ":person_shrugging_tone2:": {
      "uc_base": "1f937-1f3fc",
      "uc_output": "1f937-1f3fc",
      "uc_match": "1f937-1f3fc",
      "uc_greedy": "1f937-1f3fc",
      "shortnames": [":shrug_tone2:"],
      "category": "people"
    },
    ":person_shrugging_tone3:": {
      "uc_base": "1f937-1f3fd",
      "uc_output": "1f937-1f3fd",
      "uc_match": "1f937-1f3fd",
      "uc_greedy": "1f937-1f3fd",
      "shortnames": [":shrug_tone3:"],
      "category": "people"
    },
    ":person_shrugging_tone4:": {
      "uc_base": "1f937-1f3fe",
      "uc_output": "1f937-1f3fe",
      "uc_match": "1f937-1f3fe",
      "uc_greedy": "1f937-1f3fe",
      "shortnames": [":shrug_tone4:"],
      "category": "people"
    },
    ":person_shrugging_tone5:": {
      "uc_base": "1f937-1f3ff",
      "uc_output": "1f937-1f3ff",
      "uc_match": "1f937-1f3ff",
      "uc_greedy": "1f937-1f3ff",
      "shortnames": [":shrug_tone5:"],
      "category": "people"
    },
    ":person_surfing_tone1:": {
      "uc_base": "1f3c4-1f3fb",
      "uc_output": "1f3c4-1f3fb",
      "uc_match": "1f3c4-1f3fb",
      "uc_greedy": "1f3c4-1f3fb",
      "shortnames": [":surfer_tone1:"],
      "category": "activity"
    },
    ":person_surfing_tone2:": {
      "uc_base": "1f3c4-1f3fc",
      "uc_output": "1f3c4-1f3fc",
      "uc_match": "1f3c4-1f3fc",
      "uc_greedy": "1f3c4-1f3fc",
      "shortnames": [":surfer_tone2:"],
      "category": "activity"
    },
    ":person_surfing_tone3:": {
      "uc_base": "1f3c4-1f3fd",
      "uc_output": "1f3c4-1f3fd",
      "uc_match": "1f3c4-1f3fd",
      "uc_greedy": "1f3c4-1f3fd",
      "shortnames": [":surfer_tone3:"],
      "category": "activity"
    },
    ":person_surfing_tone4:": {
      "uc_base": "1f3c4-1f3fe",
      "uc_output": "1f3c4-1f3fe",
      "uc_match": "1f3c4-1f3fe",
      "uc_greedy": "1f3c4-1f3fe",
      "shortnames": [":surfer_tone4:"],
      "category": "activity"
    },
    ":person_surfing_tone5:": {
      "uc_base": "1f3c4-1f3ff",
      "uc_output": "1f3c4-1f3ff",
      "uc_match": "1f3c4-1f3ff",
      "uc_greedy": "1f3c4-1f3ff",
      "shortnames": [":surfer_tone5:"],
      "category": "activity"
    },
    ":person_swimming_tone1:": {
      "uc_base": "1f3ca-1f3fb",
      "uc_output": "1f3ca-1f3fb",
      "uc_match": "1f3ca-1f3fb",
      "uc_greedy": "1f3ca-1f3fb",
      "shortnames": [":swimmer_tone1:"],
      "category": "activity"
    },
    ":person_swimming_tone2:": {
      "uc_base": "1f3ca-1f3fc",
      "uc_output": "1f3ca-1f3fc",
      "uc_match": "1f3ca-1f3fc",
      "uc_greedy": "1f3ca-1f3fc",
      "shortnames": [":swimmer_tone2:"],
      "category": "activity"
    },
    ":person_swimming_tone3:": {
      "uc_base": "1f3ca-1f3fd",
      "uc_output": "1f3ca-1f3fd",
      "uc_match": "1f3ca-1f3fd",
      "uc_greedy": "1f3ca-1f3fd",
      "shortnames": [":swimmer_tone3:"],
      "category": "activity"
    },
    ":person_swimming_tone4:": {
      "uc_base": "1f3ca-1f3fe",
      "uc_output": "1f3ca-1f3fe",
      "uc_match": "1f3ca-1f3fe",
      "uc_greedy": "1f3ca-1f3fe",
      "shortnames": [":swimmer_tone4:"],
      "category": "activity"
    },
    ":person_swimming_tone5:": {
      "uc_base": "1f3ca-1f3ff",
      "uc_output": "1f3ca-1f3ff",
      "uc_match": "1f3ca-1f3ff",
      "uc_greedy": "1f3ca-1f3ff",
      "shortnames": [":swimmer_tone5:"],
      "category": "activity"
    },
    ":person_tipping_hand_tone1:": {
      "uc_base": "1f481-1f3fb",
      "uc_output": "1f481-1f3fb",
      "uc_match": "1f481-1f3fb",
      "uc_greedy": "1f481-1f3fb",
      "shortnames": [":information_desk_person_tone1:"],
      "category": "people"
    },
    ":person_tipping_hand_tone2:": {
      "uc_base": "1f481-1f3fc",
      "uc_output": "1f481-1f3fc",
      "uc_match": "1f481-1f3fc",
      "uc_greedy": "1f481-1f3fc",
      "shortnames": [":information_desk_person_tone2:"],
      "category": "people"
    },
    ":person_tipping_hand_tone3:": {
      "uc_base": "1f481-1f3fd",
      "uc_output": "1f481-1f3fd",
      "uc_match": "1f481-1f3fd",
      "uc_greedy": "1f481-1f3fd",
      "shortnames": [":information_desk_person_tone3:"],
      "category": "people"
    },
    ":person_tipping_hand_tone4:": {
      "uc_base": "1f481-1f3fe",
      "uc_output": "1f481-1f3fe",
      "uc_match": "1f481-1f3fe",
      "uc_greedy": "1f481-1f3fe",
      "shortnames": [":information_desk_person_tone4:"],
      "category": "people"
    },
    ":person_tipping_hand_tone5:": {
      "uc_base": "1f481-1f3ff",
      "uc_output": "1f481-1f3ff",
      "uc_match": "1f481-1f3ff",
      "uc_greedy": "1f481-1f3ff",
      "shortnames": [":information_desk_person_tone5:"],
      "category": "people"
    },
    ":person_walking_tone1:": {
      "uc_base": "1f6b6-1f3fb",
      "uc_output": "1f6b6-1f3fb",
      "uc_match": "1f6b6-1f3fb",
      "uc_greedy": "1f6b6-1f3fb",
      "shortnames": [":walking_tone1:"],
      "category": "people"
    },
    ":person_walking_tone2:": {
      "uc_base": "1f6b6-1f3fc",
      "uc_output": "1f6b6-1f3fc",
      "uc_match": "1f6b6-1f3fc",
      "uc_greedy": "1f6b6-1f3fc",
      "shortnames": [":walking_tone2:"],
      "category": "people"
    },
    ":person_walking_tone3:": {
      "uc_base": "1f6b6-1f3fd",
      "uc_output": "1f6b6-1f3fd",
      "uc_match": "1f6b6-1f3fd",
      "uc_greedy": "1f6b6-1f3fd",
      "shortnames": [":walking_tone3:"],
      "category": "people"
    },
    ":person_walking_tone4:": {
      "uc_base": "1f6b6-1f3fe",
      "uc_output": "1f6b6-1f3fe",
      "uc_match": "1f6b6-1f3fe",
      "uc_greedy": "1f6b6-1f3fe",
      "shortnames": [":walking_tone4:"],
      "category": "people"
    },
    ":person_walking_tone5:": {
      "uc_base": "1f6b6-1f3ff",
      "uc_output": "1f6b6-1f3ff",
      "uc_match": "1f6b6-1f3ff",
      "uc_greedy": "1f6b6-1f3ff",
      "shortnames": [":walking_tone5:"],
      "category": "people"
    },
    ":person_wearing_turban_tone1:": {
      "uc_base": "1f473-1f3fb",
      "uc_output": "1f473-1f3fb",
      "uc_match": "1f473-1f3fb",
      "uc_greedy": "1f473-1f3fb",
      "shortnames": [":man_with_turban_tone1:"],
      "category": "people"
    },
    ":person_wearing_turban_tone2:": {
      "uc_base": "1f473-1f3fc",
      "uc_output": "1f473-1f3fc",
      "uc_match": "1f473-1f3fc",
      "uc_greedy": "1f473-1f3fc",
      "shortnames": [":man_with_turban_tone2:"],
      "category": "people"
    },
    ":person_wearing_turban_tone3:": {
      "uc_base": "1f473-1f3fd",
      "uc_output": "1f473-1f3fd",
      "uc_match": "1f473-1f3fd",
      "uc_greedy": "1f473-1f3fd",
      "shortnames": [":man_with_turban_tone3:"],
      "category": "people"
    },
    ":person_wearing_turban_tone4:": {
      "uc_base": "1f473-1f3fe",
      "uc_output": "1f473-1f3fe",
      "uc_match": "1f473-1f3fe",
      "uc_greedy": "1f473-1f3fe",
      "shortnames": [":man_with_turban_tone4:"],
      "category": "people"
    },
    ":person_wearing_turban_tone5:": {
      "uc_base": "1f473-1f3ff",
      "uc_output": "1f473-1f3ff",
      "uc_match": "1f473-1f3ff",
      "uc_greedy": "1f473-1f3ff",
      "shortnames": [":man_with_turban_tone5:"],
      "category": "people"
    },
    ":point_down_tone1:": {
      "uc_base": "1f447-1f3fb",
      "uc_output": "1f447-1f3fb",
      "uc_match": "1f447-1f3fb",
      "uc_greedy": "1f447-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":point_down_tone2:": {
      "uc_base": "1f447-1f3fc",
      "uc_output": "1f447-1f3fc",
      "uc_match": "1f447-1f3fc",
      "uc_greedy": "1f447-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":point_down_tone3:": {
      "uc_base": "1f447-1f3fd",
      "uc_output": "1f447-1f3fd",
      "uc_match": "1f447-1f3fd",
      "uc_greedy": "1f447-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":point_down_tone4:": {
      "uc_base": "1f447-1f3fe",
      "uc_output": "1f447-1f3fe",
      "uc_match": "1f447-1f3fe",
      "uc_greedy": "1f447-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":point_down_tone5:": {
      "uc_base": "1f447-1f3ff",
      "uc_output": "1f447-1f3ff",
      "uc_match": "1f447-1f3ff",
      "uc_greedy": "1f447-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":point_left_tone1:": {
      "uc_base": "1f448-1f3fb",
      "uc_output": "1f448-1f3fb",
      "uc_match": "1f448-1f3fb",
      "uc_greedy": "1f448-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":point_left_tone2:": {
      "uc_base": "1f448-1f3fc",
      "uc_output": "1f448-1f3fc",
      "uc_match": "1f448-1f3fc",
      "uc_greedy": "1f448-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":point_left_tone3:": {
      "uc_base": "1f448-1f3fd",
      "uc_output": "1f448-1f3fd",
      "uc_match": "1f448-1f3fd",
      "uc_greedy": "1f448-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":point_left_tone4:": {
      "uc_base": "1f448-1f3fe",
      "uc_output": "1f448-1f3fe",
      "uc_match": "1f448-1f3fe",
      "uc_greedy": "1f448-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":point_left_tone5:": {
      "uc_base": "1f448-1f3ff",
      "uc_output": "1f448-1f3ff",
      "uc_match": "1f448-1f3ff",
      "uc_greedy": "1f448-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":point_right_tone1:": {
      "uc_base": "1f449-1f3fb",
      "uc_output": "1f449-1f3fb",
      "uc_match": "1f449-1f3fb",
      "uc_greedy": "1f449-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":point_right_tone2:": {
      "uc_base": "1f449-1f3fc",
      "uc_output": "1f449-1f3fc",
      "uc_match": "1f449-1f3fc",
      "uc_greedy": "1f449-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":point_right_tone3:": {
      "uc_base": "1f449-1f3fd",
      "uc_output": "1f449-1f3fd",
      "uc_match": "1f449-1f3fd",
      "uc_greedy": "1f449-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":point_right_tone4:": {
      "uc_base": "1f449-1f3fe",
      "uc_output": "1f449-1f3fe",
      "uc_match": "1f449-1f3fe",
      "uc_greedy": "1f449-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":point_right_tone5:": {
      "uc_base": "1f449-1f3ff",
      "uc_output": "1f449-1f3ff",
      "uc_match": "1f449-1f3ff",
      "uc_greedy": "1f449-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2_tone1:": {
      "uc_base": "1f446-1f3fb",
      "uc_output": "1f446-1f3fb",
      "uc_match": "1f446-1f3fb",
      "uc_greedy": "1f446-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2_tone2:": {
      "uc_base": "1f446-1f3fc",
      "uc_output": "1f446-1f3fc",
      "uc_match": "1f446-1f3fc",
      "uc_greedy": "1f446-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2_tone3:": {
      "uc_base": "1f446-1f3fd",
      "uc_output": "1f446-1f3fd",
      "uc_match": "1f446-1f3fd",
      "uc_greedy": "1f446-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2_tone4:": {
      "uc_base": "1f446-1f3fe",
      "uc_output": "1f446-1f3fe",
      "uc_match": "1f446-1f3fe",
      "uc_greedy": "1f446-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2_tone5:": {
      "uc_base": "1f446-1f3ff",
      "uc_output": "1f446-1f3ff",
      "uc_match": "1f446-1f3ff",
      "uc_greedy": "1f446-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":police_officer_tone1:": {
      "uc_base": "1f46e-1f3fb",
      "uc_output": "1f46e-1f3fb",
      "uc_match": "1f46e-1f3fb",
      "uc_greedy": "1f46e-1f3fb",
      "shortnames": [":cop_tone1:"],
      "category": "people"
    },
    ":police_officer_tone2:": {
      "uc_base": "1f46e-1f3fc",
      "uc_output": "1f46e-1f3fc",
      "uc_match": "1f46e-1f3fc",
      "uc_greedy": "1f46e-1f3fc",
      "shortnames": [":cop_tone2:"],
      "category": "people"
    },
    ":police_officer_tone3:": {
      "uc_base": "1f46e-1f3fd",
      "uc_output": "1f46e-1f3fd",
      "uc_match": "1f46e-1f3fd",
      "uc_greedy": "1f46e-1f3fd",
      "shortnames": [":cop_tone3:"],
      "category": "people"
    },
    ":police_officer_tone4:": {
      "uc_base": "1f46e-1f3fe",
      "uc_output": "1f46e-1f3fe",
      "uc_match": "1f46e-1f3fe",
      "uc_greedy": "1f46e-1f3fe",
      "shortnames": [":cop_tone4:"],
      "category": "people"
    },
    ":police_officer_tone5:": {
      "uc_base": "1f46e-1f3ff",
      "uc_output": "1f46e-1f3ff",
      "uc_match": "1f46e-1f3ff",
      "uc_greedy": "1f46e-1f3ff",
      "shortnames": [":cop_tone5:"],
      "category": "people"
    },
    ":pray_tone1:": {
      "uc_base": "1f64f-1f3fb",
      "uc_output": "1f64f-1f3fb",
      "uc_match": "1f64f-1f3fb",
      "uc_greedy": "1f64f-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":pray_tone2:": {
      "uc_base": "1f64f-1f3fc",
      "uc_output": "1f64f-1f3fc",
      "uc_match": "1f64f-1f3fc",
      "uc_greedy": "1f64f-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":pray_tone3:": {
      "uc_base": "1f64f-1f3fd",
      "uc_output": "1f64f-1f3fd",
      "uc_match": "1f64f-1f3fd",
      "uc_greedy": "1f64f-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":pray_tone4:": {
      "uc_base": "1f64f-1f3fe",
      "uc_output": "1f64f-1f3fe",
      "uc_match": "1f64f-1f3fe",
      "uc_greedy": "1f64f-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":pray_tone5:": {
      "uc_base": "1f64f-1f3ff",
      "uc_output": "1f64f-1f3ff",
      "uc_match": "1f64f-1f3ff",
      "uc_greedy": "1f64f-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":pregnant_woman_tone1:": {
      "uc_base": "1f930-1f3fb",
      "uc_output": "1f930-1f3fb",
      "uc_match": "1f930-1f3fb",
      "uc_greedy": "1f930-1f3fb",
      "shortnames": [":expecting_woman_tone1:"],
      "category": "people"
    },
    ":pregnant_woman_tone2:": {
      "uc_base": "1f930-1f3fc",
      "uc_output": "1f930-1f3fc",
      "uc_match": "1f930-1f3fc",
      "uc_greedy": "1f930-1f3fc",
      "shortnames": [":expecting_woman_tone2:"],
      "category": "people"
    },
    ":pregnant_woman_tone3:": {
      "uc_base": "1f930-1f3fd",
      "uc_output": "1f930-1f3fd",
      "uc_match": "1f930-1f3fd",
      "uc_greedy": "1f930-1f3fd",
      "shortnames": [":expecting_woman_tone3:"],
      "category": "people"
    },
    ":pregnant_woman_tone4:": {
      "uc_base": "1f930-1f3fe",
      "uc_output": "1f930-1f3fe",
      "uc_match": "1f930-1f3fe",
      "uc_greedy": "1f930-1f3fe",
      "shortnames": [":expecting_woman_tone4:"],
      "category": "people"
    },
    ":pregnant_woman_tone5:": {
      "uc_base": "1f930-1f3ff",
      "uc_output": "1f930-1f3ff",
      "uc_match": "1f930-1f3ff",
      "uc_greedy": "1f930-1f3ff",
      "shortnames": [":expecting_woman_tone5:"],
      "category": "people"
    },
    ":prince_tone1:": {
      "uc_base": "1f934-1f3fb",
      "uc_output": "1f934-1f3fb",
      "uc_match": "1f934-1f3fb",
      "uc_greedy": "1f934-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":prince_tone2:": {
      "uc_base": "1f934-1f3fc",
      "uc_output": "1f934-1f3fc",
      "uc_match": "1f934-1f3fc",
      "uc_greedy": "1f934-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":prince_tone3:": {
      "uc_base": "1f934-1f3fd",
      "uc_output": "1f934-1f3fd",
      "uc_match": "1f934-1f3fd",
      "uc_greedy": "1f934-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":prince_tone4:": {
      "uc_base": "1f934-1f3fe",
      "uc_output": "1f934-1f3fe",
      "uc_match": "1f934-1f3fe",
      "uc_greedy": "1f934-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":prince_tone5:": {
      "uc_base": "1f934-1f3ff",
      "uc_output": "1f934-1f3ff",
      "uc_match": "1f934-1f3ff",
      "uc_greedy": "1f934-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":princess_tone1:": {
      "uc_base": "1f478-1f3fb",
      "uc_output": "1f478-1f3fb",
      "uc_match": "1f478-1f3fb",
      "uc_greedy": "1f478-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":princess_tone2:": {
      "uc_base": "1f478-1f3fc",
      "uc_output": "1f478-1f3fc",
      "uc_match": "1f478-1f3fc",
      "uc_greedy": "1f478-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":princess_tone3:": {
      "uc_base": "1f478-1f3fd",
      "uc_output": "1f478-1f3fd",
      "uc_match": "1f478-1f3fd",
      "uc_greedy": "1f478-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":princess_tone4:": {
      "uc_base": "1f478-1f3fe",
      "uc_output": "1f478-1f3fe",
      "uc_match": "1f478-1f3fe",
      "uc_greedy": "1f478-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":princess_tone5:": {
      "uc_base": "1f478-1f3ff",
      "uc_output": "1f478-1f3ff",
      "uc_match": "1f478-1f3ff",
      "uc_greedy": "1f478-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":punch_tone1:": {
      "uc_base": "1f44a-1f3fb",
      "uc_output": "1f44a-1f3fb",
      "uc_match": "1f44a-1f3fb",
      "uc_greedy": "1f44a-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":punch_tone2:": {
      "uc_base": "1f44a-1f3fc",
      "uc_output": "1f44a-1f3fc",
      "uc_match": "1f44a-1f3fc",
      "uc_greedy": "1f44a-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":punch_tone3:": {
      "uc_base": "1f44a-1f3fd",
      "uc_output": "1f44a-1f3fd",
      "uc_match": "1f44a-1f3fd",
      "uc_greedy": "1f44a-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":punch_tone4:": {
      "uc_base": "1f44a-1f3fe",
      "uc_output": "1f44a-1f3fe",
      "uc_match": "1f44a-1f3fe",
      "uc_greedy": "1f44a-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":punch_tone5:": {
      "uc_base": "1f44a-1f3ff",
      "uc_output": "1f44a-1f3ff",
      "uc_match": "1f44a-1f3ff",
      "uc_greedy": "1f44a-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":raised_back_of_hand_tone1:": {
      "uc_base": "1f91a-1f3fb",
      "uc_output": "1f91a-1f3fb",
      "uc_match": "1f91a-1f3fb",
      "uc_greedy": "1f91a-1f3fb",
      "shortnames": [":back_of_hand_tone1:"],
      "category": "people"
    },
    ":raised_back_of_hand_tone2:": {
      "uc_base": "1f91a-1f3fc",
      "uc_output": "1f91a-1f3fc",
      "uc_match": "1f91a-1f3fc",
      "uc_greedy": "1f91a-1f3fc",
      "shortnames": [":back_of_hand_tone2:"],
      "category": "people"
    },
    ":raised_back_of_hand_tone3:": {
      "uc_base": "1f91a-1f3fd",
      "uc_output": "1f91a-1f3fd",
      "uc_match": "1f91a-1f3fd",
      "uc_greedy": "1f91a-1f3fd",
      "shortnames": [":back_of_hand_tone3:"],
      "category": "people"
    },
    ":raised_back_of_hand_tone4:": {
      "uc_base": "1f91a-1f3fe",
      "uc_output": "1f91a-1f3fe",
      "uc_match": "1f91a-1f3fe",
      "uc_greedy": "1f91a-1f3fe",
      "shortnames": [":back_of_hand_tone4:"],
      "category": "people"
    },
    ":raised_back_of_hand_tone5:": {
      "uc_base": "1f91a-1f3ff",
      "uc_output": "1f91a-1f3ff",
      "uc_match": "1f91a-1f3ff",
      "uc_greedy": "1f91a-1f3ff",
      "shortnames": [":back_of_hand_tone5:"],
      "category": "people"
    },
    ":raised_hands_tone1:": {
      "uc_base": "1f64c-1f3fb",
      "uc_output": "1f64c-1f3fb",
      "uc_match": "1f64c-1f3fb",
      "uc_greedy": "1f64c-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hands_tone2:": {
      "uc_base": "1f64c-1f3fc",
      "uc_output": "1f64c-1f3fc",
      "uc_match": "1f64c-1f3fc",
      "uc_greedy": "1f64c-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hands_tone3:": {
      "uc_base": "1f64c-1f3fd",
      "uc_output": "1f64c-1f3fd",
      "uc_match": "1f64c-1f3fd",
      "uc_greedy": "1f64c-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hands_tone4:": {
      "uc_base": "1f64c-1f3fe",
      "uc_output": "1f64c-1f3fe",
      "uc_match": "1f64c-1f3fe",
      "uc_greedy": "1f64c-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hands_tone5:": {
      "uc_base": "1f64c-1f3ff",
      "uc_output": "1f64c-1f3ff",
      "uc_match": "1f64c-1f3ff",
      "uc_greedy": "1f64c-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":right_facing_fist_tone1:": {
      "uc_base": "1f91c-1f3fb",
      "uc_output": "1f91c-1f3fb",
      "uc_match": "1f91c-1f3fb",
      "uc_greedy": "1f91c-1f3fb",
      "shortnames": [":right_fist_tone1:"],
      "category": "people"
    },
    ":right_facing_fist_tone2:": {
      "uc_base": "1f91c-1f3fc",
      "uc_output": "1f91c-1f3fc",
      "uc_match": "1f91c-1f3fc",
      "uc_greedy": "1f91c-1f3fc",
      "shortnames": [":right_fist_tone2:"],
      "category": "people"
    },
    ":right_facing_fist_tone3:": {
      "uc_base": "1f91c-1f3fd",
      "uc_output": "1f91c-1f3fd",
      "uc_match": "1f91c-1f3fd",
      "uc_greedy": "1f91c-1f3fd",
      "shortnames": [":right_fist_tone3:"],
      "category": "people"
    },
    ":right_facing_fist_tone4:": {
      "uc_base": "1f91c-1f3fe",
      "uc_output": "1f91c-1f3fe",
      "uc_match": "1f91c-1f3fe",
      "uc_greedy": "1f91c-1f3fe",
      "shortnames": [":right_fist_tone4:"],
      "category": "people"
    },
    ":right_facing_fist_tone5:": {
      "uc_base": "1f91c-1f3ff",
      "uc_output": "1f91c-1f3ff",
      "uc_match": "1f91c-1f3ff",
      "uc_greedy": "1f91c-1f3ff",
      "shortnames": [":right_fist_tone5:"],
      "category": "people"
    },
    ":santa_tone1:": {
      "uc_base": "1f385-1f3fb",
      "uc_output": "1f385-1f3fb",
      "uc_match": "1f385-1f3fb",
      "uc_greedy": "1f385-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":santa_tone2:": {
      "uc_base": "1f385-1f3fc",
      "uc_output": "1f385-1f3fc",
      "uc_match": "1f385-1f3fc",
      "uc_greedy": "1f385-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":santa_tone3:": {
      "uc_base": "1f385-1f3fd",
      "uc_output": "1f385-1f3fd",
      "uc_match": "1f385-1f3fd",
      "uc_greedy": "1f385-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":santa_tone4:": {
      "uc_base": "1f385-1f3fe",
      "uc_output": "1f385-1f3fe",
      "uc_match": "1f385-1f3fe",
      "uc_greedy": "1f385-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":santa_tone5:": {
      "uc_base": "1f385-1f3ff",
      "uc_output": "1f385-1f3ff",
      "uc_match": "1f385-1f3ff",
      "uc_greedy": "1f385-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":selfie_tone1:": {
      "uc_base": "1f933-1f3fb",
      "uc_output": "1f933-1f3fb",
      "uc_match": "1f933-1f3fb",
      "uc_greedy": "1f933-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":selfie_tone2:": {
      "uc_base": "1f933-1f3fc",
      "uc_output": "1f933-1f3fc",
      "uc_match": "1f933-1f3fc",
      "uc_greedy": "1f933-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":selfie_tone3:": {
      "uc_base": "1f933-1f3fd",
      "uc_output": "1f933-1f3fd",
      "uc_match": "1f933-1f3fd",
      "uc_greedy": "1f933-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":selfie_tone4:": {
      "uc_base": "1f933-1f3fe",
      "uc_output": "1f933-1f3fe",
      "uc_match": "1f933-1f3fe",
      "uc_greedy": "1f933-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":selfie_tone5:": {
      "uc_base": "1f933-1f3ff",
      "uc_output": "1f933-1f3ff",
      "uc_match": "1f933-1f3ff",
      "uc_greedy": "1f933-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":snowboarder_tone1:": {
      "uc_base": "1f3c2-1f3fb",
      "uc_output": "1f3c2-1f3fb",
      "uc_match": "1f3c2-1f3fb",
      "uc_greedy": "1f3c2-1f3fb",
      "shortnames": [":snowboarder_light_skin_tone:"],
      "category": "activity"
    },
    ":snowboarder_tone2:": {
      "uc_base": "1f3c2-1f3fc",
      "uc_output": "1f3c2-1f3fc",
      "uc_match": "1f3c2-1f3fc",
      "uc_greedy": "1f3c2-1f3fc",
      "shortnames": [":snowboarder_medium_light_skin_tone:"],
      "category": "activity"
    },
    ":snowboarder_tone3:": {
      "uc_base": "1f3c2-1f3fd",
      "uc_output": "1f3c2-1f3fd",
      "uc_match": "1f3c2-1f3fd",
      "uc_greedy": "1f3c2-1f3fd",
      "shortnames": [":snowboarder_medium_skin_tone:"],
      "category": "activity"
    },
    ":snowboarder_tone4:": {
      "uc_base": "1f3c2-1f3fe",
      "uc_output": "1f3c2-1f3fe",
      "uc_match": "1f3c2-1f3fe",
      "uc_greedy": "1f3c2-1f3fe",
      "shortnames": [":snowboarder_medium_dark_skin_tone:"],
      "category": "activity"
    },
    ":snowboarder_tone5:": {
      "uc_base": "1f3c2-1f3ff",
      "uc_output": "1f3c2-1f3ff",
      "uc_match": "1f3c2-1f3ff",
      "uc_greedy": "1f3c2-1f3ff",
      "shortnames": [":snowboarder_dark_skin_tone:"],
      "category": "activity"
    },
    ":thumbsdown_tone1:": {
      "uc_base": "1f44e-1f3fb",
      "uc_output": "1f44e-1f3fb",
      "uc_match": "1f44e-1f3fb",
      "uc_greedy": "1f44e-1f3fb",
      "shortnames": [":-1_tone1:", ":thumbdown_tone1:"],
      "category": "people"
    },
    ":thumbsdown_tone2:": {
      "uc_base": "1f44e-1f3fc",
      "uc_output": "1f44e-1f3fc",
      "uc_match": "1f44e-1f3fc",
      "uc_greedy": "1f44e-1f3fc",
      "shortnames": [":-1_tone2:", ":thumbdown_tone2:"],
      "category": "people"
    },
    ":thumbsdown_tone3:": {
      "uc_base": "1f44e-1f3fd",
      "uc_output": "1f44e-1f3fd",
      "uc_match": "1f44e-1f3fd",
      "uc_greedy": "1f44e-1f3fd",
      "shortnames": [":-1_tone3:", ":thumbdown_tone3:"],
      "category": "people"
    },
    ":thumbsdown_tone4:": {
      "uc_base": "1f44e-1f3fe",
      "uc_output": "1f44e-1f3fe",
      "uc_match": "1f44e-1f3fe",
      "uc_greedy": "1f44e-1f3fe",
      "shortnames": [":-1_tone4:", ":thumbdown_tone4:"],
      "category": "people"
    },
    ":thumbsdown_tone5:": {
      "uc_base": "1f44e-1f3ff",
      "uc_output": "1f44e-1f3ff",
      "uc_match": "1f44e-1f3ff",
      "uc_greedy": "1f44e-1f3ff",
      "shortnames": [":-1_tone5:", ":thumbdown_tone5:"],
      "category": "people"
    },
    ":thumbsup_tone1:": {
      "uc_base": "1f44d-1f3fb",
      "uc_output": "1f44d-1f3fb",
      "uc_match": "1f44d-1f3fb",
      "uc_greedy": "1f44d-1f3fb",
      "shortnames": [":+1_tone1:", ":thumbup_tone1:"],
      "category": "people"
    },
    ":thumbsup_tone2:": {
      "uc_base": "1f44d-1f3fc",
      "uc_output": "1f44d-1f3fc",
      "uc_match": "1f44d-1f3fc",
      "uc_greedy": "1f44d-1f3fc",
      "shortnames": [":+1_tone2:", ":thumbup_tone2:"],
      "category": "people"
    },
    ":thumbsup_tone3:": {
      "uc_base": "1f44d-1f3fd",
      "uc_output": "1f44d-1f3fd",
      "uc_match": "1f44d-1f3fd",
      "uc_greedy": "1f44d-1f3fd",
      "shortnames": [":+1_tone3:", ":thumbup_tone3:"],
      "category": "people"
    },
    ":thumbsup_tone4:": {
      "uc_base": "1f44d-1f3fe",
      "uc_output": "1f44d-1f3fe",
      "uc_match": "1f44d-1f3fe",
      "uc_greedy": "1f44d-1f3fe",
      "shortnames": [":+1_tone4:", ":thumbup_tone4:"],
      "category": "people"
    },
    ":thumbsup_tone5:": {
      "uc_base": "1f44d-1f3ff",
      "uc_output": "1f44d-1f3ff",
      "uc_match": "1f44d-1f3ff",
      "uc_greedy": "1f44d-1f3ff",
      "shortnames": [":+1_tone5:", ":thumbup_tone5:"],
      "category": "people"
    },
    ":united_nations:": {
      "uc_base": "1f1fa-1f1f3",
      "uc_output": "1f1fa-1f1f3",
      "uc_match": "1f1fa-1f1f3",
      "uc_greedy": "1f1fa-1f1f3",
      "shortnames": [],
      "category": "flags"
    },
    ":vampire_tone1:": {
      "uc_base": "1f9db-1f3fb",
      "uc_output": "1f9db-1f3fb",
      "uc_match": "1f9db-1f3fb",
      "uc_greedy": "1f9db-1f3fb",
      "shortnames": [":vampire_light_skin_tone:"],
      "category": "people"
    },
    ":vampire_tone2:": {
      "uc_base": "1f9db-1f3fc",
      "uc_output": "1f9db-1f3fc",
      "uc_match": "1f9db-1f3fc",
      "uc_greedy": "1f9db-1f3fc",
      "shortnames": [":vampire_medium_light_skin_tone:"],
      "category": "people"
    },
    ":vampire_tone3:": {
      "uc_base": "1f9db-1f3fd",
      "uc_output": "1f9db-1f3fd",
      "uc_match": "1f9db-1f3fd",
      "uc_greedy": "1f9db-1f3fd",
      "shortnames": [":vampire_medium_skin_tone:"],
      "category": "people"
    },
    ":vampire_tone4:": {
      "uc_base": "1f9db-1f3fe",
      "uc_output": "1f9db-1f3fe",
      "uc_match": "1f9db-1f3fe",
      "uc_greedy": "1f9db-1f3fe",
      "shortnames": [":vampire_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":vampire_tone5:": {
      "uc_base": "1f9db-1f3ff",
      "uc_output": "1f9db-1f3ff",
      "uc_match": "1f9db-1f3ff",
      "uc_greedy": "1f9db-1f3ff",
      "shortnames": [":vampire_dark_skin_tone:"],
      "category": "people"
    },
    ":vulcan_tone1:": {
      "uc_base": "1f596-1f3fb",
      "uc_output": "1f596-1f3fb",
      "uc_match": "1f596-1f3fb",
      "uc_greedy": "1f596-1f3fb",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers_tone1:"],
      "category": "people"
    },
    ":vulcan_tone2:": {
      "uc_base": "1f596-1f3fc",
      "uc_output": "1f596-1f3fc",
      "uc_match": "1f596-1f3fc",
      "uc_greedy": "1f596-1f3fc",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers_tone2:"],
      "category": "people"
    },
    ":vulcan_tone3:": {
      "uc_base": "1f596-1f3fd",
      "uc_output": "1f596-1f3fd",
      "uc_match": "1f596-1f3fd",
      "uc_greedy": "1f596-1f3fd",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers_tone3:"],
      "category": "people"
    },
    ":vulcan_tone4:": {
      "uc_base": "1f596-1f3fe",
      "uc_output": "1f596-1f3fe",
      "uc_match": "1f596-1f3fe",
      "uc_greedy": "1f596-1f3fe",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers_tone4:"],
      "category": "people"
    },
    ":vulcan_tone5:": {
      "uc_base": "1f596-1f3ff",
      "uc_output": "1f596-1f3ff",
      "uc_match": "1f596-1f3ff",
      "uc_greedy": "1f596-1f3ff",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers_tone5:"],
      "category": "people"
    },
    ":wave_tone1:": {
      "uc_base": "1f44b-1f3fb",
      "uc_output": "1f44b-1f3fb",
      "uc_match": "1f44b-1f3fb",
      "uc_greedy": "1f44b-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":wave_tone2:": {
      "uc_base": "1f44b-1f3fc",
      "uc_output": "1f44b-1f3fc",
      "uc_match": "1f44b-1f3fc",
      "uc_greedy": "1f44b-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":wave_tone3:": {
      "uc_base": "1f44b-1f3fd",
      "uc_output": "1f44b-1f3fd",
      "uc_match": "1f44b-1f3fd",
      "uc_greedy": "1f44b-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":wave_tone4:": {
      "uc_base": "1f44b-1f3fe",
      "uc_output": "1f44b-1f3fe",
      "uc_match": "1f44b-1f3fe",
      "uc_greedy": "1f44b-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":wave_tone5:": {
      "uc_base": "1f44b-1f3ff",
      "uc_output": "1f44b-1f3ff",
      "uc_match": "1f44b-1f3ff",
      "uc_greedy": "1f44b-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":woman_tone1:": {
      "uc_base": "1f469-1f3fb",
      "uc_output": "1f469-1f3fb",
      "uc_match": "1f469-1f3fb",
      "uc_greedy": "1f469-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":woman_tone2:": {
      "uc_base": "1f469-1f3fc",
      "uc_output": "1f469-1f3fc",
      "uc_match": "1f469-1f3fc",
      "uc_greedy": "1f469-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":woman_tone3:": {
      "uc_base": "1f469-1f3fd",
      "uc_output": "1f469-1f3fd",
      "uc_match": "1f469-1f3fd",
      "uc_greedy": "1f469-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":woman_tone4:": {
      "uc_base": "1f469-1f3fe",
      "uc_output": "1f469-1f3fe",
      "uc_match": "1f469-1f3fe",
      "uc_greedy": "1f469-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":woman_tone5:": {
      "uc_base": "1f469-1f3ff",
      "uc_output": "1f469-1f3ff",
      "uc_match": "1f469-1f3ff",
      "uc_greedy": "1f469-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":woman_with_headscarf_tone1:": {
      "uc_base": "1f9d5-1f3fb",
      "uc_output": "1f9d5-1f3fb",
      "uc_match": "1f9d5-1f3fb",
      "uc_greedy": "1f9d5-1f3fb",
      "shortnames": [":woman_with_headscarf_light_skin_tone:"],
      "category": "people"
    },
    ":woman_with_headscarf_tone2:": {
      "uc_base": "1f9d5-1f3fc",
      "uc_output": "1f9d5-1f3fc",
      "uc_match": "1f9d5-1f3fc",
      "uc_greedy": "1f9d5-1f3fc",
      "shortnames": [":woman_with_headscarf_medium_light_skin_tone:"],
      "category": "people"
    },
    ":woman_with_headscarf_tone3:": {
      "uc_base": "1f9d5-1f3fd",
      "uc_output": "1f9d5-1f3fd",
      "uc_match": "1f9d5-1f3fd",
      "uc_greedy": "1f9d5-1f3fd",
      "shortnames": [":woman_with_headscarf_medium_skin_tone:"],
      "category": "people"
    },
    ":woman_with_headscarf_tone4:": {
      "uc_base": "1f9d5-1f3fe",
      "uc_output": "1f9d5-1f3fe",
      "uc_match": "1f9d5-1f3fe",
      "uc_greedy": "1f9d5-1f3fe",
      "shortnames": [":woman_with_headscarf_medium_dark_skin_tone:"],
      "category": "people"
    },
    ":woman_with_headscarf_tone5:": {
      "uc_base": "1f9d5-1f3ff",
      "uc_output": "1f9d5-1f3ff",
      "uc_match": "1f9d5-1f3ff",
      "uc_greedy": "1f9d5-1f3ff",
      "shortnames": [":woman_with_headscarf_dark_skin_tone:"],
      "category": "people"
    },
    ":fist_tone1:": {
      "uc_base": "270a-1f3fb",
      "uc_output": "270a-1f3fb",
      "uc_match": "270a-1f3fb",
      "uc_greedy": "270a-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":fist_tone2:": {
      "uc_base": "270a-1f3fc",
      "uc_output": "270a-1f3fc",
      "uc_match": "270a-1f3fc",
      "uc_greedy": "270a-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":fist_tone3:": {
      "uc_base": "270a-1f3fd",
      "uc_output": "270a-1f3fd",
      "uc_match": "270a-1f3fd",
      "uc_greedy": "270a-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":fist_tone4:": {
      "uc_base": "270a-1f3fe",
      "uc_output": "270a-1f3fe",
      "uc_match": "270a-1f3fe",
      "uc_greedy": "270a-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":fist_tone5:": {
      "uc_base": "270a-1f3ff",
      "uc_output": "270a-1f3ff",
      "uc_match": "270a-1f3ff",
      "uc_greedy": "270a-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":person_bouncing_ball_tone1:": {
      "uc_base": "26f9-1f3fb",
      "uc_output": "26f9-1f3fb",
      "uc_match": "26f9-fe0f-1f3fb",
      "uc_greedy": "26f9-fe0f-1f3fb",
      "shortnames": [":basketball_player_tone1:", ":person_with_ball_tone1:"],
      "category": "activity"
    },
    ":person_bouncing_ball_tone2:": {
      "uc_base": "26f9-1f3fc",
      "uc_output": "26f9-1f3fc",
      "uc_match": "26f9-fe0f-1f3fc",
      "uc_greedy": "26f9-fe0f-1f3fc",
      "shortnames": [":basketball_player_tone2:", ":person_with_ball_tone2:"],
      "category": "activity"
    },
    ":person_bouncing_ball_tone3:": {
      "uc_base": "26f9-1f3fd",
      "uc_output": "26f9-1f3fd",
      "uc_match": "26f9-fe0f-1f3fd",
      "uc_greedy": "26f9-fe0f-1f3fd",
      "shortnames": [":basketball_player_tone3:", ":person_with_ball_tone3:"],
      "category": "activity"
    },
    ":person_bouncing_ball_tone4:": {
      "uc_base": "26f9-1f3fe",
      "uc_output": "26f9-1f3fe",
      "uc_match": "26f9-fe0f-1f3fe",
      "uc_greedy": "26f9-fe0f-1f3fe",
      "shortnames": [":basketball_player_tone4:", ":person_with_ball_tone4:"],
      "category": "activity"
    },
    ":person_bouncing_ball_tone5:": {
      "uc_base": "26f9-1f3ff",
      "uc_output": "26f9-1f3ff",
      "uc_match": "26f9-fe0f-1f3ff",
      "uc_greedy": "26f9-fe0f-1f3ff",
      "shortnames": [":basketball_player_tone5:", ":person_with_ball_tone5:"],
      "category": "activity"
    },
    ":point_up_tone1:": {
      "uc_base": "261d-1f3fb",
      "uc_output": "261d-1f3fb",
      "uc_match": "261d-fe0f-1f3fb",
      "uc_greedy": "261d-fe0f-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_tone2:": {
      "uc_base": "261d-1f3fc",
      "uc_output": "261d-1f3fc",
      "uc_match": "261d-fe0f-1f3fc",
      "uc_greedy": "261d-fe0f-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_tone3:": {
      "uc_base": "261d-1f3fd",
      "uc_output": "261d-1f3fd",
      "uc_match": "261d-fe0f-1f3fd",
      "uc_greedy": "261d-fe0f-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_tone4:": {
      "uc_base": "261d-1f3fe",
      "uc_output": "261d-1f3fe",
      "uc_match": "261d-fe0f-1f3fe",
      "uc_greedy": "261d-fe0f-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_tone5:": {
      "uc_base": "261d-1f3ff",
      "uc_output": "261d-1f3ff",
      "uc_match": "261d-fe0f-1f3ff",
      "uc_greedy": "261d-fe0f-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hand_tone1:": {
      "uc_base": "270b-1f3fb",
      "uc_output": "270b-1f3fb",
      "uc_match": "270b-1f3fb",
      "uc_greedy": "270b-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hand_tone2:": {
      "uc_base": "270b-1f3fc",
      "uc_output": "270b-1f3fc",
      "uc_match": "270b-1f3fc",
      "uc_greedy": "270b-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hand_tone3:": {
      "uc_base": "270b-1f3fd",
      "uc_output": "270b-1f3fd",
      "uc_match": "270b-1f3fd",
      "uc_greedy": "270b-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hand_tone4:": {
      "uc_base": "270b-1f3fe",
      "uc_output": "270b-1f3fe",
      "uc_match": "270b-1f3fe",
      "uc_greedy": "270b-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":raised_hand_tone5:": {
      "uc_base": "270b-1f3ff",
      "uc_output": "270b-1f3ff",
      "uc_match": "270b-1f3ff",
      "uc_greedy": "270b-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":v_tone1:": {
      "uc_base": "270c-1f3fb",
      "uc_output": "270c-1f3fb",
      "uc_match": "270c-fe0f-1f3fb",
      "uc_greedy": "270c-fe0f-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":v_tone2:": {
      "uc_base": "270c-1f3fc",
      "uc_output": "270c-1f3fc",
      "uc_match": "270c-fe0f-1f3fc",
      "uc_greedy": "270c-fe0f-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":v_tone3:": {
      "uc_base": "270c-1f3fd",
      "uc_output": "270c-1f3fd",
      "uc_match": "270c-fe0f-1f3fd",
      "uc_greedy": "270c-fe0f-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":v_tone4:": {
      "uc_base": "270c-1f3fe",
      "uc_output": "270c-1f3fe",
      "uc_match": "270c-fe0f-1f3fe",
      "uc_greedy": "270c-fe0f-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":v_tone5:": {
      "uc_base": "270c-1f3ff",
      "uc_output": "270c-1f3ff",
      "uc_match": "270c-fe0f-1f3ff",
      "uc_greedy": "270c-fe0f-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":writing_hand_tone1:": {
      "uc_base": "270d-1f3fb",
      "uc_output": "270d-1f3fb",
      "uc_match": "270d-fe0f-1f3fb",
      "uc_greedy": "270d-fe0f-1f3fb",
      "shortnames": [],
      "category": "people"
    },
    ":writing_hand_tone2:": {
      "uc_base": "270d-1f3fc",
      "uc_output": "270d-1f3fc",
      "uc_match": "270d-fe0f-1f3fc",
      "uc_greedy": "270d-fe0f-1f3fc",
      "shortnames": [],
      "category": "people"
    },
    ":writing_hand_tone3:": {
      "uc_base": "270d-1f3fd",
      "uc_output": "270d-1f3fd",
      "uc_match": "270d-fe0f-1f3fd",
      "uc_greedy": "270d-fe0f-1f3fd",
      "shortnames": [],
      "category": "people"
    },
    ":writing_hand_tone4:": {
      "uc_base": "270d-1f3fe",
      "uc_output": "270d-1f3fe",
      "uc_match": "270d-fe0f-1f3fe",
      "uc_greedy": "270d-fe0f-1f3fe",
      "shortnames": [],
      "category": "people"
    },
    ":writing_hand_tone5:": {
      "uc_base": "270d-1f3ff",
      "uc_output": "270d-1f3ff",
      "uc_match": "270d-fe0f-1f3ff",
      "uc_greedy": "270d-fe0f-1f3ff",
      "shortnames": [],
      "category": "people"
    },
    ":100:": {
      "uc_base": "1f4af",
      "uc_output": "1f4af",
      "uc_match": "1f4af",
      "uc_greedy": "1f4af",
      "shortnames": [],
      "category": "symbols"
    },
    ":1234:": {
      "uc_base": "1f522",
      "uc_output": "1f522",
      "uc_match": "1f522",
      "uc_greedy": "1f522",
      "shortnames": [],
      "category": "symbols"
    },
    ":8ball:": {
      "uc_base": "1f3b1",
      "uc_output": "1f3b1",
      "uc_match": "1f3b1",
      "uc_greedy": "1f3b1",
      "shortnames": [],
      "category": "activity"
    },
    ":a:": {
      "uc_base": "1f170",
      "uc_output": "1f170",
      "uc_match": "1f170-fe0f",
      "uc_greedy": "1f170-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":ab:": {
      "uc_base": "1f18e",
      "uc_output": "1f18e",
      "uc_match": "1f18e",
      "uc_greedy": "1f18e",
      "shortnames": [],
      "category": "symbols"
    },
    ":abc:": {
      "uc_base": "1f524",
      "uc_output": "1f524",
      "uc_match": "1f524",
      "uc_greedy": "1f524",
      "shortnames": [],
      "category": "symbols"
    },
    ":abcd:": {
      "uc_base": "1f521",
      "uc_output": "1f521",
      "uc_match": "1f521",
      "uc_greedy": "1f521",
      "shortnames": [],
      "category": "symbols"
    },
    ":accept:": {
      "uc_base": "1f251",
      "uc_output": "1f251",
      "uc_match": "1f251",
      "uc_greedy": "1f251",
      "shortnames": [],
      "category": "symbols"
    },
    ":adult:": {
      "uc_base": "1f9d1",
      "uc_output": "1f9d1",
      "uc_match": "1f9d1",
      "uc_greedy": "1f9d1",
      "shortnames": [],
      "category": "people"
    },
    ":aerial_tramway:": {
      "uc_base": "1f6a1",
      "uc_output": "1f6a1",
      "uc_match": "1f6a1",
      "uc_greedy": "1f6a1",
      "shortnames": [],
      "category": "travel"
    },
    ":airplane_arriving:": {
      "uc_base": "1f6ec",
      "uc_output": "1f6ec",
      "uc_match": "1f6ec",
      "uc_greedy": "1f6ec",
      "shortnames": [],
      "category": "travel"
    },
    ":airplane_departure:": {
      "uc_base": "1f6eb",
      "uc_output": "1f6eb",
      "uc_match": "1f6eb",
      "uc_greedy": "1f6eb",
      "shortnames": [],
      "category": "travel"
    },
    ":airplane_small:": {
      "uc_base": "1f6e9",
      "uc_output": "1f6e9",
      "uc_match": "1f6e9-fe0f",
      "uc_greedy": "1f6e9-fe0f",
      "shortnames": [":small_airplane:"],
      "category": "travel"
    },
    ":alien:": {
      "uc_base": "1f47d",
      "uc_output": "1f47d",
      "uc_match": "1f47d-fe0f",
      "uc_greedy": "1f47d-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":ambulance:": {
      "uc_base": "1f691",
      "uc_output": "1f691",
      "uc_match": "1f691-fe0f",
      "uc_greedy": "1f691-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":amphora:": {
      "uc_base": "1f3fa",
      "uc_output": "1f3fa",
      "uc_match": "1f3fa",
      "uc_greedy": "1f3fa",
      "shortnames": [],
      "category": "objects"
    },
    ":angel:": {
      "uc_base": "1f47c",
      "uc_output": "1f47c",
      "uc_match": "1f47c",
      "uc_greedy": "1f47c",
      "shortnames": [],
      "category": "people"
    },
    ":anger:": {
      "uc_base": "1f4a2",
      "uc_output": "1f4a2",
      "uc_match": "1f4a2",
      "uc_greedy": "1f4a2",
      "shortnames": [],
      "category": "symbols"
    },
    ":anger_right:": {
      "uc_base": "1f5ef",
      "uc_output": "1f5ef",
      "uc_match": "1f5ef-fe0f",
      "uc_greedy": "1f5ef-fe0f",
      "shortnames": [":right_anger_bubble:"],
      "category": "symbols"
    },
    ":angry:": {
      "uc_base": "1f620",
      "uc_output": "1f620",
      "uc_match": "1f620",
      "uc_greedy": "1f620",
      "shortnames": [],
      "category": "people"
    },
    ":anguished:": {
      "uc_base": "1f627",
      "uc_output": "1f627",
      "uc_match": "1f627",
      "uc_greedy": "1f627",
      "shortnames": [],
      "category": "people"
    },
    ":ant:": {
      "uc_base": "1f41c",
      "uc_output": "1f41c",
      "uc_match": "1f41c",
      "uc_greedy": "1f41c",
      "shortnames": [],
      "category": "nature"
    },
    ":apple:": {
      "uc_base": "1f34e",
      "uc_output": "1f34e",
      "uc_match": "1f34e",
      "uc_greedy": "1f34e",
      "shortnames": [],
      "category": "food"
    },
    ":arrow_down_small:": {
      "uc_base": "1f53d",
      "uc_output": "1f53d",
      "uc_match": "1f53d",
      "uc_greedy": "1f53d",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_up_small:": {
      "uc_base": "1f53c",
      "uc_output": "1f53c",
      "uc_match": "1f53c",
      "uc_greedy": "1f53c",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrows_clockwise:": {
      "uc_base": "1f503",
      "uc_output": "1f503",
      "uc_match": "1f503",
      "uc_greedy": "1f503",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrows_counterclockwise:": {
      "uc_base": "1f504",
      "uc_output": "1f504",
      "uc_match": "1f504",
      "uc_greedy": "1f504",
      "shortnames": [],
      "category": "symbols"
    },
    ":art:": {
      "uc_base": "1f3a8",
      "uc_output": "1f3a8",
      "uc_match": "1f3a8",
      "uc_greedy": "1f3a8",
      "shortnames": [],
      "category": "activity"
    },
    ":articulated_lorry:": {
      "uc_base": "1f69b",
      "uc_output": "1f69b",
      "uc_match": "1f69b",
      "uc_greedy": "1f69b",
      "shortnames": [],
      "category": "travel"
    },
    ":astonished:": {
      "uc_base": "1f632",
      "uc_output": "1f632",
      "uc_match": "1f632",
      "uc_greedy": "1f632",
      "shortnames": [],
      "category": "people"
    },
    ":athletic_shoe:": {
      "uc_base": "1f45f",
      "uc_output": "1f45f",
      "uc_match": "1f45f",
      "uc_greedy": "1f45f",
      "shortnames": [],
      "category": "people"
    },
    ":atm:": {
      "uc_base": "1f3e7",
      "uc_output": "1f3e7",
      "uc_match": "1f3e7",
      "uc_greedy": "1f3e7",
      "shortnames": [],
      "category": "symbols"
    },
    ":avocado:": {
      "uc_base": "1f951",
      "uc_output": "1f951",
      "uc_match": "1f951",
      "uc_greedy": "1f951",
      "shortnames": [],
      "category": "food"
    },
    ":b:": {
      "uc_base": "1f171",
      "uc_output": "1f171",
      "uc_match": "1f171-fe0f",
      "uc_greedy": "1f171-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":baby:": {
      "uc_base": "1f476",
      "uc_output": "1f476",
      "uc_match": "1f476",
      "uc_greedy": "1f476",
      "shortnames": [],
      "category": "people"
    },
    ":baby_bottle:": {
      "uc_base": "1f37c",
      "uc_output": "1f37c",
      "uc_match": "1f37c",
      "uc_greedy": "1f37c",
      "shortnames": [],
      "category": "food"
    },
    ":baby_chick:": {
      "uc_base": "1f424",
      "uc_output": "1f424",
      "uc_match": "1f424",
      "uc_greedy": "1f424",
      "shortnames": [],
      "category": "nature"
    },
    ":baby_symbol:": {
      "uc_base": "1f6bc",
      "uc_output": "1f6bc",
      "uc_match": "1f6bc-fe0f",
      "uc_greedy": "1f6bc-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":back:": {
      "uc_base": "1f519",
      "uc_output": "1f519",
      "uc_match": "1f519",
      "uc_greedy": "1f519",
      "shortnames": [],
      "category": "symbols"
    },
    ":bacon:": {
      "uc_base": "1f953",
      "uc_output": "1f953",
      "uc_match": "1f953",
      "uc_greedy": "1f953",
      "shortnames": [],
      "category": "food"
    },
    ":badminton:": {
      "uc_base": "1f3f8",
      "uc_output": "1f3f8",
      "uc_match": "1f3f8",
      "uc_greedy": "1f3f8",
      "shortnames": [],
      "category": "activity"
    },
    ":baggage_claim:": {
      "uc_base": "1f6c4",
      "uc_output": "1f6c4",
      "uc_match": "1f6c4",
      "uc_greedy": "1f6c4",
      "shortnames": [],
      "category": "symbols"
    },
    ":balloon:": {
      "uc_base": "1f388",
      "uc_output": "1f388",
      "uc_match": "1f388",
      "uc_greedy": "1f388",
      "shortnames": [],
      "category": "objects"
    },
    ":ballot_box:": {
      "uc_base": "1f5f3",
      "uc_output": "1f5f3",
      "uc_match": "1f5f3-fe0f",
      "uc_greedy": "1f5f3-fe0f",
      "shortnames": [":ballot_box_with_ballot:"],
      "category": "objects"
    },
    ":bamboo:": {
      "uc_base": "1f38d",
      "uc_output": "1f38d",
      "uc_match": "1f38d",
      "uc_greedy": "1f38d",
      "shortnames": [],
      "category": "nature"
    },
    ":banana:": {
      "uc_base": "1f34c",
      "uc_output": "1f34c",
      "uc_match": "1f34c",
      "uc_greedy": "1f34c",
      "shortnames": [],
      "category": "food"
    },
    ":bank:": {
      "uc_base": "1f3e6",
      "uc_output": "1f3e6",
      "uc_match": "1f3e6",
      "uc_greedy": "1f3e6",
      "shortnames": [],
      "category": "travel"
    },
    ":bar_chart:": {
      "uc_base": "1f4ca",
      "uc_output": "1f4ca",
      "uc_match": "1f4ca",
      "uc_greedy": "1f4ca",
      "shortnames": [],
      "category": "objects"
    },
    ":barber:": {
      "uc_base": "1f488",
      "uc_output": "1f488",
      "uc_match": "1f488",
      "uc_greedy": "1f488",
      "shortnames": [],
      "category": "objects"
    },
    ":basketball:": {
      "uc_base": "1f3c0",
      "uc_output": "1f3c0",
      "uc_match": "1f3c0",
      "uc_greedy": "1f3c0",
      "shortnames": [],
      "category": "activity"
    },
    ":bat:": {
      "uc_base": "1f987",
      "uc_output": "1f987",
      "uc_match": "1f987",
      "uc_greedy": "1f987",
      "shortnames": [],
      "category": "nature"
    },
    ":bath:": {
      "uc_base": "1f6c0",
      "uc_output": "1f6c0",
      "uc_match": "1f6c0",
      "uc_greedy": "1f6c0",
      "shortnames": [],
      "category": "objects"
    },
    ":bathtub:": {
      "uc_base": "1f6c1",
      "uc_output": "1f6c1",
      "uc_match": "1f6c1",
      "uc_greedy": "1f6c1",
      "shortnames": [],
      "category": "objects"
    },
    ":battery:": {
      "uc_base": "1f50b",
      "uc_output": "1f50b",
      "uc_match": "1f50b",
      "uc_greedy": "1f50b",
      "shortnames": [],
      "category": "objects"
    },
    ":beach:": {
      "uc_base": "1f3d6",
      "uc_output": "1f3d6",
      "uc_match": "1f3d6-fe0f",
      "uc_greedy": "1f3d6-fe0f",
      "shortnames": [":beach_with_umbrella:"],
      "category": "travel"
    },
    ":bear:": {
      "uc_base": "1f43b",
      "uc_output": "1f43b",
      "uc_match": "1f43b",
      "uc_greedy": "1f43b",
      "shortnames": [],
      "category": "nature"
    },
    ":bearded_person:": {
      "uc_base": "1f9d4",
      "uc_output": "1f9d4",
      "uc_match": "1f9d4",
      "uc_greedy": "1f9d4",
      "shortnames": [],
      "category": "people"
    },
    ":bed:": {
      "uc_base": "1f6cf",
      "uc_output": "1f6cf",
      "uc_match": "1f6cf-fe0f",
      "uc_greedy": "1f6cf-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":bee:": {
      "uc_base": "1f41d",
      "uc_output": "1f41d",
      "uc_match": "1f41d",
      "uc_greedy": "1f41d",
      "shortnames": [],
      "category": "nature"
    },
    ":beer:": {
      "uc_base": "1f37a",
      "uc_output": "1f37a",
      "uc_match": "1f37a",
      "uc_greedy": "1f37a",
      "shortnames": [],
      "category": "food"
    },
    ":beers:": {
      "uc_base": "1f37b",
      "uc_output": "1f37b",
      "uc_match": "1f37b",
      "uc_greedy": "1f37b",
      "shortnames": [],
      "category": "food"
    },
    ":beetle:": {
      "uc_base": "1f41e",
      "uc_output": "1f41e",
      "uc_match": "1f41e",
      "uc_greedy": "1f41e",
      "shortnames": [],
      "category": "nature"
    },
    ":beginner:": {
      "uc_base": "1f530",
      "uc_output": "1f530",
      "uc_match": "1f530",
      "uc_greedy": "1f530",
      "shortnames": [],
      "category": "symbols"
    },
    ":bell:": {
      "uc_base": "1f514",
      "uc_output": "1f514",
      "uc_match": "1f514",
      "uc_greedy": "1f514",
      "shortnames": [],
      "category": "symbols"
    },
    ":bellhop:": {
      "uc_base": "1f6ce",
      "uc_output": "1f6ce",
      "uc_match": "1f6ce-fe0f",
      "uc_greedy": "1f6ce-fe0f",
      "shortnames": [":bellhop_bell:"],
      "category": "objects"
    },
    ":bento:": {
      "uc_base": "1f371",
      "uc_output": "1f371",
      "uc_match": "1f371",
      "uc_greedy": "1f371",
      "shortnames": [],
      "category": "food"
    },
    ":bike:": {
      "uc_base": "1f6b2",
      "uc_output": "1f6b2",
      "uc_match": "1f6b2-fe0f",
      "uc_greedy": "1f6b2-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":bikini:": {
      "uc_base": "1f459",
      "uc_output": "1f459",
      "uc_match": "1f459",
      "uc_greedy": "1f459",
      "shortnames": [],
      "category": "people"
    },
    ":billed_cap:": {
      "uc_base": "1f9e2",
      "uc_output": "1f9e2",
      "uc_match": "1f9e2",
      "uc_greedy": "1f9e2",
      "shortnames": [],
      "category": "people"
    },
    ":bird:": {
      "uc_base": "1f426",
      "uc_output": "1f426",
      "uc_match": "1f426-fe0f",
      "uc_greedy": "1f426-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":birthday:": {
      "uc_base": "1f382",
      "uc_output": "1f382",
      "uc_match": "1f382",
      "uc_greedy": "1f382",
      "shortnames": [],
      "category": "food"
    },
    ":black_heart:": {
      "uc_base": "1f5a4",
      "uc_output": "1f5a4",
      "uc_match": "1f5a4",
      "uc_greedy": "1f5a4",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_joker:": {
      "uc_base": "1f0cf",
      "uc_output": "1f0cf",
      "uc_match": "1f0cf",
      "uc_greedy": "1f0cf",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_square_button:": {
      "uc_base": "1f532",
      "uc_output": "1f532",
      "uc_match": "1f532",
      "uc_greedy": "1f532",
      "shortnames": [],
      "category": "symbols"
    },
    ":blond_haired_person:": {
      "uc_base": "1f471",
      "uc_output": "1f471",
      "uc_match": "1f471",
      "uc_greedy": "1f471",
      "shortnames": [":person_with_blond_hair:"],
      "category": "people"
    },
    ":blossom:": {
      "uc_base": "1f33c",
      "uc_output": "1f33c",
      "uc_match": "1f33c",
      "uc_greedy": "1f33c",
      "shortnames": [],
      "category": "nature"
    },
    ":blowfish:": {
      "uc_base": "1f421",
      "uc_output": "1f421",
      "uc_match": "1f421",
      "uc_greedy": "1f421",
      "shortnames": [],
      "category": "nature"
    },
    ":blue_book:": {
      "uc_base": "1f4d8",
      "uc_output": "1f4d8",
      "uc_match": "1f4d8",
      "uc_greedy": "1f4d8",
      "shortnames": [],
      "category": "objects"
    },
    ":blue_car:": {
      "uc_base": "1f699",
      "uc_output": "1f699",
      "uc_match": "1f699",
      "uc_greedy": "1f699",
      "shortnames": [],
      "category": "travel"
    },
    ":blue_circle:": {
      "uc_base": "1f535",
      "uc_output": "1f535",
      "uc_match": "1f535",
      "uc_greedy": "1f535",
      "shortnames": [],
      "category": "symbols"
    },
    ":blue_heart:": {
      "uc_base": "1f499",
      "uc_output": "1f499",
      "uc_match": "1f499",
      "uc_greedy": "1f499",
      "shortnames": [],
      "category": "symbols"
    },
    ":blush:": {
      "uc_base": "1f60a",
      "uc_output": "1f60a",
      "uc_match": "1f60a",
      "uc_greedy": "1f60a",
      "shortnames": [],
      "category": "people"
    },
    ":boar:": {
      "uc_base": "1f417",
      "uc_output": "1f417",
      "uc_match": "1f417",
      "uc_greedy": "1f417",
      "shortnames": [],
      "category": "nature"
    },
    ":bomb:": {
      "uc_base": "1f4a3",
      "uc_output": "1f4a3",
      "uc_match": "1f4a3-fe0f",
      "uc_greedy": "1f4a3-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":book:": {
      "uc_base": "1f4d6",
      "uc_output": "1f4d6",
      "uc_match": "1f4d6",
      "uc_greedy": "1f4d6",
      "shortnames": [],
      "category": "objects"
    },
    ":bookmark:": {
      "uc_base": "1f516",
      "uc_output": "1f516",
      "uc_match": "1f516",
      "uc_greedy": "1f516",
      "shortnames": [],
      "category": "objects"
    },
    ":bookmark_tabs:": {
      "uc_base": "1f4d1",
      "uc_output": "1f4d1",
      "uc_match": "1f4d1",
      "uc_greedy": "1f4d1",
      "shortnames": [],
      "category": "objects"
    },
    ":books:": {
      "uc_base": "1f4da",
      "uc_output": "1f4da",
      "uc_match": "1f4da-fe0f",
      "uc_greedy": "1f4da-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":boom:": {
      "uc_base": "1f4a5",
      "uc_output": "1f4a5",
      "uc_match": "1f4a5",
      "uc_greedy": "1f4a5",
      "shortnames": [],
      "category": "nature"
    },
    ":boot:": {
      "uc_base": "1f462",
      "uc_output": "1f462",
      "uc_match": "1f462",
      "uc_greedy": "1f462",
      "shortnames": [],
      "category": "people"
    },
    ":bouquet:": {
      "uc_base": "1f490",
      "uc_output": "1f490",
      "uc_match": "1f490",
      "uc_greedy": "1f490",
      "shortnames": [],
      "category": "nature"
    },
    ":bow_and_arrow:": {
      "uc_base": "1f3f9",
      "uc_output": "1f3f9",
      "uc_match": "1f3f9",
      "uc_greedy": "1f3f9",
      "shortnames": [":archery:"],
      "category": "activity"
    },
    ":bowl_with_spoon:": {
      "uc_base": "1f963",
      "uc_output": "1f963",
      "uc_match": "1f963",
      "uc_greedy": "1f963",
      "shortnames": [],
      "category": "food"
    },
    ":bowling:": {
      "uc_base": "1f3b3",
      "uc_output": "1f3b3",
      "uc_match": "1f3b3",
      "uc_greedy": "1f3b3",
      "shortnames": [],
      "category": "activity"
    },
    ":boxing_glove:": {
      "uc_base": "1f94a",
      "uc_output": "1f94a",
      "uc_match": "1f94a",
      "uc_greedy": "1f94a",
      "shortnames": [":boxing_gloves:"],
      "category": "activity"
    },
    ":boy:": {
      "uc_base": "1f466",
      "uc_output": "1f466",
      "uc_match": "1f466",
      "uc_greedy": "1f466",
      "shortnames": [],
      "category": "people"
    },
    ":brain:": {
      "uc_base": "1f9e0",
      "uc_output": "1f9e0",
      "uc_match": "1f9e0",
      "uc_greedy": "1f9e0",
      "shortnames": [],
      "category": "people"
    },
    ":bread:": {
      "uc_base": "1f35e",
      "uc_output": "1f35e",
      "uc_match": "1f35e",
      "uc_greedy": "1f35e",
      "shortnames": [],
      "category": "food"
    },
    ":breast_feeding:": {
      "uc_base": "1f931",
      "uc_output": "1f931",
      "uc_match": "1f931",
      "uc_greedy": "1f931",
      "shortnames": [],
      "category": "people"
    },
    ":bride_with_veil:": {
      "uc_base": "1f470",
      "uc_output": "1f470",
      "uc_match": "1f470",
      "uc_greedy": "1f470",
      "shortnames": [],
      "category": "people"
    },
    ":bridge_at_night:": {
      "uc_base": "1f309",
      "uc_output": "1f309",
      "uc_match": "1f309",
      "uc_greedy": "1f309",
      "shortnames": [],
      "category": "travel"
    },
    ":briefcase:": {
      "uc_base": "1f4bc",
      "uc_output": "1f4bc",
      "uc_match": "1f4bc",
      "uc_greedy": "1f4bc",
      "shortnames": [],
      "category": "people"
    },
    ":broccoli:": {
      "uc_base": "1f966",
      "uc_output": "1f966",
      "uc_match": "1f966",
      "uc_greedy": "1f966",
      "shortnames": [],
      "category": "food"
    },
    ":broken_heart:": {
      "uc_base": "1f494",
      "uc_output": "1f494",
      "uc_match": "1f494",
      "uc_greedy": "1f494",
      "shortnames": [],
      "category": "symbols"
    },
    ":bug:": {
      "uc_base": "1f41b",
      "uc_output": "1f41b",
      "uc_match": "1f41b",
      "uc_greedy": "1f41b",
      "shortnames": [],
      "category": "nature"
    },
    ":bulb:": {
      "uc_base": "1f4a1",
      "uc_output": "1f4a1",
      "uc_match": "1f4a1",
      "uc_greedy": "1f4a1",
      "shortnames": [],
      "category": "objects"
    },
    ":bullettrain_front:": {
      "uc_base": "1f685",
      "uc_output": "1f685",
      "uc_match": "1f685",
      "uc_greedy": "1f685",
      "shortnames": [],
      "category": "travel"
    },
    ":bullettrain_side:": {
      "uc_base": "1f684",
      "uc_output": "1f684",
      "uc_match": "1f684",
      "uc_greedy": "1f684",
      "shortnames": [],
      "category": "travel"
    },
    ":burrito:": {
      "uc_base": "1f32f",
      "uc_output": "1f32f",
      "uc_match": "1f32f",
      "uc_greedy": "1f32f",
      "shortnames": [],
      "category": "food"
    },
    ":bus:": {
      "uc_base": "1f68c",
      "uc_output": "1f68c",
      "uc_match": "1f68c",
      "uc_greedy": "1f68c",
      "shortnames": [],
      "category": "travel"
    },
    ":busstop:": {
      "uc_base": "1f68f",
      "uc_output": "1f68f",
      "uc_match": "1f68f",
      "uc_greedy": "1f68f",
      "shortnames": [],
      "category": "travel"
    },
    ":bust_in_silhouette:": {
      "uc_base": "1f464",
      "uc_output": "1f464",
      "uc_match": "1f464",
      "uc_greedy": "1f464",
      "shortnames": [],
      "category": "people"
    },
    ":busts_in_silhouette:": {
      "uc_base": "1f465",
      "uc_output": "1f465",
      "uc_match": "1f465",
      "uc_greedy": "1f465",
      "shortnames": [],
      "category": "people"
    },
    ":butterfly:": {
      "uc_base": "1f98b",
      "uc_output": "1f98b",
      "uc_match": "1f98b",
      "uc_greedy": "1f98b",
      "shortnames": [],
      "category": "nature"
    },
    ":cactus:": {
      "uc_base": "1f335",
      "uc_output": "1f335",
      "uc_match": "1f335",
      "uc_greedy": "1f335",
      "shortnames": [],
      "category": "nature"
    },
    ":cake:": {
      "uc_base": "1f370",
      "uc_output": "1f370",
      "uc_match": "1f370",
      "uc_greedy": "1f370",
      "shortnames": [],
      "category": "food"
    },
    ":calendar:": {
      "uc_base": "1f4c6",
      "uc_output": "1f4c6",
      "uc_match": "1f4c6",
      "uc_greedy": "1f4c6",
      "shortnames": [],
      "category": "objects"
    },
    ":calendar_spiral:": {
      "uc_base": "1f5d3",
      "uc_output": "1f5d3",
      "uc_match": "1f5d3-fe0f",
      "uc_greedy": "1f5d3-fe0f",
      "shortnames": [":spiral_calendar_pad:"],
      "category": "objects"
    },
    ":call_me:": {
      "uc_base": "1f919",
      "uc_output": "1f919",
      "uc_match": "1f919",
      "uc_greedy": "1f919",
      "shortnames": [":call_me_hand:"],
      "category": "people"
    },
    ":calling:": {
      "uc_base": "1f4f2",
      "uc_output": "1f4f2",
      "uc_match": "1f4f2",
      "uc_greedy": "1f4f2",
      "shortnames": [],
      "category": "objects"
    },
    ":camel:": {
      "uc_base": "1f42b",
      "uc_output": "1f42b",
      "uc_match": "1f42b",
      "uc_greedy": "1f42b",
      "shortnames": [],
      "category": "nature"
    },
    ":camera:": {
      "uc_base": "1f4f7",
      "uc_output": "1f4f7",
      "uc_match": "1f4f7-fe0f",
      "uc_greedy": "1f4f7-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":camera_with_flash:": {
      "uc_base": "1f4f8",
      "uc_output": "1f4f8",
      "uc_match": "1f4f8",
      "uc_greedy": "1f4f8",
      "shortnames": [],
      "category": "objects"
    },
    ":camping:": {
      "uc_base": "1f3d5",
      "uc_output": "1f3d5",
      "uc_match": "1f3d5-fe0f",
      "uc_greedy": "1f3d5-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":candle:": {
      "uc_base": "1f56f",
      "uc_output": "1f56f",
      "uc_match": "1f56f-fe0f",
      "uc_greedy": "1f56f-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":candy:": {
      "uc_base": "1f36c",
      "uc_output": "1f36c",
      "uc_match": "1f36c",
      "uc_greedy": "1f36c",
      "shortnames": [],
      "category": "food"
    },
    ":canned_food:": {
      "uc_base": "1f96b",
      "uc_output": "1f96b",
      "uc_match": "1f96b",
      "uc_greedy": "1f96b",
      "shortnames": [],
      "category": "food"
    },
    ":canoe:": {
      "uc_base": "1f6f6",
      "uc_output": "1f6f6",
      "uc_match": "1f6f6",
      "uc_greedy": "1f6f6",
      "shortnames": [":kayak:"],
      "category": "travel"
    },
    ":capital_abcd:": {
      "uc_base": "1f520",
      "uc_output": "1f520",
      "uc_match": "1f520",
      "uc_greedy": "1f520",
      "shortnames": [],
      "category": "symbols"
    },
    ":card_box:": {
      "uc_base": "1f5c3",
      "uc_output": "1f5c3",
      "uc_match": "1f5c3-fe0f",
      "uc_greedy": "1f5c3-fe0f",
      "shortnames": [":card_file_box:"],
      "category": "objects"
    },
    ":card_index:": {
      "uc_base": "1f4c7",
      "uc_output": "1f4c7",
      "uc_match": "1f4c7",
      "uc_greedy": "1f4c7",
      "shortnames": [],
      "category": "objects"
    },
    ":carousel_horse:": {
      "uc_base": "1f3a0",
      "uc_output": "1f3a0",
      "uc_match": "1f3a0",
      "uc_greedy": "1f3a0",
      "shortnames": [],
      "category": "travel"
    },
    ":carrot:": {
      "uc_base": "1f955",
      "uc_output": "1f955",
      "uc_match": "1f955",
      "uc_greedy": "1f955",
      "shortnames": [],
      "category": "food"
    },
    ":cat2:": {
      "uc_base": "1f408",
      "uc_output": "1f408",
      "uc_match": "1f408-fe0f",
      "uc_greedy": "1f408-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":cat:": {
      "uc_base": "1f431",
      "uc_output": "1f431",
      "uc_match": "1f431",
      "uc_greedy": "1f431",
      "shortnames": [],
      "category": "nature"
    },
    ":cd:": {
      "uc_base": "1f4bf",
      "uc_output": "1f4bf",
      "uc_match": "1f4bf-fe0f",
      "uc_greedy": "1f4bf-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":champagne:": {
      "uc_base": "1f37e",
      "uc_output": "1f37e",
      "uc_match": "1f37e",
      "uc_greedy": "1f37e",
      "shortnames": [":bottle_with_popping_cork:"],
      "category": "food"
    },
    ":champagne_glass:": {
      "uc_base": "1f942",
      "uc_output": "1f942",
      "uc_match": "1f942",
      "uc_greedy": "1f942",
      "shortnames": [":clinking_glass:"],
      "category": "food"
    },
    ":chart:": {
      "uc_base": "1f4b9",
      "uc_output": "1f4b9",
      "uc_match": "1f4b9",
      "uc_greedy": "1f4b9",
      "shortnames": [],
      "category": "symbols"
    },
    ":chart_with_downwards_trend:": {
      "uc_base": "1f4c9",
      "uc_output": "1f4c9",
      "uc_match": "1f4c9",
      "uc_greedy": "1f4c9",
      "shortnames": [],
      "category": "objects"
    },
    ":chart_with_upwards_trend:": {
      "uc_base": "1f4c8",
      "uc_output": "1f4c8",
      "uc_match": "1f4c8",
      "uc_greedy": "1f4c8",
      "shortnames": [],
      "category": "objects"
    },
    ":checkered_flag:": {
      "uc_base": "1f3c1",
      "uc_output": "1f3c1",
      "uc_match": "1f3c1",
      "uc_greedy": "1f3c1",
      "shortnames": [],
      "category": "flags"
    },
    ":cheese:": {
      "uc_base": "1f9c0",
      "uc_output": "1f9c0",
      "uc_match": "1f9c0",
      "uc_greedy": "1f9c0",
      "shortnames": [":cheese_wedge:"],
      "category": "food"
    },
    ":cherries:": {
      "uc_base": "1f352",
      "uc_output": "1f352",
      "uc_match": "1f352",
      "uc_greedy": "1f352",
      "shortnames": [],
      "category": "food"
    },
    ":cherry_blossom:": {
      "uc_base": "1f338",
      "uc_output": "1f338",
      "uc_match": "1f338",
      "uc_greedy": "1f338",
      "shortnames": [],
      "category": "nature"
    },
    ":chestnut:": {
      "uc_base": "1f330",
      "uc_output": "1f330",
      "uc_match": "1f330",
      "uc_greedy": "1f330",
      "shortnames": [],
      "category": "food"
    },
    ":chicken:": {
      "uc_base": "1f414",
      "uc_output": "1f414",
      "uc_match": "1f414",
      "uc_greedy": "1f414",
      "shortnames": [],
      "category": "nature"
    },
    ":child:": {
      "uc_base": "1f9d2",
      "uc_output": "1f9d2",
      "uc_match": "1f9d2",
      "uc_greedy": "1f9d2",
      "shortnames": [],
      "category": "people"
    },
    ":children_crossing:": {
      "uc_base": "1f6b8",
      "uc_output": "1f6b8",
      "uc_match": "1f6b8",
      "uc_greedy": "1f6b8",
      "shortnames": [],
      "category": "symbols"
    },
    ":chipmunk:": {
      "uc_base": "1f43f",
      "uc_output": "1f43f",
      "uc_match": "1f43f-fe0f",
      "uc_greedy": "1f43f-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":chocolate_bar:": {
      "uc_base": "1f36b",
      "uc_output": "1f36b",
      "uc_match": "1f36b",
      "uc_greedy": "1f36b",
      "shortnames": [],
      "category": "food"
    },
    ":chopsticks:": {
      "uc_base": "1f962",
      "uc_output": "1f962",
      "uc_match": "1f962",
      "uc_greedy": "1f962",
      "shortnames": [],
      "category": "food"
    },
    ":christmas_tree:": {
      "uc_base": "1f384",
      "uc_output": "1f384",
      "uc_match": "1f384",
      "uc_greedy": "1f384",
      "shortnames": [],
      "category": "nature"
    },
    ":cinema:": {
      "uc_base": "1f3a6",
      "uc_output": "1f3a6",
      "uc_match": "1f3a6",
      "uc_greedy": "1f3a6",
      "shortnames": [],
      "category": "symbols"
    },
    ":circus_tent:": {
      "uc_base": "1f3aa",
      "uc_output": "1f3aa",
      "uc_match": "1f3aa",
      "uc_greedy": "1f3aa",
      "shortnames": [],
      "category": "activity"
    },
    ":city_dusk:": {
      "uc_base": "1f306",
      "uc_output": "1f306",
      "uc_match": "1f306",
      "uc_greedy": "1f306",
      "shortnames": [],
      "category": "travel"
    },
    ":city_sunset:": {
      "uc_base": "1f307",
      "uc_output": "1f307",
      "uc_match": "1f307",
      "uc_greedy": "1f307",
      "shortnames": [":city_sunrise:"],
      "category": "travel"
    },
    ":cityscape:": {
      "uc_base": "1f3d9",
      "uc_output": "1f3d9",
      "uc_match": "1f3d9-fe0f",
      "uc_greedy": "1f3d9-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":cl:": {
      "uc_base": "1f191",
      "uc_output": "1f191",
      "uc_match": "1f191",
      "uc_greedy": "1f191",
      "shortnames": [],
      "category": "symbols"
    },
    ":clap:": {
      "uc_base": "1f44f",
      "uc_output": "1f44f",
      "uc_match": "1f44f",
      "uc_greedy": "1f44f",
      "shortnames": [],
      "category": "people"
    },
    ":clapper:": {
      "uc_base": "1f3ac",
      "uc_output": "1f3ac",
      "uc_match": "1f3ac-fe0f",
      "uc_greedy": "1f3ac-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":classical_building:": {
      "uc_base": "1f3db",
      "uc_output": "1f3db",
      "uc_match": "1f3db-fe0f",
      "uc_greedy": "1f3db-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":clipboard:": {
      "uc_base": "1f4cb",
      "uc_output": "1f4cb",
      "uc_match": "1f4cb-fe0f",
      "uc_greedy": "1f4cb-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":clock1030:": {
      "uc_base": "1f565",
      "uc_output": "1f565",
      "uc_match": "1f565-fe0f",
      "uc_greedy": "1f565-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock10:": {
      "uc_base": "1f559",
      "uc_output": "1f559",
      "uc_match": "1f559-fe0f",
      "uc_greedy": "1f559-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock1130:": {
      "uc_base": "1f566",
      "uc_output": "1f566",
      "uc_match": "1f566-fe0f",
      "uc_greedy": "1f566-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock11:": {
      "uc_base": "1f55a",
      "uc_output": "1f55a",
      "uc_match": "1f55a-fe0f",
      "uc_greedy": "1f55a-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock1230:": {
      "uc_base": "1f567",
      "uc_output": "1f567",
      "uc_match": "1f567-fe0f",
      "uc_greedy": "1f567-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock12:": {
      "uc_base": "1f55b",
      "uc_output": "1f55b",
      "uc_match": "1f55b-fe0f",
      "uc_greedy": "1f55b-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock130:": {
      "uc_base": "1f55c",
      "uc_output": "1f55c",
      "uc_match": "1f55c-fe0f",
      "uc_greedy": "1f55c-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock1:": {
      "uc_base": "1f550",
      "uc_output": "1f550",
      "uc_match": "1f550-fe0f",
      "uc_greedy": "1f550-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock230:": {
      "uc_base": "1f55d",
      "uc_output": "1f55d",
      "uc_match": "1f55d-fe0f",
      "uc_greedy": "1f55d-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock2:": {
      "uc_base": "1f551",
      "uc_output": "1f551",
      "uc_match": "1f551-fe0f",
      "uc_greedy": "1f551-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock330:": {
      "uc_base": "1f55e",
      "uc_output": "1f55e",
      "uc_match": "1f55e-fe0f",
      "uc_greedy": "1f55e-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock3:": {
      "uc_base": "1f552",
      "uc_output": "1f552",
      "uc_match": "1f552-fe0f",
      "uc_greedy": "1f552-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock430:": {
      "uc_base": "1f55f",
      "uc_output": "1f55f",
      "uc_match": "1f55f-fe0f",
      "uc_greedy": "1f55f-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock4:": {
      "uc_base": "1f553",
      "uc_output": "1f553",
      "uc_match": "1f553-fe0f",
      "uc_greedy": "1f553-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock530:": {
      "uc_base": "1f560",
      "uc_output": "1f560",
      "uc_match": "1f560-fe0f",
      "uc_greedy": "1f560-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock5:": {
      "uc_base": "1f554",
      "uc_output": "1f554",
      "uc_match": "1f554-fe0f",
      "uc_greedy": "1f554-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock630:": {
      "uc_base": "1f561",
      "uc_output": "1f561",
      "uc_match": "1f561-fe0f",
      "uc_greedy": "1f561-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock6:": {
      "uc_base": "1f555",
      "uc_output": "1f555",
      "uc_match": "1f555-fe0f",
      "uc_greedy": "1f555-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock730:": {
      "uc_base": "1f562",
      "uc_output": "1f562",
      "uc_match": "1f562-fe0f",
      "uc_greedy": "1f562-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock7:": {
      "uc_base": "1f556",
      "uc_output": "1f556",
      "uc_match": "1f556-fe0f",
      "uc_greedy": "1f556-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock830:": {
      "uc_base": "1f563",
      "uc_output": "1f563",
      "uc_match": "1f563-fe0f",
      "uc_greedy": "1f563-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock8:": {
      "uc_base": "1f557",
      "uc_output": "1f557",
      "uc_match": "1f557-fe0f",
      "uc_greedy": "1f557-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock930:": {
      "uc_base": "1f564",
      "uc_output": "1f564",
      "uc_match": "1f564-fe0f",
      "uc_greedy": "1f564-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock9:": {
      "uc_base": "1f558",
      "uc_output": "1f558",
      "uc_match": "1f558-fe0f",
      "uc_greedy": "1f558-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":clock:": {
      "uc_base": "1f570",
      "uc_output": "1f570",
      "uc_match": "1f570-fe0f",
      "uc_greedy": "1f570-fe0f",
      "shortnames": [":mantlepiece_clock:"],
      "category": "objects"
    },
    ":closed_book:": {
      "uc_base": "1f4d5",
      "uc_output": "1f4d5",
      "uc_match": "1f4d5",
      "uc_greedy": "1f4d5",
      "shortnames": [],
      "category": "objects"
    },
    ":closed_lock_with_key:": {
      "uc_base": "1f510",
      "uc_output": "1f510",
      "uc_match": "1f510",
      "uc_greedy": "1f510",
      "shortnames": [],
      "category": "objects"
    },
    ":closed_umbrella:": {
      "uc_base": "1f302",
      "uc_output": "1f302",
      "uc_match": "1f302",
      "uc_greedy": "1f302",
      "shortnames": [],
      "category": "people"
    },
    ":cloud_lightning:": {
      "uc_base": "1f329",
      "uc_output": "1f329",
      "uc_match": "1f329-fe0f",
      "uc_greedy": "1f329-fe0f",
      "shortnames": [":cloud_with_lightning:"],
      "category": "nature"
    },
    ":cloud_rain:": {
      "uc_base": "1f327",
      "uc_output": "1f327",
      "uc_match": "1f327-fe0f",
      "uc_greedy": "1f327-fe0f",
      "shortnames": [":cloud_with_rain:"],
      "category": "nature"
    },
    ":cloud_snow:": {
      "uc_base": "1f328",
      "uc_output": "1f328",
      "uc_match": "1f328-fe0f",
      "uc_greedy": "1f328-fe0f",
      "shortnames": [":cloud_with_snow:"],
      "category": "nature"
    },
    ":cloud_tornado:": {
      "uc_base": "1f32a",
      "uc_output": "1f32a",
      "uc_match": "1f32a-fe0f",
      "uc_greedy": "1f32a-fe0f",
      "shortnames": [":cloud_with_tornado:"],
      "category": "nature"
    },
    ":clown:": {
      "uc_base": "1f921",
      "uc_output": "1f921",
      "uc_match": "1f921",
      "uc_greedy": "1f921",
      "shortnames": [":clown_face:"],
      "category": "people"
    },
    ":coat:": {
      "uc_base": "1f9e5",
      "uc_output": "1f9e5",
      "uc_match": "1f9e5",
      "uc_greedy": "1f9e5",
      "shortnames": [],
      "category": "people"
    },
    ":cocktail:": {
      "uc_base": "1f378",
      "uc_output": "1f378",
      "uc_match": "1f378-fe0f",
      "uc_greedy": "1f378-fe0f",
      "shortnames": [],
      "category": "food"
    },
    ":coconut:": {
      "uc_base": "1f965",
      "uc_output": "1f965",
      "uc_match": "1f965",
      "uc_greedy": "1f965",
      "shortnames": [],
      "category": "food"
    },
    ":cold_sweat:": {
      "uc_base": "1f630",
      "uc_output": "1f630",
      "uc_match": "1f630",
      "uc_greedy": "1f630",
      "shortnames": [],
      "category": "people"
    },
    ":compression:": {
      "uc_base": "1f5dc",
      "uc_output": "1f5dc",
      "uc_match": "1f5dc-fe0f",
      "uc_greedy": "1f5dc-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":computer:": {
      "uc_base": "1f4bb",
      "uc_output": "1f4bb",
      "uc_match": "1f4bb-fe0f",
      "uc_greedy": "1f4bb-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":confetti_ball:": {
      "uc_base": "1f38a",
      "uc_output": "1f38a",
      "uc_match": "1f38a",
      "uc_greedy": "1f38a",
      "shortnames": [],
      "category": "objects"
    },
    ":confounded:": {
      "uc_base": "1f616",
      "uc_output": "1f616",
      "uc_match": "1f616",
      "uc_greedy": "1f616",
      "shortnames": [],
      "category": "people"
    },
    ":confused:": {
      "uc_base": "1f615",
      "uc_output": "1f615",
      "uc_match": "1f615",
      "uc_greedy": "1f615",
      "shortnames": [],
      "category": "people"
    },
    ":construction:": {
      "uc_base": "1f6a7",
      "uc_output": "1f6a7",
      "uc_match": "1f6a7",
      "uc_greedy": "1f6a7",
      "shortnames": [],
      "category": "travel"
    },
    ":construction_site:": {
      "uc_base": "1f3d7",
      "uc_output": "1f3d7",
      "uc_match": "1f3d7-fe0f",
      "uc_greedy": "1f3d7-fe0f",
      "shortnames": [":building_construction:"],
      "category": "travel"
    },
    ":construction_worker:": {
      "uc_base": "1f477",
      "uc_output": "1f477",
      "uc_match": "1f477",
      "uc_greedy": "1f477",
      "shortnames": [],
      "category": "people"
    },
    ":control_knobs:": {
      "uc_base": "1f39b",
      "uc_output": "1f39b",
      "uc_match": "1f39b-fe0f",
      "uc_greedy": "1f39b-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":convenience_store:": {
      "uc_base": "1f3ea",
      "uc_output": "1f3ea",
      "uc_match": "1f3ea",
      "uc_greedy": "1f3ea",
      "shortnames": [],
      "category": "travel"
    },
    ":cookie:": {
      "uc_base": "1f36a",
      "uc_output": "1f36a",
      "uc_match": "1f36a",
      "uc_greedy": "1f36a",
      "shortnames": [],
      "category": "food"
    },
    ":cooking:": {
      "uc_base": "1f373",
      "uc_output": "1f373",
      "uc_match": "1f373",
      "uc_greedy": "1f373",
      "shortnames": [],
      "category": "food"
    },
    ":cool:": {
      "uc_base": "1f192",
      "uc_output": "1f192",
      "uc_match": "1f192",
      "uc_greedy": "1f192",
      "shortnames": [],
      "category": "symbols"
    },
    ":corn:": {
      "uc_base": "1f33d",
      "uc_output": "1f33d",
      "uc_match": "1f33d",
      "uc_greedy": "1f33d",
      "shortnames": [],
      "category": "food"
    },
    ":couch:": {
      "uc_base": "1f6cb",
      "uc_output": "1f6cb",
      "uc_match": "1f6cb-fe0f",
      "uc_greedy": "1f6cb-fe0f",
      "shortnames": [":couch_and_lamp:"],
      "category": "objects"
    },
    ":couple:": {
      "uc_base": "1f46b",
      "uc_output": "1f46b",
      "uc_match": "1f46b",
      "uc_greedy": "1f46b",
      "shortnames": [],
      "category": "people"
    },
    ":couple_with_heart:": {
      "uc_base": "1f491",
      "uc_output": "1f491",
      "uc_match": "1f491",
      "uc_greedy": "1f491",
      "shortnames": [],
      "category": "people"
    },
    ":couplekiss:": {
      "uc_base": "1f48f",
      "uc_output": "1f48f",
      "uc_match": "1f48f",
      "uc_greedy": "1f48f",
      "shortnames": [],
      "category": "people"
    },
    ":cow2:": {
      "uc_base": "1f404",
      "uc_output": "1f404",
      "uc_match": "1f404",
      "uc_greedy": "1f404",
      "shortnames": [],
      "category": "nature"
    },
    ":cow:": {
      "uc_base": "1f42e",
      "uc_output": "1f42e",
      "uc_match": "1f42e",
      "uc_greedy": "1f42e",
      "shortnames": [],
      "category": "nature"
    },
    ":cowboy:": {
      "uc_base": "1f920",
      "uc_output": "1f920",
      "uc_match": "1f920",
      "uc_greedy": "1f920",
      "shortnames": [":face_with_cowboy_hat:"],
      "category": "people"
    },
    ":crab:": {
      "uc_base": "1f980",
      "uc_output": "1f980",
      "uc_match": "1f980",
      "uc_greedy": "1f980",
      "shortnames": [],
      "category": "nature"
    },
    ":crayon:": {
      "uc_base": "1f58d",
      "uc_output": "1f58d",
      "uc_match": "1f58d-fe0f",
      "uc_greedy": "1f58d-fe0f",
      "shortnames": [":lower_left_crayon:"],
      "category": "objects"
    },
    ":crazy_face:": {
      "uc_base": "1f92a",
      "uc_output": "1f92a",
      "uc_match": "1f92a",
      "uc_greedy": "1f92a",
      "shortnames": [],
      "category": "people"
    },
    ":credit_card:": {
      "uc_base": "1f4b3",
      "uc_output": "1f4b3",
      "uc_match": "1f4b3-fe0f",
      "uc_greedy": "1f4b3-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":crescent_moon:": {
      "uc_base": "1f319",
      "uc_output": "1f319",
      "uc_match": "1f319",
      "uc_greedy": "1f319",
      "shortnames": [],
      "category": "nature"
    },
    ":cricket:": {
      "uc_base": "1f997",
      "uc_output": "1f997",
      "uc_match": "1f997",
      "uc_greedy": "1f997",
      "shortnames": [],
      "category": "nature"
    },
    ":cricket_game:": {
      "uc_base": "1f3cf",
      "uc_output": "1f3cf",
      "uc_match": "1f3cf",
      "uc_greedy": "1f3cf",
      "shortnames": [":cricket_bat_ball:"],
      "category": "activity"
    },
    ":crocodile:": {
      "uc_base": "1f40a",
      "uc_output": "1f40a",
      "uc_match": "1f40a",
      "uc_greedy": "1f40a",
      "shortnames": [],
      "category": "nature"
    },
    ":croissant:": {
      "uc_base": "1f950",
      "uc_output": "1f950",
      "uc_match": "1f950",
      "uc_greedy": "1f950",
      "shortnames": [],
      "category": "food"
    },
    ":crossed_flags:": {
      "uc_base": "1f38c",
      "uc_output": "1f38c",
      "uc_match": "1f38c",
      "uc_greedy": "1f38c",
      "shortnames": [],
      "category": "flags"
    },
    ":crown:": {
      "uc_base": "1f451",
      "uc_output": "1f451",
      "uc_match": "1f451",
      "uc_greedy": "1f451",
      "shortnames": [],
      "category": "people"
    },
    ":cruise_ship:": {
      "uc_base": "1f6f3",
      "uc_output": "1f6f3",
      "uc_match": "1f6f3-fe0f",
      "uc_greedy": "1f6f3-fe0f",
      "shortnames": [":passenger_ship:"],
      "category": "travel"
    },
    ":cry:": {
      "uc_base": "1f622",
      "uc_output": "1f622",
      "uc_match": "1f622",
      "uc_greedy": "1f622",
      "shortnames": [],
      "category": "people"
    },
    ":crying_cat_face:": {
      "uc_base": "1f63f",
      "uc_output": "1f63f",
      "uc_match": "1f63f",
      "uc_greedy": "1f63f",
      "shortnames": [],
      "category": "people"
    },
    ":crystal_ball:": {
      "uc_base": "1f52e",
      "uc_output": "1f52e",
      "uc_match": "1f52e",
      "uc_greedy": "1f52e",
      "shortnames": [],
      "category": "objects"
    },
    ":cucumber:": {
      "uc_base": "1f952",
      "uc_output": "1f952",
      "uc_match": "1f952",
      "uc_greedy": "1f952",
      "shortnames": [],
      "category": "food"
    },
    ":cup_with_straw:": {
      "uc_base": "1f964",
      "uc_output": "1f964",
      "uc_match": "1f964",
      "uc_greedy": "1f964",
      "shortnames": [],
      "category": "food"
    },
    ":cupid:": {
      "uc_base": "1f498",
      "uc_output": "1f498",
      "uc_match": "1f498",
      "uc_greedy": "1f498",
      "shortnames": [],
      "category": "symbols"
    },
    ":curling_stone:": {
      "uc_base": "1f94c",
      "uc_output": "1f94c",
      "uc_match": "1f94c",
      "uc_greedy": "1f94c",
      "shortnames": [],
      "category": "activity"
    },
    ":currency_exchange:": {
      "uc_base": "1f4b1",
      "uc_output": "1f4b1",
      "uc_match": "1f4b1",
      "uc_greedy": "1f4b1",
      "shortnames": [],
      "category": "symbols"
    },
    ":curry:": {
      "uc_base": "1f35b",
      "uc_output": "1f35b",
      "uc_match": "1f35b",
      "uc_greedy": "1f35b",
      "shortnames": [],
      "category": "food"
    },
    ":custard:": {
      "uc_base": "1f36e",
      "uc_output": "1f36e",
      "uc_match": "1f36e",
      "uc_greedy": "1f36e",
      "shortnames": [":pudding:", ":flan:"],
      "category": "food"
    },
    ":customs:": {
      "uc_base": "1f6c3",
      "uc_output": "1f6c3",
      "uc_match": "1f6c3",
      "uc_greedy": "1f6c3",
      "shortnames": [],
      "category": "symbols"
    },
    ":cut_of_meat:": {
      "uc_base": "1f969",
      "uc_output": "1f969",
      "uc_match": "1f969",
      "uc_greedy": "1f969",
      "shortnames": [],
      "category": "food"
    },
    ":cyclone:": {
      "uc_base": "1f300",
      "uc_output": "1f300",
      "uc_match": "1f300",
      "uc_greedy": "1f300",
      "shortnames": [],
      "category": "symbols"
    },
    ":dagger:": {
      "uc_base": "1f5e1",
      "uc_output": "1f5e1",
      "uc_match": "1f5e1-fe0f",
      "uc_greedy": "1f5e1-fe0f",
      "shortnames": [":dagger_knife:"],
      "category": "objects"
    },
    ":dancer:": {
      "uc_base": "1f483",
      "uc_output": "1f483",
      "uc_match": "1f483",
      "uc_greedy": "1f483",
      "shortnames": [],
      "category": "people"
    },
    ":dango:": {
      "uc_base": "1f361",
      "uc_output": "1f361",
      "uc_match": "1f361",
      "uc_greedy": "1f361",
      "shortnames": [],
      "category": "food"
    },
    ":dark_sunglasses:": {
      "uc_base": "1f576",
      "uc_output": "1f576",
      "uc_match": "1f576-fe0f",
      "uc_greedy": "1f576-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":dart:": {
      "uc_base": "1f3af",
      "uc_output": "1f3af",
      "uc_match": "1f3af",
      "uc_greedy": "1f3af",
      "shortnames": [],
      "category": "activity"
    },
    ":dash:": {
      "uc_base": "1f4a8",
      "uc_output": "1f4a8",
      "uc_match": "1f4a8",
      "uc_greedy": "1f4a8",
      "shortnames": [],
      "category": "nature"
    },
    ":date:": {
      "uc_base": "1f4c5",
      "uc_output": "1f4c5",
      "uc_match": "1f4c5",
      "uc_greedy": "1f4c5",
      "shortnames": [],
      "category": "objects"
    },
    ":deciduous_tree:": {
      "uc_base": "1f333",
      "uc_output": "1f333",
      "uc_match": "1f333",
      "uc_greedy": "1f333",
      "shortnames": [],
      "category": "nature"
    },
    ":deer:": {
      "uc_base": "1f98c",
      "uc_output": "1f98c",
      "uc_match": "1f98c",
      "uc_greedy": "1f98c",
      "shortnames": [],
      "category": "nature"
    },
    ":department_store:": {
      "uc_base": "1f3ec",
      "uc_output": "1f3ec",
      "uc_match": "1f3ec",
      "uc_greedy": "1f3ec",
      "shortnames": [],
      "category": "travel"
    },
    ":desert:": {
      "uc_base": "1f3dc",
      "uc_output": "1f3dc",
      "uc_match": "1f3dc-fe0f",
      "uc_greedy": "1f3dc-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":desktop:": {
      "uc_base": "1f5a5",
      "uc_output": "1f5a5",
      "uc_match": "1f5a5-fe0f",
      "uc_greedy": "1f5a5-fe0f",
      "shortnames": [":desktop_computer:"],
      "category": "objects"
    },
    ":detective:": {
      "uc_base": "1f575",
      "uc_output": "1f575",
      "uc_match": "1f575-fe0f",
      "uc_greedy": "1f575-fe0f",
      "shortnames": [":spy:", ":sleuth_or_spy:"],
      "category": "people"
    },
    ":diamond_shape_with_a_dot_inside:": {
      "uc_base": "1f4a0",
      "uc_output": "1f4a0",
      "uc_match": "1f4a0",
      "uc_greedy": "1f4a0",
      "shortnames": [],
      "category": "symbols"
    },
    ":disappointed:": {
      "uc_base": "1f61e",
      "uc_output": "1f61e",
      "uc_match": "1f61e",
      "uc_greedy": "1f61e",
      "shortnames": [],
      "category": "people"
    },
    ":disappointed_relieved:": {
      "uc_base": "1f625",
      "uc_output": "1f625",
      "uc_match": "1f625",
      "uc_greedy": "1f625",
      "shortnames": [],
      "category": "people"
    },
    ":dividers:": {
      "uc_base": "1f5c2",
      "uc_output": "1f5c2",
      "uc_match": "1f5c2-fe0f",
      "uc_greedy": "1f5c2-fe0f",
      "shortnames": [":card_index_dividers:"],
      "category": "objects"
    },
    ":dizzy:": {
      "uc_base": "1f4ab",
      "uc_output": "1f4ab",
      "uc_match": "1f4ab",
      "uc_greedy": "1f4ab",
      "shortnames": [],
      "category": "nature"
    },
    ":dizzy_face:": {
      "uc_base": "1f635",
      "uc_output": "1f635",
      "uc_match": "1f635",
      "uc_greedy": "1f635",
      "shortnames": [],
      "category": "people"
    },
    ":do_not_litter:": {
      "uc_base": "1f6af",
      "uc_output": "1f6af",
      "uc_match": "1f6af",
      "uc_greedy": "1f6af",
      "shortnames": [],
      "category": "symbols"
    },
    ":dog2:": {
      "uc_base": "1f415",
      "uc_output": "1f415",
      "uc_match": "1f415-fe0f",
      "uc_greedy": "1f415-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":dog:": {
      "uc_base": "1f436",
      "uc_output": "1f436",
      "uc_match": "1f436",
      "uc_greedy": "1f436",
      "shortnames": [],
      "category": "nature"
    },
    ":dollar:": {
      "uc_base": "1f4b5",
      "uc_output": "1f4b5",
      "uc_match": "1f4b5",
      "uc_greedy": "1f4b5",
      "shortnames": [],
      "category": "objects"
    },
    ":dolls:": {
      "uc_base": "1f38e",
      "uc_output": "1f38e",
      "uc_match": "1f38e",
      "uc_greedy": "1f38e",
      "shortnames": [],
      "category": "objects"
    },
    ":dolphin:": {
      "uc_base": "1f42c",
      "uc_output": "1f42c",
      "uc_match": "1f42c",
      "uc_greedy": "1f42c",
      "shortnames": [],
      "category": "nature"
    },
    ":door:": {
      "uc_base": "1f6aa",
      "uc_output": "1f6aa",
      "uc_match": "1f6aa",
      "uc_greedy": "1f6aa",
      "shortnames": [],
      "category": "objects"
    },
    ":doughnut:": {
      "uc_base": "1f369",
      "uc_output": "1f369",
      "uc_match": "1f369",
      "uc_greedy": "1f369",
      "shortnames": [],
      "category": "food"
    },
    ":dove:": {
      "uc_base": "1f54a",
      "uc_output": "1f54a",
      "uc_match": "1f54a-fe0f",
      "uc_greedy": "1f54a-fe0f",
      "shortnames": [":dove_of_peace:"],
      "category": "nature"
    },
    ":dragon:": {
      "uc_base": "1f409",
      "uc_output": "1f409",
      "uc_match": "1f409",
      "uc_greedy": "1f409",
      "shortnames": [],
      "category": "nature"
    },
    ":dragon_face:": {
      "uc_base": "1f432",
      "uc_output": "1f432",
      "uc_match": "1f432",
      "uc_greedy": "1f432",
      "shortnames": [],
      "category": "nature"
    },
    ":dress:": {
      "uc_base": "1f457",
      "uc_output": "1f457",
      "uc_match": "1f457",
      "uc_greedy": "1f457",
      "shortnames": [],
      "category": "people"
    },
    ":dromedary_camel:": {
      "uc_base": "1f42a",
      "uc_output": "1f42a",
      "uc_match": "1f42a",
      "uc_greedy": "1f42a",
      "shortnames": [],
      "category": "nature"
    },
    ":drooling_face:": {
      "uc_base": "1f924",
      "uc_output": "1f924",
      "uc_match": "1f924",
      "uc_greedy": "1f924",
      "shortnames": [":drool:"],
      "category": "people"
    },
    ":droplet:": {
      "uc_base": "1f4a7",
      "uc_output": "1f4a7",
      "uc_match": "1f4a7",
      "uc_greedy": "1f4a7",
      "shortnames": [],
      "category": "nature"
    },
    ":drum:": {
      "uc_base": "1f941",
      "uc_output": "1f941",
      "uc_match": "1f941",
      "uc_greedy": "1f941",
      "shortnames": [":drum_with_drumsticks:"],
      "category": "activity"
    },
    ":duck:": {
      "uc_base": "1f986",
      "uc_output": "1f986",
      "uc_match": "1f986",
      "uc_greedy": "1f986",
      "shortnames": [],
      "category": "nature"
    },
    ":dumpling:": {
      "uc_base": "1f95f",
      "uc_output": "1f95f",
      "uc_match": "1f95f",
      "uc_greedy": "1f95f",
      "shortnames": [],
      "category": "food"
    },
    ":dvd:": {
      "uc_base": "1f4c0",
      "uc_output": "1f4c0",
      "uc_match": "1f4c0",
      "uc_greedy": "1f4c0",
      "shortnames": [],
      "category": "objects"
    },
    ":e-mail:": {
      "uc_base": "1f4e7",
      "uc_output": "1f4e7",
      "uc_match": "1f4e7",
      "uc_greedy": "1f4e7",
      "shortnames": [":email:"],
      "category": "objects"
    },
    ":eagle:": {
      "uc_base": "1f985",
      "uc_output": "1f985",
      "uc_match": "1f985",
      "uc_greedy": "1f985",
      "shortnames": [],
      "category": "nature"
    },
    ":ear:": {
      "uc_base": "1f442",
      "uc_output": "1f442",
      "uc_match": "1f442-fe0f",
      "uc_greedy": "1f442-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":ear_of_rice:": {
      "uc_base": "1f33e",
      "uc_output": "1f33e",
      "uc_match": "1f33e",
      "uc_greedy": "1f33e",
      "shortnames": [],
      "category": "nature"
    },
    ":earth_africa:": {
      "uc_base": "1f30d",
      "uc_output": "1f30d",
      "uc_match": "1f30d-fe0f",
      "uc_greedy": "1f30d-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":earth_americas:": {
      "uc_base": "1f30e",
      "uc_output": "1f30e",
      "uc_match": "1f30e-fe0f",
      "uc_greedy": "1f30e-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":earth_asia:": {
      "uc_base": "1f30f",
      "uc_output": "1f30f",
      "uc_match": "1f30f-fe0f",
      "uc_greedy": "1f30f-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":egg:": {
      "uc_base": "1f95a",
      "uc_output": "1f95a",
      "uc_match": "1f95a",
      "uc_greedy": "1f95a",
      "shortnames": [],
      "category": "food"
    },
    ":eggplant:": {
      "uc_base": "1f346",
      "uc_output": "1f346",
      "uc_match": "1f346",
      "uc_greedy": "1f346",
      "shortnames": [],
      "category": "food"
    },
    ":electric_plug:": {
      "uc_base": "1f50c",
      "uc_output": "1f50c",
      "uc_match": "1f50c",
      "uc_greedy": "1f50c",
      "shortnames": [],
      "category": "objects"
    },
    ":elephant:": {
      "uc_base": "1f418",
      "uc_output": "1f418",
      "uc_match": "1f418",
      "uc_greedy": "1f418",
      "shortnames": [],
      "category": "nature"
    },
    ":elf:": {
      "uc_base": "1f9dd",
      "uc_output": "1f9dd",
      "uc_match": "1f9dd",
      "uc_greedy": "1f9dd",
      "shortnames": [],
      "category": "people"
    },
    ":end:": {
      "uc_base": "1f51a",
      "uc_output": "1f51a",
      "uc_match": "1f51a",
      "uc_greedy": "1f51a",
      "shortnames": [],
      "category": "symbols"
    },
    ":envelope_with_arrow:": {
      "uc_base": "1f4e9",
      "uc_output": "1f4e9",
      "uc_match": "1f4e9",
      "uc_greedy": "1f4e9",
      "shortnames": [],
      "category": "objects"
    },
    ":euro:": {
      "uc_base": "1f4b6",
      "uc_output": "1f4b6",
      "uc_match": "1f4b6",
      "uc_greedy": "1f4b6",
      "shortnames": [],
      "category": "objects"
    },
    ":european_castle:": {
      "uc_base": "1f3f0",
      "uc_output": "1f3f0",
      "uc_match": "1f3f0",
      "uc_greedy": "1f3f0",
      "shortnames": [],
      "category": "travel"
    },
    ":european_post_office:": {
      "uc_base": "1f3e4",
      "uc_output": "1f3e4",
      "uc_match": "1f3e4",
      "uc_greedy": "1f3e4",
      "shortnames": [],
      "category": "travel"
    },
    ":evergreen_tree:": {
      "uc_base": "1f332",
      "uc_output": "1f332",
      "uc_match": "1f332",
      "uc_greedy": "1f332",
      "shortnames": [],
      "category": "nature"
    },
    ":exploding_head:": {
      "uc_base": "1f92f",
      "uc_output": "1f92f",
      "uc_match": "1f92f",
      "uc_greedy": "1f92f",
      "shortnames": [],
      "category": "people"
    },
    ":expressionless:": {
      "uc_base": "1f611",
      "uc_output": "1f611",
      "uc_match": "1f611",
      "uc_greedy": "1f611",
      "shortnames": [],
      "category": "people"
    },
    ":eye:": {
      "uc_base": "1f441",
      "uc_output": "1f441",
      "uc_match": "1f441-fe0f",
      "uc_greedy": "1f441-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":eyeglasses:": {
      "uc_base": "1f453",
      "uc_output": "1f453",
      "uc_match": "1f453-fe0f",
      "uc_greedy": "1f453-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":eyes:": {
      "uc_base": "1f440",
      "uc_output": "1f440",
      "uc_match": "1f440",
      "uc_greedy": "1f440",
      "shortnames": [],
      "category": "people"
    },
    ":face_vomiting:": {
      "uc_base": "1f92e",
      "uc_output": "1f92e",
      "uc_match": "1f92e",
      "uc_greedy": "1f92e",
      "shortnames": [],
      "category": "people"
    },
    ":face_with_hand_over_mouth:": {
      "uc_base": "1f92d",
      "uc_output": "1f92d",
      "uc_match": "1f92d",
      "uc_greedy": "1f92d",
      "shortnames": [],
      "category": "people"
    },
    ":face_with_monocle:": {
      "uc_base": "1f9d0",
      "uc_output": "1f9d0",
      "uc_match": "1f9d0",
      "uc_greedy": "1f9d0",
      "shortnames": [],
      "category": "people"
    },
    ":face_with_raised_eyebrow:": {
      "uc_base": "1f928",
      "uc_output": "1f928",
      "uc_match": "1f928",
      "uc_greedy": "1f928",
      "shortnames": [],
      "category": "people"
    },
    ":face_with_symbols_over_mouth:": {
      "uc_base": "1f92c",
      "uc_output": "1f92c",
      "uc_match": "1f92c",
      "uc_greedy": "1f92c",
      "shortnames": [],
      "category": "people"
    },
    ":factory:": {
      "uc_base": "1f3ed",
      "uc_output": "1f3ed",
      "uc_match": "1f3ed-fe0f",
      "uc_greedy": "1f3ed-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":fairy:": {
      "uc_base": "1f9da",
      "uc_output": "1f9da",
      "uc_match": "1f9da",
      "uc_greedy": "1f9da",
      "shortnames": [],
      "category": "people"
    },
    ":fallen_leaf:": {
      "uc_base": "1f342",
      "uc_output": "1f342",
      "uc_match": "1f342",
      "uc_greedy": "1f342",
      "shortnames": [],
      "category": "nature"
    },
    ":family:": {
      "uc_base": "1f46a",
      "uc_output": "1f46a",
      "uc_match": "1f46a-fe0f",
      "uc_greedy": "1f46a-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":fax:": {
      "uc_base": "1f4e0",
      "uc_output": "1f4e0",
      "uc_match": "1f4e0",
      "uc_greedy": "1f4e0",
      "shortnames": [],
      "category": "objects"
    },
    ":fearful:": {
      "uc_base": "1f628",
      "uc_output": "1f628",
      "uc_match": "1f628",
      "uc_greedy": "1f628",
      "shortnames": [],
      "category": "people"
    },
    ":feet:": {
      "uc_base": "1f43e",
      "uc_output": "1f43e",
      "uc_match": "1f43e",
      "uc_greedy": "1f43e",
      "shortnames": [":paw_prints:"],
      "category": "nature"
    },
    ":ferris_wheel:": {
      "uc_base": "1f3a1",
      "uc_output": "1f3a1",
      "uc_match": "1f3a1",
      "uc_greedy": "1f3a1",
      "shortnames": [],
      "category": "travel"
    },
    ":field_hockey:": {
      "uc_base": "1f3d1",
      "uc_output": "1f3d1",
      "uc_match": "1f3d1",
      "uc_greedy": "1f3d1",
      "shortnames": [],
      "category": "activity"
    },
    ":file_cabinet:": {
      "uc_base": "1f5c4",
      "uc_output": "1f5c4",
      "uc_match": "1f5c4-fe0f",
      "uc_greedy": "1f5c4-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":file_folder:": {
      "uc_base": "1f4c1",
      "uc_output": "1f4c1",
      "uc_match": "1f4c1",
      "uc_greedy": "1f4c1",
      "shortnames": [],
      "category": "objects"
    },
    ":film_frames:": {
      "uc_base": "1f39e",
      "uc_output": "1f39e",
      "uc_match": "1f39e-fe0f",
      "uc_greedy": "1f39e-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":fingers_crossed:": {
      "uc_base": "1f91e",
      "uc_output": "1f91e",
      "uc_match": "1f91e",
      "uc_greedy": "1f91e",
      "shortnames": [":hand_with_index_and_middle_finger_crossed:"],
      "category": "people"
    },
    ":fire:": {
      "uc_base": "1f525",
      "uc_output": "1f525",
      "uc_match": "1f525",
      "uc_greedy": "1f525",
      "shortnames": [":flame:"],
      "category": "nature"
    },
    ":fire_engine:": {
      "uc_base": "1f692",
      "uc_output": "1f692",
      "uc_match": "1f692",
      "uc_greedy": "1f692",
      "shortnames": [],
      "category": "travel"
    },
    ":fireworks:": {
      "uc_base": "1f386",
      "uc_output": "1f386",
      "uc_match": "1f386",
      "uc_greedy": "1f386",
      "shortnames": [],
      "category": "travel"
    },
    ":first_place:": {
      "uc_base": "1f947",
      "uc_output": "1f947",
      "uc_match": "1f947",
      "uc_greedy": "1f947",
      "shortnames": [":first_place_medal:"],
      "category": "activity"
    },
    ":first_quarter_moon:": {
      "uc_base": "1f313",
      "uc_output": "1f313",
      "uc_match": "1f313",
      "uc_greedy": "1f313",
      "shortnames": [],
      "category": "nature"
    },
    ":first_quarter_moon_with_face:": {
      "uc_base": "1f31b",
      "uc_output": "1f31b",
      "uc_match": "1f31b",
      "uc_greedy": "1f31b",
      "shortnames": [],
      "category": "nature"
    },
    ":fish:": {
      "uc_base": "1f41f",
      "uc_output": "1f41f",
      "uc_match": "1f41f-fe0f",
      "uc_greedy": "1f41f-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":fish_cake:": {
      "uc_base": "1f365",
      "uc_output": "1f365",
      "uc_match": "1f365",
      "uc_greedy": "1f365",
      "shortnames": [],
      "category": "food"
    },
    ":fishing_pole_and_fish:": {
      "uc_base": "1f3a3",
      "uc_output": "1f3a3",
      "uc_match": "1f3a3",
      "uc_greedy": "1f3a3",
      "shortnames": [],
      "category": "activity"
    },
    ":flag_black:": {
      "uc_base": "1f3f4",
      "uc_output": "1f3f4",
      "uc_match": "1f3f4",
      "uc_greedy": "1f3f4",
      "shortnames": [":waving_black_flag:"],
      "category": "flags"
    },
    ":flag_white:": {
      "uc_base": "1f3f3",
      "uc_output": "1f3f3",
      "uc_match": "1f3f3-fe0f",
      "uc_greedy": "1f3f3-fe0f",
      "shortnames": [":waving_white_flag:"],
      "category": "flags"
    },
    ":flags:": {
      "uc_base": "1f38f",
      "uc_output": "1f38f",
      "uc_match": "1f38f",
      "uc_greedy": "1f38f",
      "shortnames": [],
      "category": "objects"
    },
    ":flashlight:": {
      "uc_base": "1f526",
      "uc_output": "1f526",
      "uc_match": "1f526",
      "uc_greedy": "1f526",
      "shortnames": [],
      "category": "objects"
    },
    ":floppy_disk:": {
      "uc_base": "1f4be",
      "uc_output": "1f4be",
      "uc_match": "1f4be",
      "uc_greedy": "1f4be",
      "shortnames": [],
      "category": "objects"
    },
    ":flower_playing_cards:": {
      "uc_base": "1f3b4",
      "uc_output": "1f3b4",
      "uc_match": "1f3b4",
      "uc_greedy": "1f3b4",
      "shortnames": [],
      "category": "symbols"
    },
    ":flushed:": {
      "uc_base": "1f633",
      "uc_output": "1f633",
      "uc_match": "1f633",
      "uc_greedy": "1f633",
      "shortnames": [],
      "category": "people"
    },
    ":flying_saucer:": {
      "uc_base": "1f6f8",
      "uc_output": "1f6f8",
      "uc_match": "1f6f8",
      "uc_greedy": "1f6f8",
      "shortnames": [],
      "category": "travel"
    },
    ":fog:": {
      "uc_base": "1f32b",
      "uc_output": "1f32b",
      "uc_match": "1f32b-fe0f",
      "uc_greedy": "1f32b-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":foggy:": {
      "uc_base": "1f301",
      "uc_output": "1f301",
      "uc_match": "1f301",
      "uc_greedy": "1f301",
      "shortnames": [],
      "category": "travel"
    },
    ":football:": {
      "uc_base": "1f3c8",
      "uc_output": "1f3c8",
      "uc_match": "1f3c8",
      "uc_greedy": "1f3c8",
      "shortnames": [],
      "category": "activity"
    },
    ":footprints:": {
      "uc_base": "1f463",
      "uc_output": "1f463",
      "uc_match": "1f463",
      "uc_greedy": "1f463",
      "shortnames": [],
      "category": "people"
    },
    ":fork_and_knife:": {
      "uc_base": "1f374",
      "uc_output": "1f374",
      "uc_match": "1f374",
      "uc_greedy": "1f374",
      "shortnames": [],
      "category": "food"
    },
    ":fork_knife_plate:": {
      "uc_base": "1f37d",
      "uc_output": "1f37d",
      "uc_match": "1f37d-fe0f",
      "uc_greedy": "1f37d-fe0f",
      "shortnames": [":fork_and_knife_with_plate:"],
      "category": "food"
    },
    ":fortune_cookie:": {
      "uc_base": "1f960",
      "uc_output": "1f960",
      "uc_match": "1f960",
      "uc_greedy": "1f960",
      "shortnames": [],
      "category": "food"
    },
    ":four_leaf_clover:": {
      "uc_base": "1f340",
      "uc_output": "1f340",
      "uc_match": "1f340",
      "uc_greedy": "1f340",
      "shortnames": [],
      "category": "nature"
    },
    ":fox:": {
      "uc_base": "1f98a",
      "uc_output": "1f98a",
      "uc_match": "1f98a",
      "uc_greedy": "1f98a",
      "shortnames": [":fox_face:"],
      "category": "nature"
    },
    ":frame_photo:": {
      "uc_base": "1f5bc",
      "uc_output": "1f5bc",
      "uc_match": "1f5bc-fe0f",
      "uc_greedy": "1f5bc-fe0f",
      "shortnames": [":frame_with_picture:"],
      "category": "objects"
    },
    ":free:": {
      "uc_base": "1f193",
      "uc_output": "1f193",
      "uc_match": "1f193",
      "uc_greedy": "1f193",
      "shortnames": [],
      "category": "symbols"
    },
    ":french_bread:": {
      "uc_base": "1f956",
      "uc_output": "1f956",
      "uc_match": "1f956",
      "uc_greedy": "1f956",
      "shortnames": [":baguette_bread:"],
      "category": "food"
    },
    ":fried_shrimp:": {
      "uc_base": "1f364",
      "uc_output": "1f364",
      "uc_match": "1f364",
      "uc_greedy": "1f364",
      "shortnames": [],
      "category": "food"
    },
    ":fries:": {
      "uc_base": "1f35f",
      "uc_output": "1f35f",
      "uc_match": "1f35f",
      "uc_greedy": "1f35f",
      "shortnames": [],
      "category": "food"
    },
    ":frog:": {
      "uc_base": "1f438",
      "uc_output": "1f438",
      "uc_match": "1f438",
      "uc_greedy": "1f438",
      "shortnames": [],
      "category": "nature"
    },
    ":frowning:": {
      "uc_base": "1f626",
      "uc_output": "1f626",
      "uc_match": "1f626",
      "uc_greedy": "1f626",
      "shortnames": [],
      "category": "people"
    },
    ":full_moon:": {
      "uc_base": "1f315",
      "uc_output": "1f315",
      "uc_match": "1f315-fe0f",
      "uc_greedy": "1f315-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":full_moon_with_face:": {
      "uc_base": "1f31d",
      "uc_output": "1f31d",
      "uc_match": "1f31d",
      "uc_greedy": "1f31d",
      "shortnames": [],
      "category": "nature"
    },
    ":game_die:": {
      "uc_base": "1f3b2",
      "uc_output": "1f3b2",
      "uc_match": "1f3b2",
      "uc_greedy": "1f3b2",
      "shortnames": [],
      "category": "activity"
    },
    ":gem:": {
      "uc_base": "1f48e",
      "uc_output": "1f48e",
      "uc_match": "1f48e",
      "uc_greedy": "1f48e",
      "shortnames": [],
      "category": "objects"
    },
    ":genie:": {
      "uc_base": "1f9de",
      "uc_output": "1f9de",
      "uc_match": "1f9de",
      "uc_greedy": "1f9de",
      "shortnames": [],
      "category": "people"
    },
    ":ghost:": {
      "uc_base": "1f47b",
      "uc_output": "1f47b",
      "uc_match": "1f47b",
      "uc_greedy": "1f47b",
      "shortnames": [],
      "category": "people"
    },
    ":gift:": {
      "uc_base": "1f381",
      "uc_output": "1f381",
      "uc_match": "1f381",
      "uc_greedy": "1f381",
      "shortnames": [],
      "category": "objects"
    },
    ":gift_heart:": {
      "uc_base": "1f49d",
      "uc_output": "1f49d",
      "uc_match": "1f49d",
      "uc_greedy": "1f49d",
      "shortnames": [],
      "category": "symbols"
    },
    ":giraffe:": {
      "uc_base": "1f992",
      "uc_output": "1f992",
      "uc_match": "1f992",
      "uc_greedy": "1f992",
      "shortnames": [],
      "category": "nature"
    },
    ":girl:": {
      "uc_base": "1f467",
      "uc_output": "1f467",
      "uc_match": "1f467",
      "uc_greedy": "1f467",
      "shortnames": [],
      "category": "people"
    },
    ":globe_with_meridians:": {
      "uc_base": "1f310",
      "uc_output": "1f310",
      "uc_match": "1f310",
      "uc_greedy": "1f310",
      "shortnames": [],
      "category": "symbols"
    },
    ":gloves:": {
      "uc_base": "1f9e4",
      "uc_output": "1f9e4",
      "uc_match": "1f9e4",
      "uc_greedy": "1f9e4",
      "shortnames": [],
      "category": "people"
    },
    ":goal:": {
      "uc_base": "1f945",
      "uc_output": "1f945",
      "uc_match": "1f945",
      "uc_greedy": "1f945",
      "shortnames": [":goal_net:"],
      "category": "activity"
    },
    ":goat:": {
      "uc_base": "1f410",
      "uc_output": "1f410",
      "uc_match": "1f410",
      "uc_greedy": "1f410",
      "shortnames": [],
      "category": "nature"
    },
    ":gorilla:": {
      "uc_base": "1f98d",
      "uc_output": "1f98d",
      "uc_match": "1f98d",
      "uc_greedy": "1f98d",
      "shortnames": [],
      "category": "nature"
    },
    ":grapes:": {
      "uc_base": "1f347",
      "uc_output": "1f347",
      "uc_match": "1f347",
      "uc_greedy": "1f347",
      "shortnames": [],
      "category": "food"
    },
    ":green_apple:": {
      "uc_base": "1f34f",
      "uc_output": "1f34f",
      "uc_match": "1f34f",
      "uc_greedy": "1f34f",
      "shortnames": [],
      "category": "food"
    },
    ":green_book:": {
      "uc_base": "1f4d7",
      "uc_output": "1f4d7",
      "uc_match": "1f4d7",
      "uc_greedy": "1f4d7",
      "shortnames": [],
      "category": "objects"
    },
    ":green_heart:": {
      "uc_base": "1f49a",
      "uc_output": "1f49a",
      "uc_match": "1f49a",
      "uc_greedy": "1f49a",
      "shortnames": [],
      "category": "symbols"
    },
    ":grimacing:": {
      "uc_base": "1f62c",
      "uc_output": "1f62c",
      "uc_match": "1f62c",
      "uc_greedy": "1f62c",
      "shortnames": [],
      "category": "people"
    },
    ":grin:": {
      "uc_base": "1f601",
      "uc_output": "1f601",
      "uc_match": "1f601",
      "uc_greedy": "1f601",
      "shortnames": [],
      "category": "people"
    },
    ":grinning:": {
      "uc_base": "1f600",
      "uc_output": "1f600",
      "uc_match": "1f600",
      "uc_greedy": "1f600",
      "shortnames": [],
      "category": "people"
    },
    ":guard:": {
      "uc_base": "1f482",
      "uc_output": "1f482",
      "uc_match": "1f482",
      "uc_greedy": "1f482",
      "shortnames": [":guardsman:"],
      "category": "people"
    },
    ":guitar:": {
      "uc_base": "1f3b8",
      "uc_output": "1f3b8",
      "uc_match": "1f3b8",
      "uc_greedy": "1f3b8",
      "shortnames": [],
      "category": "activity"
    },
    ":gun:": {
      "uc_base": "1f52b",
      "uc_output": "1f52b",
      "uc_match": "1f52b",
      "uc_greedy": "1f52b",
      "shortnames": [],
      "category": "objects"
    },
    ":hamburger:": {
      "uc_base": "1f354",
      "uc_output": "1f354",
      "uc_match": "1f354",
      "uc_greedy": "1f354",
      "shortnames": [],
      "category": "food"
    },
    ":hammer:": {
      "uc_base": "1f528",
      "uc_output": "1f528",
      "uc_match": "1f528",
      "uc_greedy": "1f528",
      "shortnames": [],
      "category": "objects"
    },
    ":hamster:": {
      "uc_base": "1f439",
      "uc_output": "1f439",
      "uc_match": "1f439",
      "uc_greedy": "1f439",
      "shortnames": [],
      "category": "nature"
    },
    ":hand_splayed:": {
      "uc_base": "1f590",
      "uc_output": "1f590",
      "uc_match": "1f590-fe0f",
      "uc_greedy": "1f590-fe0f",
      "shortnames": [":raised_hand_with_fingers_splayed:"],
      "category": "people"
    },
    ":handbag:": {
      "uc_base": "1f45c",
      "uc_output": "1f45c",
      "uc_match": "1f45c",
      "uc_greedy": "1f45c",
      "shortnames": [],
      "category": "people"
    },
    ":handshake:": {
      "uc_base": "1f91d",
      "uc_output": "1f91d",
      "uc_match": "1f91d",
      "uc_greedy": "1f91d",
      "shortnames": [":shaking_hands:"],
      "category": "people"
    },
    ":hatched_chick:": {
      "uc_base": "1f425",
      "uc_output": "1f425",
      "uc_match": "1f425",
      "uc_greedy": "1f425",
      "shortnames": [],
      "category": "nature"
    },
    ":hatching_chick:": {
      "uc_base": "1f423",
      "uc_output": "1f423",
      "uc_match": "1f423",
      "uc_greedy": "1f423",
      "shortnames": [],
      "category": "nature"
    },
    ":head_bandage:": {
      "uc_base": "1f915",
      "uc_output": "1f915",
      "uc_match": "1f915",
      "uc_greedy": "1f915",
      "shortnames": [":face_with_head_bandage:"],
      "category": "people"
    },
    ":headphones:": {
      "uc_base": "1f3a7",
      "uc_output": "1f3a7",
      "uc_match": "1f3a7-fe0f",
      "uc_greedy": "1f3a7-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":hear_no_evil:": {
      "uc_base": "1f649",
      "uc_output": "1f649",
      "uc_match": "1f649",
      "uc_greedy": "1f649",
      "shortnames": [],
      "category": "nature"
    },
    ":heart_decoration:": {
      "uc_base": "1f49f",
      "uc_output": "1f49f",
      "uc_match": "1f49f",
      "uc_greedy": "1f49f",
      "shortnames": [],
      "category": "symbols"
    },
    ":heart_eyes:": {
      "uc_base": "1f60d",
      "uc_output": "1f60d",
      "uc_match": "1f60d",
      "uc_greedy": "1f60d",
      "shortnames": [],
      "category": "people"
    },
    ":heart_eyes_cat:": {
      "uc_base": "1f63b",
      "uc_output": "1f63b",
      "uc_match": "1f63b",
      "uc_greedy": "1f63b",
      "shortnames": [],
      "category": "people"
    },
    ":heartbeat:": {
      "uc_base": "1f493",
      "uc_output": "1f493",
      "uc_match": "1f493",
      "uc_greedy": "1f493",
      "shortnames": [],
      "category": "symbols"
    },
    ":heartpulse:": {
      "uc_base": "1f497",
      "uc_output": "1f497",
      "uc_match": "1f497",
      "uc_greedy": "1f497",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_dollar_sign:": {
      "uc_base": "1f4b2",
      "uc_output": "1f4b2",
      "uc_match": "1f4b2",
      "uc_greedy": "1f4b2",
      "shortnames": [],
      "category": "symbols"
    },
    ":hedgehog:": {
      "uc_base": "1f994",
      "uc_output": "1f994",
      "uc_match": "1f994",
      "uc_greedy": "1f994",
      "shortnames": [],
      "category": "nature"
    },
    ":helicopter:": {
      "uc_base": "1f681",
      "uc_output": "1f681",
      "uc_match": "1f681",
      "uc_greedy": "1f681",
      "shortnames": [],
      "category": "travel"
    },
    ":herb:": {
      "uc_base": "1f33f",
      "uc_output": "1f33f",
      "uc_match": "1f33f",
      "uc_greedy": "1f33f",
      "shortnames": [],
      "category": "nature"
    },
    ":hibiscus:": {
      "uc_base": "1f33a",
      "uc_output": "1f33a",
      "uc_match": "1f33a",
      "uc_greedy": "1f33a",
      "shortnames": [],
      "category": "nature"
    },
    ":high_brightness:": {
      "uc_base": "1f506",
      "uc_output": "1f506",
      "uc_match": "1f506",
      "uc_greedy": "1f506",
      "shortnames": [],
      "category": "symbols"
    },
    ":high_heel:": {
      "uc_base": "1f460",
      "uc_output": "1f460",
      "uc_match": "1f460",
      "uc_greedy": "1f460",
      "shortnames": [],
      "category": "people"
    },
    ":hockey:": {
      "uc_base": "1f3d2",
      "uc_output": "1f3d2",
      "uc_match": "1f3d2",
      "uc_greedy": "1f3d2",
      "shortnames": [],
      "category": "activity"
    },
    ":hole:": {
      "uc_base": "1f573",
      "uc_output": "1f573",
      "uc_match": "1f573-fe0f",
      "uc_greedy": "1f573-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":homes:": {
      "uc_base": "1f3d8",
      "uc_output": "1f3d8",
      "uc_match": "1f3d8-fe0f",
      "uc_greedy": "1f3d8-fe0f",
      "shortnames": [":house_buildings:"],
      "category": "travel"
    },
    ":honey_pot:": {
      "uc_base": "1f36f",
      "uc_output": "1f36f",
      "uc_match": "1f36f",
      "uc_greedy": "1f36f",
      "shortnames": [],
      "category": "food"
    },
    ":horse:": {
      "uc_base": "1f434",
      "uc_output": "1f434",
      "uc_match": "1f434",
      "uc_greedy": "1f434",
      "shortnames": [],
      "category": "nature"
    },
    ":horse_racing:": {
      "uc_base": "1f3c7",
      "uc_output": "1f3c7",
      "uc_match": "1f3c7",
      "uc_greedy": "1f3c7",
      "shortnames": [],
      "category": "activity"
    },
    ":hospital:": {
      "uc_base": "1f3e5",
      "uc_output": "1f3e5",
      "uc_match": "1f3e5",
      "uc_greedy": "1f3e5",
      "shortnames": [],
      "category": "travel"
    },
    ":hot_pepper:": {
      "uc_base": "1f336",
      "uc_output": "1f336",
      "uc_match": "1f336-fe0f",
      "uc_greedy": "1f336-fe0f",
      "shortnames": [],
      "category": "food"
    },
    ":hotdog:": {
      "uc_base": "1f32d",
      "uc_output": "1f32d",
      "uc_match": "1f32d",
      "uc_greedy": "1f32d",
      "shortnames": [":hot_dog:"],
      "category": "food"
    },
    ":hotel:": {
      "uc_base": "1f3e8",
      "uc_output": "1f3e8",
      "uc_match": "1f3e8",
      "uc_greedy": "1f3e8",
      "shortnames": [],
      "category": "travel"
    },
    ":house:": {
      "uc_base": "1f3e0",
      "uc_output": "1f3e0",
      "uc_match": "1f3e0-fe0f",
      "uc_greedy": "1f3e0-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":house_abandoned:": {
      "uc_base": "1f3da",
      "uc_output": "1f3da",
      "uc_match": "1f3da-fe0f",
      "uc_greedy": "1f3da-fe0f",
      "shortnames": [":derelict_house_building:"],
      "category": "travel"
    },
    ":house_with_garden:": {
      "uc_base": "1f3e1",
      "uc_output": "1f3e1",
      "uc_match": "1f3e1",
      "uc_greedy": "1f3e1",
      "shortnames": [],
      "category": "travel"
    },
    ":hugging:": {
      "uc_base": "1f917",
      "uc_output": "1f917",
      "uc_match": "1f917",
      "uc_greedy": "1f917",
      "shortnames": [":hugging_face:"],
      "category": "people"
    },
    ":hushed:": {
      "uc_base": "1f62f",
      "uc_output": "1f62f",
      "uc_match": "1f62f",
      "uc_greedy": "1f62f",
      "shortnames": [],
      "category": "people"
    },
    ":ice_cream:": {
      "uc_base": "1f368",
      "uc_output": "1f368",
      "uc_match": "1f368",
      "uc_greedy": "1f368",
      "shortnames": [],
      "category": "food"
    },
    ":icecream:": {
      "uc_base": "1f366",
      "uc_output": "1f366",
      "uc_match": "1f366",
      "uc_greedy": "1f366",
      "shortnames": [],
      "category": "food"
    },
    ":id:": {
      "uc_base": "1f194",
      "uc_output": "1f194",
      "uc_match": "1f194",
      "uc_greedy": "1f194",
      "shortnames": [],
      "category": "symbols"
    },
    ":ideograph_advantage:": {
      "uc_base": "1f250",
      "uc_output": "1f250",
      "uc_match": "1f250",
      "uc_greedy": "1f250",
      "shortnames": [],
      "category": "symbols"
    },
    ":imp:": {
      "uc_base": "1f47f",
      "uc_output": "1f47f",
      "uc_match": "1f47f",
      "uc_greedy": "1f47f",
      "shortnames": [],
      "category": "people"
    },
    ":inbox_tray:": {
      "uc_base": "1f4e5",
      "uc_output": "1f4e5",
      "uc_match": "1f4e5-fe0f",
      "uc_greedy": "1f4e5-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":incoming_envelope:": {
      "uc_base": "1f4e8",
      "uc_output": "1f4e8",
      "uc_match": "1f4e8",
      "uc_greedy": "1f4e8",
      "shortnames": [],
      "category": "objects"
    },
    ":innocent:": {
      "uc_base": "1f607",
      "uc_output": "1f607",
      "uc_match": "1f607",
      "uc_greedy": "1f607",
      "shortnames": [],
      "category": "people"
    },
    ":iphone:": {
      "uc_base": "1f4f1",
      "uc_output": "1f4f1",
      "uc_match": "1f4f1",
      "uc_greedy": "1f4f1",
      "shortnames": [],
      "category": "objects"
    },
    ":island:": {
      "uc_base": "1f3dd",
      "uc_output": "1f3dd",
      "uc_match": "1f3dd-fe0f",
      "uc_greedy": "1f3dd-fe0f",
      "shortnames": [":desert_island:"],
      "category": "travel"
    },
    ":izakaya_lantern:": {
      "uc_base": "1f3ee",
      "uc_output": "1f3ee",
      "uc_match": "1f3ee",
      "uc_greedy": "1f3ee",
      "shortnames": [],
      "category": "objects"
    },
    ":jack_o_lantern:": {
      "uc_base": "1f383",
      "uc_output": "1f383",
      "uc_match": "1f383",
      "uc_greedy": "1f383",
      "shortnames": [],
      "category": "people"
    },
    ":japan:": {
      "uc_base": "1f5fe",
      "uc_output": "1f5fe",
      "uc_match": "1f5fe",
      "uc_greedy": "1f5fe",
      "shortnames": [],
      "category": "travel"
    },
    ":japanese_castle:": {
      "uc_base": "1f3ef",
      "uc_output": "1f3ef",
      "uc_match": "1f3ef",
      "uc_greedy": "1f3ef",
      "shortnames": [],
      "category": "travel"
    },
    ":japanese_goblin:": {
      "uc_base": "1f47a",
      "uc_output": "1f47a",
      "uc_match": "1f47a",
      "uc_greedy": "1f47a",
      "shortnames": [],
      "category": "people"
    },
    ":japanese_ogre:": {
      "uc_base": "1f479",
      "uc_output": "1f479",
      "uc_match": "1f479",
      "uc_greedy": "1f479",
      "shortnames": [],
      "category": "people"
    },
    ":jeans:": {
      "uc_base": "1f456",
      "uc_output": "1f456",
      "uc_match": "1f456",
      "uc_greedy": "1f456",
      "shortnames": [],
      "category": "people"
    },
    ":joy:": {
      "uc_base": "1f602",
      "uc_output": "1f602",
      "uc_match": "1f602",
      "uc_greedy": "1f602",
      "shortnames": [],
      "category": "people"
    },
    ":joy_cat:": {
      "uc_base": "1f639",
      "uc_output": "1f639",
      "uc_match": "1f639",
      "uc_greedy": "1f639",
      "shortnames": [],
      "category": "people"
    },
    ":joystick:": {
      "uc_base": "1f579",
      "uc_output": "1f579",
      "uc_match": "1f579-fe0f",
      "uc_greedy": "1f579-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":kaaba:": {
      "uc_base": "1f54b",
      "uc_output": "1f54b",
      "uc_match": "1f54b",
      "uc_greedy": "1f54b",
      "shortnames": [],
      "category": "travel"
    },
    ":key2:": {
      "uc_base": "1f5dd",
      "uc_output": "1f5dd",
      "uc_match": "1f5dd-fe0f",
      "uc_greedy": "1f5dd",
      "shortnames": [":old_key:"],
      "category": "objects"
    },
    ":key:": {
      "uc_base": "1f511",
      "uc_output": "1f511",
      "uc_match": "1f511",
      "uc_greedy": "1f511",
      "shortnames": [],
      "category": "objects"
    },
    ":keycap_ten:": {
      "uc_base": "1f51f",
      "uc_output": "1f51f",
      "uc_match": "1f51f",
      "uc_greedy": "1f51f",
      "shortnames": [],
      "category": "symbols"
    },
    ":kimono:": {
      "uc_base": "1f458",
      "uc_output": "1f458",
      "uc_match": "1f458",
      "uc_greedy": "1f458",
      "shortnames": [],
      "category": "people"
    },
    ":kiss:": {
      "uc_base": "1f48b",
      "uc_output": "1f48b",
      "uc_match": "1f48b",
      "uc_greedy": "1f48b",
      "shortnames": [],
      "category": "people"
    },
    ":kissing:": {
      "uc_base": "1f617",
      "uc_output": "1f617",
      "uc_match": "1f617",
      "uc_greedy": "1f617",
      "shortnames": [],
      "category": "people"
    },
    ":kissing_cat:": {
      "uc_base": "1f63d",
      "uc_output": "1f63d",
      "uc_match": "1f63d",
      "uc_greedy": "1f63d",
      "shortnames": [],
      "category": "people"
    },
    ":kissing_closed_eyes:": {
      "uc_base": "1f61a",
      "uc_output": "1f61a",
      "uc_match": "1f61a",
      "uc_greedy": "1f61a",
      "shortnames": [],
      "category": "people"
    },
    ":kissing_heart:": {
      "uc_base": "1f618",
      "uc_output": "1f618",
      "uc_match": "1f618",
      "uc_greedy": "1f618",
      "shortnames": [],
      "category": "people"
    },
    ":kissing_smiling_eyes:": {
      "uc_base": "1f619",
      "uc_output": "1f619",
      "uc_match": "1f619",
      "uc_greedy": "1f619",
      "shortnames": [],
      "category": "people"
    },
    ":kiwi:": {
      "uc_base": "1f95d",
      "uc_output": "1f95d",
      "uc_match": "1f95d",
      "uc_greedy": "1f95d",
      "shortnames": [":kiwifruit:"],
      "category": "food"
    },
    ":knife:": {
      "uc_base": "1f52a",
      "uc_output": "1f52a",
      "uc_match": "1f52a",
      "uc_greedy": "1f52a",
      "shortnames": [],
      "category": "objects"
    },
    ":koala:": {
      "uc_base": "1f428",
      "uc_output": "1f428",
      "uc_match": "1f428",
      "uc_greedy": "1f428",
      "shortnames": [],
      "category": "nature"
    },
    ":koko:": {
      "uc_base": "1f201",
      "uc_output": "1f201",
      "uc_match": "1f201",
      "uc_greedy": "1f201",
      "shortnames": [],
      "category": "symbols"
    },
    ":label:": {
      "uc_base": "1f3f7",
      "uc_output": "1f3f7",
      "uc_match": "1f3f7-fe0f",
      "uc_greedy": "1f3f7-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":large_blue_diamond:": {
      "uc_base": "1f537",
      "uc_output": "1f537",
      "uc_match": "1f537",
      "uc_greedy": "1f537",
      "shortnames": [],
      "category": "symbols"
    },
    ":large_orange_diamond:": {
      "uc_base": "1f536",
      "uc_output": "1f536",
      "uc_match": "1f536",
      "uc_greedy": "1f536",
      "shortnames": [],
      "category": "symbols"
    },
    ":last_quarter_moon:": {
      "uc_base": "1f317",
      "uc_output": "1f317",
      "uc_match": "1f317",
      "uc_greedy": "1f317",
      "shortnames": [],
      "category": "nature"
    },
    ":last_quarter_moon_with_face:": {
      "uc_base": "1f31c",
      "uc_output": "1f31c",
      "uc_match": "1f31c-fe0f",
      "uc_greedy": "1f31c-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":laughing:": {
      "uc_base": "1f606",
      "uc_output": "1f606",
      "uc_match": "1f606",
      "uc_greedy": "1f606",
      "shortnames": [":satisfied:"],
      "category": "people"
    },
    ":leaves:": {
      "uc_base": "1f343",
      "uc_output": "1f343",
      "uc_match": "1f343",
      "uc_greedy": "1f343",
      "shortnames": [],
      "category": "nature"
    },
    ":ledger:": {
      "uc_base": "1f4d2",
      "uc_output": "1f4d2",
      "uc_match": "1f4d2",
      "uc_greedy": "1f4d2",
      "shortnames": [],
      "category": "objects"
    },
    ":left_facing_fist:": {
      "uc_base": "1f91b",
      "uc_output": "1f91b",
      "uc_match": "1f91b",
      "uc_greedy": "1f91b",
      "shortnames": [":left_fist:"],
      "category": "people"
    },
    ":left_luggage:": {
      "uc_base": "1f6c5",
      "uc_output": "1f6c5",
      "uc_match": "1f6c5",
      "uc_greedy": "1f6c5",
      "shortnames": [],
      "category": "symbols"
    },
    ":lemon:": {
      "uc_base": "1f34b",
      "uc_output": "1f34b",
      "uc_match": "1f34b",
      "uc_greedy": "1f34b",
      "shortnames": [],
      "category": "food"
    },
    ":leopard:": {
      "uc_base": "1f406",
      "uc_output": "1f406",
      "uc_match": "1f406",
      "uc_greedy": "1f406",
      "shortnames": [],
      "category": "nature"
    },
    ":level_slider:": {
      "uc_base": "1f39a",
      "uc_output": "1f39a",
      "uc_match": "1f39a-fe0f",
      "uc_greedy": "1f39a-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":levitate:": {
      "uc_base": "1f574",
      "uc_output": "1f574",
      "uc_match": "1f574-fe0f",
      "uc_greedy": "1f574-fe0f",
      "shortnames": [":man_in_business_suit_levitating:"],
      "category": "people"
    },
    ":light_rail:": {
      "uc_base": "1f688",
      "uc_output": "1f688",
      "uc_match": "1f688",
      "uc_greedy": "1f688",
      "shortnames": [],
      "category": "travel"
    },
    ":link:": {
      "uc_base": "1f517",
      "uc_output": "1f517",
      "uc_match": "1f517",
      "uc_greedy": "1f517",
      "shortnames": [],
      "category": "objects"
    },
    ":lion_face:": {
      "uc_base": "1f981",
      "uc_output": "1f981",
      "uc_match": "1f981",
      "uc_greedy": "1f981",
      "shortnames": [":lion:"],
      "category": "nature"
    },
    ":lips:": {
      "uc_base": "1f444",
      "uc_output": "1f444",
      "uc_match": "1f444",
      "uc_greedy": "1f444",
      "shortnames": [],
      "category": "people"
    },
    ":lipstick:": {
      "uc_base": "1f484",
      "uc_output": "1f484",
      "uc_match": "1f484",
      "uc_greedy": "1f484",
      "shortnames": [],
      "category": "people"
    },
    ":lizard:": {
      "uc_base": "1f98e",
      "uc_output": "1f98e",
      "uc_match": "1f98e",
      "uc_greedy": "1f98e",
      "shortnames": [],
      "category": "nature"
    },
    ":lock:": {
      "uc_base": "1f512",
      "uc_output": "1f512",
      "uc_match": "1f512-fe0f",
      "uc_greedy": "1f512-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":lock_with_ink_pen:": {
      "uc_base": "1f50f",
      "uc_output": "1f50f",
      "uc_match": "1f50f",
      "uc_greedy": "1f50f",
      "shortnames": [],
      "category": "objects"
    },
    ":lollipop:": {
      "uc_base": "1f36d",
      "uc_output": "1f36d",
      "uc_match": "1f36d",
      "uc_greedy": "1f36d",
      "shortnames": [],
      "category": "food"
    },
    ":loud_sound:": {
      "uc_base": "1f50a",
      "uc_output": "1f50a",
      "uc_match": "1f50a",
      "uc_greedy": "1f50a",
      "shortnames": [],
      "category": "symbols"
    },
    ":loudspeaker:": {
      "uc_base": "1f4e2",
      "uc_output": "1f4e2",
      "uc_match": "1f4e2",
      "uc_greedy": "1f4e2",
      "shortnames": [],
      "category": "symbols"
    },
    ":love_hotel:": {
      "uc_base": "1f3e9",
      "uc_output": "1f3e9",
      "uc_match": "1f3e9",
      "uc_greedy": "1f3e9",
      "shortnames": [],
      "category": "travel"
    },
    ":love_letter:": {
      "uc_base": "1f48c",
      "uc_output": "1f48c",
      "uc_match": "1f48c",
      "uc_greedy": "1f48c",
      "shortnames": [],
      "category": "objects"
    },
    ":love_you_gesture:": {
      "uc_base": "1f91f",
      "uc_output": "1f91f",
      "uc_match": "1f91f",
      "uc_greedy": "1f91f",
      "shortnames": [],
      "category": "people"
    },
    ":low_brightness:": {
      "uc_base": "1f505",
      "uc_output": "1f505",
      "uc_match": "1f505",
      "uc_greedy": "1f505",
      "shortnames": [],
      "category": "symbols"
    },
    ":lying_face:": {
      "uc_base": "1f925",
      "uc_output": "1f925",
      "uc_match": "1f925",
      "uc_greedy": "1f925",
      "shortnames": [":liar:"],
      "category": "people"
    },
    ":mag:": {
      "uc_base": "1f50d",
      "uc_output": "1f50d",
      "uc_match": "1f50d-fe0f",
      "uc_greedy": "1f50d-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":mag_right:": {
      "uc_base": "1f50e",
      "uc_output": "1f50e",
      "uc_match": "1f50e",
      "uc_greedy": "1f50e",
      "shortnames": [],
      "category": "objects"
    },
    ":mage:": {
      "uc_base": "1f9d9",
      "uc_output": "1f9d9",
      "uc_match": "1f9d9",
      "uc_greedy": "1f9d9",
      "shortnames": [],
      "category": "people"
    },
    ":mahjong:": {
      "uc_base": "1f004",
      "uc_output": "1f004",
      "uc_match": "1f004-fe0f",
      "uc_greedy": "1f004-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":mailbox:": {
      "uc_base": "1f4eb",
      "uc_output": "1f4eb",
      "uc_match": "1f4eb-fe0f",
      "uc_greedy": "1f4eb-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":mailbox_closed:": {
      "uc_base": "1f4ea",
      "uc_output": "1f4ea",
      "uc_match": "1f4ea-fe0f",
      "uc_greedy": "1f4ea-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":mailbox_with_mail:": {
      "uc_base": "1f4ec",
      "uc_output": "1f4ec",
      "uc_match": "1f4ec-fe0f",
      "uc_greedy": "1f4ec-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":mailbox_with_no_mail:": {
      "uc_base": "1f4ed",
      "uc_output": "1f4ed",
      "uc_match": "1f4ed-fe0f",
      "uc_greedy": "1f4ed-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":man:": {
      "uc_base": "1f468",
      "uc_output": "1f468",
      "uc_match": "1f468",
      "uc_greedy": "1f468",
      "shortnames": [],
      "category": "people"
    },
    ":man_dancing:": {
      "uc_base": "1f57a",
      "uc_output": "1f57a",
      "uc_match": "1f57a",
      "uc_greedy": "1f57a",
      "shortnames": [":male_dancer:"],
      "category": "people"
    },
    ":man_in_tuxedo:": {
      "uc_base": "1f935",
      "uc_output": "1f935",
      "uc_match": "1f935",
      "uc_greedy": "1f935",
      "shortnames": [],
      "category": "people"
    },
    ":man_with_chinese_cap:": {
      "uc_base": "1f472",
      "uc_output": "1f472",
      "uc_match": "1f472",
      "uc_greedy": "1f472",
      "shortnames": [":man_with_gua_pi_mao:"],
      "category": "people"
    },
    ":mans_shoe:": {
      "uc_base": "1f45e",
      "uc_output": "1f45e",
      "uc_match": "1f45e",
      "uc_greedy": "1f45e",
      "shortnames": [],
      "category": "people"
    },
    ":map:": {
      "uc_base": "1f5fa",
      "uc_output": "1f5fa",
      "uc_match": "1f5fa-fe0f",
      "uc_greedy": "1f5fa-fe0f",
      "shortnames": [":world_map:"],
      "category": "travel"
    },
    ":maple_leaf:": {
      "uc_base": "1f341",
      "uc_output": "1f341",
      "uc_match": "1f341",
      "uc_greedy": "1f341",
      "shortnames": [],
      "category": "nature"
    },
    ":martial_arts_uniform:": {
      "uc_base": "1f94b",
      "uc_output": "1f94b",
      "uc_match": "1f94b",
      "uc_greedy": "1f94b",
      "shortnames": [":karate_uniform:"],
      "category": "activity"
    },
    ":mask:": {
      "uc_base": "1f637",
      "uc_output": "1f637",
      "uc_match": "1f637",
      "uc_greedy": "1f637",
      "shortnames": [],
      "category": "people"
    },
    ":meat_on_bone:": {
      "uc_base": "1f356",
      "uc_output": "1f356",
      "uc_match": "1f356",
      "uc_greedy": "1f356",
      "shortnames": [],
      "category": "food"
    },
    ":medal:": {
      "uc_base": "1f3c5",
      "uc_output": "1f3c5",
      "uc_match": "1f3c5",
      "uc_greedy": "1f3c5",
      "shortnames": [":sports_medal:"],
      "category": "activity"
    },
    ":mega:": {
      "uc_base": "1f4e3",
      "uc_output": "1f4e3",
      "uc_match": "1f4e3",
      "uc_greedy": "1f4e3",
      "shortnames": [],
      "category": "symbols"
    },
    ":melon:": {
      "uc_base": "1f348",
      "uc_output": "1f348",
      "uc_match": "1f348",
      "uc_greedy": "1f348",
      "shortnames": [],
      "category": "food"
    },
    ":menorah:": {
      "uc_base": "1f54e",
      "uc_output": "1f54e",
      "uc_match": "1f54e",
      "uc_greedy": "1f54e",
      "shortnames": [],
      "category": "symbols"
    },
    ":mens:": {
      "uc_base": "1f6b9",
      "uc_output": "1f6b9",
      "uc_match": "1f6b9-fe0f",
      "uc_greedy": "1f6b9-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":merperson:": {
      "uc_base": "1f9dc",
      "uc_output": "1f9dc",
      "uc_match": "1f9dc",
      "uc_greedy": "1f9dc",
      "shortnames": [],
      "category": "people"
    },
    ":metal:": {
      "uc_base": "1f918",
      "uc_output": "1f918",
      "uc_match": "1f918",
      "uc_greedy": "1f918",
      "shortnames": [":sign_of_the_horns:"],
      "category": "people"
    },
    ":metro:": {
      "uc_base": "1f687",
      "uc_output": "1f687",
      "uc_match": "1f687-fe0f",
      "uc_greedy": "1f687-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":microphone2:": {
      "uc_base": "1f399",
      "uc_output": "1f399",
      "uc_match": "1f399-fe0f",
      "uc_greedy": "1f399-fe0f",
      "shortnames": [":studio_microphone:"],
      "category": "objects"
    },
    ":microphone:": {
      "uc_base": "1f3a4",
      "uc_output": "1f3a4",
      "uc_match": "1f3a4",
      "uc_greedy": "1f3a4",
      "shortnames": [],
      "category": "activity"
    },
    ":microscope:": {
      "uc_base": "1f52c",
      "uc_output": "1f52c",
      "uc_match": "1f52c",
      "uc_greedy": "1f52c",
      "shortnames": [],
      "category": "objects"
    },
    ":middle_finger:": {
      "uc_base": "1f595",
      "uc_output": "1f595",
      "uc_match": "1f595",
      "uc_greedy": "1f595",
      "shortnames": [":reversed_hand_with_middle_finger_extended:"],
      "category": "people"
    },
    ":military_medal:": {
      "uc_base": "1f396",
      "uc_output": "1f396",
      "uc_match": "1f396-fe0f",
      "uc_greedy": "1f396-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":milk:": {
      "uc_base": "1f95b",
      "uc_output": "1f95b",
      "uc_match": "1f95b",
      "uc_greedy": "1f95b",
      "shortnames": [":glass_of_milk:"],
      "category": "food"
    },
    ":milky_way:": {
      "uc_base": "1f30c",
      "uc_output": "1f30c",
      "uc_match": "1f30c",
      "uc_greedy": "1f30c",
      "shortnames": [],
      "category": "travel"
    },
    ":minibus:": {
      "uc_base": "1f690",
      "uc_output": "1f690",
      "uc_match": "1f690",
      "uc_greedy": "1f690",
      "shortnames": [],
      "category": "travel"
    },
    ":minidisc:": {
      "uc_base": "1f4bd",
      "uc_output": "1f4bd",
      "uc_match": "1f4bd",
      "uc_greedy": "1f4bd",
      "shortnames": [],
      "category": "objects"
    },
    ":mobile_phone_off:": {
      "uc_base": "1f4f4",
      "uc_output": "1f4f4",
      "uc_match": "1f4f4",
      "uc_greedy": "1f4f4",
      "shortnames": [],
      "category": "symbols"
    },
    ":money_mouth:": {
      "uc_base": "1f911",
      "uc_output": "1f911",
      "uc_match": "1f911",
      "uc_greedy": "1f911",
      "shortnames": [":money_mouth_face:"],
      "category": "people"
    },
    ":money_with_wings:": {
      "uc_base": "1f4b8",
      "uc_output": "1f4b8",
      "uc_match": "1f4b8",
      "uc_greedy": "1f4b8",
      "shortnames": [],
      "category": "objects"
    },
    ":moneybag:": {
      "uc_base": "1f4b0",
      "uc_output": "1f4b0",
      "uc_match": "1f4b0-fe0f",
      "uc_greedy": "1f4b0-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":monkey:": {
      "uc_base": "1f412",
      "uc_output": "1f412",
      "uc_match": "1f412",
      "uc_greedy": "1f412",
      "shortnames": [],
      "category": "nature"
    },
    ":monkey_face:": {
      "uc_base": "1f435",
      "uc_output": "1f435",
      "uc_match": "1f435",
      "uc_greedy": "1f435",
      "shortnames": [],
      "category": "nature"
    },
    ":monorail:": {
      "uc_base": "1f69d",
      "uc_output": "1f69d",
      "uc_match": "1f69d",
      "uc_greedy": "1f69d",
      "shortnames": [],
      "category": "travel"
    },
    ":mortar_board:": {
      "uc_base": "1f393",
      "uc_output": "1f393",
      "uc_match": "1f393-fe0f",
      "uc_greedy": "1f393-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":mosque:": {
      "uc_base": "1f54c",
      "uc_output": "1f54c",
      "uc_match": "1f54c",
      "uc_greedy": "1f54c",
      "shortnames": [],
      "category": "travel"
    },
    ":motor_scooter:": {
      "uc_base": "1f6f5",
      "uc_output": "1f6f5",
      "uc_match": "1f6f5",
      "uc_greedy": "1f6f5",
      "shortnames": [":motorbike:"],
      "category": "travel"
    },
    ":motorboat:": {
      "uc_base": "1f6e5",
      "uc_output": "1f6e5",
      "uc_match": "1f6e5-fe0f",
      "uc_greedy": "1f6e5-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":motorcycle:": {
      "uc_base": "1f3cd",
      "uc_output": "1f3cd",
      "uc_match": "1f3cd-fe0f",
      "uc_greedy": "1f3cd-fe0f",
      "shortnames": [":racing_motorcycle:"],
      "category": "travel"
    },
    ":motorway:": {
      "uc_base": "1f6e3",
      "uc_output": "1f6e3",
      "uc_match": "1f6e3-fe0f",
      "uc_greedy": "1f6e3-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":mount_fuji:": {
      "uc_base": "1f5fb",
      "uc_output": "1f5fb",
      "uc_match": "1f5fb",
      "uc_greedy": "1f5fb",
      "shortnames": [],
      "category": "travel"
    },
    ":mountain_cableway:": {
      "uc_base": "1f6a0",
      "uc_output": "1f6a0",
      "uc_match": "1f6a0",
      "uc_greedy": "1f6a0",
      "shortnames": [],
      "category": "travel"
    },
    ":mountain_railway:": {
      "uc_base": "1f69e",
      "uc_output": "1f69e",
      "uc_match": "1f69e",
      "uc_greedy": "1f69e",
      "shortnames": [],
      "category": "travel"
    },
    ":mountain_snow:": {
      "uc_base": "1f3d4",
      "uc_output": "1f3d4",
      "uc_match": "1f3d4-fe0f",
      "uc_greedy": "1f3d4-fe0f",
      "shortnames": [":snow_capped_mountain:"],
      "category": "travel"
    },
    ":mouse2:": {
      "uc_base": "1f401",
      "uc_output": "1f401",
      "uc_match": "1f401",
      "uc_greedy": "1f401",
      "shortnames": [],
      "category": "nature"
    },
    ":mouse:": {
      "uc_base": "1f42d",
      "uc_output": "1f42d",
      "uc_match": "1f42d",
      "uc_greedy": "1f42d",
      "shortnames": [],
      "category": "nature"
    },
    ":mouse_three_button:": {
      "uc_base": "1f5b1",
      "uc_output": "1f5b1",
      "uc_match": "1f5b1-fe0f",
      "uc_greedy": "1f5b1-fe0f",
      "shortnames": [":three_button_mouse:"],
      "category": "objects"
    },
    ":movie_camera:": {
      "uc_base": "1f3a5",
      "uc_output": "1f3a5",
      "uc_match": "1f3a5",
      "uc_greedy": "1f3a5",
      "shortnames": [],
      "category": "objects"
    },
    ":moyai:": {
      "uc_base": "1f5ff",
      "uc_output": "1f5ff",
      "uc_match": "1f5ff",
      "uc_greedy": "1f5ff",
      "shortnames": [],
      "category": "travel"
    },
    ":mrs_claus:": {
      "uc_base": "1f936",
      "uc_output": "1f936",
      "uc_match": "1f936",
      "uc_greedy": "1f936",
      "shortnames": [":mother_christmas:"],
      "category": "people"
    },
    ":muscle:": {
      "uc_base": "1f4aa",
      "uc_output": "1f4aa",
      "uc_match": "1f4aa",
      "uc_greedy": "1f4aa",
      "shortnames": [],
      "category": "people"
    },
    ":mushroom:": {
      "uc_base": "1f344",
      "uc_output": "1f344",
      "uc_match": "1f344",
      "uc_greedy": "1f344",
      "shortnames": [],
      "category": "nature"
    },
    ":musical_keyboard:": {
      "uc_base": "1f3b9",
      "uc_output": "1f3b9",
      "uc_match": "1f3b9",
      "uc_greedy": "1f3b9",
      "shortnames": [],
      "category": "activity"
    },
    ":musical_note:": {
      "uc_base": "1f3b5",
      "uc_output": "1f3b5",
      "uc_match": "1f3b5",
      "uc_greedy": "1f3b5",
      "shortnames": [],
      "category": "symbols"
    },
    ":musical_score:": {
      "uc_base": "1f3bc",
      "uc_output": "1f3bc",
      "uc_match": "1f3bc",
      "uc_greedy": "1f3bc",
      "shortnames": [],
      "category": "activity"
    },
    ":mute:": {
      "uc_base": "1f507",
      "uc_output": "1f507",
      "uc_match": "1f507",
      "uc_greedy": "1f507",
      "shortnames": [],
      "category": "symbols"
    },
    ":nail_care:": {
      "uc_base": "1f485",
      "uc_output": "1f485",
      "uc_match": "1f485",
      "uc_greedy": "1f485",
      "shortnames": [],
      "category": "people"
    },
    ":name_badge:": {
      "uc_base": "1f4db",
      "uc_output": "1f4db",
      "uc_match": "1f4db",
      "uc_greedy": "1f4db",
      "shortnames": [],
      "category": "symbols"
    },
    ":nauseated_face:": {
      "uc_base": "1f922",
      "uc_output": "1f922",
      "uc_match": "1f922",
      "uc_greedy": "1f922",
      "shortnames": [":sick:"],
      "category": "people"
    },
    ":necktie:": {
      "uc_base": "1f454",
      "uc_output": "1f454",
      "uc_match": "1f454",
      "uc_greedy": "1f454",
      "shortnames": [],
      "category": "people"
    },
    ":nerd:": {
      "uc_base": "1f913",
      "uc_output": "1f913",
      "uc_match": "1f913",
      "uc_greedy": "1f913",
      "shortnames": [":nerd_face:"],
      "category": "people"
    },
    ":neutral_face:": {
      "uc_base": "1f610",
      "uc_output": "1f610",
      "uc_match": "1f610-fe0f",
      "uc_greedy": "1f610-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":new:": {
      "uc_base": "1f195",
      "uc_output": "1f195",
      "uc_match": "1f195",
      "uc_greedy": "1f195",
      "shortnames": [],
      "category": "symbols"
    },
    ":new_moon:": {
      "uc_base": "1f311",
      "uc_output": "1f311",
      "uc_match": "1f311",
      "uc_greedy": "1f311",
      "shortnames": [],
      "category": "nature"
    },
    ":new_moon_with_face:": {
      "uc_base": "1f31a",
      "uc_output": "1f31a",
      "uc_match": "1f31a",
      "uc_greedy": "1f31a",
      "shortnames": [],
      "category": "nature"
    },
    ":newspaper2:": {
      "uc_base": "1f5de",
      "uc_output": "1f5de",
      "uc_match": "1f5de-fe0f",
      "uc_greedy": "1f5de-fe0f",
      "shortnames": [":rolled_up_newspaper:"],
      "category": "objects"
    },
    ":newspaper:": {
      "uc_base": "1f4f0",
      "uc_output": "1f4f0",
      "uc_match": "1f4f0",
      "uc_greedy": "1f4f0",
      "shortnames": [],
      "category": "objects"
    },
    ":ng:": {
      "uc_base": "1f196",
      "uc_output": "1f196",
      "uc_match": "1f196",
      "uc_greedy": "1f196",
      "shortnames": [],
      "category": "symbols"
    },
    ":night_with_stars:": {
      "uc_base": "1f303",
      "uc_output": "1f303",
      "uc_match": "1f303",
      "uc_greedy": "1f303",
      "shortnames": [],
      "category": "travel"
    },
    ":no_bell:": {
      "uc_base": "1f515",
      "uc_output": "1f515",
      "uc_match": "1f515",
      "uc_greedy": "1f515",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_bicycles:": {
      "uc_base": "1f6b3",
      "uc_output": "1f6b3",
      "uc_match": "1f6b3",
      "uc_greedy": "1f6b3",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_entry_sign:": {
      "uc_base": "1f6ab",
      "uc_output": "1f6ab",
      "uc_match": "1f6ab",
      "uc_greedy": "1f6ab",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_mobile_phones:": {
      "uc_base": "1f4f5",
      "uc_output": "1f4f5",
      "uc_match": "1f4f5",
      "uc_greedy": "1f4f5",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_mouth:": {
      "uc_base": "1f636",
      "uc_output": "1f636",
      "uc_match": "1f636",
      "uc_greedy": "1f636",
      "shortnames": [],
      "category": "people"
    },
    ":no_pedestrians:": {
      "uc_base": "1f6b7",
      "uc_output": "1f6b7",
      "uc_match": "1f6b7",
      "uc_greedy": "1f6b7",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_smoking:": {
      "uc_base": "1f6ad",
      "uc_output": "1f6ad",
      "uc_match": "1f6ad-fe0f",
      "uc_greedy": "1f6ad-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":non-potable_water:": {
      "uc_base": "1f6b1",
      "uc_output": "1f6b1",
      "uc_match": "1f6b1",
      "uc_greedy": "1f6b1",
      "shortnames": [],
      "category": "symbols"
    },
    ":nose:": {
      "uc_base": "1f443",
      "uc_output": "1f443",
      "uc_match": "1f443",
      "uc_greedy": "1f443",
      "shortnames": [],
      "category": "people"
    },
    ":notebook:": {
      "uc_base": "1f4d3",
      "uc_output": "1f4d3",
      "uc_match": "1f4d3",
      "uc_greedy": "1f4d3",
      "shortnames": [],
      "category": "objects"
    },
    ":notebook_with_decorative_cover:": {
      "uc_base": "1f4d4",
      "uc_output": "1f4d4",
      "uc_match": "1f4d4",
      "uc_greedy": "1f4d4",
      "shortnames": [],
      "category": "objects"
    },
    ":notepad_spiral:": {
      "uc_base": "1f5d2",
      "uc_output": "1f5d2",
      "uc_match": "1f5d2-fe0f",
      "uc_greedy": "1f5d2-fe0f",
      "shortnames": [":spiral_note_pad:"],
      "category": "objects"
    },
    ":notes:": {
      "uc_base": "1f3b6",
      "uc_output": "1f3b6",
      "uc_match": "1f3b6",
      "uc_greedy": "1f3b6",
      "shortnames": [],
      "category": "symbols"
    },
    ":nut_and_bolt:": {
      "uc_base": "1f529",
      "uc_output": "1f529",
      "uc_match": "1f529",
      "uc_greedy": "1f529",
      "shortnames": [],
      "category": "objects"
    },
    ":o2:": {
      "uc_base": "1f17e",
      "uc_output": "1f17e",
      "uc_match": "1f17e-fe0f",
      "uc_greedy": "1f17e-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":ocean:": {
      "uc_base": "1f30a",
      "uc_output": "1f30a",
      "uc_match": "1f30a",
      "uc_greedy": "1f30a",
      "shortnames": [],
      "category": "nature"
    },
    ":octagonal_sign:": {
      "uc_base": "1f6d1",
      "uc_output": "1f6d1",
      "uc_match": "1f6d1",
      "uc_greedy": "1f6d1",
      "shortnames": [":stop_sign:"],
      "category": "symbols"
    },
    ":octopus:": {
      "uc_base": "1f419",
      "uc_output": "1f419",
      "uc_match": "1f419",
      "uc_greedy": "1f419",
      "shortnames": [],
      "category": "nature"
    },
    ":oden:": {
      "uc_base": "1f362",
      "uc_output": "1f362",
      "uc_match": "1f362",
      "uc_greedy": "1f362",
      "shortnames": [],
      "category": "food"
    },
    ":office:": {
      "uc_base": "1f3e2",
      "uc_output": "1f3e2",
      "uc_match": "1f3e2",
      "uc_greedy": "1f3e2",
      "shortnames": [],
      "category": "travel"
    },
    ":oil:": {
      "uc_base": "1f6e2",
      "uc_output": "1f6e2",
      "uc_match": "1f6e2-fe0f",
      "uc_greedy": "1f6e2-fe0f",
      "shortnames": [":oil_drum:"],
      "category": "objects"
    },
    ":ok:": {
      "uc_base": "1f197",
      "uc_output": "1f197",
      "uc_match": "1f197",
      "uc_greedy": "1f197",
      "shortnames": [],
      "category": "symbols"
    },
    ":ok_hand:": {
      "uc_base": "1f44c",
      "uc_output": "1f44c",
      "uc_match": "1f44c",
      "uc_greedy": "1f44c",
      "shortnames": [],
      "category": "people"
    },
    ":older_adult:": {
      "uc_base": "1f9d3",
      "uc_output": "1f9d3",
      "uc_match": "1f9d3",
      "uc_greedy": "1f9d3",
      "shortnames": [],
      "category": "people"
    },
    ":older_man:": {
      "uc_base": "1f474",
      "uc_output": "1f474",
      "uc_match": "1f474",
      "uc_greedy": "1f474",
      "shortnames": [],
      "category": "people"
    },
    ":older_woman:": {
      "uc_base": "1f475",
      "uc_output": "1f475",
      "uc_match": "1f475",
      "uc_greedy": "1f475",
      "shortnames": [":grandma:"],
      "category": "people"
    },
    ":om_symbol:": {
      "uc_base": "1f549",
      "uc_output": "1f549",
      "uc_match": "1f549-fe0f",
      "uc_greedy": "1f549",
      "shortnames": [],
      "category": "symbols"
    },
    ":on:": {
      "uc_base": "1f51b",
      "uc_output": "1f51b",
      "uc_match": "1f51b",
      "uc_greedy": "1f51b",
      "shortnames": [],
      "category": "symbols"
    },
    ":oncoming_automobile:": {
      "uc_base": "1f698",
      "uc_output": "1f698",
      "uc_match": "1f698-fe0f",
      "uc_greedy": "1f698-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":oncoming_bus:": {
      "uc_base": "1f68d",
      "uc_output": "1f68d",
      "uc_match": "1f68d-fe0f",
      "uc_greedy": "1f68d-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":oncoming_police_car:": {
      "uc_base": "1f694",
      "uc_output": "1f694",
      "uc_match": "1f694-fe0f",
      "uc_greedy": "1f694-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":oncoming_taxi:": {
      "uc_base": "1f696",
      "uc_output": "1f696",
      "uc_match": "1f696",
      "uc_greedy": "1f696",
      "shortnames": [],
      "category": "travel"
    },
    ":open_file_folder:": {
      "uc_base": "1f4c2",
      "uc_output": "1f4c2",
      "uc_match": "1f4c2",
      "uc_greedy": "1f4c2",
      "shortnames": [],
      "category": "objects"
    },
    ":open_hands:": {
      "uc_base": "1f450",
      "uc_output": "1f450",
      "uc_match": "1f450",
      "uc_greedy": "1f450",
      "shortnames": [],
      "category": "people"
    },
    ":open_mouth:": {
      "uc_base": "1f62e",
      "uc_output": "1f62e",
      "uc_match": "1f62e",
      "uc_greedy": "1f62e",
      "shortnames": [],
      "category": "people"
    },
    ":orange_book:": {
      "uc_base": "1f4d9",
      "uc_output": "1f4d9",
      "uc_match": "1f4d9",
      "uc_greedy": "1f4d9",
      "shortnames": [],
      "category": "objects"
    },
    ":orange_heart:": {
      "uc_base": "1f9e1",
      "uc_output": "1f9e1",
      "uc_match": "1f9e1",
      "uc_greedy": "1f9e1",
      "shortnames": [],
      "category": "symbols"
    },
    ":outbox_tray:": {
      "uc_base": "1f4e4",
      "uc_output": "1f4e4",
      "uc_match": "1f4e4-fe0f",
      "uc_greedy": "1f4e4-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":owl:": {
      "uc_base": "1f989",
      "uc_output": "1f989",
      "uc_match": "1f989",
      "uc_greedy": "1f989",
      "shortnames": [],
      "category": "nature"
    },
    ":ox:": {
      "uc_base": "1f402",
      "uc_output": "1f402",
      "uc_match": "1f402",
      "uc_greedy": "1f402",
      "shortnames": [],
      "category": "nature"
    },
    ":package:": {
      "uc_base": "1f4e6",
      "uc_output": "1f4e6",
      "uc_match": "1f4e6-fe0f",
      "uc_greedy": "1f4e6-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":page_facing_up:": {
      "uc_base": "1f4c4",
      "uc_output": "1f4c4",
      "uc_match": "1f4c4",
      "uc_greedy": "1f4c4",
      "shortnames": [],
      "category": "objects"
    },
    ":page_with_curl:": {
      "uc_base": "1f4c3",
      "uc_output": "1f4c3",
      "uc_match": "1f4c3",
      "uc_greedy": "1f4c3",
      "shortnames": [],
      "category": "objects"
    },
    ":pager:": {
      "uc_base": "1f4df",
      "uc_output": "1f4df",
      "uc_match": "1f4df-fe0f",
      "uc_greedy": "1f4df-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":paintbrush:": {
      "uc_base": "1f58c",
      "uc_output": "1f58c",
      "uc_match": "1f58c-fe0f",
      "uc_greedy": "1f58c-fe0f",
      "shortnames": [":lower_left_paintbrush:"],
      "category": "objects"
    },
    ":palm_tree:": {
      "uc_base": "1f334",
      "uc_output": "1f334",
      "uc_match": "1f334",
      "uc_greedy": "1f334",
      "shortnames": [],
      "category": "nature"
    },
    ":palms_up_together:": {
      "uc_base": "1f932",
      "uc_output": "1f932",
      "uc_match": "1f932",
      "uc_greedy": "1f932",
      "shortnames": [],
      "category": "people"
    },
    ":pancakes:": {
      "uc_base": "1f95e",
      "uc_output": "1f95e",
      "uc_match": "1f95e",
      "uc_greedy": "1f95e",
      "shortnames": [],
      "category": "food"
    },
    ":panda_face:": {
      "uc_base": "1f43c",
      "uc_output": "1f43c",
      "uc_match": "1f43c",
      "uc_greedy": "1f43c",
      "shortnames": [],
      "category": "nature"
    },
    ":paperclip:": {
      "uc_base": "1f4ce",
      "uc_output": "1f4ce",
      "uc_match": "1f4ce",
      "uc_greedy": "1f4ce",
      "shortnames": [],
      "category": "objects"
    },
    ":paperclips:": {
      "uc_base": "1f587",
      "uc_output": "1f587",
      "uc_match": "1f587-fe0f",
      "uc_greedy": "1f587-fe0f",
      "shortnames": [":linked_paperclips:"],
      "category": "objects"
    },
    ":park:": {
      "uc_base": "1f3de",
      "uc_output": "1f3de",
      "uc_match": "1f3de-fe0f",
      "uc_greedy": "1f3de-fe0f",
      "shortnames": [":national_park:"],
      "category": "travel"
    },
    ":parking:": {
      "uc_base": "1f17f",
      "uc_output": "1f17f",
      "uc_match": "1f17f-fe0f",
      "uc_greedy": "1f17f-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":passport_control:": {
      "uc_base": "1f6c2",
      "uc_output": "1f6c2",
      "uc_match": "1f6c2",
      "uc_greedy": "1f6c2",
      "shortnames": [],
      "category": "symbols"
    },
    ":peach:": {
      "uc_base": "1f351",
      "uc_output": "1f351",
      "uc_match": "1f351",
      "uc_greedy": "1f351",
      "shortnames": [],
      "category": "food"
    },
    ":peanuts:": {
      "uc_base": "1f95c",
      "uc_output": "1f95c",
      "uc_match": "1f95c",
      "uc_greedy": "1f95c",
      "shortnames": [":shelled_peanut:"],
      "category": "food"
    },
    ":pear:": {
      "uc_base": "1f350",
      "uc_output": "1f350",
      "uc_match": "1f350",
      "uc_greedy": "1f350",
      "shortnames": [],
      "category": "food"
    },
    ":pen_ballpoint:": {
      "uc_base": "1f58a",
      "uc_output": "1f58a",
      "uc_match": "1f58a-fe0f",
      "uc_greedy": "1f58a-fe0f",
      "shortnames": [":lower_left_ballpoint_pen:"],
      "category": "objects"
    },
    ":pen_fountain:": {
      "uc_base": "1f58b",
      "uc_output": "1f58b",
      "uc_match": "1f58b-fe0f",
      "uc_greedy": "1f58b-fe0f",
      "shortnames": [":lower_left_fountain_pen:"],
      "category": "objects"
    },
    ":pencil:": {
      "uc_base": "1f4dd",
      "uc_output": "1f4dd",
      "uc_match": "1f4dd",
      "uc_greedy": "1f4dd",
      "shortnames": [":memo:"],
      "category": "objects"
    },
    ":penguin:": {
      "uc_base": "1f427",
      "uc_output": "1f427",
      "uc_match": "1f427",
      "uc_greedy": "1f427",
      "shortnames": [],
      "category": "nature"
    },
    ":pensive:": {
      "uc_base": "1f614",
      "uc_output": "1f614",
      "uc_match": "1f614",
      "uc_greedy": "1f614",
      "shortnames": [],
      "category": "people"
    },
    ":people_with_bunny_ears_partying:": {
      "uc_base": "1f46f",
      "uc_output": "1f46f",
      "uc_match": "1f46f",
      "uc_greedy": "1f46f",
      "shortnames": [":dancers:"],
      "category": "people"
    },
    ":people_wrestling:": {
      "uc_base": "1f93c",
      "uc_output": "1f93c",
      "uc_match": "1f93c",
      "uc_greedy": "1f93c",
      "shortnames": [":wrestlers:", ":wrestling:"],
      "category": "activity"
    },
    ":performing_arts:": {
      "uc_base": "1f3ad",
      "uc_output": "1f3ad",
      "uc_match": "1f3ad-fe0f",
      "uc_greedy": "1f3ad-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":persevere:": {
      "uc_base": "1f623",
      "uc_output": "1f623",
      "uc_match": "1f623",
      "uc_greedy": "1f623",
      "shortnames": [],
      "category": "people"
    },
    ":person_biking:": {
      "uc_base": "1f6b4",
      "uc_output": "1f6b4",
      "uc_match": "1f6b4",
      "uc_greedy": "1f6b4",
      "shortnames": [":bicyclist:"],
      "category": "activity"
    },
    ":person_bowing:": {
      "uc_base": "1f647",
      "uc_output": "1f647",
      "uc_match": "1f647",
      "uc_greedy": "1f647",
      "shortnames": [":bow:"],
      "category": "people"
    },
    ":person_climbing:": {
      "uc_base": "1f9d7",
      "uc_output": "1f9d7",
      "uc_match": "1f9d7",
      "uc_greedy": "1f9d7",
      "shortnames": [],
      "category": "activity"
    },
    ":person_doing_cartwheel:": {
      "uc_base": "1f938",
      "uc_output": "1f938",
      "uc_match": "1f938",
      "uc_greedy": "1f938",
      "shortnames": [":cartwheel:"],
      "category": "activity"
    },
    ":person_facepalming:": {
      "uc_base": "1f926",
      "uc_output": "1f926",
      "uc_match": "1f926",
      "uc_greedy": "1f926",
      "shortnames": [":face_palm:", ":facepalm:"],
      "category": "people"
    },
    ":person_fencing:": {
      "uc_base": "1f93a",
      "uc_output": "1f93a",
      "uc_match": "1f93a",
      "uc_greedy": "1f93a",
      "shortnames": [":fencer:", ":fencing:"],
      "category": "activity"
    },
    ":person_frowning:": {
      "uc_base": "1f64d",
      "uc_output": "1f64d",
      "uc_match": "1f64d",
      "uc_greedy": "1f64d",
      "shortnames": [],
      "category": "people"
    },
    ":person_gesturing_no:": {
      "uc_base": "1f645",
      "uc_output": "1f645",
      "uc_match": "1f645",
      "uc_greedy": "1f645",
      "shortnames": [":no_good:"],
      "category": "people"
    },
    ":person_gesturing_ok:": {
      "uc_base": "1f646",
      "uc_output": "1f646",
      "uc_match": "1f646",
      "uc_greedy": "1f646",
      "shortnames": [":ok_woman:"],
      "category": "people"
    },
    ":person_getting_haircut:": {
      "uc_base": "1f487",
      "uc_output": "1f487",
      "uc_match": "1f487",
      "uc_greedy": "1f487",
      "shortnames": [":haircut:"],
      "category": "people"
    },
    ":person_getting_massage:": {
      "uc_base": "1f486",
      "uc_output": "1f486",
      "uc_match": "1f486",
      "uc_greedy": "1f486",
      "shortnames": [":massage:"],
      "category": "people"
    },
    ":person_golfing:": {
      "uc_base": "1f3cc",
      "uc_output": "1f3cc",
      "uc_match": "1f3cc-fe0f",
      "uc_greedy": "1f3cc-fe0f",
      "shortnames": [":golfer:"],
      "category": "activity"
    },
    ":person_in_lotus_position:": {
      "uc_base": "1f9d8",
      "uc_output": "1f9d8",
      "uc_match": "1f9d8",
      "uc_greedy": "1f9d8",
      "shortnames": [],
      "category": "activity"
    },
    ":person_in_steamy_room:": {
      "uc_base": "1f9d6",
      "uc_output": "1f9d6",
      "uc_match": "1f9d6",
      "uc_greedy": "1f9d6",
      "shortnames": [],
      "category": "people"
    },
    ":person_juggling:": {
      "uc_base": "1f939",
      "uc_output": "1f939",
      "uc_match": "1f939",
      "uc_greedy": "1f939",
      "shortnames": [":juggling:", ":juggler:"],
      "category": "activity"
    },
    ":person_lifting_weights:": {
      "uc_base": "1f3cb",
      "uc_output": "1f3cb",
      "uc_match": "1f3cb-fe0f",
      "uc_greedy": "1f3cb-fe0f",
      "shortnames": [":lifter:", ":weight_lifter:"],
      "category": "activity"
    },
    ":person_mountain_biking:": {
      "uc_base": "1f6b5",
      "uc_output": "1f6b5",
      "uc_match": "1f6b5",
      "uc_greedy": "1f6b5",
      "shortnames": [":mountain_bicyclist:"],
      "category": "activity"
    },
    ":person_playing_handball:": {
      "uc_base": "1f93e",
      "uc_output": "1f93e",
      "uc_match": "1f93e",
      "uc_greedy": "1f93e",
      "shortnames": [":handball:"],
      "category": "activity"
    },
    ":person_playing_water_polo:": {
      "uc_base": "1f93d",
      "uc_output": "1f93d",
      "uc_match": "1f93d",
      "uc_greedy": "1f93d",
      "shortnames": [":water_polo:"],
      "category": "activity"
    },
    ":person_pouting:": {
      "uc_base": "1f64e",
      "uc_output": "1f64e",
      "uc_match": "1f64e",
      "uc_greedy": "1f64e",
      "shortnames": [":person_with_pouting_face:"],
      "category": "people"
    },
    ":person_raising_hand:": {
      "uc_base": "1f64b",
      "uc_output": "1f64b",
      "uc_match": "1f64b",
      "uc_greedy": "1f64b",
      "shortnames": [":raising_hand:"],
      "category": "people"
    },
    ":person_rowing_boat:": {
      "uc_base": "1f6a3",
      "uc_output": "1f6a3",
      "uc_match": "1f6a3",
      "uc_greedy": "1f6a3",
      "shortnames": [":rowboat:"],
      "category": "activity"
    },
    ":person_running:": {
      "uc_base": "1f3c3",
      "uc_output": "1f3c3",
      "uc_match": "1f3c3",
      "uc_greedy": "1f3c3",
      "shortnames": [":runner:"],
      "category": "people"
    },
    ":person_shrugging:": {
      "uc_base": "1f937",
      "uc_output": "1f937",
      "uc_match": "1f937",
      "uc_greedy": "1f937",
      "shortnames": [":shrug:"],
      "category": "people"
    },
    ":person_surfing:": {
      "uc_base": "1f3c4",
      "uc_output": "1f3c4",
      "uc_match": "1f3c4-fe0f",
      "uc_greedy": "1f3c4-fe0f",
      "shortnames": [":surfer:"],
      "category": "activity"
    },
    ":person_swimming:": {
      "uc_base": "1f3ca",
      "uc_output": "1f3ca",
      "uc_match": "1f3ca-fe0f",
      "uc_greedy": "1f3ca-fe0f",
      "shortnames": [":swimmer:"],
      "category": "activity"
    },
    ":person_tipping_hand:": {
      "uc_base": "1f481",
      "uc_output": "1f481",
      "uc_match": "1f481",
      "uc_greedy": "1f481",
      "shortnames": [":information_desk_person:"],
      "category": "people"
    },
    ":person_walking:": {
      "uc_base": "1f6b6",
      "uc_output": "1f6b6",
      "uc_match": "1f6b6",
      "uc_greedy": "1f6b6",
      "shortnames": [":walking:"],
      "category": "people"
    },
    ":person_wearing_turban:": {
      "uc_base": "1f473",
      "uc_output": "1f473",
      "uc_match": "1f473",
      "uc_greedy": "1f473",
      "shortnames": [":man_with_turban:"],
      "category": "people"
    },
    ":pie:": {
      "uc_base": "1f967",
      "uc_output": "1f967",
      "uc_match": "1f967",
      "uc_greedy": "1f967",
      "shortnames": [],
      "category": "food"
    },
    ":pig2:": {
      "uc_base": "1f416",
      "uc_output": "1f416",
      "uc_match": "1f416",
      "uc_greedy": "1f416",
      "shortnames": [],
      "category": "nature"
    },
    ":pig:": {
      "uc_base": "1f437",
      "uc_output": "1f437",
      "uc_match": "1f437",
      "uc_greedy": "1f437",
      "shortnames": [],
      "category": "nature"
    },
    ":pig_nose:": {
      "uc_base": "1f43d",
      "uc_output": "1f43d",
      "uc_match": "1f43d",
      "uc_greedy": "1f43d",
      "shortnames": [],
      "category": "nature"
    },
    ":pill:": {
      "uc_base": "1f48a",
      "uc_output": "1f48a",
      "uc_match": "1f48a",
      "uc_greedy": "1f48a",
      "shortnames": [],
      "category": "objects"
    },
    ":pineapple:": {
      "uc_base": "1f34d",
      "uc_output": "1f34d",
      "uc_match": "1f34d",
      "uc_greedy": "1f34d",
      "shortnames": [],
      "category": "food"
    },
    ":ping_pong:": {
      "uc_base": "1f3d3",
      "uc_output": "1f3d3",
      "uc_match": "1f3d3",
      "uc_greedy": "1f3d3",
      "shortnames": [":table_tennis:"],
      "category": "activity"
    },
    ":pizza:": {
      "uc_base": "1f355",
      "uc_output": "1f355",
      "uc_match": "1f355",
      "uc_greedy": "1f355",
      "shortnames": [],
      "category": "food"
    },
    ":place_of_worship:": {
      "uc_base": "1f6d0",
      "uc_output": "1f6d0",
      "uc_match": "1f6d0",
      "uc_greedy": "1f6d0",
      "shortnames": [":worship_symbol:"],
      "category": "symbols"
    },
    ":point_down:": {
      "uc_base": "1f447",
      "uc_output": "1f447",
      "uc_match": "1f447-fe0f",
      "uc_greedy": "1f447-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":point_left:": {
      "uc_base": "1f448",
      "uc_output": "1f448",
      "uc_match": "1f448-fe0f",
      "uc_greedy": "1f448-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":point_right:": {
      "uc_base": "1f449",
      "uc_output": "1f449",
      "uc_match": "1f449-fe0f",
      "uc_greedy": "1f449-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":point_up_2:": {
      "uc_base": "1f446",
      "uc_output": "1f446",
      "uc_match": "1f446-fe0f",
      "uc_greedy": "1f446-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":police_car:": {
      "uc_base": "1f693",
      "uc_output": "1f693",
      "uc_match": "1f693",
      "uc_greedy": "1f693",
      "shortnames": [],
      "category": "travel"
    },
    ":police_officer:": {
      "uc_base": "1f46e",
      "uc_output": "1f46e",
      "uc_match": "1f46e",
      "uc_greedy": "1f46e",
      "shortnames": [":cop:"],
      "category": "people"
    },
    ":poodle:": {
      "uc_base": "1f429",
      "uc_output": "1f429",
      "uc_match": "1f429",
      "uc_greedy": "1f429",
      "shortnames": [],
      "category": "nature"
    },
    ":poop:": {
      "uc_base": "1f4a9",
      "uc_output": "1f4a9",
      "uc_match": "1f4a9",
      "uc_greedy": "1f4a9",
      "shortnames": [":shit:", ":hankey:", ":poo:"],
      "category": "people"
    },
    ":popcorn:": {
      "uc_base": "1f37f",
      "uc_output": "1f37f",
      "uc_match": "1f37f",
      "uc_greedy": "1f37f",
      "shortnames": [],
      "category": "food"
    },
    ":post_office:": {
      "uc_base": "1f3e3",
      "uc_output": "1f3e3",
      "uc_match": "1f3e3",
      "uc_greedy": "1f3e3",
      "shortnames": [],
      "category": "travel"
    },
    ":postal_horn:": {
      "uc_base": "1f4ef",
      "uc_output": "1f4ef",
      "uc_match": "1f4ef",
      "uc_greedy": "1f4ef",
      "shortnames": [],
      "category": "objects"
    },
    ":postbox:": {
      "uc_base": "1f4ee",
      "uc_output": "1f4ee",
      "uc_match": "1f4ee",
      "uc_greedy": "1f4ee",
      "shortnames": [],
      "category": "objects"
    },
    ":potable_water:": {
      "uc_base": "1f6b0",
      "uc_output": "1f6b0",
      "uc_match": "1f6b0",
      "uc_greedy": "1f6b0",
      "shortnames": [],
      "category": "objects"
    },
    ":potato:": {
      "uc_base": "1f954",
      "uc_output": "1f954",
      "uc_match": "1f954",
      "uc_greedy": "1f954",
      "shortnames": [],
      "category": "food"
    },
    ":pouch:": {
      "uc_base": "1f45d",
      "uc_output": "1f45d",
      "uc_match": "1f45d",
      "uc_greedy": "1f45d",
      "shortnames": [],
      "category": "people"
    },
    ":poultry_leg:": {
      "uc_base": "1f357",
      "uc_output": "1f357",
      "uc_match": "1f357",
      "uc_greedy": "1f357",
      "shortnames": [],
      "category": "food"
    },
    ":pound:": {
      "uc_base": "1f4b7",
      "uc_output": "1f4b7",
      "uc_match": "1f4b7",
      "uc_greedy": "1f4b7",
      "shortnames": [],
      "category": "objects"
    },
    ":pouting_cat:": {
      "uc_base": "1f63e",
      "uc_output": "1f63e",
      "uc_match": "1f63e",
      "uc_greedy": "1f63e",
      "shortnames": [],
      "category": "people"
    },
    ":pray:": {
      "uc_base": "1f64f",
      "uc_output": "1f64f",
      "uc_match": "1f64f",
      "uc_greedy": "1f64f",
      "shortnames": [],
      "category": "people"
    },
    ":prayer_beads:": {
      "uc_base": "1f4ff",
      "uc_output": "1f4ff",
      "uc_match": "1f4ff",
      "uc_greedy": "1f4ff",
      "shortnames": [],
      "category": "objects"
    },
    ":pregnant_woman:": {
      "uc_base": "1f930",
      "uc_output": "1f930",
      "uc_match": "1f930",
      "uc_greedy": "1f930",
      "shortnames": [":expecting_woman:"],
      "category": "people"
    },
    ":pretzel:": {
      "uc_base": "1f968",
      "uc_output": "1f968",
      "uc_match": "1f968",
      "uc_greedy": "1f968",
      "shortnames": [],
      "category": "food"
    },
    ":prince:": {
      "uc_base": "1f934",
      "uc_output": "1f934",
      "uc_match": "1f934",
      "uc_greedy": "1f934",
      "shortnames": [],
      "category": "people"
    },
    ":princess:": {
      "uc_base": "1f478",
      "uc_output": "1f478",
      "uc_match": "1f478",
      "uc_greedy": "1f478",
      "shortnames": [],
      "category": "people"
    },
    ":printer:": {
      "uc_base": "1f5a8",
      "uc_output": "1f5a8",
      "uc_match": "1f5a8-fe0f",
      "uc_greedy": "1f5a8-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":projector:": {
      "uc_base": "1f4fd",
      "uc_output": "1f4fd",
      "uc_match": "1f4fd-fe0f",
      "uc_greedy": "1f4fd-fe0f",
      "shortnames": [":film_projector:"],
      "category": "objects"
    },
    ":punch:": {
      "uc_base": "1f44a",
      "uc_output": "1f44a",
      "uc_match": "1f44a",
      "uc_greedy": "1f44a",
      "shortnames": [],
      "category": "people"
    },
    ":purple_heart:": {
      "uc_base": "1f49c",
      "uc_output": "1f49c",
      "uc_match": "1f49c",
      "uc_greedy": "1f49c",
      "shortnames": [],
      "category": "symbols"
    },
    ":purse:": {
      "uc_base": "1f45b",
      "uc_output": "1f45b",
      "uc_match": "1f45b",
      "uc_greedy": "1f45b",
      "shortnames": [],
      "category": "people"
    },
    ":pushpin:": {
      "uc_base": "1f4cc",
      "uc_output": "1f4cc",
      "uc_match": "1f4cc",
      "uc_greedy": "1f4cc",
      "shortnames": [],
      "category": "objects"
    },
    ":put_litter_in_its_place:": {
      "uc_base": "1f6ae",
      "uc_output": "1f6ae",
      "uc_match": "1f6ae",
      "uc_greedy": "1f6ae",
      "shortnames": [],
      "category": "symbols"
    },
    ":rabbit2:": {
      "uc_base": "1f407",
      "uc_output": "1f407",
      "uc_match": "1f407",
      "uc_greedy": "1f407",
      "shortnames": [],
      "category": "nature"
    },
    ":rabbit:": {
      "uc_base": "1f430",
      "uc_output": "1f430",
      "uc_match": "1f430",
      "uc_greedy": "1f430",
      "shortnames": [],
      "category": "nature"
    },
    ":race_car:": {
      "uc_base": "1f3ce",
      "uc_output": "1f3ce",
      "uc_match": "1f3ce-fe0f",
      "uc_greedy": "1f3ce-fe0f",
      "shortnames": [":racing_car:"],
      "category": "travel"
    },
    ":racehorse:": {
      "uc_base": "1f40e",
      "uc_output": "1f40e",
      "uc_match": "1f40e",
      "uc_greedy": "1f40e",
      "shortnames": [],
      "category": "nature"
    },
    ":radio:": {
      "uc_base": "1f4fb",
      "uc_output": "1f4fb",
      "uc_match": "1f4fb-fe0f",
      "uc_greedy": "1f4fb-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":radio_button:": {
      "uc_base": "1f518",
      "uc_output": "1f518",
      "uc_match": "1f518",
      "uc_greedy": "1f518",
      "shortnames": [],
      "category": "symbols"
    },
    ":rage:": {
      "uc_base": "1f621",
      "uc_output": "1f621",
      "uc_match": "1f621",
      "uc_greedy": "1f621",
      "shortnames": [],
      "category": "people"
    },
    ":railway_car:": {
      "uc_base": "1f683",
      "uc_output": "1f683",
      "uc_match": "1f683",
      "uc_greedy": "1f683",
      "shortnames": [],
      "category": "travel"
    },
    ":railway_track:": {
      "uc_base": "1f6e4",
      "uc_output": "1f6e4",
      "uc_match": "1f6e4-fe0f",
      "uc_greedy": "1f6e4-fe0f",
      "shortnames": [":railroad_track:"],
      "category": "travel"
    },
    ":rainbow:": {
      "uc_base": "1f308",
      "uc_output": "1f308",
      "uc_match": "1f308",
      "uc_greedy": "1f308",
      "shortnames": [],
      "category": "nature"
    },
    ":raised_back_of_hand:": {
      "uc_base": "1f91a",
      "uc_output": "1f91a",
      "uc_match": "1f91a",
      "uc_greedy": "1f91a",
      "shortnames": [":back_of_hand:"],
      "category": "people"
    },
    ":raised_hands:": {
      "uc_base": "1f64c",
      "uc_output": "1f64c",
      "uc_match": "1f64c",
      "uc_greedy": "1f64c",
      "shortnames": [],
      "category": "people"
    },
    ":ram:": {
      "uc_base": "1f40f",
      "uc_output": "1f40f",
      "uc_match": "1f40f",
      "uc_greedy": "1f40f",
      "shortnames": [],
      "category": "nature"
    },
    ":ramen:": {
      "uc_base": "1f35c",
      "uc_output": "1f35c",
      "uc_match": "1f35c",
      "uc_greedy": "1f35c",
      "shortnames": [],
      "category": "food"
    },
    ":rat:": {
      "uc_base": "1f400",
      "uc_output": "1f400",
      "uc_match": "1f400",
      "uc_greedy": "1f400",
      "shortnames": [],
      "category": "nature"
    },
    ":red_car:": {
      "uc_base": "1f697",
      "uc_output": "1f697",
      "uc_match": "1f697",
      "uc_greedy": "1f697",
      "shortnames": [],
      "category": "travel"
    },
    ":red_circle:": {
      "uc_base": "1f534",
      "uc_output": "1f534",
      "uc_match": "1f534",
      "uc_greedy": "1f534",
      "shortnames": [],
      "category": "symbols"
    },
    ":regional_indicator_a:": {
      "uc_base": "1f1e6",
      "uc_output": "1f1e6",
      "uc_match": "1f1e6",
      "uc_greedy": "1f1e6",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_b:": {
      "uc_base": "1f1e7",
      "uc_output": "1f1e7",
      "uc_match": "1f1e7",
      "uc_greedy": "1f1e7",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_c:": {
      "uc_base": "1f1e8",
      "uc_output": "1f1e8",
      "uc_match": "1f1e8",
      "uc_greedy": "1f1e8",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_d:": {
      "uc_base": "1f1e9",
      "uc_output": "1f1e9",
      "uc_match": "1f1e9",
      "uc_greedy": "1f1e9",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_e:": {
      "uc_base": "1f1ea",
      "uc_output": "1f1ea",
      "uc_match": "1f1ea",
      "uc_greedy": "1f1ea",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_f:": {
      "uc_base": "1f1eb",
      "uc_output": "1f1eb",
      "uc_match": "1f1eb",
      "uc_greedy": "1f1eb",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_g:": {
      "uc_base": "1f1ec",
      "uc_output": "1f1ec",
      "uc_match": "1f1ec",
      "uc_greedy": "1f1ec",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_h:": {
      "uc_base": "1f1ed",
      "uc_output": "1f1ed",
      "uc_match": "1f1ed",
      "uc_greedy": "1f1ed",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_i:": {
      "uc_base": "1f1ee",
      "uc_output": "1f1ee",
      "uc_match": "1f1ee",
      "uc_greedy": "1f1ee",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_j:": {
      "uc_base": "1f1ef",
      "uc_output": "1f1ef",
      "uc_match": "1f1ef",
      "uc_greedy": "1f1ef",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_k:": {
      "uc_base": "1f1f0",
      "uc_output": "1f1f0",
      "uc_match": "1f1f0",
      "uc_greedy": "1f1f0",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_l:": {
      "uc_base": "1f1f1",
      "uc_output": "1f1f1",
      "uc_match": "1f1f1",
      "uc_greedy": "1f1f1",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_m:": {
      "uc_base": "1f1f2",
      "uc_output": "1f1f2",
      "uc_match": "1f1f2",
      "uc_greedy": "1f1f2",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_n:": {
      "uc_base": "1f1f3",
      "uc_output": "1f1f3",
      "uc_match": "1f1f3",
      "uc_greedy": "1f1f3",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_o:": {
      "uc_base": "1f1f4",
      "uc_output": "1f1f4",
      "uc_match": "1f1f4",
      "uc_greedy": "1f1f4",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_p:": {
      "uc_base": "1f1f5",
      "uc_output": "1f1f5",
      "uc_match": "1f1f5",
      "uc_greedy": "1f1f5",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_q:": {
      "uc_base": "1f1f6",
      "uc_output": "1f1f6",
      "uc_match": "1f1f6",
      "uc_greedy": "1f1f6",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_r:": {
      "uc_base": "1f1f7",
      "uc_output": "1f1f7",
      "uc_match": "1f1f7",
      "uc_greedy": "1f1f7",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_s:": {
      "uc_base": "1f1f8",
      "uc_output": "1f1f8",
      "uc_match": "1f1f8",
      "uc_greedy": "1f1f8",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_t:": {
      "uc_base": "1f1f9",
      "uc_output": "1f1f9",
      "uc_match": "1f1f9",
      "uc_greedy": "1f1f9",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_u:": {
      "uc_base": "1f1fa",
      "uc_output": "1f1fa",
      "uc_match": "1f1fa",
      "uc_greedy": "1f1fa",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_v:": {
      "uc_base": "1f1fb",
      "uc_output": "1f1fb",
      "uc_match": "1f1fb",
      "uc_greedy": "1f1fb",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_w:": {
      "uc_base": "1f1fc",
      "uc_output": "1f1fc",
      "uc_match": "1f1fc",
      "uc_greedy": "1f1fc",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_x:": {
      "uc_base": "1f1fd",
      "uc_output": "1f1fd",
      "uc_match": "1f1fd",
      "uc_greedy": "1f1fd",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_y:": {
      "uc_base": "1f1fe",
      "uc_output": "1f1fe",
      "uc_match": "1f1fe",
      "uc_greedy": "1f1fe",
      "shortnames": [],
      "category": "regional"
    },
    ":regional_indicator_z:": {
      "uc_base": "1f1ff",
      "uc_output": "1f1ff",
      "uc_match": "1f1ff",
      "uc_greedy": "1f1ff",
      "shortnames": [],
      "category": "regional"
    },
    ":relieved:": {
      "uc_base": "1f60c",
      "uc_output": "1f60c",
      "uc_match": "1f60c",
      "uc_greedy": "1f60c",
      "shortnames": [],
      "category": "people"
    },
    ":reminder_ribbon:": {
      "uc_base": "1f397",
      "uc_output": "1f397",
      "uc_match": "1f397-fe0f",
      "uc_greedy": "1f397-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":repeat:": {
      "uc_base": "1f501",
      "uc_output": "1f501",
      "uc_match": "1f501",
      "uc_greedy": "1f501",
      "shortnames": [],
      "category": "symbols"
    },
    ":repeat_one:": {
      "uc_base": "1f502",
      "uc_output": "1f502",
      "uc_match": "1f502",
      "uc_greedy": "1f502",
      "shortnames": [],
      "category": "symbols"
    },
    ":restroom:": {
      "uc_base": "1f6bb",
      "uc_output": "1f6bb",
      "uc_match": "1f6bb",
      "uc_greedy": "1f6bb",
      "shortnames": [],
      "category": "symbols"
    },
    ":revolving_hearts:": {
      "uc_base": "1f49e",
      "uc_output": "1f49e",
      "uc_match": "1f49e",
      "uc_greedy": "1f49e",
      "shortnames": [],
      "category": "symbols"
    },
    ":rhino:": {
      "uc_base": "1f98f",
      "uc_output": "1f98f",
      "uc_match": "1f98f",
      "uc_greedy": "1f98f",
      "shortnames": [":rhinoceros:"],
      "category": "nature"
    },
    ":ribbon:": {
      "uc_base": "1f380",
      "uc_output": "1f380",
      "uc_match": "1f380",
      "uc_greedy": "1f380",
      "shortnames": [],
      "category": "objects"
    },
    ":rice:": {
      "uc_base": "1f35a",
      "uc_output": "1f35a",
      "uc_match": "1f35a",
      "uc_greedy": "1f35a",
      "shortnames": [],
      "category": "food"
    },
    ":rice_ball:": {
      "uc_base": "1f359",
      "uc_output": "1f359",
      "uc_match": "1f359",
      "uc_greedy": "1f359",
      "shortnames": [],
      "category": "food"
    },
    ":rice_cracker:": {
      "uc_base": "1f358",
      "uc_output": "1f358",
      "uc_match": "1f358",
      "uc_greedy": "1f358",
      "shortnames": [],
      "category": "food"
    },
    ":rice_scene:": {
      "uc_base": "1f391",
      "uc_output": "1f391",
      "uc_match": "1f391",
      "uc_greedy": "1f391",
      "shortnames": [],
      "category": "travel"
    },
    ":right_facing_fist:": {
      "uc_base": "1f91c",
      "uc_output": "1f91c",
      "uc_match": "1f91c",
      "uc_greedy": "1f91c",
      "shortnames": [":right_fist:"],
      "category": "people"
    },
    ":ring:": {
      "uc_base": "1f48d",
      "uc_output": "1f48d",
      "uc_match": "1f48d",
      "uc_greedy": "1f48d",
      "shortnames": [],
      "category": "people"
    },
    ":robot:": {
      "uc_base": "1f916",
      "uc_output": "1f916",
      "uc_match": "1f916",
      "uc_greedy": "1f916",
      "shortnames": [":robot_face:"],
      "category": "people"
    },
    ":rocket:": {
      "uc_base": "1f680",
      "uc_output": "1f680",
      "uc_match": "1f680",
      "uc_greedy": "1f680",
      "shortnames": [],
      "category": "travel"
    },
    ":rofl:": {
      "uc_base": "1f923",
      "uc_output": "1f923",
      "uc_match": "1f923",
      "uc_greedy": "1f923",
      "shortnames": [":rolling_on_the_floor_laughing:"],
      "category": "people"
    },
    ":roller_coaster:": {
      "uc_base": "1f3a2",
      "uc_output": "1f3a2",
      "uc_match": "1f3a2",
      "uc_greedy": "1f3a2",
      "shortnames": [],
      "category": "travel"
    },
    ":rolling_eyes:": {
      "uc_base": "1f644",
      "uc_output": "1f644",
      "uc_match": "1f644",
      "uc_greedy": "1f644",
      "shortnames": [":face_with_rolling_eyes:"],
      "category": "people"
    },
    ":rooster:": {
      "uc_base": "1f413",
      "uc_output": "1f413",
      "uc_match": "1f413",
      "uc_greedy": "1f413",
      "shortnames": [],
      "category": "nature"
    },
    ":rose:": {
      "uc_base": "1f339",
      "uc_output": "1f339",
      "uc_match": "1f339",
      "uc_greedy": "1f339",
      "shortnames": [],
      "category": "nature"
    },
    ":rosette:": {
      "uc_base": "1f3f5",
      "uc_output": "1f3f5",
      "uc_match": "1f3f5-fe0f",
      "uc_greedy": "1f3f5-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":rotating_light:": {
      "uc_base": "1f6a8",
      "uc_output": "1f6a8",
      "uc_match": "1f6a8",
      "uc_greedy": "1f6a8",
      "shortnames": [],
      "category": "travel"
    },
    ":round_pushpin:": {
      "uc_base": "1f4cd",
      "uc_output": "1f4cd",
      "uc_match": "1f4cd",
      "uc_greedy": "1f4cd",
      "shortnames": [],
      "category": "objects"
    },
    ":rugby_football:": {
      "uc_base": "1f3c9",
      "uc_output": "1f3c9",
      "uc_match": "1f3c9",
      "uc_greedy": "1f3c9",
      "shortnames": [],
      "category": "activity"
    },
    ":running_shirt_with_sash:": {
      "uc_base": "1f3bd",
      "uc_output": "1f3bd",
      "uc_match": "1f3bd",
      "uc_greedy": "1f3bd",
      "shortnames": [],
      "category": "activity"
    },
    ":sa:": {
      "uc_base": "1f202",
      "uc_output": "1f202",
      "uc_match": "1f202-fe0f",
      "uc_greedy": "1f202-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":sake:": {
      "uc_base": "1f376",
      "uc_output": "1f376",
      "uc_match": "1f376",
      "uc_greedy": "1f376",
      "shortnames": [],
      "category": "food"
    },
    ":salad:": {
      "uc_base": "1f957",
      "uc_output": "1f957",
      "uc_match": "1f957",
      "uc_greedy": "1f957",
      "shortnames": [":green_salad:"],
      "category": "food"
    },
    ":sandal:": {
      "uc_base": "1f461",
      "uc_output": "1f461",
      "uc_match": "1f461",
      "uc_greedy": "1f461",
      "shortnames": [],
      "category": "people"
    },
    ":sandwich:": {
      "uc_base": "1f96a",
      "uc_output": "1f96a",
      "uc_match": "1f96a",
      "uc_greedy": "1f96a",
      "shortnames": [],
      "category": "food"
    },
    ":santa:": {
      "uc_base": "1f385",
      "uc_output": "1f385",
      "uc_match": "1f385",
      "uc_greedy": "1f385",
      "shortnames": [],
      "category": "people"
    },
    ":satellite:": {
      "uc_base": "1f4e1",
      "uc_output": "1f4e1",
      "uc_match": "1f4e1",
      "uc_greedy": "1f4e1",
      "shortnames": [],
      "category": "objects"
    },
    ":satellite_orbital:": {
      "uc_base": "1f6f0",
      "uc_output": "1f6f0",
      "uc_match": "1f6f0-fe0f",
      "uc_greedy": "1f6f0-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":sauropod:": {
      "uc_base": "1f995",
      "uc_output": "1f995",
      "uc_match": "1f995",
      "uc_greedy": "1f995",
      "shortnames": [],
      "category": "nature"
    },
    ":saxophone:": {
      "uc_base": "1f3b7",
      "uc_output": "1f3b7",
      "uc_match": "1f3b7",
      "uc_greedy": "1f3b7",
      "shortnames": [],
      "category": "activity"
    },
    ":scarf:": {
      "uc_base": "1f9e3",
      "uc_output": "1f9e3",
      "uc_match": "1f9e3",
      "uc_greedy": "1f9e3",
      "shortnames": [],
      "category": "people"
    },
    ":school:": {
      "uc_base": "1f3eb",
      "uc_output": "1f3eb",
      "uc_match": "1f3eb",
      "uc_greedy": "1f3eb",
      "shortnames": [],
      "category": "travel"
    },
    ":school_satchel:": {
      "uc_base": "1f392",
      "uc_output": "1f392",
      "uc_match": "1f392",
      "uc_greedy": "1f392",
      "shortnames": [],
      "category": "people"
    },
    ":scooter:": {
      "uc_base": "1f6f4",
      "uc_output": "1f6f4",
      "uc_match": "1f6f4",
      "uc_greedy": "1f6f4",
      "shortnames": [],
      "category": "travel"
    },
    ":scorpion:": {
      "uc_base": "1f982",
      "uc_output": "1f982",
      "uc_match": "1f982",
      "uc_greedy": "1f982",
      "shortnames": [],
      "category": "nature"
    },
    ":scream:": {
      "uc_base": "1f631",
      "uc_output": "1f631",
      "uc_match": "1f631",
      "uc_greedy": "1f631",
      "shortnames": [],
      "category": "people"
    },
    ":scream_cat:": {
      "uc_base": "1f640",
      "uc_output": "1f640",
      "uc_match": "1f640",
      "uc_greedy": "1f640",
      "shortnames": [],
      "category": "people"
    },
    ":scroll:": {
      "uc_base": "1f4dc",
      "uc_output": "1f4dc",
      "uc_match": "1f4dc",
      "uc_greedy": "1f4dc",
      "shortnames": [],
      "category": "objects"
    },
    ":seat:": {
      "uc_base": "1f4ba",
      "uc_output": "1f4ba",
      "uc_match": "1f4ba",
      "uc_greedy": "1f4ba",
      "shortnames": [],
      "category": "travel"
    },
    ":second_place:": {
      "uc_base": "1f948",
      "uc_output": "1f948",
      "uc_match": "1f948",
      "uc_greedy": "1f948",
      "shortnames": [":second_place_medal:"],
      "category": "activity"
    },
    ":see_no_evil:": {
      "uc_base": "1f648",
      "uc_output": "1f648",
      "uc_match": "1f648",
      "uc_greedy": "1f648",
      "shortnames": [],
      "category": "nature"
    },
    ":seedling:": {
      "uc_base": "1f331",
      "uc_output": "1f331",
      "uc_match": "1f331",
      "uc_greedy": "1f331",
      "shortnames": [],
      "category": "nature"
    },
    ":selfie:": {
      "uc_base": "1f933",
      "uc_output": "1f933",
      "uc_match": "1f933",
      "uc_greedy": "1f933",
      "shortnames": [],
      "category": "people"
    },
    ":shallow_pan_of_food:": {
      "uc_base": "1f958",
      "uc_output": "1f958",
      "uc_match": "1f958",
      "uc_greedy": "1f958",
      "shortnames": [":paella:"],
      "category": "food"
    },
    ":shark:": {
      "uc_base": "1f988",
      "uc_output": "1f988",
      "uc_match": "1f988",
      "uc_greedy": "1f988",
      "shortnames": [],
      "category": "nature"
    },
    ":shaved_ice:": {
      "uc_base": "1f367",
      "uc_output": "1f367",
      "uc_match": "1f367",
      "uc_greedy": "1f367",
      "shortnames": [],
      "category": "food"
    },
    ":sheep:": {
      "uc_base": "1f411",
      "uc_output": "1f411",
      "uc_match": "1f411",
      "uc_greedy": "1f411",
      "shortnames": [],
      "category": "nature"
    },
    ":shell:": {
      "uc_base": "1f41a",
      "uc_output": "1f41a",
      "uc_match": "1f41a",
      "uc_greedy": "1f41a",
      "shortnames": [],
      "category": "nature"
    },
    ":shield:": {
      "uc_base": "1f6e1",
      "uc_output": "1f6e1",
      "uc_match": "1f6e1-fe0f",
      "uc_greedy": "1f6e1-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":ship:": {
      "uc_base": "1f6a2",
      "uc_output": "1f6a2",
      "uc_match": "1f6a2",
      "uc_greedy": "1f6a2",
      "shortnames": [],
      "category": "travel"
    },
    ":shirt:": {
      "uc_base": "1f455",
      "uc_output": "1f455",
      "uc_match": "1f455",
      "uc_greedy": "1f455",
      "shortnames": [],
      "category": "people"
    },
    ":shopping_bags:": {
      "uc_base": "1f6cd",
      "uc_output": "1f6cd",
      "uc_match": "1f6cd-fe0f",
      "uc_greedy": "1f6cd-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":shopping_cart:": {
      "uc_base": "1f6d2",
      "uc_output": "1f6d2",
      "uc_match": "1f6d2",
      "uc_greedy": "1f6d2",
      "shortnames": [":shopping_trolley:"],
      "category": "objects"
    },
    ":shower:": {
      "uc_base": "1f6bf",
      "uc_output": "1f6bf",
      "uc_match": "1f6bf",
      "uc_greedy": "1f6bf",
      "shortnames": [],
      "category": "objects"
    },
    ":shrimp:": {
      "uc_base": "1f990",
      "uc_output": "1f990",
      "uc_match": "1f990",
      "uc_greedy": "1f990",
      "shortnames": [],
      "category": "nature"
    },
    ":shushing_face:": {
      "uc_base": "1f92b",
      "uc_output": "1f92b",
      "uc_match": "1f92b",
      "uc_greedy": "1f92b",
      "shortnames": [],
      "category": "people"
    },
    ":signal_strength:": {
      "uc_base": "1f4f6",
      "uc_output": "1f4f6",
      "uc_match": "1f4f6",
      "uc_greedy": "1f4f6",
      "shortnames": [],
      "category": "symbols"
    },
    ":six_pointed_star:": {
      "uc_base": "1f52f",
      "uc_output": "1f52f",
      "uc_match": "1f52f",
      "uc_greedy": "1f52f",
      "shortnames": [],
      "category": "symbols"
    },
    ":ski:": {
      "uc_base": "1f3bf",
      "uc_output": "1f3bf",
      "uc_match": "1f3bf",
      "uc_greedy": "1f3bf",
      "shortnames": [],
      "category": "activity"
    },
    ":skull:": {
      "uc_base": "1f480",
      "uc_output": "1f480",
      "uc_match": "1f480",
      "uc_greedy": "1f480",
      "shortnames": [":skeleton:"],
      "category": "people"
    },
    ":sled:": {
      "uc_base": "1f6f7",
      "uc_output": "1f6f7",
      "uc_match": "1f6f7",
      "uc_greedy": "1f6f7",
      "shortnames": [],
      "category": "activity"
    },
    ":sleeping:": {
      "uc_base": "1f634",
      "uc_output": "1f634",
      "uc_match": "1f634",
      "uc_greedy": "1f634",
      "shortnames": [],
      "category": "people"
    },
    ":sleeping_accommodation:": {
      "uc_base": "1f6cc",
      "uc_output": "1f6cc",
      "uc_match": "1f6cc",
      "uc_greedy": "1f6cc",
      "shortnames": [],
      "category": "objects"
    },
    ":sleepy:": {
      "uc_base": "1f62a",
      "uc_output": "1f62a",
      "uc_match": "1f62a",
      "uc_greedy": "1f62a",
      "shortnames": [],
      "category": "people"
    },
    ":slight_frown:": {
      "uc_base": "1f641",
      "uc_output": "1f641",
      "uc_match": "1f641",
      "uc_greedy": "1f641",
      "shortnames": [":slightly_frowning_face:"],
      "category": "people"
    },
    ":slight_smile:": {
      "uc_base": "1f642",
      "uc_output": "1f642",
      "uc_match": "1f642",
      "uc_greedy": "1f642",
      "shortnames": [":slightly_smiling_face:"],
      "category": "people"
    },
    ":slot_machine:": {
      "uc_base": "1f3b0",
      "uc_output": "1f3b0",
      "uc_match": "1f3b0",
      "uc_greedy": "1f3b0",
      "shortnames": [],
      "category": "activity"
    },
    ":small_blue_diamond:": {
      "uc_base": "1f539",
      "uc_output": "1f539",
      "uc_match": "1f539",
      "uc_greedy": "1f539",
      "shortnames": [],
      "category": "symbols"
    },
    ":small_orange_diamond:": {
      "uc_base": "1f538",
      "uc_output": "1f538",
      "uc_match": "1f538",
      "uc_greedy": "1f538",
      "shortnames": [],
      "category": "symbols"
    },
    ":small_red_triangle:": {
      "uc_base": "1f53a",
      "uc_output": "1f53a",
      "uc_match": "1f53a",
      "uc_greedy": "1f53a",
      "shortnames": [],
      "category": "symbols"
    },
    ":small_red_triangle_down:": {
      "uc_base": "1f53b",
      "uc_output": "1f53b",
      "uc_match": "1f53b",
      "uc_greedy": "1f53b",
      "shortnames": [],
      "category": "symbols"
    },
    ":smile:": {
      "uc_base": "1f604",
      "uc_output": "1f604",
      "uc_match": "1f604",
      "uc_greedy": "1f604",
      "shortnames": [],
      "category": "people"
    },
    ":smile_cat:": {
      "uc_base": "1f638",
      "uc_output": "1f638",
      "uc_match": "1f638",
      "uc_greedy": "1f638",
      "shortnames": [],
      "category": "people"
    },
    ":smiley:": {
      "uc_base": "1f603",
      "uc_output": "1f603",
      "uc_match": "1f603",
      "uc_greedy": "1f603",
      "shortnames": [],
      "category": "people"
    },
    ":smiley_cat:": {
      "uc_base": "1f63a",
      "uc_output": "1f63a",
      "uc_match": "1f63a",
      "uc_greedy": "1f63a",
      "shortnames": [],
      "category": "people"
    },
    ":smiling_imp:": {
      "uc_base": "1f608",
      "uc_output": "1f608",
      "uc_match": "1f608",
      "uc_greedy": "1f608",
      "shortnames": [],
      "category": "people"
    },
    ":smirk:": {
      "uc_base": "1f60f",
      "uc_output": "1f60f",
      "uc_match": "1f60f",
      "uc_greedy": "1f60f",
      "shortnames": [],
      "category": "people"
    },
    ":smirk_cat:": {
      "uc_base": "1f63c",
      "uc_output": "1f63c",
      "uc_match": "1f63c",
      "uc_greedy": "1f63c",
      "shortnames": [],
      "category": "people"
    },
    ":smoking:": {
      "uc_base": "1f6ac",
      "uc_output": "1f6ac",
      "uc_match": "1f6ac",
      "uc_greedy": "1f6ac",
      "shortnames": [],
      "category": "objects"
    },
    ":snail:": {
      "uc_base": "1f40c",
      "uc_output": "1f40c",
      "uc_match": "1f40c",
      "uc_greedy": "1f40c",
      "shortnames": [],
      "category": "nature"
    },
    ":snake:": {
      "uc_base": "1f40d",
      "uc_output": "1f40d",
      "uc_match": "1f40d",
      "uc_greedy": "1f40d",
      "shortnames": [],
      "category": "nature"
    },
    ":sneezing_face:": {
      "uc_base": "1f927",
      "uc_output": "1f927",
      "uc_match": "1f927",
      "uc_greedy": "1f927",
      "shortnames": [":sneeze:"],
      "category": "people"
    },
    ":snowboarder:": {
      "uc_base": "1f3c2",
      "uc_output": "1f3c2",
      "uc_match": "1f3c2-fe0f",
      "uc_greedy": "1f3c2-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":sob:": {
      "uc_base": "1f62d",
      "uc_output": "1f62d",
      "uc_match": "1f62d",
      "uc_greedy": "1f62d",
      "shortnames": [],
      "category": "people"
    },
    ":socks:": {
      "uc_base": "1f9e6",
      "uc_output": "1f9e6",
      "uc_match": "1f9e6",
      "uc_greedy": "1f9e6",
      "shortnames": [],
      "category": "people"
    },
    ":soon:": {
      "uc_base": "1f51c",
      "uc_output": "1f51c",
      "uc_match": "1f51c",
      "uc_greedy": "1f51c",
      "shortnames": [],
      "category": "symbols"
    },
    ":sos:": {
      "uc_base": "1f198",
      "uc_output": "1f198",
      "uc_match": "1f198",
      "uc_greedy": "1f198",
      "shortnames": [],
      "category": "symbols"
    },
    ":sound:": {
      "uc_base": "1f509",
      "uc_output": "1f509",
      "uc_match": "1f509",
      "uc_greedy": "1f509",
      "shortnames": [],
      "category": "symbols"
    },
    ":space_invader:": {
      "uc_base": "1f47e",
      "uc_output": "1f47e",
      "uc_match": "1f47e",
      "uc_greedy": "1f47e",
      "shortnames": [],
      "category": "people"
    },
    ":spaghetti:": {
      "uc_base": "1f35d",
      "uc_output": "1f35d",
      "uc_match": "1f35d",
      "uc_greedy": "1f35d",
      "shortnames": [],
      "category": "food"
    },
    ":sparkler:": {
      "uc_base": "1f387",
      "uc_output": "1f387",
      "uc_match": "1f387",
      "uc_greedy": "1f387",
      "shortnames": [],
      "category": "travel"
    },
    ":sparkling_heart:": {
      "uc_base": "1f496",
      "uc_output": "1f496",
      "uc_match": "1f496",
      "uc_greedy": "1f496",
      "shortnames": [],
      "category": "symbols"
    },
    ":speak_no_evil:": {
      "uc_base": "1f64a",
      "uc_output": "1f64a",
      "uc_match": "1f64a",
      "uc_greedy": "1f64a",
      "shortnames": [],
      "category": "nature"
    },
    ":speaker:": {
      "uc_base": "1f508",
      "uc_output": "1f508",
      "uc_match": "1f508-fe0f",
      "uc_greedy": "1f508-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":speaking_head:": {
      "uc_base": "1f5e3",
      "uc_output": "1f5e3",
      "uc_match": "1f5e3-fe0f",
      "uc_greedy": "1f5e3-fe0f",
      "shortnames": [":speaking_head_in_silhouette:"],
      "category": "people"
    },
    ":speech_balloon:": {
      "uc_base": "1f4ac",
      "uc_output": "1f4ac",
      "uc_match": "1f4ac",
      "uc_greedy": "1f4ac",
      "shortnames": [],
      "category": "symbols"
    },
    ":speech_left:": {
      "uc_base": "1f5e8",
      "uc_output": "1f5e8",
      "uc_match": "1f5e8-fe0f",
      "uc_greedy": "1f5e8-fe0f",
      "shortnames": [":left_speech_bubble:"],
      "category": "symbols"
    },
    ":speedboat:": {
      "uc_base": "1f6a4",
      "uc_output": "1f6a4",
      "uc_match": "1f6a4",
      "uc_greedy": "1f6a4",
      "shortnames": [],
      "category": "travel"
    },
    ":spider:": {
      "uc_base": "1f577",
      "uc_output": "1f577",
      "uc_match": "1f577-fe0f",
      "uc_greedy": "1f577-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":spider_web:": {
      "uc_base": "1f578",
      "uc_output": "1f578",
      "uc_match": "1f578-fe0f",
      "uc_greedy": "1f578-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":spoon:": {
      "uc_base": "1f944",
      "uc_output": "1f944",
      "uc_match": "1f944",
      "uc_greedy": "1f944",
      "shortnames": [],
      "category": "food"
    },
    ":squid:": {
      "uc_base": "1f991",
      "uc_output": "1f991",
      "uc_match": "1f991",
      "uc_greedy": "1f991",
      "shortnames": [],
      "category": "nature"
    },
    ":stadium:": {
      "uc_base": "1f3df",
      "uc_output": "1f3df",
      "uc_match": "1f3df-fe0f",
      "uc_greedy": "1f3df-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":star2:": {
      "uc_base": "1f31f",
      "uc_output": "1f31f",
      "uc_match": "1f31f",
      "uc_greedy": "1f31f",
      "shortnames": [],
      "category": "nature"
    },
    ":star_struck:": {
      "uc_base": "1f929",
      "uc_output": "1f929",
      "uc_match": "1f929",
      "uc_greedy": "1f929",
      "shortnames": [],
      "category": "people"
    },
    ":stars:": {
      "uc_base": "1f320",
      "uc_output": "1f320",
      "uc_match": "1f320",
      "uc_greedy": "1f320",
      "shortnames": [],
      "category": "travel"
    },
    ":station:": {
      "uc_base": "1f689",
      "uc_output": "1f689",
      "uc_match": "1f689",
      "uc_greedy": "1f689",
      "shortnames": [],
      "category": "travel"
    },
    ":statue_of_liberty:": {
      "uc_base": "1f5fd",
      "uc_output": "1f5fd",
      "uc_match": "1f5fd",
      "uc_greedy": "1f5fd",
      "shortnames": [],
      "category": "travel"
    },
    ":steam_locomotive:": {
      "uc_base": "1f682",
      "uc_output": "1f682",
      "uc_match": "1f682",
      "uc_greedy": "1f682",
      "shortnames": [],
      "category": "travel"
    },
    ":stew:": {
      "uc_base": "1f372",
      "uc_output": "1f372",
      "uc_match": "1f372",
      "uc_greedy": "1f372",
      "shortnames": [],
      "category": "food"
    },
    ":straight_ruler:": {
      "uc_base": "1f4cf",
      "uc_output": "1f4cf",
      "uc_match": "1f4cf",
      "uc_greedy": "1f4cf",
      "shortnames": [],
      "category": "objects"
    },
    ":strawberry:": {
      "uc_base": "1f353",
      "uc_output": "1f353",
      "uc_match": "1f353",
      "uc_greedy": "1f353",
      "shortnames": [],
      "category": "food"
    },
    ":stuck_out_tongue:": {
      "uc_base": "1f61b",
      "uc_output": "1f61b",
      "uc_match": "1f61b",
      "uc_greedy": "1f61b",
      "shortnames": [],
      "category": "people"
    },
    ":stuck_out_tongue_closed_eyes:": {
      "uc_base": "1f61d",
      "uc_output": "1f61d",
      "uc_match": "1f61d",
      "uc_greedy": "1f61d",
      "shortnames": [],
      "category": "people"
    },
    ":stuck_out_tongue_winking_eye:": {
      "uc_base": "1f61c",
      "uc_output": "1f61c",
      "uc_match": "1f61c",
      "uc_greedy": "1f61c",
      "shortnames": [],
      "category": "people"
    },
    ":stuffed_flatbread:": {
      "uc_base": "1f959",
      "uc_output": "1f959",
      "uc_match": "1f959",
      "uc_greedy": "1f959",
      "shortnames": [":stuffed_pita:"],
      "category": "food"
    },
    ":sun_with_face:": {
      "uc_base": "1f31e",
      "uc_output": "1f31e",
      "uc_match": "1f31e",
      "uc_greedy": "1f31e",
      "shortnames": [],
      "category": "nature"
    },
    ":sunflower:": {
      "uc_base": "1f33b",
      "uc_output": "1f33b",
      "uc_match": "1f33b",
      "uc_greedy": "1f33b",
      "shortnames": [],
      "category": "nature"
    },
    ":sunglasses:": {
      "uc_base": "1f60e",
      "uc_output": "1f60e",
      "uc_match": "1f60e",
      "uc_greedy": "1f60e",
      "shortnames": [],
      "category": "people"
    },
    ":sunrise:": {
      "uc_base": "1f305",
      "uc_output": "1f305",
      "uc_match": "1f305",
      "uc_greedy": "1f305",
      "shortnames": [],
      "category": "travel"
    },
    ":sunrise_over_mountains:": {
      "uc_base": "1f304",
      "uc_output": "1f304",
      "uc_match": "1f304",
      "uc_greedy": "1f304",
      "shortnames": [],
      "category": "travel"
    },
    ":sushi:": {
      "uc_base": "1f363",
      "uc_output": "1f363",
      "uc_match": "1f363",
      "uc_greedy": "1f363",
      "shortnames": [],
      "category": "food"
    },
    ":suspension_railway:": {
      "uc_base": "1f69f",
      "uc_output": "1f69f",
      "uc_match": "1f69f",
      "uc_greedy": "1f69f",
      "shortnames": [],
      "category": "travel"
    },
    ":sweat:": {
      "uc_base": "1f613",
      "uc_output": "1f613",
      "uc_match": "1f613",
      "uc_greedy": "1f613",
      "shortnames": [],
      "category": "people"
    },
    ":sweat_drops:": {
      "uc_base": "1f4a6",
      "uc_output": "1f4a6",
      "uc_match": "1f4a6",
      "uc_greedy": "1f4a6",
      "shortnames": [],
      "category": "nature"
    },
    ":sweat_smile:": {
      "uc_base": "1f605",
      "uc_output": "1f605",
      "uc_match": "1f605",
      "uc_greedy": "1f605",
      "shortnames": [],
      "category": "people"
    },
    ":sweet_potato:": {
      "uc_base": "1f360",
      "uc_output": "1f360",
      "uc_match": "1f360",
      "uc_greedy": "1f360",
      "shortnames": [],
      "category": "food"
    },
    ":symbols:": {
      "uc_base": "1f523",
      "uc_output": "1f523",
      "uc_match": "1f523",
      "uc_greedy": "1f523",
      "shortnames": [],
      "category": "symbols"
    },
    ":synagogue:": {
      "uc_base": "1f54d",
      "uc_output": "1f54d",
      "uc_match": "1f54d",
      "uc_greedy": "1f54d",
      "shortnames": [],
      "category": "travel"
    },
    ":syringe:": {
      "uc_base": "1f489",
      "uc_output": "1f489",
      "uc_match": "1f489",
      "uc_greedy": "1f489",
      "shortnames": [],
      "category": "objects"
    },
    ":t_rex:": {
      "uc_base": "1f996",
      "uc_output": "1f996",
      "uc_match": "1f996",
      "uc_greedy": "1f996",
      "shortnames": [],
      "category": "nature"
    },
    ":taco:": {
      "uc_base": "1f32e",
      "uc_output": "1f32e",
      "uc_match": "1f32e",
      "uc_greedy": "1f32e",
      "shortnames": [],
      "category": "food"
    },
    ":tada:": {
      "uc_base": "1f389",
      "uc_output": "1f389",
      "uc_match": "1f389",
      "uc_greedy": "1f389",
      "shortnames": [],
      "category": "objects"
    },
    ":takeout_box:": {
      "uc_base": "1f961",
      "uc_output": "1f961",
      "uc_match": "1f961",
      "uc_greedy": "1f961",
      "shortnames": [],
      "category": "food"
    },
    ":tanabata_tree:": {
      "uc_base": "1f38b",
      "uc_output": "1f38b",
      "uc_match": "1f38b",
      "uc_greedy": "1f38b",
      "shortnames": [],
      "category": "nature"
    },
    ":tangerine:": {
      "uc_base": "1f34a",
      "uc_output": "1f34a",
      "uc_match": "1f34a",
      "uc_greedy": "1f34a",
      "shortnames": [],
      "category": "food"
    },
    ":taxi:": {
      "uc_base": "1f695",
      "uc_output": "1f695",
      "uc_match": "1f695",
      "uc_greedy": "1f695",
      "shortnames": [],
      "category": "travel"
    },
    ":tea:": {
      "uc_base": "1f375",
      "uc_output": "1f375",
      "uc_match": "1f375",
      "uc_greedy": "1f375",
      "shortnames": [],
      "category": "food"
    },
    ":telephone_receiver:": {
      "uc_base": "1f4de",
      "uc_output": "1f4de",
      "uc_match": "1f4de",
      "uc_greedy": "1f4de",
      "shortnames": [],
      "category": "objects"
    },
    ":telescope:": {
      "uc_base": "1f52d",
      "uc_output": "1f52d",
      "uc_match": "1f52d",
      "uc_greedy": "1f52d",
      "shortnames": [],
      "category": "objects"
    },
    ":tennis:": {
      "uc_base": "1f3be",
      "uc_output": "1f3be",
      "uc_match": "1f3be",
      "uc_greedy": "1f3be",
      "shortnames": [],
      "category": "activity"
    },
    ":thermometer:": {
      "uc_base": "1f321",
      "uc_output": "1f321",
      "uc_match": "1f321-fe0f",
      "uc_greedy": "1f321-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":thermometer_face:": {
      "uc_base": "1f912",
      "uc_output": "1f912",
      "uc_match": "1f912",
      "uc_greedy": "1f912",
      "shortnames": [":face_with_thermometer:"],
      "category": "people"
    },
    ":thinking:": {
      "uc_base": "1f914",
      "uc_output": "1f914",
      "uc_match": "1f914",
      "uc_greedy": "1f914",
      "shortnames": [":thinking_face:"],
      "category": "people"
    },
    ":third_place:": {
      "uc_base": "1f949",
      "uc_output": "1f949",
      "uc_match": "1f949",
      "uc_greedy": "1f949",
      "shortnames": [":third_place_medal:"],
      "category": "activity"
    },
    ":thought_balloon:": {
      "uc_base": "1f4ad",
      "uc_output": "1f4ad",
      "uc_match": "1f4ad",
      "uc_greedy": "1f4ad",
      "shortnames": [],
      "category": "symbols"
    },
    ":thumbsdown:": {
      "uc_base": "1f44e",
      "uc_output": "1f44e",
      "uc_match": "1f44e-fe0f",
      "uc_greedy": "1f44e-fe0f",
      "shortnames": [":-1:", ":thumbdown:"],
      "category": "people"
    },
    ":thumbsup:": {
      "uc_base": "1f44d",
      "uc_output": "1f44d",
      "uc_match": "1f44d-fe0f",
      "uc_greedy": "1f44d-fe0f",
      "shortnames": [":+1:", ":thumbup:"],
      "category": "people"
    },
    ":ticket:": {
      "uc_base": "1f3ab",
      "uc_output": "1f3ab",
      "uc_match": "1f3ab",
      "uc_greedy": "1f3ab",
      "shortnames": [],
      "category": "activity"
    },
    ":tickets:": {
      "uc_base": "1f39f",
      "uc_output": "1f39f",
      "uc_match": "1f39f-fe0f",
      "uc_greedy": "1f39f-fe0f",
      "shortnames": [":admission_tickets:"],
      "category": "activity"
    },
    ":tiger2:": {
      "uc_base": "1f405",
      "uc_output": "1f405",
      "uc_match": "1f405",
      "uc_greedy": "1f405",
      "shortnames": [],
      "category": "nature"
    },
    ":tiger:": {
      "uc_base": "1f42f",
      "uc_output": "1f42f",
      "uc_match": "1f42f",
      "uc_greedy": "1f42f",
      "shortnames": [],
      "category": "nature"
    },
    ":tired_face:": {
      "uc_base": "1f62b",
      "uc_output": "1f62b",
      "uc_match": "1f62b",
      "uc_greedy": "1f62b",
      "shortnames": [],
      "category": "people"
    },
    ":toilet:": {
      "uc_base": "1f6bd",
      "uc_output": "1f6bd",
      "uc_match": "1f6bd",
      "uc_greedy": "1f6bd",
      "shortnames": [],
      "category": "objects"
    },
    ":tokyo_tower:": {
      "uc_base": "1f5fc",
      "uc_output": "1f5fc",
      "uc_match": "1f5fc",
      "uc_greedy": "1f5fc",
      "shortnames": [],
      "category": "travel"
    },
    ":tomato:": {
      "uc_base": "1f345",
      "uc_output": "1f345",
      "uc_match": "1f345",
      "uc_greedy": "1f345",
      "shortnames": [],
      "category": "food"
    },
    ":tone1:": {
      "uc_base": "1f3fb",
      "uc_output": "1f3fb",
      "uc_match": "1f3fb",
      "uc_greedy": "1f3fb",
      "shortnames": [],
      "category": "modifier"
    },
    ":tone2:": {
      "uc_base": "1f3fc",
      "uc_output": "1f3fc",
      "uc_match": "1f3fc",
      "uc_greedy": "1f3fc",
      "shortnames": [],
      "category": "modifier"
    },
    ":tone3:": {
      "uc_base": "1f3fd",
      "uc_output": "1f3fd",
      "uc_match": "1f3fd",
      "uc_greedy": "1f3fd",
      "shortnames": [],
      "category": "modifier"
    },
    ":tone4:": {
      "uc_base": "1f3fe",
      "uc_output": "1f3fe",
      "uc_match": "1f3fe",
      "uc_greedy": "1f3fe",
      "shortnames": [],
      "category": "modifier"
    },
    ":tone5:": {
      "uc_base": "1f3ff",
      "uc_output": "1f3ff",
      "uc_match": "1f3ff",
      "uc_greedy": "1f3ff",
      "shortnames": [],
      "category": "modifier"
    },
    ":tongue:": {
      "uc_base": "1f445",
      "uc_output": "1f445",
      "uc_match": "1f445",
      "uc_greedy": "1f445",
      "shortnames": [],
      "category": "people"
    },
    ":tools:": {
      "uc_base": "1f6e0",
      "uc_output": "1f6e0",
      "uc_match": "1f6e0-fe0f",
      "uc_greedy": "1f6e0-fe0f",
      "shortnames": [":hammer_and_wrench:"],
      "category": "objects"
    },
    ":top:": {
      "uc_base": "1f51d",
      "uc_output": "1f51d",
      "uc_match": "1f51d",
      "uc_greedy": "1f51d",
      "shortnames": [],
      "category": "symbols"
    },
    ":tophat:": {
      "uc_base": "1f3a9",
      "uc_output": "1f3a9",
      "uc_match": "1f3a9",
      "uc_greedy": "1f3a9",
      "shortnames": [],
      "category": "people"
    },
    ":trackball:": {
      "uc_base": "1f5b2",
      "uc_output": "1f5b2",
      "uc_match": "1f5b2-fe0f",
      "uc_greedy": "1f5b2-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":tractor:": {
      "uc_base": "1f69c",
      "uc_output": "1f69c",
      "uc_match": "1f69c",
      "uc_greedy": "1f69c",
      "shortnames": [],
      "category": "travel"
    },
    ":traffic_light:": {
      "uc_base": "1f6a5",
      "uc_output": "1f6a5",
      "uc_match": "1f6a5",
      "uc_greedy": "1f6a5",
      "shortnames": [],
      "category": "travel"
    },
    ":train2:": {
      "uc_base": "1f686",
      "uc_output": "1f686",
      "uc_match": "1f686",
      "uc_greedy": "1f686",
      "shortnames": [],
      "category": "travel"
    },
    ":train:": {
      "uc_base": "1f68b",
      "uc_output": "1f68b",
      "uc_match": "1f68b",
      "uc_greedy": "1f68b",
      "shortnames": [],
      "category": "travel"
    },
    ":tram:": {
      "uc_base": "1f68a",
      "uc_output": "1f68a",
      "uc_match": "1f68a",
      "uc_greedy": "1f68a",
      "shortnames": [],
      "category": "travel"
    },
    ":triangular_flag_on_post:": {
      "uc_base": "1f6a9",
      "uc_output": "1f6a9",
      "uc_match": "1f6a9",
      "uc_greedy": "1f6a9",
      "shortnames": [],
      "category": "flags"
    },
    ":triangular_ruler:": {
      "uc_base": "1f4d0",
      "uc_output": "1f4d0",
      "uc_match": "1f4d0",
      "uc_greedy": "1f4d0",
      "shortnames": [],
      "category": "objects"
    },
    ":trident:": {
      "uc_base": "1f531",
      "uc_output": "1f531",
      "uc_match": "1f531",
      "uc_greedy": "1f531",
      "shortnames": [],
      "category": "symbols"
    },
    ":triumph:": {
      "uc_base": "1f624",
      "uc_output": "1f624",
      "uc_match": "1f624",
      "uc_greedy": "1f624",
      "shortnames": [],
      "category": "people"
    },
    ":trolleybus:": {
      "uc_base": "1f68e",
      "uc_output": "1f68e",
      "uc_match": "1f68e",
      "uc_greedy": "1f68e",
      "shortnames": [],
      "category": "travel"
    },
    ":trophy:": {
      "uc_base": "1f3c6",
      "uc_output": "1f3c6",
      "uc_match": "1f3c6-fe0f",
      "uc_greedy": "1f3c6-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":tropical_drink:": {
      "uc_base": "1f379",
      "uc_output": "1f379",
      "uc_match": "1f379",
      "uc_greedy": "1f379",
      "shortnames": [],
      "category": "food"
    },
    ":tropical_fish:": {
      "uc_base": "1f420",
      "uc_output": "1f420",
      "uc_match": "1f420",
      "uc_greedy": "1f420",
      "shortnames": [],
      "category": "nature"
    },
    ":truck:": {
      "uc_base": "1f69a",
      "uc_output": "1f69a",
      "uc_match": "1f69a",
      "uc_greedy": "1f69a",
      "shortnames": [],
      "category": "travel"
    },
    ":trumpet:": {
      "uc_base": "1f3ba",
      "uc_output": "1f3ba",
      "uc_match": "1f3ba",
      "uc_greedy": "1f3ba",
      "shortnames": [],
      "category": "activity"
    },
    ":tulip:": {
      "uc_base": "1f337",
      "uc_output": "1f337",
      "uc_match": "1f337",
      "uc_greedy": "1f337",
      "shortnames": [],
      "category": "nature"
    },
    ":tumbler_glass:": {
      "uc_base": "1f943",
      "uc_output": "1f943",
      "uc_match": "1f943",
      "uc_greedy": "1f943",
      "shortnames": [":whisky:"],
      "category": "food"
    },
    ":turkey:": {
      "uc_base": "1f983",
      "uc_output": "1f983",
      "uc_match": "1f983",
      "uc_greedy": "1f983",
      "shortnames": [],
      "category": "nature"
    },
    ":turtle:": {
      "uc_base": "1f422",
      "uc_output": "1f422",
      "uc_match": "1f422",
      "uc_greedy": "1f422",
      "shortnames": [],
      "category": "nature"
    },
    ":tv:": {
      "uc_base": "1f4fa",
      "uc_output": "1f4fa",
      "uc_match": "1f4fa-fe0f",
      "uc_greedy": "1f4fa-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":twisted_rightwards_arrows:": {
      "uc_base": "1f500",
      "uc_output": "1f500",
      "uc_match": "1f500",
      "uc_greedy": "1f500",
      "shortnames": [],
      "category": "symbols"
    },
    ":two_hearts:": {
      "uc_base": "1f495",
      "uc_output": "1f495",
      "uc_match": "1f495",
      "uc_greedy": "1f495",
      "shortnames": [],
      "category": "symbols"
    },
    ":two_men_holding_hands:": {
      "uc_base": "1f46c",
      "uc_output": "1f46c",
      "uc_match": "1f46c",
      "uc_greedy": "1f46c",
      "shortnames": [],
      "category": "people"
    },
    ":two_women_holding_hands:": {
      "uc_base": "1f46d",
      "uc_output": "1f46d",
      "uc_match": "1f46d",
      "uc_greedy": "1f46d",
      "shortnames": [],
      "category": "people"
    },
    ":u5272:": {
      "uc_base": "1f239",
      "uc_output": "1f239",
      "uc_match": "1f239",
      "uc_greedy": "1f239",
      "shortnames": [],
      "category": "symbols"
    },
    ":u5408:": {
      "uc_base": "1f234",
      "uc_output": "1f234",
      "uc_match": "1f234",
      "uc_greedy": "1f234",
      "shortnames": [],
      "category": "symbols"
    },
    ":u55b6:": {
      "uc_base": "1f23a",
      "uc_output": "1f23a",
      "uc_match": "1f23a",
      "uc_greedy": "1f23a",
      "shortnames": [],
      "category": "symbols"
    },
    ":u6307:": {
      "uc_base": "1f22f",
      "uc_output": "1f22f",
      "uc_match": "1f22f-fe0f",
      "uc_greedy": "1f22f-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":u6708:": {
      "uc_base": "1f237",
      "uc_output": "1f237",
      "uc_match": "1f237-fe0f",
      "uc_greedy": "1f237-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":u6709:": {
      "uc_base": "1f236",
      "uc_output": "1f236",
      "uc_match": "1f236",
      "uc_greedy": "1f236",
      "shortnames": [],
      "category": "symbols"
    },
    ":u6e80:": {
      "uc_base": "1f235",
      "uc_output": "1f235",
      "uc_match": "1f235",
      "uc_greedy": "1f235",
      "shortnames": [],
      "category": "symbols"
    },
    ":u7121:": {
      "uc_base": "1f21a",
      "uc_output": "1f21a",
      "uc_match": "1f21a-fe0f",
      "uc_greedy": "1f21a-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":u7533:": {
      "uc_base": "1f238",
      "uc_output": "1f238",
      "uc_match": "1f238",
      "uc_greedy": "1f238",
      "shortnames": [],
      "category": "symbols"
    },
    ":u7981:": {
      "uc_base": "1f232",
      "uc_output": "1f232",
      "uc_match": "1f232",
      "uc_greedy": "1f232",
      "shortnames": [],
      "category": "symbols"
    },
    ":u7a7a:": {
      "uc_base": "1f233",
      "uc_output": "1f233",
      "uc_match": "1f233",
      "uc_greedy": "1f233",
      "shortnames": [],
      "category": "symbols"
    },
    ":unamused:": {
      "uc_base": "1f612",
      "uc_output": "1f612",
      "uc_match": "1f612",
      "uc_greedy": "1f612",
      "shortnames": [],
      "category": "people"
    },
    ":underage:": {
      "uc_base": "1f51e",
      "uc_output": "1f51e",
      "uc_match": "1f51e",
      "uc_greedy": "1f51e",
      "shortnames": [],
      "category": "symbols"
    },
    ":unicorn:": {
      "uc_base": "1f984",
      "uc_output": "1f984",
      "uc_match": "1f984",
      "uc_greedy": "1f984",
      "shortnames": [":unicorn_face:"],
      "category": "nature"
    },
    ":unlock:": {
      "uc_base": "1f513",
      "uc_output": "1f513",
      "uc_match": "1f513-fe0f",
      "uc_greedy": "1f513-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":up:": {
      "uc_base": "1f199",
      "uc_output": "1f199",
      "uc_match": "1f199",
      "uc_greedy": "1f199",
      "shortnames": [],
      "category": "symbols"
    },
    ":upside_down:": {
      "uc_base": "1f643",
      "uc_output": "1f643",
      "uc_match": "1f643",
      "uc_greedy": "1f643",
      "shortnames": [":upside_down_face:"],
      "category": "people"
    },
    ":vampire:": {
      "uc_base": "1f9db",
      "uc_output": "1f9db",
      "uc_match": "1f9db",
      "uc_greedy": "1f9db",
      "shortnames": [],
      "category": "people"
    },
    ":vertical_traffic_light:": {
      "uc_base": "1f6a6",
      "uc_output": "1f6a6",
      "uc_match": "1f6a6",
      "uc_greedy": "1f6a6",
      "shortnames": [],
      "category": "travel"
    },
    ":vhs:": {
      "uc_base": "1f4fc",
      "uc_output": "1f4fc",
      "uc_match": "1f4fc",
      "uc_greedy": "1f4fc",
      "shortnames": [],
      "category": "objects"
    },
    ":vibration_mode:": {
      "uc_base": "1f4f3",
      "uc_output": "1f4f3",
      "uc_match": "1f4f3",
      "uc_greedy": "1f4f3",
      "shortnames": [],
      "category": "symbols"
    },
    ":video_camera:": {
      "uc_base": "1f4f9",
      "uc_output": "1f4f9",
      "uc_match": "1f4f9-fe0f",
      "uc_greedy": "1f4f9-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":video_game:": {
      "uc_base": "1f3ae",
      "uc_output": "1f3ae",
      "uc_match": "1f3ae-fe0f",
      "uc_greedy": "1f3ae-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":violin:": {
      "uc_base": "1f3bb",
      "uc_output": "1f3bb",
      "uc_match": "1f3bb",
      "uc_greedy": "1f3bb",
      "shortnames": [],
      "category": "activity"
    },
    ":volcano:": {
      "uc_base": "1f30b",
      "uc_output": "1f30b",
      "uc_match": "1f30b",
      "uc_greedy": "1f30b",
      "shortnames": [],
      "category": "travel"
    },
    ":volleyball:": {
      "uc_base": "1f3d0",
      "uc_output": "1f3d0",
      "uc_match": "1f3d0",
      "uc_greedy": "1f3d0",
      "shortnames": [],
      "category": "activity"
    },
    ":vs:": {
      "uc_base": "1f19a",
      "uc_output": "1f19a",
      "uc_match": "1f19a",
      "uc_greedy": "1f19a",
      "shortnames": [],
      "category": "symbols"
    },
    ":vulcan:": {
      "uc_base": "1f596",
      "uc_output": "1f596",
      "uc_match": "1f596",
      "uc_greedy": "1f596",
      "shortnames": [":raised_hand_with_part_between_middle_and_ring_fingers:"],
      "category": "people"
    },
    ":waning_crescent_moon:": {
      "uc_base": "1f318",
      "uc_output": "1f318",
      "uc_match": "1f318",
      "uc_greedy": "1f318",
      "shortnames": [],
      "category": "nature"
    },
    ":waning_gibbous_moon:": {
      "uc_base": "1f316",
      "uc_output": "1f316",
      "uc_match": "1f316",
      "uc_greedy": "1f316",
      "shortnames": [],
      "category": "nature"
    },
    ":wastebasket:": {
      "uc_base": "1f5d1",
      "uc_output": "1f5d1",
      "uc_match": "1f5d1-fe0f",
      "uc_greedy": "1f5d1-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":water_buffalo:": {
      "uc_base": "1f403",
      "uc_output": "1f403",
      "uc_match": "1f403",
      "uc_greedy": "1f403",
      "shortnames": [],
      "category": "nature"
    },
    ":watermelon:": {
      "uc_base": "1f349",
      "uc_output": "1f349",
      "uc_match": "1f349",
      "uc_greedy": "1f349",
      "shortnames": [],
      "category": "food"
    },
    ":wave:": {
      "uc_base": "1f44b",
      "uc_output": "1f44b",
      "uc_match": "1f44b",
      "uc_greedy": "1f44b",
      "shortnames": [],
      "category": "people"
    },
    ":waxing_crescent_moon:": {
      "uc_base": "1f312",
      "uc_output": "1f312",
      "uc_match": "1f312",
      "uc_greedy": "1f312",
      "shortnames": [],
      "category": "nature"
    },
    ":waxing_gibbous_moon:": {
      "uc_base": "1f314",
      "uc_output": "1f314",
      "uc_match": "1f314",
      "uc_greedy": "1f314",
      "shortnames": [],
      "category": "nature"
    },
    ":wc:": {
      "uc_base": "1f6be",
      "uc_output": "1f6be",
      "uc_match": "1f6be",
      "uc_greedy": "1f6be",
      "shortnames": [],
      "category": "symbols"
    },
    ":weary:": {
      "uc_base": "1f629",
      "uc_output": "1f629",
      "uc_match": "1f629",
      "uc_greedy": "1f629",
      "shortnames": [],
      "category": "people"
    },
    ":wedding:": {
      "uc_base": "1f492",
      "uc_output": "1f492",
      "uc_match": "1f492",
      "uc_greedy": "1f492",
      "shortnames": [],
      "category": "travel"
    },
    ":whale2:": {
      "uc_base": "1f40b",
      "uc_output": "1f40b",
      "uc_match": "1f40b",
      "uc_greedy": "1f40b",
      "shortnames": [],
      "category": "nature"
    },
    ":whale:": {
      "uc_base": "1f433",
      "uc_output": "1f433",
      "uc_match": "1f433",
      "uc_greedy": "1f433",
      "shortnames": [],
      "category": "nature"
    },
    ":white_flower:": {
      "uc_base": "1f4ae",
      "uc_output": "1f4ae",
      "uc_match": "1f4ae",
      "uc_greedy": "1f4ae",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_square_button:": {
      "uc_base": "1f533",
      "uc_output": "1f533",
      "uc_match": "1f533",
      "uc_greedy": "1f533",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_sun_cloud:": {
      "uc_base": "1f325",
      "uc_output": "1f325",
      "uc_match": "1f325-fe0f",
      "uc_greedy": "1f325-fe0f",
      "shortnames": [":white_sun_behind_cloud:"],
      "category": "nature"
    },
    ":white_sun_rain_cloud:": {
      "uc_base": "1f326",
      "uc_output": "1f326",
      "uc_match": "1f326-fe0f",
      "uc_greedy": "1f326-fe0f",
      "shortnames": [":white_sun_behind_cloud_with_rain:"],
      "category": "nature"
    },
    ":white_sun_small_cloud:": {
      "uc_base": "1f324",
      "uc_output": "1f324",
      "uc_match": "1f324-fe0f",
      "uc_greedy": "1f324-fe0f",
      "shortnames": [":white_sun_with_small_cloud:"],
      "category": "nature"
    },
    ":wilted_rose:": {
      "uc_base": "1f940",
      "uc_output": "1f940",
      "uc_match": "1f940",
      "uc_greedy": "1f940",
      "shortnames": [":wilted_flower:"],
      "category": "nature"
    },
    ":wind_blowing_face:": {
      "uc_base": "1f32c",
      "uc_output": "1f32c",
      "uc_match": "1f32c-fe0f",
      "uc_greedy": "1f32c-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":wind_chime:": {
      "uc_base": "1f390",
      "uc_output": "1f390",
      "uc_match": "1f390",
      "uc_greedy": "1f390",
      "shortnames": [],
      "category": "objects"
    },
    ":wine_glass:": {
      "uc_base": "1f377",
      "uc_output": "1f377",
      "uc_match": "1f377",
      "uc_greedy": "1f377",
      "shortnames": [],
      "category": "food"
    },
    ":wink:": {
      "uc_base": "1f609",
      "uc_output": "1f609",
      "uc_match": "1f609",
      "uc_greedy": "1f609",
      "shortnames": [],
      "category": "people"
    },
    ":wolf:": {
      "uc_base": "1f43a",
      "uc_output": "1f43a",
      "uc_match": "1f43a",
      "uc_greedy": "1f43a",
      "shortnames": [],
      "category": "nature"
    },
    ":woman:": {
      "uc_base": "1f469",
      "uc_output": "1f469",
      "uc_match": "1f469",
      "uc_greedy": "1f469",
      "shortnames": [],
      "category": "people"
    },
    ":woman_with_headscarf:": {
      "uc_base": "1f9d5",
      "uc_output": "1f9d5",
      "uc_match": "1f9d5",
      "uc_greedy": "1f9d5",
      "shortnames": [],
      "category": "people"
    },
    ":womans_clothes:": {
      "uc_base": "1f45a",
      "uc_output": "1f45a",
      "uc_match": "1f45a",
      "uc_greedy": "1f45a",
      "shortnames": [],
      "category": "people"
    },
    ":womans_hat:": {
      "uc_base": "1f452",
      "uc_output": "1f452",
      "uc_match": "1f452",
      "uc_greedy": "1f452",
      "shortnames": [],
      "category": "people"
    },
    ":womens:": {
      "uc_base": "1f6ba",
      "uc_output": "1f6ba",
      "uc_match": "1f6ba-fe0f",
      "uc_greedy": "1f6ba-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":worried:": {
      "uc_base": "1f61f",
      "uc_output": "1f61f",
      "uc_match": "1f61f",
      "uc_greedy": "1f61f",
      "shortnames": [],
      "category": "people"
    },
    ":wrench:": {
      "uc_base": "1f527",
      "uc_output": "1f527",
      "uc_match": "1f527",
      "uc_greedy": "1f527",
      "shortnames": [],
      "category": "objects"
    },
    ":yellow_heart:": {
      "uc_base": "1f49b",
      "uc_output": "1f49b",
      "uc_match": "1f49b",
      "uc_greedy": "1f49b",
      "shortnames": [],
      "category": "symbols"
    },
    ":yen:": {
      "uc_base": "1f4b4",
      "uc_output": "1f4b4",
      "uc_match": "1f4b4",
      "uc_greedy": "1f4b4",
      "shortnames": [],
      "category": "objects"
    },
    ":yum:": {
      "uc_base": "1f60b",
      "uc_output": "1f60b",
      "uc_match": "1f60b",
      "uc_greedy": "1f60b",
      "shortnames": [],
      "category": "people"
    },
    ":zebra:": {
      "uc_base": "1f993",
      "uc_output": "1f993",
      "uc_match": "1f993",
      "uc_greedy": "1f993",
      "shortnames": [],
      "category": "nature"
    },
    ":zipper_mouth:": {
      "uc_base": "1f910",
      "uc_output": "1f910",
      "uc_match": "1f910",
      "uc_greedy": "1f910",
      "shortnames": [":zipper_mouth_face:"],
      "category": "people"
    },
    ":zombie:": {
      "uc_base": "1f9df",
      "uc_output": "1f9df",
      "uc_match": "1f9df",
      "uc_greedy": "1f9df",
      "shortnames": [],
      "category": "people"
    },
    ":zzz:": {
      "uc_base": "1f4a4",
      "uc_output": "1f4a4",
      "uc_match": "1f4a4",
      "uc_greedy": "1f4a4",
      "shortnames": [],
      "category": "symbols"
    },
    ":airplane:": {
      "uc_base": "2708",
      "uc_output": "2708",
      "uc_match": "2708-fe0f",
      "uc_greedy": "2708-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":alarm_clock:": {
      "uc_base": "23f0",
      "uc_output": "23f0",
      "uc_match": "23f0",
      "uc_greedy": "23f0",
      "shortnames": [],
      "category": "objects"
    },
    ":alembic:": {
      "uc_base": "2697",
      "uc_output": "2697",
      "uc_match": "2697-fe0f",
      "uc_greedy": "2697-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":anchor:": {
      "uc_base": "2693",
      "uc_output": "2693",
      "uc_match": "2693-fe0f",
      "uc_greedy": "2693-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":aquarius:": {
      "uc_base": "2652",
      "uc_output": "2652",
      "uc_match": "2652-fe0f",
      "uc_greedy": "2652-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":aries:": {
      "uc_base": "2648",
      "uc_output": "2648",
      "uc_match": "2648-fe0f",
      "uc_greedy": "2648-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_backward:": {
      "uc_base": "25c0",
      "uc_output": "25c0",
      "uc_match": "25c0-fe0f",
      "uc_greedy": "25c0",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_double_down:": {
      "uc_base": "23ec",
      "uc_output": "23ec",
      "uc_match": "23ec",
      "uc_greedy": "23ec",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_double_up:": {
      "uc_base": "23eb",
      "uc_output": "23eb",
      "uc_match": "23eb",
      "uc_greedy": "23eb",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_down:": {
      "uc_base": "2b07",
      "uc_output": "2b07",
      "uc_match": "2b07-fe0f",
      "uc_greedy": "2b07",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_forward:": {
      "uc_base": "25b6",
      "uc_output": "25b6",
      "uc_match": "25b6-fe0f",
      "uc_greedy": "25b6",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_heading_down:": {
      "uc_base": "2935",
      "uc_output": "2935",
      "uc_match": "2935-fe0f",
      "uc_greedy": "2935",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_heading_up:": {
      "uc_base": "2934",
      "uc_output": "2934",
      "uc_match": "2934-fe0f",
      "uc_greedy": "2934",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_left:": {
      "uc_base": "2b05",
      "uc_output": "2b05",
      "uc_match": "2b05-fe0f",
      "uc_greedy": "2b05",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_lower_left:": {
      "uc_base": "2199",
      "uc_output": "2199",
      "uc_match": "2199-fe0f",
      "uc_greedy": "2199",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_lower_right:": {
      "uc_base": "2198",
      "uc_output": "2198",
      "uc_match": "2198-fe0f",
      "uc_greedy": "2198",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_right:": {
      "uc_base": "27a1",
      "uc_output": "27a1",
      "uc_match": "27a1-fe0f",
      "uc_greedy": "27a1",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_right_hook:": {
      "uc_base": "21aa",
      "uc_output": "21aa",
      "uc_match": "21aa-fe0f",
      "uc_greedy": "21aa",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_up:": {
      "uc_base": "2b06",
      "uc_output": "2b06",
      "uc_match": "2b06-fe0f",
      "uc_greedy": "2b06",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_up_down:": {
      "uc_base": "2195",
      "uc_output": "2195",
      "uc_match": "2195-fe0f",
      "uc_greedy": "2195",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_upper_left:": {
      "uc_base": "2196",
      "uc_output": "2196",
      "uc_match": "2196-fe0f",
      "uc_greedy": "2196",
      "shortnames": [],
      "category": "symbols"
    },
    ":arrow_upper_right:": {
      "uc_base": "2197",
      "uc_output": "2197",
      "uc_match": "2197-fe0f",
      "uc_greedy": "2197",
      "shortnames": [],
      "category": "symbols"
    },
    ":atom:": {
      "uc_base": "269b",
      "uc_output": "269b",
      "uc_match": "269b-fe0f",
      "uc_greedy": "269b",
      "shortnames": [":atom_symbol:"],
      "category": "symbols"
    },
    ":ballot_box_with_check:": {
      "uc_base": "2611",
      "uc_output": "2611",
      "uc_match": "2611-fe0f",
      "uc_greedy": "2611",
      "shortnames": [],
      "category": "symbols"
    },
    ":bangbang:": {
      "uc_base": "203c",
      "uc_output": "203c",
      "uc_match": "203c-fe0f",
      "uc_greedy": "203c",
      "shortnames": [],
      "category": "symbols"
    },
    ":baseball:": {
      "uc_base": "26be",
      "uc_output": "26be",
      "uc_match": "26be-fe0f",
      "uc_greedy": "26be-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":beach_umbrella:": {
      "uc_base": "26f1",
      "uc_output": "26f1",
      "uc_match": "26f1-fe0f",
      "uc_greedy": "26f1-fe0f",
      "shortnames": [":umbrella_on_ground:"],
      "category": "travel"
    },
    ":biohazard:": {
      "uc_base": "2623",
      "uc_output": "2623",
      "uc_match": "2623-fe0f",
      "uc_greedy": "2623",
      "shortnames": [":biohazard_sign:"],
      "category": "symbols"
    },
    ":black_circle:": {
      "uc_base": "26ab",
      "uc_output": "26ab",
      "uc_match": "26ab-fe0f",
      "uc_greedy": "26ab-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_large_square:": {
      "uc_base": "2b1b",
      "uc_output": "2b1b",
      "uc_match": "2b1b-fe0f",
      "uc_greedy": "2b1b-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_medium_small_square:": {
      "uc_base": "25fe",
      "uc_output": "25fe",
      "uc_match": "25fe-fe0f",
      "uc_greedy": "25fe-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_medium_square:": {
      "uc_base": "25fc",
      "uc_output": "25fc",
      "uc_match": "25fc-fe0f",
      "uc_greedy": "25fc",
      "shortnames": [],
      "category": "symbols"
    },
    ":black_nib:": {
      "uc_base": "2712",
      "uc_output": "2712",
      "uc_match": "2712-fe0f",
      "uc_greedy": "2712-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":black_small_square:": {
      "uc_base": "25aa",
      "uc_output": "25aa",
      "uc_match": "25aa-fe0f",
      "uc_greedy": "25aa",
      "shortnames": [],
      "category": "symbols"
    },
    ":cancer:": {
      "uc_base": "264b",
      "uc_output": "264b",
      "uc_match": "264b-fe0f",
      "uc_greedy": "264b-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":capricorn:": {
      "uc_base": "2651",
      "uc_output": "2651",
      "uc_match": "2651-fe0f",
      "uc_greedy": "2651-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":chains:": {
      "uc_base": "26d3",
      "uc_output": "26d3",
      "uc_match": "26d3-fe0f",
      "uc_greedy": "26d3-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":church:": {
      "uc_base": "26ea",
      "uc_output": "26ea",
      "uc_match": "26ea-fe0f",
      "uc_greedy": "26ea-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":cloud:": {
      "uc_base": "2601",
      "uc_output": "2601",
      "uc_match": "2601-fe0f",
      "uc_greedy": "2601-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":clubs:": {
      "uc_base": "2663",
      "uc_output": "2663",
      "uc_match": "2663-fe0f",
      "uc_greedy": "2663-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":coffee:": {
      "uc_base": "2615",
      "uc_output": "2615",
      "uc_match": "2615-fe0f",
      "uc_greedy": "2615-fe0f",
      "shortnames": [],
      "category": "food"
    },
    ":coffin:": {
      "uc_base": "26b0",
      "uc_output": "26b0",
      "uc_match": "26b0-fe0f",
      "uc_greedy": "26b0-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":comet:": {
      "uc_base": "2604",
      "uc_output": "2604",
      "uc_match": "2604-fe0f",
      "uc_greedy": "2604-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":congratulations:": {
      "uc_base": "3297",
      "uc_output": "3297",
      "uc_match": "3297-fe0f",
      "uc_greedy": "3297-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":copyright:": {
      "uc_base": "00a9",
      "uc_output": "00a9",
      "uc_match": "00a9-fe0f",
      "uc_greedy": "00a9",
      "shortnames": [],
      "category": "symbols"
    },
    ":cross:": {
      "uc_base": "271d",
      "uc_output": "271d",
      "uc_match": "271d-fe0f",
      "uc_greedy": "271d",
      "shortnames": [":latin_cross:"],
      "category": "symbols"
    },
    ":crossed_swords:": {
      "uc_base": "2694",
      "uc_output": "2694",
      "uc_match": "2694-fe0f",
      "uc_greedy": "2694-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":curly_loop:": {
      "uc_base": "27b0",
      "uc_output": "27b0",
      "uc_match": "27b0",
      "uc_greedy": "27b0",
      "shortnames": [],
      "category": "symbols"
    },
    ":diamonds:": {
      "uc_base": "2666",
      "uc_output": "2666",
      "uc_match": "2666-fe0f",
      "uc_greedy": "2666-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":eight_pointed_black_star:": {
      "uc_base": "2734",
      "uc_output": "2734",
      "uc_match": "2734-fe0f",
      "uc_greedy": "2734-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":eight_spoked_asterisk:": {
      "uc_base": "2733",
      "uc_output": "2733",
      "uc_match": "2733-fe0f",
      "uc_greedy": "2733-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":eject:": {
      "uc_base": "23cf",
      "uc_output": "23cf",
      "uc_match": "23cf-fe0f",
      "uc_greedy": "23cf",
      "shortnames": [":eject_symbol:"],
      "category": "symbols"
    },
    ":envelope:": {
      "uc_base": "2709",
      "uc_output": "2709",
      "uc_match": "2709-fe0f",
      "uc_greedy": "2709-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":exclamation:": {
      "uc_base": "2757",
      "uc_output": "2757",
      "uc_match": "2757-fe0f",
      "uc_greedy": "2757-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":fast_forward:": {
      "uc_base": "23e9",
      "uc_output": "23e9",
      "uc_match": "23e9-fe0f",
      "uc_greedy": "23e9-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":female_sign:": {
      "uc_base": "2640",
      "uc_output": "2640",
      "uc_match": "2640-fe0f",
      "uc_greedy": "2640",
      "shortnames": [],
      "category": "symbols"
    },
    ":ferry:": {
      "uc_base": "26f4",
      "uc_output": "26f4",
      "uc_match": "26f4-fe0f",
      "uc_greedy": "26f4-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":fist:": {
      "uc_base": "270a",
      "uc_output": "270a",
      "uc_match": "270a",
      "uc_greedy": "270a",
      "shortnames": [],
      "category": "people"
    },
    ":fleur-de-lis:": {
      "uc_base": "269c",
      "uc_output": "269c",
      "uc_match": "269c-fe0f",
      "uc_greedy": "269c-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":fountain:": {
      "uc_base": "26f2",
      "uc_output": "26f2",
      "uc_match": "26f2-fe0f",
      "uc_greedy": "26f2-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":frowning2:": {
      "uc_base": "2639",
      "uc_output": "2639",
      "uc_match": "2639-fe0f",
      "uc_greedy": "2639-fe0f",
      "shortnames": [":white_frowning_face:"],
      "category": "people"
    },
    ":fuelpump:": {
      "uc_base": "26fd",
      "uc_output": "26fd",
      "uc_match": "26fd-fe0f",
      "uc_greedy": "26fd-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":gear:": {
      "uc_base": "2699",
      "uc_output": "2699",
      "uc_match": "2699-fe0f",
      "uc_greedy": "2699-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":gemini:": {
      "uc_base": "264a",
      "uc_output": "264a",
      "uc_match": "264a-fe0f",
      "uc_greedy": "264a-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":golf:": {
      "uc_base": "26f3",
      "uc_output": "26f3",
      "uc_match": "26f3-fe0f",
      "uc_greedy": "26f3-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":grey_exclamation:": {
      "uc_base": "2755",
      "uc_output": "2755",
      "uc_match": "2755",
      "uc_greedy": "2755",
      "shortnames": [],
      "category": "symbols"
    },
    ":grey_question:": {
      "uc_base": "2754",
      "uc_output": "2754",
      "uc_match": "2754",
      "uc_greedy": "2754",
      "shortnames": [],
      "category": "symbols"
    },
    ":hammer_pick:": {
      "uc_base": "2692",
      "uc_output": "2692",
      "uc_match": "2692-fe0f",
      "uc_greedy": "2692-fe0f",
      "shortnames": [":hammer_and_pick:"],
      "category": "objects"
    },
    ":heart:": {
      "uc_base": "2764",
      "uc_output": "2764",
      "uc_match": "2764-fe0f",
      "uc_greedy": "2764-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":heart_exclamation:": {
      "uc_base": "2763",
      "uc_output": "2763",
      "uc_match": "2763-fe0f",
      "uc_greedy": "2763-fe0f",
      "shortnames": [":heavy_heart_exclamation_mark_ornament:"],
      "category": "symbols"
    },
    ":hearts:": {
      "uc_base": "2665",
      "uc_output": "2665",
      "uc_match": "2665-fe0f",
      "uc_greedy": "2665-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_check_mark:": {
      "uc_base": "2714",
      "uc_output": "2714",
      "uc_match": "2714-fe0f",
      "uc_greedy": "2714",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_division_sign:": {
      "uc_base": "2797",
      "uc_output": "2797",
      "uc_match": "2797",
      "uc_greedy": "2797",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_minus_sign:": {
      "uc_base": "2796",
      "uc_output": "2796",
      "uc_match": "2796",
      "uc_greedy": "2796",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_multiplication_x:": {
      "uc_base": "2716",
      "uc_output": "2716",
      "uc_match": "2716-fe0f",
      "uc_greedy": "2716",
      "shortnames": [],
      "category": "symbols"
    },
    ":heavy_plus_sign:": {
      "uc_base": "2795",
      "uc_output": "2795",
      "uc_match": "2795",
      "uc_greedy": "2795",
      "shortnames": [],
      "category": "symbols"
    },
    ":helmet_with_cross:": {
      "uc_base": "26d1",
      "uc_output": "26d1",
      "uc_match": "26d1-fe0f",
      "uc_greedy": "26d1-fe0f",
      "shortnames": [":helmet_with_white_cross:"],
      "category": "people"
    },
    ":hotsprings:": {
      "uc_base": "2668",
      "uc_output": "2668",
      "uc_match": "2668-fe0f",
      "uc_greedy": "2668-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":hourglass:": {
      "uc_base": "231b",
      "uc_output": "231b",
      "uc_match": "231b-fe0f",
      "uc_greedy": "231b-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":hourglass_flowing_sand:": {
      "uc_base": "23f3",
      "uc_output": "23f3",
      "uc_match": "23f3-fe0f",
      "uc_greedy": "23f3-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":ice_skate:": {
      "uc_base": "26f8",
      "uc_output": "26f8",
      "uc_match": "26f8-fe0f",
      "uc_greedy": "26f8-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":information_source:": {
      "uc_base": "2139",
      "uc_output": "2139",
      "uc_match": "2139-fe0f",
      "uc_greedy": "2139",
      "shortnames": [],
      "category": "symbols"
    },
    ":interrobang:": {
      "uc_base": "2049",
      "uc_output": "2049",
      "uc_match": "2049-fe0f",
      "uc_greedy": "2049",
      "shortnames": [],
      "category": "symbols"
    },
    ":keyboard:": {
      "uc_base": "2328",
      "uc_output": "2328",
      "uc_match": "2328-fe0f",
      "uc_greedy": "2328-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":left_right_arrow:": {
      "uc_base": "2194",
      "uc_output": "2194",
      "uc_match": "2194-fe0f",
      "uc_greedy": "2194",
      "shortnames": [],
      "category": "symbols"
    },
    ":leftwards_arrow_with_hook:": {
      "uc_base": "21a9",
      "uc_output": "21a9",
      "uc_match": "21a9-fe0f",
      "uc_greedy": "21a9",
      "shortnames": [],
      "category": "symbols"
    },
    ":leo:": {
      "uc_base": "264c",
      "uc_output": "264c",
      "uc_match": "264c-fe0f",
      "uc_greedy": "264c-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":libra:": {
      "uc_base": "264e",
      "uc_output": "264e",
      "uc_match": "264e-fe0f",
      "uc_greedy": "264e-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":loop:": {
      "uc_base": "27bf",
      "uc_output": "27bf",
      "uc_match": "27bf",
      "uc_greedy": "27bf",
      "shortnames": [],
      "category": "symbols"
    },
    ":m:": {
      "uc_base": "24c2",
      "uc_output": "24c2",
      "uc_match": "24c2-fe0f",
      "uc_greedy": "24c2-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":male_sign:": {
      "uc_base": "2642",
      "uc_output": "2642",
      "uc_match": "2642-fe0f",
      "uc_greedy": "2642",
      "shortnames": [],
      "category": "symbols"
    },
    ":medical_symbol:": {
      "uc_base": "2695",
      "uc_output": "2695",
      "uc_match": "2695-fe0f",
      "uc_greedy": "2695",
      "shortnames": [],
      "category": "symbols"
    },
    ":mountain:": {
      "uc_base": "26f0",
      "uc_output": "26f0",
      "uc_match": "26f0-fe0f",
      "uc_greedy": "26f0-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":negative_squared_cross_mark:": {
      "uc_base": "274e",
      "uc_output": "274e",
      "uc_match": "274e",
      "uc_greedy": "274e",
      "shortnames": [],
      "category": "symbols"
    },
    ":no_entry:": {
      "uc_base": "26d4",
      "uc_output": "26d4",
      "uc_match": "26d4-fe0f",
      "uc_greedy": "26d4-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":o:": {
      "uc_base": "2b55",
      "uc_output": "2b55",
      "uc_match": "2b55-fe0f",
      "uc_greedy": "2b55-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":ophiuchus:": {
      "uc_base": "26ce",
      "uc_output": "26ce",
      "uc_match": "26ce",
      "uc_greedy": "26ce",
      "shortnames": [],
      "category": "symbols"
    },
    ":orthodox_cross:": {
      "uc_base": "2626",
      "uc_output": "2626",
      "uc_match": "2626-fe0f",
      "uc_greedy": "2626",
      "shortnames": [],
      "category": "symbols"
    },
    ":part_alternation_mark:": {
      "uc_base": "303d",
      "uc_output": "303d",
      "uc_match": "303d-fe0f",
      "uc_greedy": "303d-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":partly_sunny:": {
      "uc_base": "26c5",
      "uc_output": "26c5",
      "uc_match": "26c5-fe0f",
      "uc_greedy": "26c5-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":pause_button:": {
      "uc_base": "23f8",
      "uc_output": "23f8",
      "uc_match": "23f8-fe0f",
      "uc_greedy": "23f8",
      "shortnames": [":double_vertical_bar:"],
      "category": "symbols"
    },
    ":peace:": {
      "uc_base": "262e",
      "uc_output": "262e",
      "uc_match": "262e-fe0f",
      "uc_greedy": "262e",
      "shortnames": [":peace_symbol:"],
      "category": "symbols"
    },
    ":pencil2:": {
      "uc_base": "270f",
      "uc_output": "270f",
      "uc_match": "270f-fe0f",
      "uc_greedy": "270f-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":person_bouncing_ball:": {
      "uc_base": "26f9",
      "uc_output": "26f9",
      "uc_match": "26f9-fe0f",
      "uc_greedy": "26f9-fe0f",
      "shortnames": [":basketball_player:", ":person_with_ball:"],
      "category": "activity"
    },
    ":pick:": {
      "uc_base": "26cf",
      "uc_output": "26cf",
      "uc_match": "26cf-fe0f",
      "uc_greedy": "26cf-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":pisces:": {
      "uc_base": "2653",
      "uc_output": "2653",
      "uc_match": "2653-fe0f",
      "uc_greedy": "2653-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":play_pause:": {
      "uc_base": "23ef",
      "uc_output": "23ef",
      "uc_match": "23ef-fe0f",
      "uc_greedy": "23ef",
      "shortnames": [],
      "category": "symbols"
    },
    ":point_up:": {
      "uc_base": "261d",
      "uc_output": "261d",
      "uc_match": "261d-fe0f",
      "uc_greedy": "261d-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":question:": {
      "uc_base": "2753",
      "uc_output": "2753",
      "uc_match": "2753-fe0f",
      "uc_greedy": "2753-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":radioactive:": {
      "uc_base": "2622",
      "uc_output": "2622",
      "uc_match": "2622-fe0f",
      "uc_greedy": "2622",
      "shortnames": [":radioactive_sign:"],
      "category": "symbols"
    },
    ":raised_hand:": {
      "uc_base": "270b",
      "uc_output": "270b",
      "uc_match": "270b",
      "uc_greedy": "270b",
      "shortnames": [],
      "category": "people"
    },
    ":record_button:": {
      "uc_base": "23fa",
      "uc_output": "23fa",
      "uc_match": "23fa-fe0f",
      "uc_greedy": "23fa",
      "shortnames": [],
      "category": "symbols"
    },
    ":recycle:": {
      "uc_base": "267b",
      "uc_output": "267b",
      "uc_match": "267b-fe0f",
      "uc_greedy": "267b-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":registered:": {
      "uc_base": "00ae",
      "uc_output": "00ae",
      "uc_match": "00ae-fe0f",
      "uc_greedy": "00ae",
      "shortnames": [],
      "category": "symbols"
    },
    ":relaxed:": {
      "uc_base": "263a",
      "uc_output": "263a",
      "uc_match": "263a-fe0f",
      "uc_greedy": "263a-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":rewind:": {
      "uc_base": "23ea",
      "uc_output": "23ea",
      "uc_match": "23ea-fe0f",
      "uc_greedy": "23ea-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":sagittarius:": {
      "uc_base": "2650",
      "uc_output": "2650",
      "uc_match": "2650-fe0f",
      "uc_greedy": "2650-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":sailboat:": {
      "uc_base": "26f5",
      "uc_output": "26f5",
      "uc_match": "26f5-fe0f",
      "uc_greedy": "26f5-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":scales:": {
      "uc_base": "2696",
      "uc_output": "2696",
      "uc_match": "2696-fe0f",
      "uc_greedy": "2696-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":scissors:": {
      "uc_base": "2702",
      "uc_output": "2702",
      "uc_match": "2702-fe0f",
      "uc_greedy": "2702-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":scorpius:": {
      "uc_base": "264f",
      "uc_output": "264f",
      "uc_match": "264f-fe0f",
      "uc_greedy": "264f-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":secret:": {
      "uc_base": "3299",
      "uc_output": "3299",
      "uc_match": "3299-fe0f",
      "uc_greedy": "3299-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":shamrock:": {
      "uc_base": "2618",
      "uc_output": "2618",
      "uc_match": "2618-fe0f",
      "uc_greedy": "2618-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":shinto_shrine:": {
      "uc_base": "26e9",
      "uc_output": "26e9",
      "uc_match": "26e9-fe0f",
      "uc_greedy": "26e9-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":skier:": {
      "uc_base": "26f7",
      "uc_output": "26f7",
      "uc_match": "26f7-fe0f",
      "uc_greedy": "26f7-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":skull_crossbones:": {
      "uc_base": "2620",
      "uc_output": "2620",
      "uc_match": "2620-fe0f",
      "uc_greedy": "2620-fe0f",
      "shortnames": [":skull_and_crossbones:"],
      "category": "people"
    },
    ":snowflake:": {
      "uc_base": "2744",
      "uc_output": "2744",
      "uc_match": "2744-fe0f",
      "uc_greedy": "2744-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":snowman2:": {
      "uc_base": "2603",
      "uc_output": "2603",
      "uc_match": "2603-fe0f",
      "uc_greedy": "2603-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":snowman:": {
      "uc_base": "26c4",
      "uc_output": "26c4",
      "uc_match": "26c4-fe0f",
      "uc_greedy": "26c4-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":soccer:": {
      "uc_base": "26bd",
      "uc_output": "26bd",
      "uc_match": "26bd-fe0f",
      "uc_greedy": "26bd-fe0f",
      "shortnames": [],
      "category": "activity"
    },
    ":spades:": {
      "uc_base": "2660",
      "uc_output": "2660",
      "uc_match": "2660-fe0f",
      "uc_greedy": "2660-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":sparkle:": {
      "uc_base": "2747",
      "uc_output": "2747",
      "uc_match": "2747-fe0f",
      "uc_greedy": "2747-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":sparkles:": {
      "uc_base": "2728",
      "uc_output": "2728",
      "uc_match": "2728",
      "uc_greedy": "2728",
      "shortnames": [],
      "category": "nature"
    },
    ":star:": {
      "uc_base": "2b50",
      "uc_output": "2b50",
      "uc_match": "2b50-fe0f",
      "uc_greedy": "2b50-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":star_and_crescent:": {
      "uc_base": "262a",
      "uc_output": "262a",
      "uc_match": "262a-fe0f",
      "uc_greedy": "262a",
      "shortnames": [],
      "category": "symbols"
    },
    ":star_of_david:": {
      "uc_base": "2721",
      "uc_output": "2721",
      "uc_match": "2721-fe0f",
      "uc_greedy": "2721",
      "shortnames": [],
      "category": "symbols"
    },
    ":stop_button:": {
      "uc_base": "23f9",
      "uc_output": "23f9",
      "uc_match": "23f9-fe0f",
      "uc_greedy": "23f9",
      "shortnames": [],
      "category": "symbols"
    },
    ":stopwatch:": {
      "uc_base": "23f1",
      "uc_output": "23f1",
      "uc_match": "23f1-fe0f",
      "uc_greedy": "23f1-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":sunny:": {
      "uc_base": "2600",
      "uc_output": "2600",
      "uc_match": "2600-fe0f",
      "uc_greedy": "2600-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":taurus:": {
      "uc_base": "2649",
      "uc_output": "2649",
      "uc_match": "2649-fe0f",
      "uc_greedy": "2649-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":telephone:": {
      "uc_base": "260e",
      "uc_output": "260e",
      "uc_match": "260e-fe0f",
      "uc_greedy": "260e-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":tent:": {
      "uc_base": "26fa",
      "uc_output": "26fa",
      "uc_match": "26fa-fe0f",
      "uc_greedy": "26fa-fe0f",
      "shortnames": [],
      "category": "travel"
    },
    ":thunder_cloud_rain:": {
      "uc_base": "26c8",
      "uc_output": "26c8",
      "uc_match": "26c8-fe0f",
      "uc_greedy": "26c8-fe0f",
      "shortnames": [":thunder_cloud_and_rain:"],
      "category": "nature"
    },
    ":timer:": {
      "uc_base": "23f2",
      "uc_output": "23f2",
      "uc_match": "23f2-fe0f",
      "uc_greedy": "23f2-fe0f",
      "shortnames": [":timer_clock:"],
      "category": "objects"
    },
    ":tm:": {
      "uc_base": "2122",
      "uc_output": "2122",
      "uc_match": "2122-fe0f",
      "uc_greedy": "2122",
      "shortnames": [],
      "category": "symbols"
    },
    ":track_next:": {
      "uc_base": "23ed",
      "uc_output": "23ed",
      "uc_match": "23ed-fe0f",
      "uc_greedy": "23ed",
      "shortnames": [":next_track:"],
      "category": "symbols"
    },
    ":track_previous:": {
      "uc_base": "23ee",
      "uc_output": "23ee",
      "uc_match": "23ee-fe0f",
      "uc_greedy": "23ee",
      "shortnames": [":previous_track:"],
      "category": "symbols"
    },
    ":umbrella2:": {
      "uc_base": "2602",
      "uc_output": "2602",
      "uc_match": "2602-fe0f",
      "uc_greedy": "2602-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":umbrella:": {
      "uc_base": "2614",
      "uc_output": "2614",
      "uc_match": "2614-fe0f",
      "uc_greedy": "2614-fe0f",
      "shortnames": [],
      "category": "nature"
    },
    ":urn:": {
      "uc_base": "26b1",
      "uc_output": "26b1",
      "uc_match": "26b1-fe0f",
      "uc_greedy": "26b1-fe0f",
      "shortnames": [":funeral_urn:"],
      "category": "objects"
    },
    ":v:": {
      "uc_base": "270c",
      "uc_output": "270c",
      "uc_match": "270c-fe0f",
      "uc_greedy": "270c-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":virgo:": {
      "uc_base": "264d",
      "uc_output": "264d",
      "uc_match": "264d-fe0f",
      "uc_greedy": "264d-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":warning:": {
      "uc_base": "26a0",
      "uc_output": "26a0",
      "uc_match": "26a0-fe0f",
      "uc_greedy": "26a0",
      "shortnames": [],
      "category": "symbols"
    },
    ":watch:": {
      "uc_base": "231a",
      "uc_output": "231a",
      "uc_match": "231a-fe0f",
      "uc_greedy": "231a-fe0f",
      "shortnames": [],
      "category": "objects"
    },
    ":wavy_dash:": {
      "uc_base": "3030",
      "uc_output": "3030",
      "uc_match": "3030-fe0f",
      "uc_greedy": "3030",
      "shortnames": [],
      "category": "symbols"
    },
    ":wheel_of_dharma:": {
      "uc_base": "2638",
      "uc_output": "2638",
      "uc_match": "2638-fe0f",
      "uc_greedy": "2638",
      "shortnames": [],
      "category": "symbols"
    },
    ":wheelchair:": {
      "uc_base": "267f",
      "uc_output": "267f",
      "uc_match": "267f-fe0f",
      "uc_greedy": "267f-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_check_mark:": {
      "uc_base": "2705",
      "uc_output": "2705",
      "uc_match": "2705",
      "uc_greedy": "2705",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_circle:": {
      "uc_base": "26aa",
      "uc_output": "26aa",
      "uc_match": "26aa-fe0f",
      "uc_greedy": "26aa-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_large_square:": {
      "uc_base": "2b1c",
      "uc_output": "2b1c",
      "uc_match": "2b1c-fe0f",
      "uc_greedy": "2b1c-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_medium_small_square:": {
      "uc_base": "25fd",
      "uc_output": "25fd",
      "uc_match": "25fd-fe0f",
      "uc_greedy": "25fd-fe0f",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_medium_square:": {
      "uc_base": "25fb",
      "uc_output": "25fb",
      "uc_match": "25fb-fe0f",
      "uc_greedy": "25fb",
      "shortnames": [],
      "category": "symbols"
    },
    ":white_small_square:": {
      "uc_base": "25ab",
      "uc_output": "25ab",
      "uc_match": "25ab-fe0f",
      "uc_greedy": "25ab",
      "shortnames": [],
      "category": "symbols"
    },
    ":writing_hand:": {
      "uc_base": "270d",
      "uc_output": "270d",
      "uc_match": "270d-fe0f",
      "uc_greedy": "270d-fe0f",
      "shortnames": [],
      "category": "people"
    },
    ":x:": {
      "uc_base": "274c",
      "uc_output": "274c",
      "uc_match": "274c",
      "uc_greedy": "274c",
      "shortnames": [],
      "category": "symbols"
    },
    ":yin_yang:": {
      "uc_base": "262f",
      "uc_output": "262f",
      "uc_match": "262f-fe0f",
      "uc_greedy": "262f",
      "shortnames": [],
      "category": "symbols"
    },
    ":zap:": {
      "uc_base": "26a1",
      "uc_output": "26a1",
      "uc_match": "26a1-fe0f",
      "uc_greedy": "26a1-fe0f",
      "shortnames": [],
      "category": "nature"
    }
  };
  var ascii_list = {
    '*\\0/*': '1f646',
    '*\\O/*': '1f646',
    '-___-': '1f611',
    ':\'-)': '1f602',
    '\':-)': '1f605',
    '\':-D': '1f605',
    '>:-)': '1f606',
    '\':-(': '1f613',
    '>:-(': '1f620',
    ':\'-(': '1f622',
    'O:-)': '1f607',
    '0:-3': '1f607',
    '0:-)': '1f607',
    '0;^)': '1f607',
    'O;-)': '1f607',
    '0;-)': '1f607',
    'O:-3': '1f607',
    '-__-': '1f611',
    ':-Þ': '1f61b',
    '</3': '1f494',
    ':\')': '1f602',
    ':-D': '1f603',
    '\':)': '1f605',
    '\'=)': '1f605',
    '\':D': '1f605',
    '\'=D': '1f605',
    '>:)': '1f606',
    '>;)': '1f606',
    '>=)': '1f606',
    ';-)': '1f609',
    '*-)': '1f609',
    ';-]': '1f609',
    ';^)': '1f609',
    '\':(': '1f613',
    '\'=(': '1f613',
    ':-*': '1f618',
    ':^*': '1f618',
    '>:P': '1f61c',
    'X-P': '1f61c',
    '>:[': '1f61e',
    ':-(': '1f61e',
    ':-[': '1f61e',
    '>:(': '1f620',
    ':\'(': '1f622',
    ';-(': '1f622',
    '>.<': '1f623',
    '#-)': '1f635',
    '%-)': '1f635',
    'X-)': '1f635',
    '\\0/': '1f646',
    '\\O/': '1f646',
    '0:3': '1f607',
    '0:)': '1f607',
    'O:)': '1f607',
    'O=)': '1f607',
    'O:3': '1f607',
    'B-)': '1f60e',
    '8-)': '1f60e',
    'B-D': '1f60e',
    '8-D': '1f60e',
    '-_-': '1f611',
    '>:\\': '1f615',
    '>:/': '1f615',
    ':-/': '1f615',
    ':-.': '1f615',
    ':-P': '1f61b',
    ':Þ': '1f61b',
    ':-b': '1f61b',
    ':-O': '1f62e',
    'O_O': '1f62e',
    '>:O': '1f62e',
    ':-X': '1f636',
    ':-#': '1f636',
    ':-)': '1f642',
    '(y)': '1f44d',
    '<3': '2764',
    ':D': '1f603',
    '=D': '1f603',
    ';)': '1f609',
    '*)': '1f609',
    ';]': '1f609',
    ';D': '1f609',
    ':*': '1f618',
    '=*': '1f618',
    ':(': '1f61e',
    ':[': '1f61e',
    '=(': '1f61e',
    ':@': '1f620',
    ';(': '1f622',
    'D:': '1f628',
    ':$': '1f633',
    '=$': '1f633',
    '#)': '1f635',
    '%)': '1f635',
    'X)': '1f635',
    'B)': '1f60e',
    '8)': '1f60e',
    ':/': '1f615',
    ':\\': '1f615',
    '=/': '1f615',
    '=\\': '1f615',
    ':L': '1f615',
    '=L': '1f615',
    ':P': '1f61b',
    '=P': '1f61b',
    ':b': '1f61b',
    ':O': '1f62e',
    ':X': '1f636',
    ':#': '1f636',
    '=X': '1f636',
    '=#': '1f636',
    ':)': '1f642',
    '=]': '1f642',
    '=)': '1f642',
    ':]': '1f642'
  };
  var shortnames = [];

  for (var emoji in emoji_list) {
    if (!Object.prototype.hasOwnProperty.call(emoji_list, emoji) || emoji === '') continue;
    shortnames.push(emoji.replace(/[+]/g, "\\$&"));

    for (var i = 0; i < emoji_list[emoji].shortnames.length; i++) {
      shortnames.push(emoji_list[emoji].shortnames[i].replace(/[+]/g, "\\$&"));
    }
  }

  shortnames = shortnames.join('|');
  var SHORTNAMES_REGEX = new RegExp("<object[^>]*>.*?<\/object>|<span[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|(" + shortnames + ")", "gi");
  var ASCII_REGEX = '(\\*\\\\0\\/\\*|\\*\\\\O\\/\\*|\\-___\\-|\\:\'\\-\\)|\'\\:\\-\\)|\'\\:\\-D|\\>\\:\\-\\)|>\\:\\-\\)|\'\\:\\-\\(|\\>\\:\\-\\(|>\\:\\-\\(|\\:\'\\-\\(|O\\:\\-\\)|0\\:\\-3|0\\:\\-\\)|0;\\^\\)|O;\\-\\)|0;\\-\\)|O\\:\\-3|\\-__\\-|\\:\\-Þ|\\:\\-Þ|\\<\\/3|<\\/3|\\:\'\\)|\\:\\-D|\'\\:\\)|\'\\=\\)|\'\\:D|\'\\=D|\\>\\:\\)|>\\:\\)|\\>;\\)|>;\\)|\\>\\=\\)|>\\=\\)|;\\-\\)|\\*\\-\\)|;\\-\\]|;\\^\\)|\'\\:\\(|\'\\=\\(|\\:\\-\\*|\\:\\^\\*|\\>\\:P|>\\:P|X\\-P|\\>\\:\\[|>\\:\\[|\\:\\-\\(|\\:\\-\\[|\\>\\:\\(|>\\:\\(|\\:\'\\(|;\\-\\(|\\>\\.\\<|>\\.<|#\\-\\)|%\\-\\)|X\\-\\)|\\\\0\\/|\\\\O\\/|0\\:3|0\\:\\)|O\\:\\)|O\\=\\)|O\\:3|B\\-\\)|8\\-\\)|B\\-D|8\\-D|\\-_\\-|\\>\\:\\\\|>\\:\\\\|\\>\\:\\/|>\\:\\/|\\:\\-\\/|\\:\\-\\.|\\:\\-P|\\:Þ|\\:Þ|\\:\\-b|\\:\\-O|O_O|\\>\\:O|>\\:O|\\:\\-X|\\:\\-#|\\:\\-\\)|\\(y\\)|\\<3|<3|\\:D|\\=D|;\\)|\\*\\)|;\\]|;D|\\:\\*|\\=\\*|\\:\\(|\\:\\[|\\=\\(|\\:@|;\\(|D\\:|\\:\\$|\\=\\$|#\\)|%\\)|X\\)|B\\)|8\\)|\\:\\/|\\:\\\\|\\=\\/|\\=\\\\|\\:L|\\=L|\\:P|\\=P|\\:b|\\:O|\\:X|\\:#|\\=X|\\=#|\\:\\)|\\=\\]|\\=\\)|\\:\\])';
  var ASCII_REPLACE_REGEX = new RegExp("<object[^>]*>.*?<\/object>|<span[^>]*>.*?<\/span>|<(?:object|embed|svg|img|div|span|p|a)[^>]*>|((\\s|^)" + ASCII_REGEX + "(?=\\s|$|[!,.?]))", "gi");

  function convert(unicode) {
    /* For converting unicode code points and code pairs
     * to their respective characters
     */
    if (unicode.indexOf("-") > -1) {
      var parts = [],
          s = unicode.split('-');

      for (var _i = 0; _i < s.length; _i++) {
        var part = parseInt(s[_i], 16);

        if (part >= 0x10000 && part <= 0x10FFFF) {
          var hi = Math.floor((part - 0x10000) / 0x400) + 0xD800;
          var lo = (part - 0x10000) % 0x400 + 0xDC00;
          part = String.fromCharCode(hi) + String.fromCharCode(lo);
        } else {
          part = String.fromCharCode(part);
        }

        parts.push(part);
      }

      return parts.join('');
    }

    return twemoji.default.convert.fromCodePoint(unicode);
  }

  u.shortnameToUnicode = function (str) {
    /* will output unicode from shortname
     * useful for sending emojis back to mobile devices
     */
    // Replace regular shortnames first
    str = str.replace(SHORTNAMES_REGEX, function (shortname) {
      if (typeof shortname === 'undefined' || shortname === '' || !(shortname in emoji_list)) {
        // if the shortname doesnt exist just return the entire matchhju
        return shortname;
      }

      var unicode = emoji_list[shortname].uc_output.toUpperCase();
      return convert(unicode);
    }); // Also replace ASCII smileys

    str = str.replace(ASCII_REPLACE_REGEX, function (entire, m1, m2, m3) {
      if (typeof m3 === 'undefined' || m3 === '' || !(u.unescapeHTML(m3) in ascii_list)) {
        // if the ascii doesnt exist just return the entire match
        return entire;
      }

      m3 = u.unescapeHTML(m3);
      var unicode = ascii_list[m3].toUpperCase();
      return m2 + convert(unicode);
    });
    return str;
  };

  u.addEmoji = function (_converse, text) {
    if (_converse.use_system_emojis) {
      return u.shortnameToUnicode(text);
    } else {
      return twemoji.default.parse(text);
    }
  };

  u.getEmojisByCategory = function (_converse) {
    /* Return a dict of emojis with the categories as keys and
     * lists of emojis in that category as values.
     */
    if (_.isUndefined(_converse.emojis_by_category)) {
      var emojis = _.values(_.mapValues(emoji_list, function (value, key, o) {
        value._shortname = key;
        return value;
      }));

      var tones = [':tone1:', ':tone2:', ':tone3:', ':tone4:', ':tone5:'];
      var excluded = [':kiss_ww:', ':kiss_mm:', ':kiss_woman_man:'];
      var excluded_substrings = [':woman', ':man', ':women_', ':men_', '_man_', '_woman_', '_woman:', '_man:'];
      var excluded_categories = ['modifier', 'regional'];

      var categories = _.difference(_.uniq(_.map(emojis, _.partial(_.get, _, 'category'))), excluded_categories);

      var emojis_by_category = {};

      _.forEach(categories, function (cat) {
        var list = _.sortBy(_.filter(emojis, ['category', cat]), ['uc_base']);

        list = _.filter(list, function (item) {
          return !_.includes(_.concat(tones, excluded), item._shortname) && !_.some(excluded_substrings, _.partial(_.includes, item._shortname));
        });

        if (cat === 'people') {
          var idx = _.findIndex(list, ['uc_base', '1f600']);

          list = _.union(_.slice(list, idx), _.slice(list, 0, idx + 1));
        } else if (cat === 'activity') {
          list = _.union(_.slice(list, 27 - 1), _.slice(list, 0, 27));
        } else if (cat === 'objects') {
          list = _.union(_.slice(list, 24 - 1), _.slice(list, 0, 24));
        } else if (cat === 'travel') {
          list = _.union(_.slice(list, 17 - 1), _.slice(list, 0, 17));
        } else if (cat === 'symbols') {
          list = _.union(_.slice(list, 60 - 1), _.slice(list, 0, 60));
        }

        emojis_by_category[cat] = list;
      });

      _converse.emojis_by_category = emojis_by_category;
    }

    return _converse.emojis_by_category;
  };

  u.getTonedEmojis = function (_converse) {
    _converse.toned_emojis = _.uniq(_.map(_.filter(u.getEmojisByCategory(_converse).people, function (person) {
      return _.includes(person._shortname, '_tone');
    }), function (person) {
      return person._shortname.replace(/_tone[1-5]/, '');
    }));
    return _converse.toned_emojis;
  };

  u.getEmojiRenderer = function (_converse) {
    return _converse.use_system_emojis ? u.shortnameToUnicode : _.flow(u.shortnameToUnicode, twemoji.default.parse);
  };

  return u;
});

/***/ }),

/***/ "./src/utils/form.js":
/*!***************************!*\
  !*** ./src/utils/form.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// This is the utilities module.
//
// Copyright (c) 2013-2018, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define, escape, Jed */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! sizzle */ "./node_modules/sizzle/dist/sizzle.js"), __webpack_require__(/*! lodash.noconflict */ "lodash.noconflict"), __webpack_require__(/*! utils/core */ "./src/utils/core.js"), __webpack_require__(/*! templates/field.html */ "./src/templates/field.html"), __webpack_require__(/*! templates/select_option.html */ "./src/templates/select_option.html"), __webpack_require__(/*! templates/form_select.html */ "./src/templates/form_select.html"), __webpack_require__(/*! templates/form_textarea.html */ "./src/templates/form_textarea.html"), __webpack_require__(/*! templates/form_checkbox.html */ "./src/templates/form_checkbox.html"), __webpack_require__(/*! templates/form_username.html */ "./src/templates/form_username.html"), __webpack_require__(/*! templates/form_input.html */ "./src/templates/form_input.html"), __webpack_require__(/*! templates/form_captcha.html */ "./src/templates/form_captcha.html"), __webpack_require__(/*! templates/form_url.html */ "./src/templates/form_url.html")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (sizzle, _, u, tpl_field, tpl_select_option, tpl_form_select, tpl_form_textarea, tpl_form_checkbox, tpl_form_username, tpl_form_input, tpl_form_captcha, tpl_form_url) {
  "use strict";

  var XFORM_TYPE_MAP = {
    'text-private': 'password',
    'text-single': 'text',
    'fixed': 'label',
    'boolean': 'checkbox',
    'hidden': 'hidden',
    'jid-multi': 'textarea',
    'list-single': 'dropdown',
    'list-multi': 'dropdown'
  };

  u.webForm2xForm = function (field) {
    /* Takes an HTML DOM and turns it into an XForm field.
     *
     * Parameters:
     *      (DOMElement) field - the field to convert
     */
    var value;

    if (field.getAttribute('type') === 'checkbox') {
      value = field.checked && 1 || 0;
    } else if (field.tagName == "TEXTAREA") {
      value = _.filter(field.value.split('\n'), _.trim);
    } else if (field.tagName == "SELECT") {
      value = u.getSelectValues(field);
    } else {
      value = field.value;
    }

    return u.stringToNode(tpl_field({
      'name': field.getAttribute('name'),
      'value': value
    }));
  };

  u.xForm2webForm = function (field, stanza, domain) {
    /* Takes a field in XMPP XForm (XEP-004: Data Forms) format
     * and turns it into an HTML field.
     *
     * Returns either text or a DOM element (which is not ideal, but fine
     * for now).
     *
     *  Parameters:
     *      (XMLElement) field - the field to convert
     */
    if (field.getAttribute('type')) {
      if (field.getAttribute('type') === 'list-single' || field.getAttribute('type') === 'list-multi') {
        var values = _.map(u.queryChildren(field, 'value'), _.partial(_.get, _, 'textContent'));

        var options = _.map(u.queryChildren(field, 'option'), function (option) {
          var value = _.get(option.querySelector('value'), 'textContent');

          return tpl_select_option({
            'value': value,
            'label': option.getAttribute('label'),
            'selected': _.includes(values, value),
            'required': !_.isNil(field.querySelector('required'))
          });
        });

        return tpl_form_select({
          'id': u.getUniqueId(),
          'name': field.getAttribute('var'),
          'label': field.getAttribute('label'),
          'options': options.join(''),
          'multiple': field.getAttribute('type') === 'list-multi',
          'required': !_.isNil(field.querySelector('required'))
        });
      } else if (field.getAttribute('type') === 'fixed') {
        var text = _.get(field.querySelector('value'), 'textContent');

        return '<p class="form-help">' + text + '</p>';
      } else if (field.getAttribute('type') === 'jid-multi') {
        return tpl_form_textarea({
          'name': field.getAttribute('var'),
          'label': field.getAttribute('label') || '',
          'value': _.get(field.querySelector('value'), 'textContent'),
          'required': !_.isNil(field.querySelector('required'))
        });
      } else if (field.getAttribute('type') === 'boolean') {
        return tpl_form_checkbox({
          'id': u.getUniqueId(),
          'name': field.getAttribute('var'),
          'label': field.getAttribute('label') || '',
          'checked': _.get(field.querySelector('value'), 'textContent') === "1" && 'checked="1"' || '',
          'required': !_.isNil(field.querySelector('required'))
        });
      } else if (field.getAttribute('var') === 'url') {
        return tpl_form_url({
          'label': field.getAttribute('label') || '',
          'value': _.get(field.querySelector('value'), 'textContent')
        });
      } else if (field.getAttribute('var') === 'username') {
        return tpl_form_username({
          'domain': ' @' + domain,
          'name': field.getAttribute('var'),
          'type': XFORM_TYPE_MAP[field.getAttribute('type')],
          'label': field.getAttribute('label') || '',
          'value': _.get(field.querySelector('value'), 'textContent'),
          'required': !_.isNil(field.querySelector('required'))
        });
      } else {
        return tpl_form_input({
          'id': u.getUniqueId(),
          'label': field.getAttribute('label') || '',
          'name': field.getAttribute('var'),
          'placeholder': null,
          'required': !_.isNil(field.querySelector('required')),
          'type': XFORM_TYPE_MAP[field.getAttribute('type')],
          'value': _.get(field.querySelector('value'), 'textContent')
        });
      }
    } else {
      if (field.getAttribute('var') === 'ocr') {
        // Captcha
        var uri = field.querySelector('uri');
        var el = sizzle('data[cid="' + uri.textContent.replace(/^cid:/, '') + '"]', stanza)[0];
        return tpl_form_captcha({
          'label': field.getAttribute('label'),
          'name': field.getAttribute('var'),
          'data': _.get(el, 'textContent'),
          'type': uri.getAttribute('type'),
          'required': !_.isNil(field.querySelector('required'))
        });
      }
    }
  };

  return u;
});

/***/ }),

/***/ "./src/utils/muc.js":
/*!**************************!*\
  !*** ./src/utils/muc.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;

// Converse.js (A browser based XMPP chat client)
// http://conversejs.org
//
// This is the utilities module.
//
// Copyright (c) 2012-2017, Jan-Carel Brand <jc@opkode.com>
// Licensed under the Mozilla Public License (MPLv2)
//

/*global define, escape, Jed */
(function (root, factory) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! converse-core */ "./src/converse-core.js"), __webpack_require__(/*! utils/core */ "./src/utils/core.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
})(void 0, function (converse, u) {
  "use strict";

  var _converse$env = converse.env,
      Strophe = _converse$env.Strophe,
      sizzle = _converse$env.sizzle,
      _ = _converse$env._;

  u.computeAffiliationsDelta = function computeAffiliationsDelta(exclude_existing, remove_absentees, new_list, old_list) {
    /* Given two lists of objects with 'jid', 'affiliation' and
     * 'reason' properties, return a new list containing
     * those objects that are new, changed or removed
     * (depending on the 'remove_absentees' boolean).
     *
     * The affiliations for new and changed members stay the
     * same, for removed members, the affiliation is set to 'none'.
     *
     * The 'reason' property is not taken into account when
     * comparing whether affiliations have been changed.
     *
     * Parameters:
     *  (Boolean) exclude_existing: Indicates whether JIDs from
     *      the new list which are also in the old list
     *      (regardless of affiliation) should be excluded
     *      from the delta. One reason to do this
     *      would be when you want to add a JID only if it
     *      doesn't have *any* existing affiliation at all.
     *  (Boolean) remove_absentees: Indicates whether JIDs
     *      from the old list which are not in the new list
     *      should be considered removed and therefore be
     *      included in the delta with affiliation set
     *      to 'none'.
     *  (Array) new_list: Array containing the new affiliations
     *  (Array) old_list: Array containing the old affiliations
     */
    var new_jids = _.map(new_list, 'jid');

    var old_jids = _.map(old_list, 'jid'); // Get the new affiliations


    var delta = _.map(_.difference(new_jids, old_jids), function (jid) {
      return new_list[_.indexOf(new_jids, jid)];
    });

    if (!exclude_existing) {
      // Get the changed affiliations
      delta = delta.concat(_.filter(new_list, function (item) {
        var idx = _.indexOf(old_jids, item.jid);

        if (idx >= 0) {
          return item.affiliation !== old_list[idx].affiliation;
        }

        return false;
      }));
    }

    if (remove_absentees) {
      // Get the removed affiliations
      delta = delta.concat(_.map(_.difference(old_jids, new_jids), function (jid) {
        return {
          'jid': jid,
          'affiliation': 'none'
        };
      }));
    }

    return delta;
  };

  u.parseMemberListIQ = function parseMemberListIQ(iq) {
    /* Given an IQ stanza with a member list, create an array of member objects.
    */
    return _.map(sizzle("query[xmlns=\"".concat(Strophe.NS.MUC_ADMIN, "\"] item"), iq), function (item) {
      var data = {
        'affiliation': item.getAttribute('affiliation')
      };
      var jid = item.getAttribute('jid');

      if (u.isValidJID(jid)) {
        data['jid'] = jid;
      } else {
        // XXX: Prosody sends nick for the jid attribute value
        // Perhaps for anonymous room?
        data['nick'] = jid;
      }

      var nick = item.getAttribute('nick');

      if (nick) {
        data['nick'] = nick;
      }

      var role = item.getAttribute('role');

      if (role) {
        data['role'] = nick;
      }

      return data;
    });
  };

  u.marshallAffiliationIQs = function marshallAffiliationIQs() {
    /* Marshall a list of IQ stanzas into a map of JIDs and
        * affiliations.
        *
        * Parameters:
        *  Any amount of XMLElement objects, representing the IQ
        *  stanzas.
        */
    return _.flatMap(arguments[0], u.parseMemberListIQ);
  };
});

/***/ }),

/***/ "awesomplete":
/*!******************************!*\
  !*** external "awesomplete" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = awesomplete;

/***/ }),

/***/ "backbone.browserStorage":
/*!******************************************!*\
  !*** external "backbone.browserStorage" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = backbone.browserStorage;

/***/ }),

/***/ "backbone.overview":
/*!************************************!*\
  !*** external "backbone.overview" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = backbone.overview;

/***/ }),

/***/ "es6-promise":
/*!******************************!*\
  !*** external "es6-promise" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = es6-promise;

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = lodash;

/***/ }),

/***/ "lodash.converter":
/*!***********************************!*\
  !*** external "lodash.converter" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = lodash.converter;

/***/ }),

/***/ "lodash.noconflict":
/*!************************************!*\
  !*** external "lodash.noconflict" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = lodash.noconflict;

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = moment;

/***/ }),

/***/ "strophe":
/*!**************************!*\
  !*** external "strophe" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = strophe;

/***/ }),

/***/ "strophe.ping":
/*!*******************************!*\
  !*** external "strophe.ping" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = strophe.ping;

/***/ }),

/***/ "strophe.rsm":
/*!******************************!*\
  !*** external "strophe.rsm" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = strophe.rsm;

/***/ })

/******/ });
//# sourceMappingURL=converse-no-dependencies.js.map